{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport KeyCodes from '../../../utils/key-codes';\nimport get from '../../../utils/get';\nimport toString from '../../../utils/to-string';\nimport { arrayIncludes } from '../../../utils/array';\nimport { isFunction, isString, isUndefinedOrNull } from '../../../utils/inspect';\nimport filterEvent from './filter-event';\nimport textSelectionActive from './text-selection-active';\nimport { BTr } from '../tr';\nimport { BTd } from '../td';\nimport { BTh } from '../th';\nvar detailsSlotName = 'row-details';\nexport default {\n  props: {\n    tbodyTrClass: {\n      type: [String, Array, Function],\n      default: null\n    }\n  },\n  methods: {\n    // Methods for computing classes, attributes and styles for table cells\n    getTdValues: function getTdValues(item, key, tdValue, defValue) {\n      var parent = this.$parent;\n\n      if (tdValue) {\n        var value = get(item, key, '');\n\n        if (isFunction(tdValue)) {\n          return tdValue(value, key, item);\n        } else if (isString(tdValue) && isFunction(parent[tdValue])) {\n          return parent[tdValue](value, key, item);\n        }\n\n        return tdValue;\n      }\n\n      return defValue;\n    },\n    // Method to get the value for a field\n    getFormattedValue: function getFormattedValue(item, field) {\n      var key = field.key;\n      var formatter = this.getFieldFormatter(key);\n      var value = get(item, key, null);\n\n      if (isFunction(formatter)) {\n        value = formatter(value, key, item);\n      }\n\n      return isUndefinedOrNull(value) ? '' : value;\n    },\n    // Factory function methods\n    toggleDetailsFactory: function toggleDetailsFactory(hasDetailsSlot, item) {\n      var _this = this; // Returns a function to toggle a row's details slot\n\n\n      return function () {\n        if (hasDetailsSlot) {\n          _this.$set(item, '_showDetails', !item._showDetails);\n        }\n      };\n    },\n    rowEvtFactory: function rowEvtFactory(handler, item, rowIndex) {\n      var _this2 = this; // Return a row event handler\n\n\n      return function (evt) {\n        // If table is busy (via provider) then don't propagate\n        if (_this2.stopIfBusy && _this2.stopIfBusy(evt)) {\n          return;\n        } // Otherwise call the handler\n\n\n        handler(evt, item, rowIndex);\n      };\n    },\n    // Row event handlers (will be wrapped by the above rowEvtFactory function)\n    tbodyRowKeydown: function tbodyRowKeydown(evt, item, rowIndex) {\n      // Keypress handler\n      var keyCode = evt.keyCode;\n      var target = evt.target; // `this.$refs.itemRow`s is most likely an array of `BTr` components, but it\n      // could be regular `tr` elements, so we map to the `tr` elements just in case\n\n      var trs = (this.$refs.itemRows || []).map(function (tr) {\n        return tr.$el || tr;\n      });\n\n      if (!(target && target.tagName === 'TR' && target === document.activeElement)) {\n        // Ignore if not the active tr element\n        return;\n      } else if (target.tabIndex !== 0) {\n        // Ignore if not focusable\n\n        /* istanbul ignore next */\n        return;\n      } else if (trs.length === 0) {\n        // No item rows\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var index = trs.indexOf(target);\n\n      if (keyCode === KeyCodes.ENTER || keyCode === KeyCodes.SPACE) {\n        // We also allow enter/space to trigger a click (when row is focused)\n        evt.stopPropagation();\n        evt.preventDefault(); // We translate to a row-clicked event\n\n        this.rowClicked(evt, item, rowIndex);\n      } else if (arrayIncludes([KeyCodes.UP, KeyCodes.DOWN, KeyCodes.HOME, KeyCodes.END], keyCode)) {\n        // Keyboard navigation of rows\n        evt.stopPropagation();\n        evt.preventDefault();\n        var shift = evt.shiftKey;\n\n        if (keyCode === KeyCodes.HOME || shift && keyCode === KeyCodes.UP) {\n          // Focus first row\n          trs[0].focus();\n        } else if (keyCode === KeyCodes.END || shift && keyCode === KeyCodes.DOWN) {\n          // Focus last row\n          trs[trs.length - 1].focus();\n        } else if (keyCode === KeyCodes.UP && index > 0) {\n          // Focus previous row\n          trs[index - 1].focus();\n        } else if (keyCode === KeyCodes.DOWN && index < trs.length - 1) {\n          // Focus next row\n          trs[index + 1].focus();\n        }\n      }\n    },\n    rowClicked: function rowClicked(evt, item, index) {\n      if (filterEvent(evt)) {\n        // clicked on a non-disabled control so ignore\n        return;\n      } else if (textSelectionActive(this.$el)) {\n        // User is selecting text, so ignore\n\n        /* istanbul ignore next: JSDOM doesn't support getSelection() */\n        return;\n      }\n\n      this.$emit('row-clicked', item, index, evt);\n    },\n    middleMouseRowClicked: function middleMouseRowClicked(evt, item, index) {\n      if (evt.which === 2) {\n        this.$emit('row-middle-clicked', item, index, evt);\n      }\n    },\n    rowDblClicked: function rowDblClicked(evt, item, index) {\n      if (filterEvent(evt)) {\n        // clicked on a non-disabled control so ignore\n\n        /* istanbul ignore next: event filtering already tested via click handler */\n        return;\n      }\n\n      this.$emit('row-dblclicked', item, index, evt);\n    },\n    rowHovered: function rowHovered(evt, item, index) {\n      this.$emit('row-hovered', item, index, evt);\n    },\n    rowUnhovered: function rowUnhovered(evt, item, index) {\n      this.$emit('row-unhovered', item, index, evt);\n    },\n    rowContextmenu: function rowContextmenu(evt, item, index) {\n      this.$emit('row-contextmenu', item, index, evt);\n    },\n    // Render helpers\n    renderTbodyRowCell: function renderTbodyRowCell(field, colIndex, item, rowIndex) {\n      // Renders a TD or TH for a row's field\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(detailsSlotName);\n      var formatted = this.getFormattedValue(item, field);\n      var key = field.key;\n      var data = {\n        // For the Vue key, we concatenate the column index and\n        // field key (as field keys could be duplicated)\n        // TODO: Although we do prevent duplicate field keys...\n        //   So we could change this to: `row-${rowIndex}-cell-${key}`\n        key: \"row-\".concat(rowIndex, \"-cell-\").concat(colIndex, \"-\").concat(key),\n        class: [field.class ? field.class : '', this.getTdValues(item, key, field.tdClass, '')],\n        props: {\n          stackedHeading: this.isStacked ? field.label : null,\n          stickyColumn: field.stickyColumn,\n          variant: item._cellVariants && item._cellVariants[key] ? item._cellVariants[key] : field.variant || null\n        },\n        attrs: _objectSpread({\n          'aria-colindex': String(colIndex + 1)\n        }, this.getTdValues(item, key, field.tdAttr, {}))\n      };\n      var slotScope = {\n        item: item,\n        index: rowIndex,\n        field: field,\n        unformatted: get(item, key, ''),\n        value: formatted,\n        toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item),\n        detailsShowing: Boolean(item._showDetails)\n      };\n\n      if (this.selectedRows) {\n        // Add in rowSelected scope property if selectable rows supported\n        slotScope.rowSelected = this.isRowSelected(rowIndex);\n      } // TODO:\n      //   Using `field.key` as scoped slot name is deprecated, to be removed in future release\n      //   New format uses the square bracketed naming convention\n\n\n      var $childNodes = this.normalizeSlot([\"[\".concat(key, \"]\"), '[]', key], slotScope) || toString(formatted);\n\n      if (this.isStacked) {\n        // We wrap in a DIV to ensure rendered as a single cell when visually stacked!\n        $childNodes = [h('div', {}, [$childNodes])];\n      } // Render either a td or th cell\n\n\n      return h(field.isRowHeader ? BTh : BTd, data, [$childNodes]);\n    },\n    renderTbodyRow: function renderTbodyRow(item, rowIndex) {\n      var _this3 = this; // Renders an item's row (or rows if details supported)\n\n\n      var h = this.$createElement;\n      var fields = this.computedFields;\n      var tableStriped = this.striped;\n      var hasDetailsSlot = this.hasNormalizedSlot(detailsSlotName);\n      var rowShowDetails = Boolean(item._showDetails && hasDetailsSlot);\n      var hasRowClickHandler = this.$listeners['row-clicked'] || this.isSelectable; // We can return more than one TR if rowDetails enabled\n\n      var $rows = []; // Details ID needed for aria-describedby when details showing\n\n      var detailsId = rowShowDetails ? this.safeId(\"_details_\".concat(rowIndex, \"_\")) : null; // For each item data field in row\n\n      var $tds = fields.map(function (field, colIndex) {\n        return _this3.renderTbodyRowCell(field, colIndex, item, rowIndex);\n      }); // Calculate the row number in the dataset (indexed from 1)\n\n      var ariaRowIndex = null;\n\n      if (this.currentPage && this.perPage && this.perPage > 0) {\n        ariaRowIndex = String((this.currentPage - 1) * this.perPage + rowIndex + 1);\n      } // Create a unique :key to help ensure that sub components are re-rendered rather than\n      // re-used, which can cause issues. If a primary key is not provided we use the rendered\n      // rows index within the tbody.\n      // See: https://github.com/bootstrap-vue/bootstrap-vue/issues/2410\n\n\n      var primaryKey = this.primaryKey;\n      var hasPkValue = primaryKey && !isUndefinedOrNull(item[primaryKey]);\n      var rowKey = hasPkValue ? toString(item[primaryKey]) : String(rowIndex); // If primary key is provided, use it to generate a unique ID on each tbody > tr\n      // In the format of '{tableId}__row_{primaryKeyValue}'\n\n      var rowId = hasPkValue ? this.safeId(\"_row_\".concat(item[primaryKey])) : null;\n      var evtFactory = this.rowEvtFactory;\n      var handlers = {};\n\n      if (hasRowClickHandler) {\n        handlers.click = evtFactory(this.rowClicked, item, rowIndex);\n        handlers.keydown = evtFactory(this.tbodyRowKeydown, item, rowIndex);\n      } // Selectable classes and attributes\n\n\n      var selectableClasses = this.selectableRowClasses ? this.selectableRowClasses(rowIndex) : {};\n      var selectableAttrs = this.selectableRowAttrs ? this.selectableRowAttrs(rowIndex) : {}; // Add the item row\n\n      $rows.push(h(BTr, {\n        key: \"__b-table-row-\".concat(rowKey, \"__\"),\n        ref: 'itemRows',\n        refInFor: true,\n        class: [isFunction(this.tbodyTrClass) ? this.tbodyTrClass(item, 'row') : this.tbodyTrClass, selectableClasses, rowShowDetails ? 'b-table-has-details' : ''],\n        props: {\n          variant: item._rowVariant || null\n        },\n        attrs: _objectSpread({\n          id: rowId,\n          tabindex: hasRowClickHandler ? '0' : null,\n          'data-pk': rowId ? String(item[primaryKey]) : null,\n          // Should this be `aria-details` instead?\n          'aria-describedby': detailsId,\n          'aria-owns': detailsId,\n          'aria-rowindex': ariaRowIndex\n        }, selectableAttrs),\n        on: _objectSpread({}, handlers, {\n          // TODO:\n          //   Instantiate the following handlers only if we have registered\n          //   listeners i.e. `this.$listeners['row-middle-clicked']`, etc.\n          //\n          //   Could make all of this (including the above click/key handlers)\n          //   the result of a factory function and/or make it a delegated event\n          //   handler on the tbody (if we store the row index as a data-attribute\n          //   on the TR as we can lookup the item data from the computedItems array\n          //   or it could be a hidden prop (via attrs) on BTr instance)\n          auxclick: evtFactory(this.middleMouseRowClicked, item, rowIndex),\n          contextmenu: evtFactory(this.rowContextmenu, item, rowIndex),\n          // Note: These events are not accessibility friendly!\n          dblclick: evtFactory(this.rowDblClicked, item, rowIndex),\n          mouseenter: evtFactory(this.rowHovered, item, rowIndex),\n          mouseleave: evtFactory(this.rowUnhovered, item, rowIndex)\n        })\n      }, $tds)); // Row Details slot\n\n      if (rowShowDetails) {\n        var detailsScope = {\n          item: item,\n          index: rowIndex,\n          fields: fields,\n          toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item) // Render the details slot in a TD\n\n        };\n        var $details = h(BTd, {\n          props: {\n            colspan: fields.length\n          },\n          attrs: {\n            id: detailsId\n          }\n        }, [this.normalizeSlot(detailsSlotName, detailsScope)]); // Add a hidden row to keep table row striping consistent when details showing\n\n        if (tableStriped) {\n          $rows.push( // We don't use `BTr` here as we dont need the extra functionality\n          h('tr', {\n            key: \"__b-table-details-\".concat(rowIndex, \"-stripe__\"),\n            staticClass: 'd-none',\n            attrs: {\n              'aria-hidden': 'true',\n              role: 'presentation'\n            }\n          }));\n        } // Add the actual details row\n\n\n        $rows.push(h(BTr, {\n          key: \"__b-table-details-\".concat(rowIndex, \"__\"),\n          staticClass: 'b-table-details',\n          class: [isFunction(this.tbodyTrClass) ? this.tbodyTrClass(item, detailsSlotName) : this.tbodyTrClass],\n          props: {\n            variant: item._rowVariant || null\n          },\n          attrs: {\n            id: detailsId\n          }\n        }, [$details]));\n      } else if (hasDetailsSlot) {\n        // Only add the placeholder if a the table has a row-details slot defined (but not shown)\n        $rows.push(h());\n\n        if (tableStriped) {\n          // Add extra placeholder if table is striped\n          $rows.push(h());\n        }\n      } // Return the row(s)\n\n\n      return $rows;\n    }\n  }\n};","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tbody-row.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","KeyCodes","get","toString","arrayIncludes","isFunction","isString","isUndefinedOrNull","filterEvent","textSelectionActive","BTr","BTd","BTh","detailsSlotName","props","tbodyTrClass","type","String","Array","Function","default","methods","getTdValues","item","tdValue","defValue","parent","$parent","getFormattedValue","field","formatter","getFieldFormatter","toggleDetailsFactory","hasDetailsSlot","_this","$set","_showDetails","rowEvtFactory","handler","rowIndex","_this2","evt","stopIfBusy","tbodyRowKeydown","keyCode","trs","$refs","itemRows","map","tr","$el","tagName","document","activeElement","tabIndex","index","indexOf","ENTER","SPACE","stopPropagation","preventDefault","rowClicked","UP","DOWN","HOME","END","shift","shiftKey","focus","$emit","middleMouseRowClicked","which","rowDblClicked","rowHovered","rowUnhovered","rowContextmenu","renderTbodyRowCell","colIndex","h","$createElement","hasNormalizedSlot","formatted","data","concat","class","tdClass","stackedHeading","isStacked","label","stickyColumn","variant","_cellVariants","attrs","tdAttr","slotScope","unformatted","toggleDetails","detailsShowing","Boolean","selectedRows","rowSelected","isRowSelected","$childNodes","normalizeSlot","isRowHeader","renderTbodyRow","_this3","fields","computedFields","tableStriped","striped","rowShowDetails","hasRowClickHandler","$listeners","isSelectable","$rows","detailsId","safeId","$tds","ariaRowIndex","currentPage","perPage","primaryKey","hasPkValue","rowKey","rowId","evtFactory","handlers","click","keydown","selectableClasses","selectableRowClasses","selectableAttrs","selectableRowAttrs","ref","refInFor","_rowVariant","id","tabindex","on","auxclick","contextmenu","dblclick","mouseenter","mouseleave","detailsScope","$details","colspan","staticClass","role"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport KeyCodes from '../../../utils/key-codes';\nimport get from '../../../utils/get';\nimport toString from '../../../utils/to-string';\nimport { arrayIncludes } from '../../../utils/array';\nimport { isFunction, isString, isUndefinedOrNull } from '../../../utils/inspect';\nimport filterEvent from './filter-event';\nimport textSelectionActive from './text-selection-active';\nimport { BTr } from '../tr';\nimport { BTd } from '../td';\nimport { BTh } from '../th';\nvar detailsSlotName = 'row-details';\nexport default {\n  props: {\n    tbodyTrClass: {\n      type: [String, Array, Function],\n      default: null\n    }\n  },\n  methods: {\n    // Methods for computing classes, attributes and styles for table cells\n    getTdValues: function getTdValues(item, key, tdValue, defValue) {\n      var parent = this.$parent;\n\n      if (tdValue) {\n        var value = get(item, key, '');\n\n        if (isFunction(tdValue)) {\n          return tdValue(value, key, item);\n        } else if (isString(tdValue) && isFunction(parent[tdValue])) {\n          return parent[tdValue](value, key, item);\n        }\n\n        return tdValue;\n      }\n\n      return defValue;\n    },\n    // Method to get the value for a field\n    getFormattedValue: function getFormattedValue(item, field) {\n      var key = field.key;\n      var formatter = this.getFieldFormatter(key);\n      var value = get(item, key, null);\n\n      if (isFunction(formatter)) {\n        value = formatter(value, key, item);\n      }\n\n      return isUndefinedOrNull(value) ? '' : value;\n    },\n    // Factory function methods\n    toggleDetailsFactory: function toggleDetailsFactory(hasDetailsSlot, item) {\n      var _this = this;\n\n      // Returns a function to toggle a row's details slot\n      return function () {\n        if (hasDetailsSlot) {\n          _this.$set(item, '_showDetails', !item._showDetails);\n        }\n      };\n    },\n    rowEvtFactory: function rowEvtFactory(handler, item, rowIndex) {\n      var _this2 = this;\n\n      // Return a row event handler\n      return function (evt) {\n        // If table is busy (via provider) then don't propagate\n        if (_this2.stopIfBusy && _this2.stopIfBusy(evt)) {\n          return;\n        } // Otherwise call the handler\n\n\n        handler(evt, item, rowIndex);\n      };\n    },\n    // Row event handlers (will be wrapped by the above rowEvtFactory function)\n    tbodyRowKeydown: function tbodyRowKeydown(evt, item, rowIndex) {\n      // Keypress handler\n      var keyCode = evt.keyCode;\n      var target = evt.target; // `this.$refs.itemRow`s is most likely an array of `BTr` components, but it\n      // could be regular `tr` elements, so we map to the `tr` elements just in case\n\n      var trs = (this.$refs.itemRows || []).map(function (tr) {\n        return tr.$el || tr;\n      });\n\n      if (!(target && target.tagName === 'TR' && target === document.activeElement)) {\n        // Ignore if not the active tr element\n        return;\n      } else if (target.tabIndex !== 0) {\n        // Ignore if not focusable\n\n        /* istanbul ignore next */\n        return;\n      } else if (trs.length === 0) {\n        // No item rows\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var index = trs.indexOf(target);\n\n      if (keyCode === KeyCodes.ENTER || keyCode === KeyCodes.SPACE) {\n        // We also allow enter/space to trigger a click (when row is focused)\n        evt.stopPropagation();\n        evt.preventDefault(); // We translate to a row-clicked event\n\n        this.rowClicked(evt, item, rowIndex);\n      } else if (arrayIncludes([KeyCodes.UP, KeyCodes.DOWN, KeyCodes.HOME, KeyCodes.END], keyCode)) {\n        // Keyboard navigation of rows\n        evt.stopPropagation();\n        evt.preventDefault();\n        var shift = evt.shiftKey;\n\n        if (keyCode === KeyCodes.HOME || shift && keyCode === KeyCodes.UP) {\n          // Focus first row\n          trs[0].focus();\n        } else if (keyCode === KeyCodes.END || shift && keyCode === KeyCodes.DOWN) {\n          // Focus last row\n          trs[trs.length - 1].focus();\n        } else if (keyCode === KeyCodes.UP && index > 0) {\n          // Focus previous row\n          trs[index - 1].focus();\n        } else if (keyCode === KeyCodes.DOWN && index < trs.length - 1) {\n          // Focus next row\n          trs[index + 1].focus();\n        }\n      }\n    },\n    rowClicked: function rowClicked(evt, item, index) {\n      if (filterEvent(evt)) {\n        // clicked on a non-disabled control so ignore\n        return;\n      } else if (textSelectionActive(this.$el)) {\n        // User is selecting text, so ignore\n\n        /* istanbul ignore next: JSDOM doesn't support getSelection() */\n        return;\n      }\n\n      this.$emit('row-clicked', item, index, evt);\n    },\n    middleMouseRowClicked: function middleMouseRowClicked(evt, item, index) {\n      if (evt.which === 2) {\n        this.$emit('row-middle-clicked', item, index, evt);\n      }\n    },\n    rowDblClicked: function rowDblClicked(evt, item, index) {\n      if (filterEvent(evt)) {\n        // clicked on a non-disabled control so ignore\n\n        /* istanbul ignore next: event filtering already tested via click handler */\n        return;\n      }\n\n      this.$emit('row-dblclicked', item, index, evt);\n    },\n    rowHovered: function rowHovered(evt, item, index) {\n      this.$emit('row-hovered', item, index, evt);\n    },\n    rowUnhovered: function rowUnhovered(evt, item, index) {\n      this.$emit('row-unhovered', item, index, evt);\n    },\n    rowContextmenu: function rowContextmenu(evt, item, index) {\n      this.$emit('row-contextmenu', item, index, evt);\n    },\n    // Render helpers\n    renderTbodyRowCell: function renderTbodyRowCell(field, colIndex, item, rowIndex) {\n      // Renders a TD or TH for a row's field\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(detailsSlotName);\n      var formatted = this.getFormattedValue(item, field);\n      var key = field.key;\n      var data = {\n        // For the Vue key, we concatenate the column index and\n        // field key (as field keys could be duplicated)\n        // TODO: Although we do prevent duplicate field keys...\n        //   So we could change this to: `row-${rowIndex}-cell-${key}`\n        key: \"row-\".concat(rowIndex, \"-cell-\").concat(colIndex, \"-\").concat(key),\n        class: [field.class ? field.class : '', this.getTdValues(item, key, field.tdClass, '')],\n        props: {\n          stackedHeading: this.isStacked ? field.label : null,\n          stickyColumn: field.stickyColumn,\n          variant: item._cellVariants && item._cellVariants[key] ? item._cellVariants[key] : field.variant || null\n        },\n        attrs: _objectSpread({\n          'aria-colindex': String(colIndex + 1)\n        }, this.getTdValues(item, key, field.tdAttr, {}))\n      };\n      var slotScope = {\n        item: item,\n        index: rowIndex,\n        field: field,\n        unformatted: get(item, key, ''),\n        value: formatted,\n        toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item),\n        detailsShowing: Boolean(item._showDetails)\n      };\n\n      if (this.selectedRows) {\n        // Add in rowSelected scope property if selectable rows supported\n        slotScope.rowSelected = this.isRowSelected(rowIndex);\n      } // TODO:\n      //   Using `field.key` as scoped slot name is deprecated, to be removed in future release\n      //   New format uses the square bracketed naming convention\n\n\n      var $childNodes = this.normalizeSlot([\"[\".concat(key, \"]\"), '[]', key], slotScope) || toString(formatted);\n\n      if (this.isStacked) {\n        // We wrap in a DIV to ensure rendered as a single cell when visually stacked!\n        $childNodes = [h('div', {}, [$childNodes])];\n      } // Render either a td or th cell\n\n\n      return h(field.isRowHeader ? BTh : BTd, data, [$childNodes]);\n    },\n    renderTbodyRow: function renderTbodyRow(item, rowIndex) {\n      var _this3 = this;\n\n      // Renders an item's row (or rows if details supported)\n      var h = this.$createElement;\n      var fields = this.computedFields;\n      var tableStriped = this.striped;\n      var hasDetailsSlot = this.hasNormalizedSlot(detailsSlotName);\n      var rowShowDetails = Boolean(item._showDetails && hasDetailsSlot);\n      var hasRowClickHandler = this.$listeners['row-clicked'] || this.isSelectable; // We can return more than one TR if rowDetails enabled\n\n      var $rows = []; // Details ID needed for aria-describedby when details showing\n\n      var detailsId = rowShowDetails ? this.safeId(\"_details_\".concat(rowIndex, \"_\")) : null; // For each item data field in row\n\n      var $tds = fields.map(function (field, colIndex) {\n        return _this3.renderTbodyRowCell(field, colIndex, item, rowIndex);\n      }); // Calculate the row number in the dataset (indexed from 1)\n\n      var ariaRowIndex = null;\n\n      if (this.currentPage && this.perPage && this.perPage > 0) {\n        ariaRowIndex = String((this.currentPage - 1) * this.perPage + rowIndex + 1);\n      } // Create a unique :key to help ensure that sub components are re-rendered rather than\n      // re-used, which can cause issues. If a primary key is not provided we use the rendered\n      // rows index within the tbody.\n      // See: https://github.com/bootstrap-vue/bootstrap-vue/issues/2410\n\n\n      var primaryKey = this.primaryKey;\n      var hasPkValue = primaryKey && !isUndefinedOrNull(item[primaryKey]);\n      var rowKey = hasPkValue ? toString(item[primaryKey]) : String(rowIndex); // If primary key is provided, use it to generate a unique ID on each tbody > tr\n      // In the format of '{tableId}__row_{primaryKeyValue}'\n\n      var rowId = hasPkValue ? this.safeId(\"_row_\".concat(item[primaryKey])) : null;\n      var evtFactory = this.rowEvtFactory;\n      var handlers = {};\n\n      if (hasRowClickHandler) {\n        handlers.click = evtFactory(this.rowClicked, item, rowIndex);\n        handlers.keydown = evtFactory(this.tbodyRowKeydown, item, rowIndex);\n      } // Selectable classes and attributes\n\n\n      var selectableClasses = this.selectableRowClasses ? this.selectableRowClasses(rowIndex) : {};\n      var selectableAttrs = this.selectableRowAttrs ? this.selectableRowAttrs(rowIndex) : {}; // Add the item row\n\n      $rows.push(h(BTr, {\n        key: \"__b-table-row-\".concat(rowKey, \"__\"),\n        ref: 'itemRows',\n        refInFor: true,\n        class: [isFunction(this.tbodyTrClass) ? this.tbodyTrClass(item, 'row') : this.tbodyTrClass, selectableClasses, rowShowDetails ? 'b-table-has-details' : ''],\n        props: {\n          variant: item._rowVariant || null\n        },\n        attrs: _objectSpread({\n          id: rowId,\n          tabindex: hasRowClickHandler ? '0' : null,\n          'data-pk': rowId ? String(item[primaryKey]) : null,\n          // Should this be `aria-details` instead?\n          'aria-describedby': detailsId,\n          'aria-owns': detailsId,\n          'aria-rowindex': ariaRowIndex\n        }, selectableAttrs),\n        on: _objectSpread({}, handlers, {\n          // TODO:\n          //   Instantiate the following handlers only if we have registered\n          //   listeners i.e. `this.$listeners['row-middle-clicked']`, etc.\n          //\n          //   Could make all of this (including the above click/key handlers)\n          //   the result of a factory function and/or make it a delegated event\n          //   handler on the tbody (if we store the row index as a data-attribute\n          //   on the TR as we can lookup the item data from the computedItems array\n          //   or it could be a hidden prop (via attrs) on BTr instance)\n          auxclick: evtFactory(this.middleMouseRowClicked, item, rowIndex),\n          contextmenu: evtFactory(this.rowContextmenu, item, rowIndex),\n          // Note: These events are not accessibility friendly!\n          dblclick: evtFactory(this.rowDblClicked, item, rowIndex),\n          mouseenter: evtFactory(this.rowHovered, item, rowIndex),\n          mouseleave: evtFactory(this.rowUnhovered, item, rowIndex)\n        })\n      }, $tds)); // Row Details slot\n\n      if (rowShowDetails) {\n        var detailsScope = {\n          item: item,\n          index: rowIndex,\n          fields: fields,\n          toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item) // Render the details slot in a TD\n\n        };\n        var $details = h(BTd, {\n          props: {\n            colspan: fields.length\n          },\n          attrs: {\n            id: detailsId\n          }\n        }, [this.normalizeSlot(detailsSlotName, detailsScope)]); // Add a hidden row to keep table row striping consistent when details showing\n\n        if (tableStriped) {\n          $rows.push( // We don't use `BTr` here as we dont need the extra functionality\n          h('tr', {\n            key: \"__b-table-details-\".concat(rowIndex, \"-stripe__\"),\n            staticClass: 'd-none',\n            attrs: {\n              'aria-hidden': 'true',\n              role: 'presentation'\n            }\n          }));\n        } // Add the actual details row\n\n\n        $rows.push(h(BTr, {\n          key: \"__b-table-details-\".concat(rowIndex, \"__\"),\n          staticClass: 'b-table-details',\n          class: [isFunction(this.tbodyTrClass) ? this.tbodyTrClass(item, detailsSlotName) : this.tbodyTrClass],\n          props: {\n            variant: item._rowVariant || null\n          },\n          attrs: {\n            id: detailsId\n          }\n        }, [$details]));\n      } else if (hasDetailsSlot) {\n        // Only add the placeholder if a the table has a row-details slot defined (but not shown)\n        $rows.push(h());\n\n        if (tableStriped) {\n          // Add extra placeholder if table is striped\n          $rows.push(h());\n        }\n      } // Return the row(s)\n\n\n      return $rows;\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}