{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport Vue from '../../utils/vue';\nimport { getComponentConfig } from '../../utils/config';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nimport { BProgressBar } from './progress-bar';\nvar NAME = 'BProgress'; // @vue/component\n\nexport var BProgress = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvProgress: this\n    };\n  },\n  props: {\n    // These props can be inherited via the child b-progress-bar(s)\n    variant: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'variant');\n      }\n    },\n    striped: {\n      type: Boolean,\n      default: false\n    },\n    animated: {\n      type: Boolean,\n      default: false\n    },\n    height: {\n      type: String,\n      default: null\n    },\n    precision: {\n      type: Number,\n      default: 0\n    },\n    showProgress: {\n      type: Boolean,\n      default: false\n    },\n    showValue: {\n      type: Boolean,\n      default: false\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    // This prop is not inherited by child b-progress-bar(s)\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: {\n    progressHeight: function progressHeight() {\n      return {\n        height: this.height || null\n      };\n    }\n  },\n  render: function render(h) {\n    var childNodes = this.normalizeSlot('default');\n\n    if (!childNodes) {\n      childNodes = h(BProgressBar, {\n        props: {\n          value: this.value,\n          max: this.max,\n          precision: this.precision,\n          variant: this.variant,\n          animated: this.animated,\n          striped: this.striped,\n          showProgress: this.showProgress,\n          showValue: this.showValue\n        }\n      });\n    }\n\n    return h('div', {\n      class: ['progress'],\n      style: this.progressHeight\n    }, [childNodes]);\n  }\n});\nexport default BProgress;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/ecommercevuefirestore/ecommercevuefirestore/node_modules/bootstrap-vue/esm/components/progress/progress.js"],"names":["Vue","getComponentConfig","normalizeSlotMixin","BProgressBar","NAME","BProgress","extend","name","mixins","provide","bvProgress","props","variant","type","String","default","_default","striped","Boolean","animated","height","precision","Number","showProgress","showValue","max","value","computed","progressHeight","render","h","childNodes","normalizeSlot","class","style"],"mappings":"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","sourcesContent":["import Vue from '../../utils/vue';\nimport { getComponentConfig } from '../../utils/config';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nimport { BProgressBar } from './progress-bar';\nvar NAME = 'BProgress'; // @vue/component\n\nexport var BProgress =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  mixins: [normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvProgress: this\n    };\n  },\n  props: {\n    // These props can be inherited via the child b-progress-bar(s)\n    variant: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'variant');\n      }\n    },\n    striped: {\n      type: Boolean,\n      default: false\n    },\n    animated: {\n      type: Boolean,\n      default: false\n    },\n    height: {\n      type: String,\n      default: null\n    },\n    precision: {\n      type: Number,\n      default: 0\n    },\n    showProgress: {\n      type: Boolean,\n      default: false\n    },\n    showValue: {\n      type: Boolean,\n      default: false\n    },\n    max: {\n      type: Number,\n      default: 100\n    },\n    // This prop is not inherited by child b-progress-bar(s)\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n  computed: {\n    progressHeight: function progressHeight() {\n      return {\n        height: this.height || null\n      };\n    }\n  },\n  render: function render(h) {\n    var childNodes = this.normalizeSlot('default');\n\n    if (!childNodes) {\n      childNodes = h(BProgressBar, {\n        props: {\n          value: this.value,\n          max: this.max,\n          precision: this.precision,\n          variant: this.variant,\n          animated: this.animated,\n          striped: this.striped,\n          showProgress: this.showProgress,\n          showValue: this.showValue\n        }\n      });\n    }\n\n    return h('div', {\n      class: ['progress'],\n      style: this.progressHeight\n    }, [childNodes]);\n  }\n});\nexport default BProgress;"]},"metadata":{},"sourceType":"module"}