{"ast":null,"code":"import get from '../../../utils/get';\nimport { isDate, isFunction, isNumber, isUndefinedOrNull } from '../../../utils/inspect';\nimport stringifyObjectValues from './stringify-object-values'; // Default sort compare routine\n//\n// TODO: Add option to sort by multiple columns (tri-state per column,\n//       plus order of columns in sort)  where sortBy could be an array\n//       of objects `[ {key: 'foo', sortDir: 'asc'}, {key:'bar', sortDir: 'desc'} ...]`\n//       or an array of arrays `[ ['foo','asc'], ['bar','desc'] ]`\n//       Multisort will most likely be handled in mixin-sort.js by\n//       calling this method for each sortBy\n\nvar defaultSortCompare = function defaultSortCompare(a, b, sortBy, sortDesc, formatter, localeOpts, locale, nullLast) {\n  var aa = get(a, sortBy, null);\n  var bb = get(b, sortBy, null);\n\n  if (isFunction(formatter)) {\n    aa = formatter(aa, sortBy, a);\n    bb = formatter(bb, sortBy, b);\n  }\n\n  aa = isUndefinedOrNull(aa) ? '' : aa;\n  bb = isUndefinedOrNull(bb) ? '' : bb;\n\n  if (isDate(aa) && isDate(bb) || isNumber(aa) && isNumber(bb)) {\n    // Special case for comparing dates and numbers\n    // Internally dates are compared via their epoch number values\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  } else if (nullLast && aa === '' && bb !== '') {\n    // Special case when sorting null/undefined/empty string last\n    return 1;\n  } else if (nullLast && aa !== '' && bb === '') {\n    // Special case when sorting null/undefined/empty string last\n    return -1;\n  } // Do localized string comparison\n\n\n  return stringifyObjectValues(aa).localeCompare(stringifyObjectValues(bb), locale, localeOpts);\n};\n\nexport default defaultSortCompare;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/TO3/ecommercevuefirestore/node_modules/bootstrap-vue/esm/components/table/helpers/default-sort-compare.js"],"names":["get","isDate","isFunction","isNumber","isUndefinedOrNull","stringifyObjectValues","defaultSortCompare","a","b","sortBy","sortDesc","formatter","localeOpts","locale","nullLast","aa","bb","localeCompare"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,oBAAhB;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,QAA7B,EAAuCC,iBAAvC,QAAgE,wBAAhE;AACA,OAAOC,qBAAP,MAAkC,2BAAlC,C,CAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,CAA5B,EAA+BC,CAA/B,EAAkCC,MAAlC,EAA0CC,QAA1C,EAAoDC,SAApD,EAA+DC,UAA/D,EAA2EC,MAA3E,EAAmFC,QAAnF,EAA6F;AACpH,MAAIC,EAAE,GAAGf,GAAG,CAACO,CAAD,EAAIE,MAAJ,EAAY,IAAZ,CAAZ;AACA,MAAIO,EAAE,GAAGhB,GAAG,CAACQ,CAAD,EAAIC,MAAJ,EAAY,IAAZ,CAAZ;;AAEA,MAAIP,UAAU,CAACS,SAAD,CAAd,EAA2B;AACzBI,IAAAA,EAAE,GAAGJ,SAAS,CAACI,EAAD,EAAKN,MAAL,EAAaF,CAAb,CAAd;AACAS,IAAAA,EAAE,GAAGL,SAAS,CAACK,EAAD,EAAKP,MAAL,EAAaD,CAAb,CAAd;AACD;;AAEDO,EAAAA,EAAE,GAAGX,iBAAiB,CAACW,EAAD,CAAjB,GAAwB,EAAxB,GAA6BA,EAAlC;AACAC,EAAAA,EAAE,GAAGZ,iBAAiB,CAACY,EAAD,CAAjB,GAAwB,EAAxB,GAA6BA,EAAlC;;AAEA,MAAIf,MAAM,CAACc,EAAD,CAAN,IAAcd,MAAM,CAACe,EAAD,CAApB,IAA4Bb,QAAQ,CAACY,EAAD,CAAR,IAAgBZ,QAAQ,CAACa,EAAD,CAAxD,EAA8D;AAC5D;AACA;AACA,WAAOD,EAAE,GAAGC,EAAL,GAAU,CAAC,CAAX,GAAeD,EAAE,GAAGC,EAAL,GAAU,CAAV,GAAc,CAApC;AACD,GAJD,MAIO,IAAIF,QAAQ,IAAIC,EAAE,KAAK,EAAnB,IAAyBC,EAAE,KAAK,EAApC,EAAwC;AAC7C;AACA,WAAO,CAAP;AACD,GAHM,MAGA,IAAIF,QAAQ,IAAIC,EAAE,KAAK,EAAnB,IAAyBC,EAAE,KAAK,EAApC,EAAwC;AAC7C;AACA,WAAO,CAAC,CAAR;AACD,GAtBmH,CAsBlH;;;AAGF,SAAOX,qBAAqB,CAACU,EAAD,CAArB,CAA0BE,aAA1B,CAAwCZ,qBAAqB,CAACW,EAAD,CAA7D,EAAmEH,MAAnE,EAA2ED,UAA3E,CAAP;AACD,CA1BD;;AA4BA,eAAeN,kBAAf","sourcesContent":["import get from '../../../utils/get';\nimport { isDate, isFunction, isNumber, isUndefinedOrNull } from '../../../utils/inspect';\nimport stringifyObjectValues from './stringify-object-values'; // Default sort compare routine\n//\n// TODO: Add option to sort by multiple columns (tri-state per column,\n//       plus order of columns in sort)  where sortBy could be an array\n//       of objects `[ {key: 'foo', sortDir: 'asc'}, {key:'bar', sortDir: 'desc'} ...]`\n//       or an array of arrays `[ ['foo','asc'], ['bar','desc'] ]`\n//       Multisort will most likely be handled in mixin-sort.js by\n//       calling this method for each sortBy\n\nvar defaultSortCompare = function defaultSortCompare(a, b, sortBy, sortDesc, formatter, localeOpts, locale, nullLast) {\n  var aa = get(a, sortBy, null);\n  var bb = get(b, sortBy, null);\n\n  if (isFunction(formatter)) {\n    aa = formatter(aa, sortBy, a);\n    bb = formatter(bb, sortBy, b);\n  }\n\n  aa = isUndefinedOrNull(aa) ? '' : aa;\n  bb = isUndefinedOrNull(bb) ? '' : bb;\n\n  if (isDate(aa) && isDate(bb) || isNumber(aa) && isNumber(bb)) {\n    // Special case for comparing dates and numbers\n    // Internally dates are compared via their epoch number values\n    return aa < bb ? -1 : aa > bb ? 1 : 0;\n  } else if (nullLast && aa === '' && bb !== '') {\n    // Special case when sorting null/undefined/empty string last\n    return 1;\n  } else if (nullLast && aa !== '' && bb === '') {\n    // Special case when sorting null/undefined/empty string last\n    return -1;\n  } // Do localized string comparison\n\n\n  return stringifyObjectValues(aa).localeCompare(stringifyObjectValues(bb), locale, localeOpts);\n};\n\nexport default defaultSortCompare;"]},"metadata":{},"sourceType":"module"}