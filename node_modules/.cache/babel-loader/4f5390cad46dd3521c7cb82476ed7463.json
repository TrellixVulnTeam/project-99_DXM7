{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from 'firebase/compat/app'; //import { inject } from 'vue';\n\nexport default {\n  /*\r\n  inject: ['messaging'],\r\n   //composition api\r\n   setup() {\r\n    app.messaging().getToken({ vapidKey:  'BC9E9EweLWoSortR7kVMtqCwYb58uN-AoGBpWZaW1qUL4YlgECl8tFqItm_00FhaVv2o9OXJTR_Gtn4EwWcx2RA' })\r\n  .then((currentToken) => {\r\n   if (currentToken) {\r\n     console.log('client token', currentToken)\r\n   } else {\r\n     console.log('No registration token available. Request permission to generate one.');\r\n   }\r\n  }).catch((err) => {\r\n   console.log('An error occurred while retrieving token. ', err);\r\n  })\r\n  \n     const messaging = inject('messaging')\r\n  messaging.getToken({ vapidKey:' BC9E9EweLWoSortR7kVMtqCwYb58uN-AoGBpWZaW1qUL4YlgECl8tFqItm_00FhaVv2o9OXJTR_Gtn4EwWcx2RA' })\r\n     console.log('Firebase cloud messaging object', messaging)\r\n   },\r\n   mounted () {\r\n     console.log('Firebase cloud messaging object', this.$messaging)\r\n   },*/\n  data() {\n    return {\n      isLoggedIn: false,\n      currentUser: false,\n      cart: '',\n      form: {\n        user: '',\n        pass: ''\n      }\n    };\n  },\n\n  created() {\n    if (firebase.auth().currentUser) {\n      this.isLoggedIn = true;\n      this.currentUser = firebase.auth().currentUser.email;\n    }\n\n    ;\n\n    if (JSON.parse(localStorage.getItem('products'))) {\n      this.cart = JSON.parse(localStorage.getItem('products'));\n    } else {\n      return;\n    }\n  },\n\n  methods: {\n    logout: function () {\n      firebase.auth().signOut().then(() => {\n        this.$router.go({\n          path: this.$router.path\n        });\n      });\n    },\n\n    gotocart() {\n      this.$router.push('/cart');\n    },\n\n    gotologin() {\n      this.$router.push('/login');\n    },\n\n    gotoregister() {\n      this.$router.push('/register');\n    },\n\n    goHome() {\n      this.$router.push('/');\n    },\n\n    gotochat() {\n      this.$router.push('/realtime');\n    },\n\n    flashlightFunc() {\n      const SUPPORTS_MEDIA_DEVICES = ('mediaDevices' in navigator);\n\n      if (SUPPORTS_MEDIA_DEVICES) {\n        //Get the environment camera (usually the second one)\n        navigator.mediaDevices.enumerateDevices().then(devices => {\n          const cameras = devices.filter(device => device.kind === 'videoinput');\n\n          if (cameras.length === 0) {\n            throw 'No camera found on this device.';\n          }\n\n          const camera = cameras[cameras.length - 1]; // Create stream and get video track\n\n          navigator.mediaDevices.getUserMedia({\n            video: {\n              deviceId: camera.deviceId,\n              facingMode: ['user', 'environment'],\n              height: {\n                ideal: 1080\n              },\n              width: {\n                ideal: 1920\n              }\n            }\n          }).then(stream => {\n            const track = stream.getVideoTracks()[0]; //Create image capture object and get camera capabilities\n\n            const imageCapture = new ImageCapture(track);\n            const photoCapabilities = imageCapture.getPhotoCapabilities().then(() => {\n              //todo: check if camera has a torch\n              //let there be light!\n              const btn = document.querySelector('.switch');\n              btn.addEventListener('click', function () {\n                track.applyConstraints({\n                  advanced: [{\n                    torch: true\n                  }]\n                });\n              });\n            });\n          });\n        }); //The light will be on as long the track exists\n      }\n    },\n\n    onSubmit(e) {\n      e.preventDefault();\n\n      if (this.form.user == 'admin' && this.form.pass == '456789') {\n        this.$refs['my-modal'].hide();\n        this.$router.push('/admin');\n        localStorage.setItem('admin', JSON.stringify('true'));\n      } else {\n        return false;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA,2C,CACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA;AACA;AACAC,uBADA;AAEAC,wBAFA;AAGAC,cAHA;AAIAC;AACAC,gBADA;AAEAC;AAFA;AAJA;AASA,GAjCA;;AAkCAC;AACA;AACA;AACA;AACA;;AAAA;;AACA;AACA;AACA,KAFA,MAEA;AACA;AACA;AACA,GA5CA;;AA6CAC;AACAC;AACAC,eACAC,IADA,GAEAC,OAFA,GAGAC,IAHA,CAGA;AACA;AAAAC;AAAA;AACA,OALA;AAMA,KARA;;AASAC;AACA;AACA,KAXA;;AAYAC;AACA;AACA,KAdA;;AAeAC;AACA;AACA,KAjBA;;AAkBAC;AACA;AACA,KApBA;;AAqBAC;AACA;AACA,KAvBA;;AAwBAC;AACA;;AAEA;AACA;AACAC;AAEA;;AAEA;AACA;AACA;;AACA,qDAPA,CASA;;AACAA;AACAC;AACAC,uCADA;AAEAC,iDAFA;AAGAC;AAAAC;AAAA,eAHA;AAIAC;AAAAD;AAAA;AAJA;AADA,aAOAb,IAPA,CAOAe;AACA,qDADA,CAGA;;AACA;AACA;AAEA;AAEA;AACA;AACAC;AACAC;AACAC;AAAAC;AAAA;AADA;AAGA,eAJA;AAKA,aAXA;AAYA,WAxBA;AAyBA,SAnCA,EAFA,CAuCA;AAGA;AACA,KAtEA;;AAuEAC;AACAC;;AACA;AACA;AACA;AACAC;AACA,OAJA,MAIA;AACA;AACA;AACA;;AAhFA;AA7CA","names":["data","isLoggedIn","currentUser","cart","form","user","pass","created","methods","logout","firebase","auth","signOut","then","path","gotocart","gotologin","gotoregister","goHome","gotochat","flashlightFunc","navigator","video","deviceId","facingMode","height","ideal","width","stream","btn","track","advanced","torch","onSubmit","e","localStorage"],"sourceRoot":"src/components","sources":["Navbar.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<b-navbar toggleable=\"lg\" type=\"dark\" variant=\"success\">\r\n\t\t\t<b-navbar-brand @click=\"goHome\" href=\"#\">\r\n\t\t\t\t<!-- <b-icon-brightness-fill-high></b-icon-brightness-fill-high> -->\r\n\t\t\t\tEcommerce</b-navbar-brand>\r\n\t\t\t\r\n\t\t\t<b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\r\n\t\t\t\r\n\t\t\t<b-collapse id=\"nav-collapse\" is-nav>\r\n\t\t\t\t\r\n\t\t\t\t<!--Right alligned nav items-->\r\n\t\t\t\t<b-navbar-nav class=\"ml-auto\">\r\n\t\t\t\t\t<b-nav-item v-if=\"isLoggedIn\" id=\"usr\"><span class=\"email black-text\">{{currentUser}}</span></b-nav-item>\r\n\t\t\t\t\t<b-nav-item v-if=\"isLoggedIn\" @click=\"gotocart\" active>Shopping Cart</b-nav-item>\r\n\t\t\t\t\t<b-nav-item v-if=\"!isLoggedIn\" @click=\"gotologin\" active>Login</b-nav-item>\r\n\t\t\t\t\t<b-nav-item v-if=\"!isLoggedIn\" @click=\"gotoregister\" active>Register</b-nav-item>\r\n\t\t\t\t\t<b-nav-item v-if=\"isLoggedIn\" @click=\"gotochat\" active>Chat</b-nav-item>\r\n\t\t\t\t\t<b-nav-item @click=\"flashlightFunc\" active>Flashlight</b-nav-item>\r\n\t\t\t\t\t<button v-if=\"isLoggedIn\" v-on:click=\"logout\" class=\"btn black\">Logout</button>\r\n\t\t\t\t\t<b-nav-item-dropdown right>\r\n\t\t\t\t\t\t<!--Using 'button-content' slot-->\r\n\t\t\t\t\t\t<template v-slot:button-content>\r\n\t\t\t\t\t\t\t<em>Admin</em>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<b-dropdown-item v-b-modal.modal-1>Sign in</b-dropdown-item>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</b-nav-item-dropdown>\r\n\t\t\t\t</b-navbar-nav>\r\n\t\t\t</b-collapse>\r\n\t\t</b-navbar>\r\n\t\t\r\n\t\t \r\n\t\t\r\n\t\t<div>\r\n\t\t\r\n\t\t\r\n\t\t\t<b-modal hide-footer ref=\"my-modal\" id=\"modal-1\" title=\"Admin\">\r\n\t\t\t\t<b-form @submit=\"onSubmit\">\r\n\t\t\t\t<b-form-group\r\n\t\t\t\t\tid=\"input-group-1\"\r\n\t\t\t\t\tlabel=\"User:\"\r\n\t\t\t\t\tlabel-for=\"input-1\"\r\n\t\t\t\t\t\r\n\t\t\t\t>\r\n\t\t\t\t\t<b-form-input\r\n\t\t\t\t\t\tid=\"input-1\"\r\n\t\t\t\t\t\tv-model=\"form.user\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tplaceholder=\"Enter User\"\r\n\t\t\t\t\t></b-form-input>\r\n\t\t\t\t</b-form-group>\r\n\t\t\t\t\r\n\t\t\t\t<b-form-group id=\"input-group-2\" label=\"Password:\" label-for=\"input-2\">\r\n\t\t\t\t\t<b-form-input\r\n\t\t\t\t\t\tid=\"input-2\"\r\n\t\t\t\t\t\tv-model=\"form.pass\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tplaceholder=\"Enter Password\"\r\n\t\t\t\t\t\t></b-form-input>\r\n\t\t\t\t</b-form-group>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<b-button type=\"submit\" block variant=\"primary\">Submit</b-button>\r\n\t\t\t\t\r\n\t\t\t\t</b-form>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t</b-modal>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport firebase from 'firebase/compat/app';\r\n//import { inject } from 'vue';\r\nexport default {\r\n\t/*\r\n\tinject: ['messaging'],\r\n  //composition api\r\n  setup() {\r\n\t  app.messaging().getToken({ vapidKey:  'BC9E9EweLWoSortR7kVMtqCwYb58uN-AoGBpWZaW1qUL4YlgECl8tFqItm_00FhaVv2o9OXJTR_Gtn4EwWcx2RA' })\r\n.then((currentToken) => {\r\n  if (currentToken) {\r\n    console.log('client token', currentToken)\r\n  } else {\r\n    console.log('No registration token available. Request permission to generate one.');\r\n  }\r\n}).catch((err) => {\r\n  console.log('An error occurred while retrieving token. ', err);\r\n})\r\n\r\n    const messaging = inject('messaging')\r\n\tmessaging.getToken({ vapidKey:' BC9E9EweLWoSortR7kVMtqCwYb58uN-AoGBpWZaW1qUL4YlgECl8tFqItm_00FhaVv2o9OXJTR_Gtn4EwWcx2RA' })\r\n    console.log('Firebase cloud messaging object', messaging)\r\n  },\r\n  mounted () {\r\n    console.log('Firebase cloud messaging object', this.$messaging)\r\n  },*/\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tisLoggedIn: false,\r\n      \t\tcurrentUser: false,\r\n\t\t\tcart:'',\r\n\t\t\tform: {\r\n\t\t\t\tuser:'',\r\n\t\t\t\tpass:''\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreated(){\r\n\t\tif (firebase.auth().currentUser) {\r\n      \t\tthis.isLoggedIn = true;\r\n      \t\tthis.currentUser = firebase.auth().currentUser.email;\r\n    \t};\r\n\t\tif(JSON.parse(localStorage.getItem('products'))) {\r\n\t\t\tthis.cart = JSON.parse(localStorage.getItem('products'))\r\n\t\t} else {\r\n\t\t\t\treturn\r\n\t\t}\r\n\t},\r\n\tmethods:{\r\n\t\tlogout: function() {\r\n      \tfirebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n          this.$router.go({ path: this.$router.path });\r\n        });\r\n\t\t},\r\n\t\tgotocart(){\r\n\t\t\tthis.$router.push('/cart')\r\n\t\t},\r\n\t\tgotologin(){\r\n\t\t\tthis.$router.push('/login')\r\n\t\t},\r\n\t\tgotoregister(){\r\n\t\t\tthis.$router.push('/register')\r\n\t\t},\r\n\t\tgoHome(){\r\n\t\t\tthis.$router.push('/')\r\n\t\t},\r\n\t\tgotochat(){\r\n\t\t\tthis.$router.push('/realtime')\r\n\t\t},\r\n\t\tflashlightFunc(){\r\nconst SUPPORTS_MEDIA_DEVICES = 'mediaDevices' in navigator;\r\n\r\nif (SUPPORTS_MEDIA_DEVICES) {\r\n  //Get the environment camera (usually the second one)\r\n  navigator.mediaDevices.enumerateDevices().then(devices => {\r\n  \r\n    const cameras = devices.filter((device) => device.kind === 'videoinput');\r\n\r\n    if (cameras.length === 0) {\r\n      throw 'No camera found on this device.';\r\n    }\r\n    const camera = cameras[cameras.length - 1];\r\n\r\n    // Create stream and get video track\r\n    navigator.mediaDevices.getUserMedia({\r\n      video: {\r\n        deviceId: camera.deviceId,\r\n        facingMode: ['user', 'environment'],\r\n        height: {ideal: 1080},\r\n        width: {ideal: 1920}\r\n      }\r\n    }).then(stream => {\r\n      const track = stream.getVideoTracks()[0];\r\n\r\n      //Create image capture object and get camera capabilities\r\n      const imageCapture = new ImageCapture(track)\r\n      const photoCapabilities = imageCapture.getPhotoCapabilities().then(() => {\r\n\r\n        //todo: check if camera has a torch\r\n\r\n        //let there be light!\r\n        const btn = document.querySelector('.switch');\r\n        btn.addEventListener('click', function(){\r\n          track.applyConstraints({\r\n            advanced: [{torch: true}]\r\n          });\r\n        });\r\n      });\r\n    });\r\n  });\r\n  \r\n  //The light will be on as long the track exists\r\n  \r\n  \r\n}\t\t\t\t\r\n\t\t},\r\n\t\tonSubmit(e){\r\n\t\t\te.preventDefault();\r\n\t\t\tif(this.form.user=='admin' && this.form.pass=='456789'){\r\n\t\t\t\tthis.$refs['my-modal'].hide()\r\n\t\t\t\tthis.$router.push('/admin')\r\n\t\t\t\tlocalStorage.setItem('admin', JSON.stringify('true'))\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}