{"ast":null,"code":"import { eventOff, eventOn } from '../utils/dom'; // @vue/component\n\nexport default {\n  data: function data() {\n    return {\n      listenForFocusIn: false\n    };\n  },\n  watch: {\n    listenForFocusIn: function listenForFocusIn(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        eventOff(this.focusInElement, 'focusin', this._focusInHandler, false);\n\n        if (newValue) {\n          eventOn(this.focusInElement, 'focusin', this._focusInHandler, false);\n        }\n      }\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    // Declare non-reactive properties\n    this.focusInElement = null;\n  },\n  mounted: function mounted() {\n    if (!this.focusInElement) {\n      this.focusInElement = document;\n    }\n\n    if (this.listenForFocusIn) {\n      eventOn(this.focusInElement, 'focusin', this._focusInHandler, false);\n    }\n  },\n  beforeDestroy: function beforeDestroy()\n  /* istanbul ignore next */\n  {\n    eventOff(this.focusInElement, 'focusin', this._focusInHandler, false);\n  },\n  methods: {\n    _focusInHandler: function _focusInHandler(evt) {\n      if (this.focusInHandler) {\n        this.focusInHandler(evt);\n      }\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/ecommercevuefirestore/ecommercevuefirestore/node_modules/bootstrap-vue/esm/mixins/focus-in.js"],"names":["eventOff","eventOn","data","listenForFocusIn","watch","newValue","oldValue","focusInElement","_focusInHandler","beforeCreate","mounted","document","beforeDestroy","methods","evt","focusInHandler"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,OAAnB,QAAkC,cAAlC,C,CAAkD;;AAElD,eAAe;AACbC,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,WAAO;AACLC,MAAAA,gBAAgB,EAAE;AADb,KAAP;AAGD,GALY;AAMbC,EAAAA,KAAK,EAAE;AACLD,IAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BE,QAA1B,EAAoCC,QAApC,EAA8C;AAC9D,UAAID,QAAQ,KAAKC,QAAjB,EAA2B;AACzBN,QAAAA,QAAQ,CAAC,KAAKO,cAAN,EAAsB,SAAtB,EAAiC,KAAKC,eAAtC,EAAuD,KAAvD,CAAR;;AAEA,YAAIH,QAAJ,EAAc;AACZJ,UAAAA,OAAO,CAAC,KAAKM,cAAN,EAAsB,SAAtB,EAAiC,KAAKC,eAAtC,EAAuD,KAAvD,CAAP;AACD;AACF;AACF;AATI,GANM;AAiBbC,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC;AACA,SAAKF,cAAL,GAAsB,IAAtB;AACD,GApBY;AAqBbG,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,QAAI,CAAC,KAAKH,cAAV,EAA0B;AACxB,WAAKA,cAAL,GAAsBI,QAAtB;AACD;;AAED,QAAI,KAAKR,gBAAT,EAA2B;AACzBF,MAAAA,OAAO,CAAC,KAAKM,cAAN,EAAsB,SAAtB,EAAiC,KAAKC,eAAtC,EAAuD,KAAvD,CAAP;AACD;AACF,GA7BY;AA8BbI,EAAAA,aAAa,EAAE,SAASA,aAAT;AACf;AACA;AACEZ,IAAAA,QAAQ,CAAC,KAAKO,cAAN,EAAsB,SAAtB,EAAiC,KAAKC,eAAtC,EAAuD,KAAvD,CAAR;AACD,GAlCY;AAmCbK,EAAAA,OAAO,EAAE;AACPL,IAAAA,eAAe,EAAE,SAASA,eAAT,CAAyBM,GAAzB,EAA8B;AAC7C,UAAI,KAAKC,cAAT,EAAyB;AACvB,aAAKA,cAAL,CAAoBD,GAApB;AACD;AACF;AALM;AAnCI,CAAf","sourcesContent":["import { eventOff, eventOn } from '../utils/dom'; // @vue/component\n\nexport default {\n  data: function data() {\n    return {\n      listenForFocusIn: false\n    };\n  },\n  watch: {\n    listenForFocusIn: function listenForFocusIn(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        eventOff(this.focusInElement, 'focusin', this._focusInHandler, false);\n\n        if (newValue) {\n          eventOn(this.focusInElement, 'focusin', this._focusInHandler, false);\n        }\n      }\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    // Declare non-reactive properties\n    this.focusInElement = null;\n  },\n  mounted: function mounted() {\n    if (!this.focusInElement) {\n      this.focusInElement = document;\n    }\n\n    if (this.listenForFocusIn) {\n      eventOn(this.focusInElement, 'focusin', this._focusInHandler, false);\n    }\n  },\n  beforeDestroy: function beforeDestroy()\n  /* istanbul ignore next */\n  {\n    eventOff(this.focusInElement, 'focusin', this._focusInHandler, false);\n  },\n  methods: {\n    _focusInHandler: function _focusInHandler(evt) {\n      if (this.focusInHandler) {\n        this.focusInHandler(evt);\n      }\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}