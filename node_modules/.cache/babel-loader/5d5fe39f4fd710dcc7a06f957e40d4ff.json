{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.match.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nimport Popper from 'popper.js';\nimport BvEvent from './bv-event.class';\nimport noop from './noop';\nimport { from as arrayFrom } from './array';\nimport { closest, select, isVisible, isDisabled, getCS, addClass, removeClass, hasClass, setAttr, removeAttr, getAttr, eventOn, eventOff } from './dom';\nimport { isFunction, isNull, isNumber, isObject, isString, isUndefined } from './inspect';\nvar NAME = 'tooltip';\nvar CLASS_PREFIX = 'bs-tooltip';\nvar BS_CLASS_PREFIX_REGEX = new RegExp(\"\\\\b\".concat(CLASS_PREFIX, \"\\\\S+\"), 'g');\nvar TRANSITION_DURATION = 150; // Modal `$root` hidden event\n\nvar MODAL_CLOSE_EVENT = 'bv::modal::hidden'; // Modal container selector for appending tooltip/popover\n\nvar MODAL_SELECTOR = '.modal-content'; // For dropdown sniffing\n\nvar DROPDOWN_CLASS = 'dropdown';\nvar DROPDOWN_OPEN_SELECTOR = '.dropdown-menu.show';\nvar AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: 'right',\n  BOTTOM: 'bottom',\n  LEFT: 'left',\n  TOPLEFT: 'top',\n  TOPRIGHT: 'top',\n  RIGHTTOP: 'right',\n  RIGHTBOTTOM: 'right',\n  BOTTOMLEFT: 'bottom',\n  BOTTOMRIGHT: 'bottom',\n  LEFTTOP: 'left',\n  LEFTBOTTOM: 'left'\n};\nvar OffsetMap = {\n  AUTO: 0,\n  TOPLEFT: -1,\n  TOP: 0,\n  TOPRIGHT: +1,\n  RIGHTTOP: -1,\n  RIGHT: 0,\n  RIGHTBOTTOM: +1,\n  BOTTOMLEFT: -1,\n  BOTTOM: 0,\n  BOTTOMRIGHT: +1,\n  LEFTTOP: -1,\n  LEFT: 0,\n  LEFTBOTTOM: +1\n};\nvar HoverState = {\n  SHOW: 'show',\n  OUT: 'out'\n};\nvar ClassName = {\n  FADE: 'fade',\n  SHOW: 'show'\n};\nvar Selector = {\n  TOOLTIP: '.tooltip',\n  TOOLTIP_INNER: '.tooltip-inner',\n  ARROW: '.arrow' // Defaults\n\n};\nvar Defaults = {\n  animation: true,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div>' + '</div>',\n  trigger: 'hover focus',\n  title: '',\n  delay: 0,\n  html: false,\n  placement: 'top',\n  offset: 0,\n  arrowPadding: 6,\n  container: false,\n  fallbackPlacement: 'flip',\n  callbacks: {},\n  boundary: 'scrollParent',\n  boundaryPadding: 5,\n  variant: null,\n  customClass: null // Transition event names\n\n};\nvar TransitionEndEvents = {\n  WebkitTransition: ['webkitTransitionEnd'],\n  MozTransition: ['transitionend'],\n  OTransition: ['otransitionend', 'oTransitionEnd'],\n  transition: ['transitionend'] // Options for Native Event Listeners (since we never call preventDefault)\n\n};\nvar EvtOpts = {\n  passive: true,\n  capture: false // Client-side tip ID counter for aria-describedby attribute\n  // Each tooltip requires a unique client side ID\n\n};\nvar NEXTID = 1;\n/* istanbul ignore next */\n\nvar generateId = function generateId(name) {\n  return \"__BV_\".concat(name, \"_\").concat(NEXTID++, \"__\");\n};\n/*\n * ToolTip class definition\n */\n\n\nvar ToolTip = /*#__PURE__*/function () {\n  // Main constructor\n  function ToolTip(element, config, $parent) {\n    _classCallCheck(this, ToolTip); // New tooltip object\n\n\n    this.$isEnabled = true;\n    this.$fadeTimeout = null;\n    this.$hoverTimeout = null;\n    this.$visibleInterval = null;\n    this.$hoverState = '';\n    this.$activeTrigger = {};\n    this.$popper = null;\n    this.$element = element;\n    this.$tip = null;\n    this.$id = generateId(this.constructor.NAME);\n    this.$parent = $parent || null;\n    this.$root = $parent && $parent.$root ? $parent.$root : null;\n    this.$routeWatcher = null; // We use a bound version of the following handlers for root/modal\n    // listeners to maintain the correct `this` context\n\n    this.$forceHide = this.forceHide.bind(this);\n    this.$doHide = this.doHide.bind(this);\n    this.$doShow = this.doShow.bind(this);\n    this.$doDisable = this.doDisable.bind(this);\n    this.$doEnable = this.doEnable.bind(this);\n    this._noop = noop.bind(this); // Set the configuration\n\n    this.updateConfig(config); // Destroy ourselves if the parent is destroyed\n\n    if ($parent) {\n      $parent.$once('hook:beforeDestroy', this.destroy.bind(this));\n    }\n  } // NOTE: Overridden by PopOver class\n\n\n  _createClass(ToolTip, [{\n    key: \"updateConfig\",\n    // Update config\n    value: function updateConfig(config) {\n      // Merge config into defaults. We use `this` here because PopOver overrides Default\n      var updatedConfig = _objectSpread({}, this.constructor.Default, {}, config); // Sanitize delay\n\n\n      if (config.delay && isNumber(config.delay)) {\n        /* istanbul ignore next */\n        updatedConfig.delay = {\n          show: config.delay,\n          hide: config.delay\n        };\n      } // Title for tooltip and popover\n\n\n      if (config.title && isNumber(config.title)) {\n        /* istanbul ignore next */\n        updatedConfig.title = config.title.toString();\n      } // Content only for popover\n\n\n      if (config.content && isNumber(config.content)) {\n        /* istanbul ignore next */\n        updatedConfig.content = config.content.toString();\n      } // Hide element original title if needed\n\n\n      this.fixTitle(); // Update the config\n\n      this.$config = updatedConfig; // Stop/Restart listening\n\n      this.unListen();\n      this.listen();\n    } // Destroy this instance\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Stop listening to trigger events\n      this.unListen(); // Disable while open listeners/watchers\n\n      this.setWhileOpenListeners(false); // Clear any timeouts\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null; // Remove popper\n\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n\n      this.$popper = null; // Remove tip from document\n\n      if (this.$tip && this.$tip.parentElement) {\n        this.$tip.parentElement.removeChild(this.$tip);\n      }\n\n      this.$tip = null; // Null out other properties\n\n      this.$id = null;\n      this.$isEnabled = null;\n      this.$parent = null;\n      this.$root = null;\n      this.$element = null;\n      this.$config = null;\n      this.$hoverState = null;\n      this.$activeTrigger = null;\n      this.$forceHide = null;\n      this.$doHide = null;\n      this.$doShow = null;\n      this.$doDisable = null;\n      this.$doEnable = null;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      // Create a non-cancelable BvEvent\n      var enabledEvt = new BvEvent('enabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = true;\n      this.emitEvent(enabledEvt);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      // Create a non-cancelable BvEvent\n      var disabledEvt = new BvEvent('disabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = false;\n      this.emitEvent(disabledEvt);\n    } // Click toggler\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (!this.$isEnabled) {\n        /* istanbul ignore next */\n        return;\n      } // Prevent showing if tip/popover is on a dropdown and the menu is open\n\n\n      if (this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      }\n      /* istanbul ignore else */\n\n\n      if (event) {\n        this.$activeTrigger.click = !this.$activeTrigger.click;\n\n        if (this.isWithActiveTrigger()) {\n          this.enter(null);\n        } else {\n          this.leave(null);\n        }\n      } else {\n        if (hasClass(this.getTipElement(), ClassName.SHOW)) {\n          this.leave(null);\n        } else {\n          this.enter(null);\n        }\n      }\n    } // Show tooltip\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this = this;\n\n      if (!document.body.contains(this.$element) || !isVisible(this.$element)) {\n        // If trigger element isn't in the DOM or is not visible\n        return;\n      } // Prevent showing if tip/popover is on a dropdown and the menu is open\n\n\n      if (this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Build tooltip element (also sets this.$tip)\n\n\n      var tip = this.getTipElement();\n      this.fixTitle();\n      this.setContent(tip);\n\n      if (!this.isWithContent(tip)) {\n        // If no content, don't bother showing\n\n        /* istanbul ignore next */\n        this.$tip = null;\n        /* istanbul ignore next */\n\n        return;\n      } // Set ID on tip and aria-describedby on element\n\n\n      setAttr(tip, 'id', this.$id);\n      this.addAriaDescribedby(); // Set animation on or off\n\n      if (this.$config.animation) {\n        addClass(tip, ClassName.FADE);\n      } else {\n        removeClass(tip, ClassName.FADE);\n      }\n\n      var placement = this.getPlacement();\n      var attachment = this.constructor.getAttachment(placement);\n      this.addAttachmentClass(attachment); // Create a cancelable BvEvent\n\n      var showEvt = new BvEvent('show', {\n        cancelable: true,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(showEvt);\n\n      if (showEvt.defaultPrevented) {\n        // Don't show if event cancelled\n        this.$tip = null;\n        return;\n      } // Insert tooltip if needed\n\n\n      var container = this.getContainer();\n\n      if (!document.body.contains(tip)) {\n        container.appendChild(tip);\n      } // Refresh popper\n\n\n      this.removePopper();\n      this.$popper = new Popper(this.$element, tip, this.getPopperConfig(placement, tip)); // Transitionend callback\n\n      var complete = function complete() {\n        if (_this.$config.animation) {\n          _this.fixTransition(tip);\n        }\n\n        var prevHoverState = _this.$hoverState;\n        _this.$hoverState = null;\n\n        if (prevHoverState === HoverState.OUT) {\n          _this.leave(null);\n        } // Create a non-cancelable BvEvent\n\n\n        var shownEvt = new BvEvent('shown', {\n          cancelable: false,\n          target: _this.$element,\n          relatedTarget: tip\n        });\n\n        _this.emitEvent(shownEvt);\n      }; // Enable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(true); // Show tip\n\n      addClass(tip, ClassName.SHOW); // Start the transition/animation\n\n      this.transitionOnce(tip, complete);\n    } // Handler for periodic visibility check\n\n  }, {\n    key: \"visibleCheck\",\n    value: function visibleCheck(on) {\n      var _this2 = this;\n\n      clearInterval(this.$visibleInterval);\n      this.$visibleInterval = null;\n\n      if (on) {\n        this.$visibleInterval = setInterval(function () {\n          var tip = _this2.$tip;\n\n          if (tip && !isVisible(_this2.$element) && hasClass(tip, ClassName.SHOW)) {\n            // Element is no longer visible, so force-hide the tooltip\n            _this2.forceHide();\n          }\n        }, 100);\n      }\n    }\n  }, {\n    key: \"setWhileOpenListeners\",\n    value: function setWhileOpenListeners(on) {\n      // Modal close events\n      this.setModalListener(on); // Dropdown open events (if we are attached to a dropdown)\n\n      this.setDropdownListener(on); // Periodic $element visibility check\n      // For handling when tip is in <keepalive>, tabs, carousel, etc\n\n      this.visibleCheck(on); // On-touch start listeners\n\n      this.setOnTouchStartListener(on);\n\n      if (on && /(focus|blur)/.test(this.$config.trigger)) {\n        // If focus moves between trigger element and tip container, don't close\n        eventOn(this.$tip, 'focusout', this, EvtOpts);\n      } else {\n        eventOff(this.$tip, 'focusout', this, EvtOpts);\n      }\n    } // Force hide of tip (internal method)\n\n  }, {\n    key: \"forceHide\",\n    value: function forceHide() {\n      if (!this.$tip || !hasClass(this.$tip, ClassName.SHOW)) {\n        /* istanbul ignore next */\n        return;\n      } // Disable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(false); // Clear any hover enter/leave event\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      this.$hoverState = '';\n      this.$activeTrigger = {}; // Hide the tip\n\n      this.hide(null, true);\n    } // Hide tooltip\n\n  }, {\n    key: \"hide\",\n    value: function hide(callback, force) {\n      var _this3 = this;\n\n      var tip = this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return;\n      } // Create a cancelable BvEvent\n\n\n      var hideEvt = new BvEvent('hide', {\n        // We disable cancelling if force is true\n        cancelable: !force,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(hideEvt);\n\n      if (hideEvt.defaultPrevented) {\n        // Don't hide if event cancelled\n        return;\n      } // Transitionend callback\n\n\n      var complete = function complete() {\n        if (_this3.$hoverState !== HoverState.SHOW && tip.parentNode) {\n          // Remove tip from DOM, and force recompile on next show\n          tip.parentNode.removeChild(tip);\n\n          _this3.removeAriaDescribedby();\n\n          _this3.removePopper();\n\n          _this3.$tip = null;\n        }\n\n        if (callback) {\n          /* istanbul ignore next */\n          callback();\n        } // Create a non-cancelable BvEvent\n\n\n        var hiddenEvt = new BvEvent('hidden', {\n          cancelable: false,\n          target: _this3.$element,\n          relatedTarget: null\n        });\n\n        _this3.emitEvent(hiddenEvt);\n      }; // Disable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(false); // If forced close, disable animation\n\n      if (force) {\n        removeClass(tip, ClassName.FADE);\n      } // Hide tip\n\n\n      removeClass(tip, ClassName.SHOW); // Clear any active triggers\n\n      this.$activeTrigger = {}; // Start the hide transition\n\n      this.transitionOnce(tip, complete);\n      this.$hoverState = '';\n    }\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(evt) {\n      var evtName = evt.type;\n      var $root = this.$root;\n\n      if ($root && $root.$emit) {\n        // Emit an event on $root\n        $root.$emit(\"bv::\".concat(this.constructor.NAME, \"::\").concat(evtName), evt);\n      }\n\n      var callbacks = this.$config.callbacks || {};\n\n      if (isFunction(callbacks[evtName])) {\n        callbacks[evtName](evt);\n      }\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      var container = this.$config.container;\n      var body = document.body; // If we are in a modal, we append to the modal instead of body,\n      // unless a container is specified\n\n      return container === false ? closest(MODAL_SELECTOR, this.$element) || body : select(container, body) || body;\n    } // Will be overridden by PopOver if needed\n\n  }, {\n    key: \"addAriaDescribedby\",\n    value: function addAriaDescribedby() {\n      // Add aria-describedby on trigger element, without removing any other IDs\n      var desc = getAttr(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).concat(this.$id).join(' ').trim();\n      setAttr(this.$element, 'aria-describedby', desc);\n    } // Will be overridden by PopOver if needed\n\n  }, {\n    key: \"removeAriaDescribedby\",\n    value: function removeAriaDescribedby() {\n      var _this4 = this;\n\n      var desc = getAttr(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).filter(function (d) {\n        return d !== _this4.$id;\n      }).join(' ').trim();\n\n      if (desc) {\n        /* istanbul ignore next */\n        setAttr(this.$element, 'aria-describedby', desc);\n      } else {\n        removeAttr(this.$element, 'aria-describedby');\n      }\n    }\n  }, {\n    key: \"removePopper\",\n    value: function removePopper() {\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n\n      this.$popper = null;\n    }\n  }, {\n    key: \"transitionOnce\",\n    value: function transitionOnce(tip, complete) {\n      var _this5 = this;\n\n      var transEvents = this.getTransitionEndEvents();\n      var called = false;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null;\n\n      var fnOnce = function fnOnce() {\n        if (called) {\n          /* istanbul ignore next */\n          return;\n        }\n\n        called = true;\n        clearTimeout(_this5.$fadeTimeout);\n        _this5.$fadeTimeout = null;\n        transEvents.forEach(function (evtName) {\n          eventOff(tip, evtName, fnOnce, EvtOpts);\n        }); // Call complete callback\n\n        complete();\n      };\n\n      if (hasClass(tip, ClassName.FADE)) {\n        transEvents.forEach(function (evtName) {\n          eventOn(tip, evtName, fnOnce, EvtOpts);\n        }); // Fallback to setTimeout()\n\n        this.$fadeTimeout = setTimeout(fnOnce, TRANSITION_DURATION);\n      } else {\n        fnOnce();\n      }\n    } // What transitionend event(s) to use? (returns array of event names)\n\n  }, {\n    key: \"getTransitionEndEvents\",\n    value: function getTransitionEndEvents() {\n      for (var name in TransitionEndEvents) {\n        if (!isUndefined(this.$element.style[name])) {\n          return TransitionEndEvents[name];\n        }\n      } // Fallback\n\n      /* istanbul ignore next */\n\n\n      return [];\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!isNull(this.$popper)) {\n        this.$popper.scheduleUpdate();\n      }\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"isWithContent\",\n    value: function isWithContent(tip) {\n      tip = tip || this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return false;\n      }\n\n      return Boolean((select(Selector.TOOLTIP_INNER, tip) || {}).innerHTML);\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"addAttachmentClass\",\n    value: function addAttachmentClass(attachment) {\n      addClass(this.getTipElement(), \"\".concat(CLASS_PREFIX, \"-\").concat(attachment));\n    }\n  }, {\n    key: \"getTipElement\",\n    value: function getTipElement() {\n      if (!this.$tip) {\n        // Try and compile user supplied template, or fallback to default template\n        this.$tip = this.compileTemplate(this.$config.template) || this.compileTemplate(this.constructor.Default.template);\n      } // Add tab index so tip can be focused, and to allow it to be\n      // set as relatedTarget in focusin/out events\n\n\n      this.$tip.tabIndex = -1; // Add variant if specified\n\n      if (this.$config.variant) {\n        addClass(this.$tip, \"b-\".concat(this.constructor.NAME, \"-\").concat(this.$config.variant));\n      }\n\n      if (this.$config.customClass) {\n        addClass(this.$tip, String(this.$config.customClass));\n      }\n\n      return this.$tip;\n    }\n  }, {\n    key: \"compileTemplate\",\n    value: function compileTemplate(html) {\n      if (!html || !isString(html)) {\n        /* istanbul ignore next */\n        return null;\n      }\n\n      var div = document.createElement('div');\n      div.innerHTML = html.trim();\n      var node = div.firstElementChild ? div.removeChild(div.firstElementChild) : null;\n      div = null;\n      return node;\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(tip) {\n      this.setElementContent(select(Selector.TOOLTIP_INNER, tip), this.getTitle());\n      removeClass(tip, ClassName.FADE);\n      removeClass(tip, ClassName.SHOW);\n    }\n  }, {\n    key: \"setElementContent\",\n    value: function setElementContent(container, content) {\n      if (!container) {\n        // If container element doesn't exist, just return\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var allowHtml = this.$config.html;\n\n      if (isObject(content) && content.nodeType) {\n        // Content is a DOM node\n        if (allowHtml) {\n          if (content.parentElement !== container) {\n            container.innerHTML = '';\n            container.appendChild(content);\n          }\n        } else {\n          /* istanbul ignore next */\n          container.innerText = content.innerText;\n        }\n      } else {\n        // We have a plain HTML string or Text\n        container[allowHtml ? 'innerHTML' : 'innerText'] = content;\n      }\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      var title = this.$config.title || '';\n\n      if (isFunction(title)) {\n        // Call the function to get the title value\n\n        /* istanbul ignore next */\n        title = title(this.$element);\n      }\n\n      if (isObject(title) && title.nodeType && !title.innerHTML.trim()) {\n        // We have a DOM node, but without inner content,\n        // so just return empty string\n\n        /* istanbul ignore next */\n        title = '';\n      }\n\n      if (isString(title)) {\n        title = title.trim();\n      }\n\n      if (!title) {\n        // If an explicit title is not given, try element's title attributes\n        title = getAttr(this.$element, 'title') || getAttr(this.$element, 'data-original-title') || '';\n        title = title.trim();\n      }\n\n      return title;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this6 = this;\n\n      var el = this.$element;\n      /* istanbul ignore next */\n\n      if (!el) {\n        return;\n      }\n\n      var triggers = this.$config.trigger.trim().split(/\\s+/); // Listen for global show/hide events\n\n      this.setRootListener(true); // Using `this` as the handler will get automatically directed to\n      // this.handleEvent and maintain our binding to `this`\n\n      triggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          eventOn(el, 'click', _this6, EvtOpts);\n        } else if (trigger === 'focus') {\n          eventOn(el, 'focusin', _this6, EvtOpts);\n          eventOn(el, 'focusout', _this6, EvtOpts);\n        } else if (trigger === 'blur') {\n          // Used to close $tip when element looses focus\n          eventOn(el, 'focusout', _this6, EvtOpts);\n        } else if (trigger === 'hover') {\n          eventOn(el, 'mouseenter', _this6, EvtOpts);\n          eventOn(el, 'mouseleave', _this6, EvtOpts);\n        }\n      }, this);\n    }\n  }, {\n    key: \"unListen\",\n    value: function unListen() {\n      var _this7 = this;\n\n      var el = this.$element;\n      /* istanbul ignore next */\n\n      if (!el) {\n        return;\n      }\n\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave']; // Using `this` as the handler will get automatically directed to this.handleEvent\n\n      events.forEach(function (evt) {\n        eventOff(el, evt, _this7, EvtOpts);\n      }, this); // Stop listening for global show/hide/enable/disable events\n\n      this.setRootListener(false);\n    } // This special method allows us to use `this` as the event handlers\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      // If disabled, don't do anything\n      // If tip is shown before element gets disabled, then tip will not\n      // close until no longer disabled or forcefully closed\n      if (isDisabled(this.$element)) {\n        /* istanbul ignore next */\n        return;\n      } // Exit if not enabled\n\n\n      if (!this.$isEnabled) {\n        return;\n      } // Prevent showing if tip/popover is on a dropdown and the menu is open\n\n\n      if (this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      var type = e.type;\n      var target = e.target;\n      var relatedTarget = e.relatedTarget;\n      var $element = this.$element;\n      var $tip = this.$tip;\n\n      if (type === 'click') {\n        this.toggle(e);\n      } else if (type === 'focusin' || type === 'mouseenter') {\n        this.enter(e);\n      } else if (type === 'focusout') {\n        // `target` is the element which is loosing focus and\n        // `relatedTarget` is the element gaining focus\n        // If focus moves from `$element` to `$tip`, don't trigger a leave\n        if ($tip && $element && $element.contains(target) && $tip.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // If focus moves from `$tip` to `$element`, don't trigger a leave\n\n\n        if ($tip && $element && $tip.contains(target) && $element.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // If focus moves within `$tip`, don't trigger a leave\n\n\n        if ($tip && $tip.contains(target) && $tip.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // If focus moves within `$element`, don't trigger a leave\n\n\n        if ($element && $element.contains(target) && $element.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // Otherwise trigger a leave\n\n\n        this.leave(e);\n      } else if (type === 'mouseleave') {\n        this.leave(e);\n      }\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"setModalListener\",\n    value: function setModalListener(on) {\n      var el = this.$element;\n\n      if (!el || !this.$root) {\n        return;\n      }\n\n      var modal = closest(MODAL_SELECTOR, el); // If we are not in a modal, don't worry\n\n      if (!modal) {\n        return;\n      } // We can listen for modal hidden events on `$root`\n\n\n      this.$root[on ? '$on' : '$off'](MODAL_CLOSE_EVENT, this.$forceHide);\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"setDropdownListener\",\n    value: function setDropdownListener(on) {\n      var el = this.$element;\n\n      if (!el || !this.$root) {\n        return;\n      } // If we are not on a dropdown menu, don't worry\n\n\n      if (!hasClass(el, DROPDOWN_CLASS)) {\n        return;\n      } // We can listen for dropdown shown events on it's instance\n\n\n      if (el && el.__vue__) {\n        el.__vue__[on ? '$on' : '$off']('shown', this.$forceHide);\n      }\n    }\n  }, {\n    key: \"setRootListener\",\n    value: function setRootListener(on) {\n      // Listen for global `bv::{hide|show}::{tooltip|popover}` hide request event\n      var $root = this.$root;\n\n      if ($root) {\n        var method = on ? '$on' : '$off';\n        $root[method](\"bv::hide::\".concat(this.constructor.NAME), this.$doHide);\n        $root[method](\"bv::show::\".concat(this.constructor.NAME), this.$doShow);\n        $root[method](\"bv::disable::\".concat(this.constructor.NAME), this.$doDisable);\n        $root[method](\"bv::enable::\".concat(this.constructor.NAME), this.$doEnable);\n      }\n    }\n  }, {\n    key: \"dropdownOpen\",\n    value: function dropdownOpen() {\n      // Returns true if trigger is a dropdown and the dropdown menu is open\n      return hasClass(this.$element, DROPDOWN_CLASS) && select(DROPDOWN_OPEN_SELECTOR, this.$element);\n    } // Programmatically hide tooltip or popover\n\n  }, {\n    key: \"doHide\",\n    value: function doHide(id) {\n      if (!id) {\n        // Close all tooltips or popovers\n        this.forceHide();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Close this specific tooltip or popover\n        this.hide();\n      }\n    } // Programmatically show tooltip or popover\n\n  }, {\n    key: \"doShow\",\n    value: function doShow(id) {\n      if (!id) {\n        // Open all tooltips or popovers\n        this.show();\n      } else if (id && this.$element && this.$element.id && this.$element.id === id) {\n        // Show this specific tooltip or popover\n        this.show();\n      }\n    } // Programmatically disable tooltip or popover\n\n  }, {\n    key: \"doDisable\",\n    value: function doDisable(id) {\n      if (!id) {\n        // Disable all tooltips or popovers\n        this.disable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Disable this specific tooltip or popover\n        this.disable();\n      }\n    } // Programmatically enable tooltip or popover\n\n  }, {\n    key: \"doEnable\",\n    value: function doEnable(id) {\n      if (!id) {\n        // Enable all tooltips or popovers\n        this.enable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Enable this specific tooltip or popover\n        this.enable();\n      }\n    }\n  }, {\n    key: \"setOnTouchStartListener\",\n    value: function setOnTouchStartListener(on) {\n      var _this8 = this; // If this is a touch-enabled device we add extra empty\n      // `mouseover` listeners to the body's immediate children\n      // Only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n\n\n      if ('ontouchstart' in document.documentElement) {\n        /* istanbul ignore next: JSDOM does not support `ontouchstart` event */\n        arrayFrom(document.body.children).forEach(function (el) {\n          if (on) {\n            eventOn(el, 'mouseover', _this8._noop);\n          } else {\n            eventOff(el, 'mouseover', _this8._noop);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"fixTitle\",\n    value: function fixTitle() {\n      var el = this.$element;\n\n      if (getAttr(el, 'title') || !isString(getAttr(el, 'data-original-title'))) {\n        setAttr(el, 'data-original-title', getAttr(el, 'title') || '');\n        setAttr(el, 'title', '');\n      }\n    } // Enter handler\n\n  }, {\n    key: \"enter\",\n    value: function enter(e) {\n      var _this9 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusin' ? 'focus' : 'hover'] = true;\n      }\n\n      if (hasClass(this.getTipElement(), ClassName.SHOW) || this.$hoverState === HoverState.SHOW) {\n        this.$hoverState = HoverState.SHOW;\n        return;\n      }\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.SHOW;\n\n      if (!this.$config.delay || !this.$config.delay.show) {\n        this.show();\n        return;\n      }\n\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this9.$hoverState === HoverState.SHOW) {\n          _this9.show();\n        }\n      }, this.$config.delay.show);\n    } // Leave handler\n\n  }, {\n    key: \"leave\",\n    value: function leave(e) {\n      var _this10 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusout' ? 'focus' : 'hover'] = false;\n\n        if (e.type === 'focusout' && /blur/.test(this.$config.trigger)) {\n          // Special case for `blur`: we clear out the other triggers\n          this.$activeTrigger.click = false;\n          this.$activeTrigger.hover = false;\n        }\n      }\n\n      if (this.isWithActiveTrigger()) {\n        return;\n      }\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.OUT;\n\n      if (!this.$config.delay || !this.$config.delay.hide) {\n        this.hide();\n        return;\n      }\n\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this10.$hoverState === HoverState.OUT) {\n          _this10.hide();\n        }\n      }, this.$config.delay.hide);\n    }\n  }, {\n    key: \"getPopperConfig\",\n    value: function getPopperConfig(placement, tip) {\n      var _this11 = this;\n\n      return {\n        placement: this.constructor.getAttachment(placement),\n        modifiers: {\n          offset: {\n            offset: this.getOffset(placement, tip)\n          },\n          flip: {\n            behavior: this.$config.fallbackPlacement\n          },\n          arrow: {\n            element: '.arrow'\n          },\n          preventOverflow: {\n            padding: this.$config.boundaryPadding,\n            boundariesElement: this.$config.boundary\n          }\n        },\n        onCreate: function onCreate(data) {\n          // Handle flipping arrow classes\n\n          /* istanbul ignore next */\n          if (data.originalPlacement !== data.placement) {\n            _this11.handlePopperPlacementChange(data);\n          }\n        },\n        onUpdate: function onUpdate(data) {\n          // Handle flipping arrow classes\n\n          /* istanbul ignore next */\n          _this11.handlePopperPlacementChange(data);\n        }\n      };\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"getOffset\",\n    value: function getOffset(placement, tip) {\n      if (!this.$config.offset) {\n        var arrow = select(Selector.ARROW, tip);\n        var arrowOffset = parseFloat(getCS(arrow).width) + parseFloat(this.$config.arrowPadding);\n\n        switch (OffsetMap[placement.toUpperCase()]) {\n          case +1:\n            return \"+50%p - \".concat(arrowOffset, \"px\");\n\n          case -1:\n            return \"-50%p + \".concat(arrowOffset, \"px\");\n\n          default:\n            return 0;\n        }\n      }\n\n      return this.$config.offset;\n    }\n  }, {\n    key: \"getPlacement\",\n    value: function getPlacement() {\n      var placement = this.$config.placement;\n\n      if (isFunction(placement)) {\n        /* istanbul ignore next */\n        return placement.call(this, this.$tip, this.$element);\n      }\n\n      return placement;\n    }\n  }, {\n    key: \"isWithActiveTrigger\",\n    value: function isWithActiveTrigger() {\n      for (var trigger in this.$activeTrigger) {\n        if (this.$activeTrigger[trigger]) {\n          return true;\n        }\n      }\n\n      return false;\n    } // NOTE: Overridden by PopOver class\n\n    /* istanbul ignore next */\n\n  }, {\n    key: \"cleanTipClass\",\n    value: function cleanTipClass() {\n      var tip = this.getTipElement();\n      var tabClass = tip.className.match(BS_CLASS_PREFIX_REGEX);\n\n      if (!isNull(tabClass) && tabClass.length > 0) {\n        tabClass.forEach(function (cls) {\n          removeClass(tip, cls);\n        });\n      }\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"handlePopperPlacementChange\",\n    value: function handlePopperPlacementChange(data) {\n      this.cleanTipClass();\n      this.addAttachmentClass(this.constructor.getAttachment(data.placement));\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"fixTransition\",\n    value: function fixTransition(tip) {\n      var initConfigAnimation = this.$config.animation || false;\n\n      if (!isNull(getAttr(tip, 'x-placement'))) {\n        return;\n      }\n\n      removeClass(tip, ClassName.FADE);\n      this.$config.animation = false;\n      this.hide();\n      this.show();\n      this.$config.animation = initConfigAnimation;\n    }\n  }], [{\n    key: \"getAttachment\",\n    value: function getAttachment(placement) {\n      return AttachmentMap[placement.toUpperCase()];\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Defaults;\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      return NAME;\n    }\n  }]);\n\n  return ToolTip;\n}();\n\nexport default ToolTip;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/ecommercevuefirestore/ecommercevuefirestore/node_modules/bootstrap-vue/esm/utils/tooltip.class.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","Popper","BvEvent","noop","from","arrayFrom","closest","select","isVisible","isDisabled","getCS","addClass","removeClass","hasClass","setAttr","removeAttr","getAttr","eventOn","eventOff","isFunction","isNull","isNumber","isObject","isString","isUndefined","NAME","CLASS_PREFIX","BS_CLASS_PREFIX_REGEX","RegExp","concat","TRANSITION_DURATION","MODAL_CLOSE_EVENT","MODAL_SELECTOR","DROPDOWN_CLASS","DROPDOWN_OPEN_SELECTOR","AttachmentMap","AUTO","TOP","RIGHT","BOTTOM","LEFT","TOPLEFT","TOPRIGHT","RIGHTTOP","RIGHTBOTTOM","BOTTOMLEFT","BOTTOMRIGHT","LEFTTOP","LEFTBOTTOM","OffsetMap","HoverState","SHOW","OUT","ClassName","FADE","Selector","TOOLTIP","TOOLTIP_INNER","ARROW","Defaults","animation","template","trigger","title","delay","html","placement","offset","arrowPadding","container","fallbackPlacement","callbacks","boundary","boundaryPadding","variant","customClass","TransitionEndEvents","WebkitTransition","MozTransition","OTransition","transition","EvtOpts","passive","capture","NEXTID","generateId","name","ToolTip","element","config","$parent","$isEnabled","$fadeTimeout","$hoverTimeout","$visibleInterval","$hoverState","$activeTrigger","$popper","$element","$tip","$id","constructor","$root","$routeWatcher","$forceHide","forceHide","bind","$doHide","doHide","$doShow","doShow","$doDisable","doDisable","$doEnable","doEnable","_noop","updateConfig","$once","destroy","updatedConfig","Default","show","hide","toString","content","fixTitle","$config","unListen","listen","setWhileOpenListeners","clearTimeout","parentElement","removeChild","enable","enabledEvt","cancelable","relatedTarget","emitEvent","disable","disabledEvt","toggle","event","dropdownOpen","click","isWithActiveTrigger","enter","leave","getTipElement","_this","document","body","contains","tip","setContent","isWithContent","addAriaDescribedby","getPlacement","attachment","getAttachment","addAttachmentClass","showEvt","defaultPrevented","getContainer","appendChild","removePopper","getPopperConfig","complete","fixTransition","prevHoverState","shownEvt","transitionOnce","visibleCheck","on","_this2","clearInterval","setInterval","setModalListener","setDropdownListener","setOnTouchStartListener","test","callback","force","_this3","hideEvt","parentNode","removeAriaDescribedby","hiddenEvt","evt","evtName","type","$emit","desc","split","join","trim","_this4","d","_this5","transEvents","getTransitionEndEvents","called","fnOnce","setTimeout","style","update","scheduleUpdate","Boolean","innerHTML","compileTemplate","tabIndex","String","div","createElement","node","firstElementChild","setElementContent","getTitle","allowHtml","nodeType","innerText","_this6","el","triggers","setRootListener","_this7","events","handleEvent","e","modal","__vue__","method","id","_this8","documentElement","children","_this9","_this10","hover","_this11","modifiers","getOffset","flip","behavior","arrow","preventOverflow","padding","boundariesElement","onCreate","data","originalPlacement","handlePopperPlacementChange","onUpdate","arrowOffset","parseFloat","width","toUpperCase","call","cleanTipClass","tabClass","className","match","cls","initConfigAnimation","get"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport Popper from 'popper.js';\nimport BvEvent from './bv-event.class';\nimport noop from './noop';\nimport { from as arrayFrom } from './array';\nimport { closest, select, isVisible, isDisabled, getCS, addClass, removeClass, hasClass, setAttr, removeAttr, getAttr, eventOn, eventOff } from './dom';\nimport { isFunction, isNull, isNumber, isObject, isString, isUndefined } from './inspect';\nvar NAME = 'tooltip';\nvar CLASS_PREFIX = 'bs-tooltip';\nvar BS_CLASS_PREFIX_REGEX = new RegExp(\"\\\\b\".concat(CLASS_PREFIX, \"\\\\S+\"), 'g');\nvar TRANSITION_DURATION = 150; // Modal `$root` hidden event\n\nvar MODAL_CLOSE_EVENT = 'bv::modal::hidden'; // Modal container selector for appending tooltip/popover\n\nvar MODAL_SELECTOR = '.modal-content'; // For dropdown sniffing\n\nvar DROPDOWN_CLASS = 'dropdown';\nvar DROPDOWN_OPEN_SELECTOR = '.dropdown-menu.show';\nvar AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: 'right',\n  BOTTOM: 'bottom',\n  LEFT: 'left',\n  TOPLEFT: 'top',\n  TOPRIGHT: 'top',\n  RIGHTTOP: 'right',\n  RIGHTBOTTOM: 'right',\n  BOTTOMLEFT: 'bottom',\n  BOTTOMRIGHT: 'bottom',\n  LEFTTOP: 'left',\n  LEFTBOTTOM: 'left'\n};\nvar OffsetMap = {\n  AUTO: 0,\n  TOPLEFT: -1,\n  TOP: 0,\n  TOPRIGHT: +1,\n  RIGHTTOP: -1,\n  RIGHT: 0,\n  RIGHTBOTTOM: +1,\n  BOTTOMLEFT: -1,\n  BOTTOM: 0,\n  BOTTOMRIGHT: +1,\n  LEFTTOP: -1,\n  LEFT: 0,\n  LEFTBOTTOM: +1\n};\nvar HoverState = {\n  SHOW: 'show',\n  OUT: 'out'\n};\nvar ClassName = {\n  FADE: 'fade',\n  SHOW: 'show'\n};\nvar Selector = {\n  TOOLTIP: '.tooltip',\n  TOOLTIP_INNER: '.tooltip-inner',\n  ARROW: '.arrow' // Defaults\n\n};\nvar Defaults = {\n  animation: true,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' + '<div class=\"arrow\"></div>' + '<div class=\"tooltip-inner\"></div>' + '</div>',\n  trigger: 'hover focus',\n  title: '',\n  delay: 0,\n  html: false,\n  placement: 'top',\n  offset: 0,\n  arrowPadding: 6,\n  container: false,\n  fallbackPlacement: 'flip',\n  callbacks: {},\n  boundary: 'scrollParent',\n  boundaryPadding: 5,\n  variant: null,\n  customClass: null // Transition event names\n\n};\nvar TransitionEndEvents = {\n  WebkitTransition: ['webkitTransitionEnd'],\n  MozTransition: ['transitionend'],\n  OTransition: ['otransitionend', 'oTransitionEnd'],\n  transition: ['transitionend'] // Options for Native Event Listeners (since we never call preventDefault)\n\n};\nvar EvtOpts = {\n  passive: true,\n  capture: false // Client-side tip ID counter for aria-describedby attribute\n  // Each tooltip requires a unique client side ID\n\n};\nvar NEXTID = 1;\n/* istanbul ignore next */\n\nvar generateId = function generateId(name) {\n  return \"__BV_\".concat(name, \"_\").concat(NEXTID++, \"__\");\n};\n/*\n * ToolTip class definition\n */\n\n\nvar ToolTip =\n/*#__PURE__*/\nfunction () {\n  // Main constructor\n  function ToolTip(element, config, $parent) {\n    _classCallCheck(this, ToolTip);\n\n    // New tooltip object\n    this.$isEnabled = true;\n    this.$fadeTimeout = null;\n    this.$hoverTimeout = null;\n    this.$visibleInterval = null;\n    this.$hoverState = '';\n    this.$activeTrigger = {};\n    this.$popper = null;\n    this.$element = element;\n    this.$tip = null;\n    this.$id = generateId(this.constructor.NAME);\n    this.$parent = $parent || null;\n    this.$root = $parent && $parent.$root ? $parent.$root : null;\n    this.$routeWatcher = null; // We use a bound version of the following handlers for root/modal\n    // listeners to maintain the correct `this` context\n\n    this.$forceHide = this.forceHide.bind(this);\n    this.$doHide = this.doHide.bind(this);\n    this.$doShow = this.doShow.bind(this);\n    this.$doDisable = this.doDisable.bind(this);\n    this.$doEnable = this.doEnable.bind(this);\n    this._noop = noop.bind(this); // Set the configuration\n\n    this.updateConfig(config); // Destroy ourselves if the parent is destroyed\n\n    if ($parent) {\n      $parent.$once('hook:beforeDestroy', this.destroy.bind(this));\n    }\n  } // NOTE: Overridden by PopOver class\n\n\n  _createClass(ToolTip, [{\n    key: \"updateConfig\",\n    // Update config\n    value: function updateConfig(config) {\n      // Merge config into defaults. We use `this` here because PopOver overrides Default\n      var updatedConfig = _objectSpread({}, this.constructor.Default, {}, config); // Sanitize delay\n\n\n      if (config.delay && isNumber(config.delay)) {\n        /* istanbul ignore next */\n        updatedConfig.delay = {\n          show: config.delay,\n          hide: config.delay\n        };\n      } // Title for tooltip and popover\n\n\n      if (config.title && isNumber(config.title)) {\n        /* istanbul ignore next */\n        updatedConfig.title = config.title.toString();\n      } // Content only for popover\n\n\n      if (config.content && isNumber(config.content)) {\n        /* istanbul ignore next */\n        updatedConfig.content = config.content.toString();\n      } // Hide element original title if needed\n\n\n      this.fixTitle(); // Update the config\n\n      this.$config = updatedConfig; // Stop/Restart listening\n\n      this.unListen();\n      this.listen();\n    } // Destroy this instance\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Stop listening to trigger events\n      this.unListen(); // Disable while open listeners/watchers\n\n      this.setWhileOpenListeners(false); // Clear any timeouts\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null; // Remove popper\n\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n\n      this.$popper = null; // Remove tip from document\n\n      if (this.$tip && this.$tip.parentElement) {\n        this.$tip.parentElement.removeChild(this.$tip);\n      }\n\n      this.$tip = null; // Null out other properties\n\n      this.$id = null;\n      this.$isEnabled = null;\n      this.$parent = null;\n      this.$root = null;\n      this.$element = null;\n      this.$config = null;\n      this.$hoverState = null;\n      this.$activeTrigger = null;\n      this.$forceHide = null;\n      this.$doHide = null;\n      this.$doShow = null;\n      this.$doDisable = null;\n      this.$doEnable = null;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      // Create a non-cancelable BvEvent\n      var enabledEvt = new BvEvent('enabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = true;\n      this.emitEvent(enabledEvt);\n    }\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      // Create a non-cancelable BvEvent\n      var disabledEvt = new BvEvent('disabled', {\n        cancelable: false,\n        target: this.$element,\n        relatedTarget: null\n      });\n      this.$isEnabled = false;\n      this.emitEvent(disabledEvt);\n    } // Click toggler\n\n  }, {\n    key: \"toggle\",\n    value: function toggle(event) {\n      if (!this.$isEnabled) {\n        /* istanbul ignore next */\n        return;\n      } // Prevent showing if tip/popover is on a dropdown and the menu is open\n\n\n      if (this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      }\n      /* istanbul ignore else */\n\n\n      if (event) {\n        this.$activeTrigger.click = !this.$activeTrigger.click;\n\n        if (this.isWithActiveTrigger()) {\n          this.enter(null);\n        } else {\n          this.leave(null);\n        }\n      } else {\n        if (hasClass(this.getTipElement(), ClassName.SHOW)) {\n          this.leave(null);\n        } else {\n          this.enter(null);\n        }\n      }\n    } // Show tooltip\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this = this;\n\n      if (!document.body.contains(this.$element) || !isVisible(this.$element)) {\n        // If trigger element isn't in the DOM or is not visible\n        return;\n      } // Prevent showing if tip/popover is on a dropdown and the menu is open\n\n\n      if (this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Build tooltip element (also sets this.$tip)\n\n\n      var tip = this.getTipElement();\n      this.fixTitle();\n      this.setContent(tip);\n\n      if (!this.isWithContent(tip)) {\n        // If no content, don't bother showing\n\n        /* istanbul ignore next */\n        this.$tip = null;\n        /* istanbul ignore next */\n\n        return;\n      } // Set ID on tip and aria-describedby on element\n\n\n      setAttr(tip, 'id', this.$id);\n      this.addAriaDescribedby(); // Set animation on or off\n\n      if (this.$config.animation) {\n        addClass(tip, ClassName.FADE);\n      } else {\n        removeClass(tip, ClassName.FADE);\n      }\n\n      var placement = this.getPlacement();\n      var attachment = this.constructor.getAttachment(placement);\n      this.addAttachmentClass(attachment); // Create a cancelable BvEvent\n\n      var showEvt = new BvEvent('show', {\n        cancelable: true,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(showEvt);\n\n      if (showEvt.defaultPrevented) {\n        // Don't show if event cancelled\n        this.$tip = null;\n        return;\n      } // Insert tooltip if needed\n\n\n      var container = this.getContainer();\n\n      if (!document.body.contains(tip)) {\n        container.appendChild(tip);\n      } // Refresh popper\n\n\n      this.removePopper();\n      this.$popper = new Popper(this.$element, tip, this.getPopperConfig(placement, tip)); // Transitionend callback\n\n      var complete = function complete() {\n        if (_this.$config.animation) {\n          _this.fixTransition(tip);\n        }\n\n        var prevHoverState = _this.$hoverState;\n        _this.$hoverState = null;\n\n        if (prevHoverState === HoverState.OUT) {\n          _this.leave(null);\n        } // Create a non-cancelable BvEvent\n\n\n        var shownEvt = new BvEvent('shown', {\n          cancelable: false,\n          target: _this.$element,\n          relatedTarget: tip\n        });\n\n        _this.emitEvent(shownEvt);\n      }; // Enable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(true); // Show tip\n\n      addClass(tip, ClassName.SHOW); // Start the transition/animation\n\n      this.transitionOnce(tip, complete);\n    } // Handler for periodic visibility check\n\n  }, {\n    key: \"visibleCheck\",\n    value: function visibleCheck(on) {\n      var _this2 = this;\n\n      clearInterval(this.$visibleInterval);\n      this.$visibleInterval = null;\n\n      if (on) {\n        this.$visibleInterval = setInterval(function () {\n          var tip = _this2.$tip;\n\n          if (tip && !isVisible(_this2.$element) && hasClass(tip, ClassName.SHOW)) {\n            // Element is no longer visible, so force-hide the tooltip\n            _this2.forceHide();\n          }\n        }, 100);\n      }\n    }\n  }, {\n    key: \"setWhileOpenListeners\",\n    value: function setWhileOpenListeners(on) {\n      // Modal close events\n      this.setModalListener(on); // Dropdown open events (if we are attached to a dropdown)\n\n      this.setDropdownListener(on); // Periodic $element visibility check\n      // For handling when tip is in <keepalive>, tabs, carousel, etc\n\n      this.visibleCheck(on); // On-touch start listeners\n\n      this.setOnTouchStartListener(on);\n\n      if (on && /(focus|blur)/.test(this.$config.trigger)) {\n        // If focus moves between trigger element and tip container, don't close\n        eventOn(this.$tip, 'focusout', this, EvtOpts);\n      } else {\n        eventOff(this.$tip, 'focusout', this, EvtOpts);\n      }\n    } // Force hide of tip (internal method)\n\n  }, {\n    key: \"forceHide\",\n    value: function forceHide() {\n      if (!this.$tip || !hasClass(this.$tip, ClassName.SHOW)) {\n        /* istanbul ignore next */\n        return;\n      } // Disable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(false); // Clear any hover enter/leave event\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverTimeout = null;\n      this.$hoverState = '';\n      this.$activeTrigger = {}; // Hide the tip\n\n      this.hide(null, true);\n    } // Hide tooltip\n\n  }, {\n    key: \"hide\",\n    value: function hide(callback, force) {\n      var _this3 = this;\n\n      var tip = this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return;\n      } // Create a cancelable BvEvent\n\n\n      var hideEvt = new BvEvent('hide', {\n        // We disable cancelling if force is true\n        cancelable: !force,\n        target: this.$element,\n        relatedTarget: tip\n      });\n      this.emitEvent(hideEvt);\n\n      if (hideEvt.defaultPrevented) {\n        // Don't hide if event cancelled\n        return;\n      } // Transitionend callback\n\n\n      var complete = function complete() {\n        if (_this3.$hoverState !== HoverState.SHOW && tip.parentNode) {\n          // Remove tip from DOM, and force recompile on next show\n          tip.parentNode.removeChild(tip);\n\n          _this3.removeAriaDescribedby();\n\n          _this3.removePopper();\n\n          _this3.$tip = null;\n        }\n\n        if (callback) {\n          /* istanbul ignore next */\n          callback();\n        } // Create a non-cancelable BvEvent\n\n\n        var hiddenEvt = new BvEvent('hidden', {\n          cancelable: false,\n          target: _this3.$element,\n          relatedTarget: null\n        });\n\n        _this3.emitEvent(hiddenEvt);\n      }; // Disable while open listeners/watchers\n\n\n      this.setWhileOpenListeners(false); // If forced close, disable animation\n\n      if (force) {\n        removeClass(tip, ClassName.FADE);\n      } // Hide tip\n\n\n      removeClass(tip, ClassName.SHOW); // Clear any active triggers\n\n      this.$activeTrigger = {}; // Start the hide transition\n\n      this.transitionOnce(tip, complete);\n      this.$hoverState = '';\n    }\n  }, {\n    key: \"emitEvent\",\n    value: function emitEvent(evt) {\n      var evtName = evt.type;\n      var $root = this.$root;\n\n      if ($root && $root.$emit) {\n        // Emit an event on $root\n        $root.$emit(\"bv::\".concat(this.constructor.NAME, \"::\").concat(evtName), evt);\n      }\n\n      var callbacks = this.$config.callbacks || {};\n\n      if (isFunction(callbacks[evtName])) {\n        callbacks[evtName](evt);\n      }\n    }\n  }, {\n    key: \"getContainer\",\n    value: function getContainer() {\n      var container = this.$config.container;\n      var body = document.body; // If we are in a modal, we append to the modal instead of body,\n      // unless a container is specified\n\n      return container === false ? closest(MODAL_SELECTOR, this.$element) || body : select(container, body) || body;\n    } // Will be overridden by PopOver if needed\n\n  }, {\n    key: \"addAriaDescribedby\",\n    value: function addAriaDescribedby() {\n      // Add aria-describedby on trigger element, without removing any other IDs\n      var desc = getAttr(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).concat(this.$id).join(' ').trim();\n      setAttr(this.$element, 'aria-describedby', desc);\n    } // Will be overridden by PopOver if needed\n\n  }, {\n    key: \"removeAriaDescribedby\",\n    value: function removeAriaDescribedby() {\n      var _this4 = this;\n\n      var desc = getAttr(this.$element, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).filter(function (d) {\n        return d !== _this4.$id;\n      }).join(' ').trim();\n\n      if (desc) {\n        /* istanbul ignore next */\n        setAttr(this.$element, 'aria-describedby', desc);\n      } else {\n        removeAttr(this.$element, 'aria-describedby');\n      }\n    }\n  }, {\n    key: \"removePopper\",\n    value: function removePopper() {\n      if (this.$popper) {\n        this.$popper.destroy();\n      }\n\n      this.$popper = null;\n    }\n  }, {\n    key: \"transitionOnce\",\n    value: function transitionOnce(tip, complete) {\n      var _this5 = this;\n\n      var transEvents = this.getTransitionEndEvents();\n      var called = false;\n      clearTimeout(this.$fadeTimeout);\n      this.$fadeTimeout = null;\n\n      var fnOnce = function fnOnce() {\n        if (called) {\n          /* istanbul ignore next */\n          return;\n        }\n\n        called = true;\n        clearTimeout(_this5.$fadeTimeout);\n        _this5.$fadeTimeout = null;\n        transEvents.forEach(function (evtName) {\n          eventOff(tip, evtName, fnOnce, EvtOpts);\n        }); // Call complete callback\n\n        complete();\n      };\n\n      if (hasClass(tip, ClassName.FADE)) {\n        transEvents.forEach(function (evtName) {\n          eventOn(tip, evtName, fnOnce, EvtOpts);\n        }); // Fallback to setTimeout()\n\n        this.$fadeTimeout = setTimeout(fnOnce, TRANSITION_DURATION);\n      } else {\n        fnOnce();\n      }\n    } // What transitionend event(s) to use? (returns array of event names)\n\n  }, {\n    key: \"getTransitionEndEvents\",\n    value: function getTransitionEndEvents() {\n      for (var name in TransitionEndEvents) {\n        if (!isUndefined(this.$element.style[name])) {\n          return TransitionEndEvents[name];\n        }\n      } // Fallback\n\n      /* istanbul ignore next */\n\n\n      return [];\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (!isNull(this.$popper)) {\n        this.$popper.scheduleUpdate();\n      }\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"isWithContent\",\n    value: function isWithContent(tip) {\n      tip = tip || this.$tip;\n\n      if (!tip) {\n        /* istanbul ignore next */\n        return false;\n      }\n\n      return Boolean((select(Selector.TOOLTIP_INNER, tip) || {}).innerHTML);\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"addAttachmentClass\",\n    value: function addAttachmentClass(attachment) {\n      addClass(this.getTipElement(), \"\".concat(CLASS_PREFIX, \"-\").concat(attachment));\n    }\n  }, {\n    key: \"getTipElement\",\n    value: function getTipElement() {\n      if (!this.$tip) {\n        // Try and compile user supplied template, or fallback to default template\n        this.$tip = this.compileTemplate(this.$config.template) || this.compileTemplate(this.constructor.Default.template);\n      } // Add tab index so tip can be focused, and to allow it to be\n      // set as relatedTarget in focusin/out events\n\n\n      this.$tip.tabIndex = -1; // Add variant if specified\n\n      if (this.$config.variant) {\n        addClass(this.$tip, \"b-\".concat(this.constructor.NAME, \"-\").concat(this.$config.variant));\n      }\n\n      if (this.$config.customClass) {\n        addClass(this.$tip, String(this.$config.customClass));\n      }\n\n      return this.$tip;\n    }\n  }, {\n    key: \"compileTemplate\",\n    value: function compileTemplate(html) {\n      if (!html || !isString(html)) {\n        /* istanbul ignore next */\n        return null;\n      }\n\n      var div = document.createElement('div');\n      div.innerHTML = html.trim();\n      var node = div.firstElementChild ? div.removeChild(div.firstElementChild) : null;\n      div = null;\n      return node;\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"setContent\",\n    value: function setContent(tip) {\n      this.setElementContent(select(Selector.TOOLTIP_INNER, tip), this.getTitle());\n      removeClass(tip, ClassName.FADE);\n      removeClass(tip, ClassName.SHOW);\n    }\n  }, {\n    key: \"setElementContent\",\n    value: function setElementContent(container, content) {\n      if (!container) {\n        // If container element doesn't exist, just return\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var allowHtml = this.$config.html;\n\n      if (isObject(content) && content.nodeType) {\n        // Content is a DOM node\n        if (allowHtml) {\n          if (content.parentElement !== container) {\n            container.innerHTML = '';\n            container.appendChild(content);\n          }\n        } else {\n          /* istanbul ignore next */\n          container.innerText = content.innerText;\n        }\n      } else {\n        // We have a plain HTML string or Text\n        container[allowHtml ? 'innerHTML' : 'innerText'] = content;\n      }\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      var title = this.$config.title || '';\n\n      if (isFunction(title)) {\n        // Call the function to get the title value\n\n        /* istanbul ignore next */\n        title = title(this.$element);\n      }\n\n      if (isObject(title) && title.nodeType && !title.innerHTML.trim()) {\n        // We have a DOM node, but without inner content,\n        // so just return empty string\n\n        /* istanbul ignore next */\n        title = '';\n      }\n\n      if (isString(title)) {\n        title = title.trim();\n      }\n\n      if (!title) {\n        // If an explicit title is not given, try element's title attributes\n        title = getAttr(this.$element, 'title') || getAttr(this.$element, 'data-original-title') || '';\n        title = title.trim();\n      }\n\n      return title;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this6 = this;\n\n      var el = this.$element;\n      /* istanbul ignore next */\n\n      if (!el) {\n        return;\n      }\n\n      var triggers = this.$config.trigger.trim().split(/\\s+/); // Listen for global show/hide events\n\n      this.setRootListener(true); // Using `this` as the handler will get automatically directed to\n      // this.handleEvent and maintain our binding to `this`\n\n      triggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          eventOn(el, 'click', _this6, EvtOpts);\n        } else if (trigger === 'focus') {\n          eventOn(el, 'focusin', _this6, EvtOpts);\n          eventOn(el, 'focusout', _this6, EvtOpts);\n        } else if (trigger === 'blur') {\n          // Used to close $tip when element looses focus\n          eventOn(el, 'focusout', _this6, EvtOpts);\n        } else if (trigger === 'hover') {\n          eventOn(el, 'mouseenter', _this6, EvtOpts);\n          eventOn(el, 'mouseleave', _this6, EvtOpts);\n        }\n      }, this);\n    }\n  }, {\n    key: \"unListen\",\n    value: function unListen() {\n      var _this7 = this;\n\n      var el = this.$element;\n      /* istanbul ignore next */\n\n      if (!el) {\n        return;\n      }\n\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave']; // Using `this` as the handler will get automatically directed to this.handleEvent\n\n      events.forEach(function (evt) {\n        eventOff(el, evt, _this7, EvtOpts);\n      }, this); // Stop listening for global show/hide/enable/disable events\n\n      this.setRootListener(false);\n    } // This special method allows us to use `this` as the event handlers\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      // If disabled, don't do anything\n      // If tip is shown before element gets disabled, then tip will not\n      // close until no longer disabled or forcefully closed\n      if (isDisabled(this.$element)) {\n        /* istanbul ignore next */\n        return;\n      } // Exit if not enabled\n\n\n      if (!this.$isEnabled) {\n        return;\n      } // Prevent showing if tip/popover is on a dropdown and the menu is open\n\n\n      if (this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      var type = e.type;\n      var target = e.target;\n      var relatedTarget = e.relatedTarget;\n      var $element = this.$element;\n      var $tip = this.$tip;\n\n      if (type === 'click') {\n        this.toggle(e);\n      } else if (type === 'focusin' || type === 'mouseenter') {\n        this.enter(e);\n      } else if (type === 'focusout') {\n        // `target` is the element which is loosing focus and\n        // `relatedTarget` is the element gaining focus\n        // If focus moves from `$element` to `$tip`, don't trigger a leave\n        if ($tip && $element && $element.contains(target) && $tip.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // If focus moves from `$tip` to `$element`, don't trigger a leave\n\n\n        if ($tip && $element && $tip.contains(target) && $element.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // If focus moves within `$tip`, don't trigger a leave\n\n\n        if ($tip && $tip.contains(target) && $tip.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // If focus moves within `$element`, don't trigger a leave\n\n\n        if ($element && $element.contains(target) && $element.contains(relatedTarget)) {\n          /* istanbul ignore next */\n          return;\n        } // Otherwise trigger a leave\n\n\n        this.leave(e);\n      } else if (type === 'mouseleave') {\n        this.leave(e);\n      }\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"setModalListener\",\n    value: function setModalListener(on) {\n      var el = this.$element;\n\n      if (!el || !this.$root) {\n        return;\n      }\n\n      var modal = closest(MODAL_SELECTOR, el); // If we are not in a modal, don't worry\n\n      if (!modal) {\n        return;\n      } // We can listen for modal hidden events on `$root`\n\n\n      this.$root[on ? '$on' : '$off'](MODAL_CLOSE_EVENT, this.$forceHide);\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"setDropdownListener\",\n    value: function setDropdownListener(on) {\n      var el = this.$element;\n\n      if (!el || !this.$root) {\n        return;\n      } // If we are not on a dropdown menu, don't worry\n\n\n      if (!hasClass(el, DROPDOWN_CLASS)) {\n        return;\n      } // We can listen for dropdown shown events on it's instance\n\n\n      if (el && el.__vue__) {\n        el.__vue__[on ? '$on' : '$off']('shown', this.$forceHide);\n      }\n    }\n  }, {\n    key: \"setRootListener\",\n    value: function setRootListener(on) {\n      // Listen for global `bv::{hide|show}::{tooltip|popover}` hide request event\n      var $root = this.$root;\n\n      if ($root) {\n        var method = on ? '$on' : '$off';\n        $root[method](\"bv::hide::\".concat(this.constructor.NAME), this.$doHide);\n        $root[method](\"bv::show::\".concat(this.constructor.NAME), this.$doShow);\n        $root[method](\"bv::disable::\".concat(this.constructor.NAME), this.$doDisable);\n        $root[method](\"bv::enable::\".concat(this.constructor.NAME), this.$doEnable);\n      }\n    }\n  }, {\n    key: \"dropdownOpen\",\n    value: function dropdownOpen() {\n      // Returns true if trigger is a dropdown and the dropdown menu is open\n      return hasClass(this.$element, DROPDOWN_CLASS) && select(DROPDOWN_OPEN_SELECTOR, this.$element);\n    } // Programmatically hide tooltip or popover\n\n  }, {\n    key: \"doHide\",\n    value: function doHide(id) {\n      if (!id) {\n        // Close all tooltips or popovers\n        this.forceHide();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Close this specific tooltip or popover\n        this.hide();\n      }\n    } // Programmatically show tooltip or popover\n\n  }, {\n    key: \"doShow\",\n    value: function doShow(id) {\n      if (!id) {\n        // Open all tooltips or popovers\n        this.show();\n      } else if (id && this.$element && this.$element.id && this.$element.id === id) {\n        // Show this specific tooltip or popover\n        this.show();\n      }\n    } // Programmatically disable tooltip or popover\n\n  }, {\n    key: \"doDisable\",\n    value: function doDisable(id) {\n      if (!id) {\n        // Disable all tooltips or popovers\n        this.disable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Disable this specific tooltip or popover\n        this.disable();\n      }\n    } // Programmatically enable tooltip or popover\n\n  }, {\n    key: \"doEnable\",\n    value: function doEnable(id) {\n      if (!id) {\n        // Enable all tooltips or popovers\n        this.enable();\n      } else if (this.$element && this.$element.id && this.$element.id === id) {\n        // Enable this specific tooltip or popover\n        this.enable();\n      }\n    }\n  }, {\n    key: \"setOnTouchStartListener\",\n    value: function setOnTouchStartListener(on) {\n      var _this8 = this;\n\n      // If this is a touch-enabled device we add extra empty\n      // `mouseover` listeners to the body's immediate children\n      // Only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        /* istanbul ignore next: JSDOM does not support `ontouchstart` event */\n        arrayFrom(document.body.children).forEach(function (el) {\n          if (on) {\n            eventOn(el, 'mouseover', _this8._noop);\n          } else {\n            eventOff(el, 'mouseover', _this8._noop);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"fixTitle\",\n    value: function fixTitle() {\n      var el = this.$element;\n\n      if (getAttr(el, 'title') || !isString(getAttr(el, 'data-original-title'))) {\n        setAttr(el, 'data-original-title', getAttr(el, 'title') || '');\n        setAttr(el, 'title', '');\n      }\n    } // Enter handler\n\n  }, {\n    key: \"enter\",\n    value: function enter(e) {\n      var _this9 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusin' ? 'focus' : 'hover'] = true;\n      }\n\n      if (hasClass(this.getTipElement(), ClassName.SHOW) || this.$hoverState === HoverState.SHOW) {\n        this.$hoverState = HoverState.SHOW;\n        return;\n      }\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.SHOW;\n\n      if (!this.$config.delay || !this.$config.delay.show) {\n        this.show();\n        return;\n      }\n\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this9.$hoverState === HoverState.SHOW) {\n          _this9.show();\n        }\n      }, this.$config.delay.show);\n    } // Leave handler\n\n  }, {\n    key: \"leave\",\n    value: function leave(e) {\n      var _this10 = this;\n\n      if (e) {\n        this.$activeTrigger[e.type === 'focusout' ? 'focus' : 'hover'] = false;\n\n        if (e.type === 'focusout' && /blur/.test(this.$config.trigger)) {\n          // Special case for `blur`: we clear out the other triggers\n          this.$activeTrigger.click = false;\n          this.$activeTrigger.hover = false;\n        }\n      }\n\n      if (this.isWithActiveTrigger()) {\n        return;\n      }\n\n      clearTimeout(this.$hoverTimeout);\n      this.$hoverState = HoverState.OUT;\n\n      if (!this.$config.delay || !this.$config.delay.hide) {\n        this.hide();\n        return;\n      }\n\n      this.$hoverTimeout = setTimeout(function () {\n        if (_this10.$hoverState === HoverState.OUT) {\n          _this10.hide();\n        }\n      }, this.$config.delay.hide);\n    }\n  }, {\n    key: \"getPopperConfig\",\n    value: function getPopperConfig(placement, tip) {\n      var _this11 = this;\n\n      return {\n        placement: this.constructor.getAttachment(placement),\n        modifiers: {\n          offset: {\n            offset: this.getOffset(placement, tip)\n          },\n          flip: {\n            behavior: this.$config.fallbackPlacement\n          },\n          arrow: {\n            element: '.arrow'\n          },\n          preventOverflow: {\n            padding: this.$config.boundaryPadding,\n            boundariesElement: this.$config.boundary\n          }\n        },\n        onCreate: function onCreate(data) {\n          // Handle flipping arrow classes\n\n          /* istanbul ignore next */\n          if (data.originalPlacement !== data.placement) {\n            _this11.handlePopperPlacementChange(data);\n          }\n        },\n        onUpdate: function onUpdate(data) {\n          // Handle flipping arrow classes\n\n          /* istanbul ignore next */\n          _this11.handlePopperPlacementChange(data);\n        }\n      };\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"getOffset\",\n    value: function getOffset(placement, tip) {\n      if (!this.$config.offset) {\n        var arrow = select(Selector.ARROW, tip);\n        var arrowOffset = parseFloat(getCS(arrow).width) + parseFloat(this.$config.arrowPadding);\n\n        switch (OffsetMap[placement.toUpperCase()]) {\n          case +1:\n            return \"+50%p - \".concat(arrowOffset, \"px\");\n\n          case -1:\n            return \"-50%p + \".concat(arrowOffset, \"px\");\n\n          default:\n            return 0;\n        }\n      }\n\n      return this.$config.offset;\n    }\n  }, {\n    key: \"getPlacement\",\n    value: function getPlacement() {\n      var placement = this.$config.placement;\n\n      if (isFunction(placement)) {\n        /* istanbul ignore next */\n        return placement.call(this, this.$tip, this.$element);\n      }\n\n      return placement;\n    }\n  }, {\n    key: \"isWithActiveTrigger\",\n    value: function isWithActiveTrigger() {\n      for (var trigger in this.$activeTrigger) {\n        if (this.$activeTrigger[trigger]) {\n          return true;\n        }\n      }\n\n      return false;\n    } // NOTE: Overridden by PopOver class\n\n    /* istanbul ignore next */\n\n  }, {\n    key: \"cleanTipClass\",\n    value: function cleanTipClass() {\n      var tip = this.getTipElement();\n      var tabClass = tip.className.match(BS_CLASS_PREFIX_REGEX);\n\n      if (!isNull(tabClass) && tabClass.length > 0) {\n        tabClass.forEach(function (cls) {\n          removeClass(tip, cls);\n        });\n      }\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"handlePopperPlacementChange\",\n    value: function handlePopperPlacementChange(data) {\n      this.cleanTipClass();\n      this.addAttachmentClass(this.constructor.getAttachment(data.placement));\n    }\n    /* istanbul ignore next */\n\n  }, {\n    key: \"fixTransition\",\n    value: function fixTransition(tip) {\n      var initConfigAnimation = this.$config.animation || false;\n\n      if (!isNull(getAttr(tip, 'x-placement'))) {\n        return;\n      }\n\n      removeClass(tip, ClassName.FADE);\n      this.$config.animation = false;\n      this.hide();\n      this.show();\n      this.$config.animation = initConfigAnimation;\n    }\n  }], [{\n    key: \"getAttachment\",\n    value: function getAttachment(placement) {\n      return AttachmentMap[placement.toUpperCase()];\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Defaults;\n    } // NOTE: Overridden by PopOver class\n\n  }, {\n    key: \"NAME\",\n    get: function get() {\n      return NAME;\n    }\n  }]);\n\n  return ToolTip;\n}();\n\nexport default ToolTip;"]},"metadata":{},"sourceType":"module"}