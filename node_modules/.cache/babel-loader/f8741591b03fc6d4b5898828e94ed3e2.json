{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport Vue from '../../utils/vue';\nimport { BImg } from './img';\nimport { getComponentConfig } from '../../utils/config';\nimport { getBCR, eventOn, eventOff } from '../../utils/dom';\nimport { hasIntersectionObserverSupport } from '../../utils/env';\nvar NAME = 'BImgLazy';\nvar THROTTLE = 100;\nvar EVENT_OPTIONS = {\n  passive: true,\n  capture: false\n};\nexport var props = {\n  src: {\n    type: String,\n    default: null,\n    required: true\n  },\n  alt: {\n    type: String,\n    default: null\n  },\n  width: {\n    type: [Number, String],\n    default: null\n  },\n  height: {\n    type: [Number, String],\n    default: null\n  },\n  blankSrc: {\n    // If null, a blank image is generated\n    type: String,\n    default: null\n  },\n  blankColor: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'blankColor');\n    }\n  },\n  blankWidth: {\n    type: [Number, String],\n    default: null\n  },\n  blankHeight: {\n    type: [Number, String],\n    default: null\n  },\n  show: {\n    type: Boolean,\n    default: false\n  },\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  fluidGrow: {\n    type: Boolean,\n    default: false\n  },\n  block: {\n    type: Boolean,\n    default: false\n  },\n  thumbnail: {\n    type: Boolean,\n    default: false\n  },\n  rounded: {\n    type: [Boolean, String],\n    default: false\n  },\n  left: {\n    type: Boolean,\n    default: false\n  },\n  right: {\n    type: Boolean,\n    default: false\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  offset: {\n    type: [Number, String],\n    default: 360\n  },\n  throttle: {\n    type: [Number, String],\n    default: THROTTLE\n  } // @vue/component\n\n};\nexport var BImgLazy = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  props: props,\n  data: function data() {\n    return {\n      isShown: false,\n      scrollTimeout: null,\n      observer: null\n    };\n  },\n  computed: {\n    computedSrc: function computedSrc() {\n      return !this.blankSrc || this.isShown ? this.src : this.blankSrc;\n    },\n    computedBlank: function computedBlank() {\n      return !(this.isShown || this.blankSrc);\n    },\n    computedWidth: function computedWidth() {\n      return this.isShown ? this.width : this.blankWidth || this.width;\n    },\n    computedHeight: function computedHeight() {\n      return this.isShown ? this.height : this.blankHeight || this.height;\n    }\n  },\n  watch: {\n    show: function show(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.isShown = newVal;\n\n        if (!newVal) {\n          // Make sure listeners are re-enabled if img is force set to blank\n          this.setListeners(true);\n        }\n      }\n    },\n    isShown: function isShown(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        // Update synched show prop\n        this.$emit('update:show', newVal);\n      }\n    }\n  },\n  created: function created() {\n    this.isShown = this.show;\n  },\n  mounted: function mounted() {\n    if (this.isShown) {\n      this.setListeners(false);\n    } else {\n      this.setListeners(true);\n    }\n  },\n  activated: function activated()\n  /* istanbul ignore next */\n  {\n    if (!this.isShown) {\n      this.setListeners(true);\n    }\n  },\n  deactivated: function deactivated()\n  /* istanbul ignore next */\n  {\n    this.setListeners(false);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.setListeners(false);\n  },\n  methods: {\n    setListeners: function setListeners(on) {\n      var _this = this;\n\n      if (this.scrollTimeout) {\n        clearTimeout(this.scrollTimeout);\n        this.scrollTimeout = null;\n      }\n      /* istanbul ignore next: JSDOM doen't support IntersectionObserver */\n\n\n      if (this.observer) {\n        this.observer.unobserve(this.$el);\n        this.observer.disconnect();\n        this.observer = null;\n      }\n\n      var winEvts = ['scroll', 'resize', 'orientationchange'];\n      winEvts.forEach(function (evt) {\n        return eventOff(window, evt, _this.onScroll, EVENT_OPTIONS);\n      });\n      eventOff(this.$el, 'load', this.checkView, EVENT_OPTIONS);\n      eventOff(document, 'transitionend', this.onScroll, EVENT_OPTIONS);\n\n      if (on) {\n        /* istanbul ignore if: JSDOM doen't support IntersectionObserver */\n        if (hasIntersectionObserverSupport) {\n          this.observer = new IntersectionObserver(this.doShow, {\n            root: null,\n            // viewport\n            rootMargin: \"\".concat(parseInt(this.offset, 10) || 0, \"px\"),\n            threshold: 0 // percent intersection\n\n          });\n          this.observer.observe(this.$el);\n        } else {\n          // Fallback to scroll/etc events\n          winEvts.forEach(function (evt) {\n            return eventOn(window, evt, _this.onScroll, EVENT_OPTIONS);\n          });\n          eventOn(this.$el, 'load', this.checkView, EVENT_OPTIONS);\n          eventOn(document, 'transitionend', this.onScroll, EVENT_OPTIONS);\n        }\n      }\n    },\n    doShow: function doShow(entries) {\n      if (entries && (entries[0].isIntersecting || entries[0].intersectionRatio > 0.0)) {\n        this.isShown = true;\n        this.setListeners(false);\n      }\n    },\n    checkView: function checkView() {\n      // check bounding box + offset to see if we should show\n\n      /* istanbul ignore next: should rarely occur */\n      if (this.isShown) {\n        this.setListeners(false);\n        return;\n      }\n\n      var offset = parseInt(this.offset, 10) || 0;\n      var docElement = document.documentElement;\n      var view = {\n        l: 0 - offset,\n        t: 0 - offset,\n        b: docElement.clientHeight + offset,\n        r: docElement.clientWidth + offset // JSDOM Doesn't support BCR, but we fake it in the tests\n\n      };\n      var box = getBCR(this.$el);\n\n      if (box.right >= view.l && box.bottom >= view.t && box.left <= view.r && box.top <= view.b) {\n        // image is in view (or about to be in view)\n        this.doShow([{\n          isIntersecting: true\n        }]);\n      }\n    },\n    onScroll: function onScroll() {\n      /* istanbul ignore if: should rarely occur */\n      if (this.isShown) {\n        this.setListeners(false);\n      } else {\n        clearTimeout(this.scrollTimeout);\n        this.scrollTimeout = setTimeout(this.checkView, parseInt(this.throttle, 10) || THROTTLE);\n      }\n    }\n  },\n  render: function render(h) {\n    return h(BImg, {\n      props: {\n        // Computed value props\n        src: this.computedSrc,\n        blank: this.computedBlank,\n        width: this.computedWidth,\n        height: this.computedHeight,\n        // Passthough props\n        alt: this.alt,\n        blankColor: this.blankColor,\n        fluid: this.fluid,\n        fluidGrow: this.fluidGrow,\n        block: this.block,\n        thumbnail: this.thumbnail,\n        rounded: this.rounded,\n        left: this.left,\n        right: this.right,\n        center: this.center\n      }\n    });\n  }\n});\nexport default BImgLazy;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/TO3/ecommercevuefirestore/node_modules/bootstrap-vue/esm/components/image/img-lazy.js"],"names":["Vue","BImg","getComponentConfig","getBCR","eventOn","eventOff","hasIntersectionObserverSupport","NAME","THROTTLE","EVENT_OPTIONS","passive","capture","props","src","type","String","default","required","alt","width","Number","height","blankSrc","blankColor","_default","blankWidth","blankHeight","show","Boolean","fluid","fluidGrow","block","thumbnail","rounded","left","right","center","offset","throttle","BImgLazy","extend","name","data","isShown","scrollTimeout","observer","computed","computedSrc","computedBlank","computedWidth","computedHeight","watch","newVal","oldVal","setListeners","$emit","created","mounted","activated","deactivated","beforeDestroy","methods","on","_this","clearTimeout","unobserve","$el","disconnect","winEvts","forEach","evt","window","onScroll","checkView","document","IntersectionObserver","doShow","root","rootMargin","concat","parseInt","threshold","observe","entries","isIntersecting","intersectionRatio","docElement","documentElement","view","l","t","b","clientHeight","r","clientWidth","box","bottom","top","setTimeout","render","h","blank"],"mappings":"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","sourcesContent":["import Vue from '../../utils/vue';\nimport { BImg } from './img';\nimport { getComponentConfig } from '../../utils/config';\nimport { getBCR, eventOn, eventOff } from '../../utils/dom';\nimport { hasIntersectionObserverSupport } from '../../utils/env';\nvar NAME = 'BImgLazy';\nvar THROTTLE = 100;\nvar EVENT_OPTIONS = {\n  passive: true,\n  capture: false\n};\nexport var props = {\n  src: {\n    type: String,\n    default: null,\n    required: true\n  },\n  alt: {\n    type: String,\n    default: null\n  },\n  width: {\n    type: [Number, String],\n    default: null\n  },\n  height: {\n    type: [Number, String],\n    default: null\n  },\n  blankSrc: {\n    // If null, a blank image is generated\n    type: String,\n    default: null\n  },\n  blankColor: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'blankColor');\n    }\n  },\n  blankWidth: {\n    type: [Number, String],\n    default: null\n  },\n  blankHeight: {\n    type: [Number, String],\n    default: null\n  },\n  show: {\n    type: Boolean,\n    default: false\n  },\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  fluidGrow: {\n    type: Boolean,\n    default: false\n  },\n  block: {\n    type: Boolean,\n    default: false\n  },\n  thumbnail: {\n    type: Boolean,\n    default: false\n  },\n  rounded: {\n    type: [Boolean, String],\n    default: false\n  },\n  left: {\n    type: Boolean,\n    default: false\n  },\n  right: {\n    type: Boolean,\n    default: false\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  offset: {\n    type: [Number, String],\n    default: 360\n  },\n  throttle: {\n    type: [Number, String],\n    default: THROTTLE\n  } // @vue/component\n\n};\nexport var BImgLazy =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  props: props,\n  data: function data() {\n    return {\n      isShown: false,\n      scrollTimeout: null,\n      observer: null\n    };\n  },\n  computed: {\n    computedSrc: function computedSrc() {\n      return !this.blankSrc || this.isShown ? this.src : this.blankSrc;\n    },\n    computedBlank: function computedBlank() {\n      return !(this.isShown || this.blankSrc);\n    },\n    computedWidth: function computedWidth() {\n      return this.isShown ? this.width : this.blankWidth || this.width;\n    },\n    computedHeight: function computedHeight() {\n      return this.isShown ? this.height : this.blankHeight || this.height;\n    }\n  },\n  watch: {\n    show: function show(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.isShown = newVal;\n\n        if (!newVal) {\n          // Make sure listeners are re-enabled if img is force set to blank\n          this.setListeners(true);\n        }\n      }\n    },\n    isShown: function isShown(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        // Update synched show prop\n        this.$emit('update:show', newVal);\n      }\n    }\n  },\n  created: function created() {\n    this.isShown = this.show;\n  },\n  mounted: function mounted() {\n    if (this.isShown) {\n      this.setListeners(false);\n    } else {\n      this.setListeners(true);\n    }\n  },\n  activated: function activated()\n  /* istanbul ignore next */\n  {\n    if (!this.isShown) {\n      this.setListeners(true);\n    }\n  },\n  deactivated: function deactivated()\n  /* istanbul ignore next */\n  {\n    this.setListeners(false);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.setListeners(false);\n  },\n  methods: {\n    setListeners: function setListeners(on) {\n      var _this = this;\n\n      if (this.scrollTimeout) {\n        clearTimeout(this.scrollTimeout);\n        this.scrollTimeout = null;\n      }\n      /* istanbul ignore next: JSDOM doen't support IntersectionObserver */\n\n\n      if (this.observer) {\n        this.observer.unobserve(this.$el);\n        this.observer.disconnect();\n        this.observer = null;\n      }\n\n      var winEvts = ['scroll', 'resize', 'orientationchange'];\n      winEvts.forEach(function (evt) {\n        return eventOff(window, evt, _this.onScroll, EVENT_OPTIONS);\n      });\n      eventOff(this.$el, 'load', this.checkView, EVENT_OPTIONS);\n      eventOff(document, 'transitionend', this.onScroll, EVENT_OPTIONS);\n\n      if (on) {\n        /* istanbul ignore if: JSDOM doen't support IntersectionObserver */\n        if (hasIntersectionObserverSupport) {\n          this.observer = new IntersectionObserver(this.doShow, {\n            root: null,\n            // viewport\n            rootMargin: \"\".concat(parseInt(this.offset, 10) || 0, \"px\"),\n            threshold: 0 // percent intersection\n\n          });\n          this.observer.observe(this.$el);\n        } else {\n          // Fallback to scroll/etc events\n          winEvts.forEach(function (evt) {\n            return eventOn(window, evt, _this.onScroll, EVENT_OPTIONS);\n          });\n          eventOn(this.$el, 'load', this.checkView, EVENT_OPTIONS);\n          eventOn(document, 'transitionend', this.onScroll, EVENT_OPTIONS);\n        }\n      }\n    },\n    doShow: function doShow(entries) {\n      if (entries && (entries[0].isIntersecting || entries[0].intersectionRatio > 0.0)) {\n        this.isShown = true;\n        this.setListeners(false);\n      }\n    },\n    checkView: function checkView() {\n      // check bounding box + offset to see if we should show\n\n      /* istanbul ignore next: should rarely occur */\n      if (this.isShown) {\n        this.setListeners(false);\n        return;\n      }\n\n      var offset = parseInt(this.offset, 10) || 0;\n      var docElement = document.documentElement;\n      var view = {\n        l: 0 - offset,\n        t: 0 - offset,\n        b: docElement.clientHeight + offset,\n        r: docElement.clientWidth + offset // JSDOM Doesn't support BCR, but we fake it in the tests\n\n      };\n      var box = getBCR(this.$el);\n\n      if (box.right >= view.l && box.bottom >= view.t && box.left <= view.r && box.top <= view.b) {\n        // image is in view (or about to be in view)\n        this.doShow([{\n          isIntersecting: true\n        }]);\n      }\n    },\n    onScroll: function onScroll() {\n      /* istanbul ignore if: should rarely occur */\n      if (this.isShown) {\n        this.setListeners(false);\n      } else {\n        clearTimeout(this.scrollTimeout);\n        this.scrollTimeout = setTimeout(this.checkView, parseInt(this.throttle, 10) || THROTTLE);\n      }\n    }\n  },\n  render: function render(h) {\n    return h(BImg, {\n      props: {\n        // Computed value props\n        src: this.computedSrc,\n        blank: this.computedBlank,\n        width: this.computedWidth,\n        height: this.computedHeight,\n        // Passthough props\n        alt: this.alt,\n        blankColor: this.blankColor,\n        fluid: this.fluid,\n        fluidGrow: this.fluidGrow,\n        block: this.block,\n        thumbnail: this.thumbnail,\n        rounded: this.rounded,\n        left: this.left,\n        right: this.right,\n        center: this.center\n      }\n    });\n  }\n});\nexport default BImgLazy;"]},"metadata":{},"sourceType":"module"}