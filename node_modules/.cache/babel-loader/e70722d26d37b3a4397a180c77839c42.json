{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { getComponentConfig } from '../../utils/config';\nimport { isEvent } from '../../utils/inspect';\nimport { hasNormalizedSlot, normalizeSlot } from '../../utils/normalize-slot';\nvar NAME = 'BButtonClose';\nvar props = {\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  ariaLabel: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'ariaLabel');\n    }\n  },\n  textVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'textVariant');\n    }\n  } // @vue/component\n\n};\nexport var BButtonClose = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        listeners = _ref.listeners,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots;\n    var $slots = slots();\n    var $scopedSlots = scopedSlots || {};\n    var componentData = {\n      staticClass: 'close',\n      class: _defineProperty({}, \"text-\".concat(props.textVariant), props.textVariant),\n      attrs: {\n        type: 'button',\n        disabled: props.disabled,\n        'aria-label': props.ariaLabel ? String(props.ariaLabel) : null\n      },\n      on: {\n        click: function click(evt) {\n          // Ensure click on button HTML content is also disabled\n\n          /* istanbul ignore if: bug in JSDOM still emits click on inner element */\n          if (props.disabled && isEvent(evt)) {\n            evt.stopPropagation();\n            evt.preventDefault();\n          }\n        }\n      } // Careful not to override the default slot with innerHTML\n\n    };\n\n    if (!hasNormalizedSlot('default', $scopedSlots, $slots)) {\n      componentData.domProps = {\n        innerHTML: '&times;'\n      };\n    }\n\n    return h('button', mergeData(data, componentData), normalizeSlot('default', {}, $scopedSlots, $slots));\n  }\n});\nexport default BButtonClose;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/ecommercevuefirestore/ecommercevuefirestore/node_modules/bootstrap-vue/esm/components/button/button-close.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Vue","mergeData","getComponentConfig","isEvent","hasNormalizedSlot","normalizeSlot","NAME","props","disabled","type","Boolean","default","ariaLabel","String","_default","textVariant","BButtonClose","extend","name","functional","render","h","_ref","data","listeners","slots","scopedSlots","$slots","$scopedSlots","componentData","staticClass","class","concat","attrs","on","click","evt","stopPropagation","preventDefault","domProps","innerHTML"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { getComponentConfig } from '../../utils/config';\nimport { isEvent } from '../../utils/inspect';\nimport { hasNormalizedSlot, normalizeSlot } from '../../utils/normalize-slot';\nvar NAME = 'BButtonClose';\nvar props = {\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  ariaLabel: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'ariaLabel');\n    }\n  },\n  textVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'textVariant');\n    }\n  } // @vue/component\n\n};\nexport var BButtonClose =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        listeners = _ref.listeners,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots;\n    var $slots = slots();\n    var $scopedSlots = scopedSlots || {};\n    var componentData = {\n      staticClass: 'close',\n      class: _defineProperty({}, \"text-\".concat(props.textVariant), props.textVariant),\n      attrs: {\n        type: 'button',\n        disabled: props.disabled,\n        'aria-label': props.ariaLabel ? String(props.ariaLabel) : null\n      },\n      on: {\n        click: function click(evt) {\n          // Ensure click on button HTML content is also disabled\n\n          /* istanbul ignore if: bug in JSDOM still emits click on inner element */\n          if (props.disabled && isEvent(evt)) {\n            evt.stopPropagation();\n            evt.preventDefault();\n          }\n        }\n      } // Careful not to override the default slot with innerHTML\n\n    };\n\n    if (!hasNormalizedSlot('default', $scopedSlots, $slots)) {\n      componentData.domProps = {\n        innerHTML: '&times;'\n      };\n    }\n\n    return h('button', mergeData(data, componentData), normalizeSlot('default', {}, $scopedSlots, $slots));\n  }\n});\nexport default BButtonClose;"]},"metadata":{},"sourceType":"module"}