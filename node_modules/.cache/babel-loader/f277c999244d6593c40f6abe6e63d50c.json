{"ast":null,"code":"import _defineProperty from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _inject$setup$mounted;\n\nimport \"core-js/modules/es.json.stringify.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport firebase from 'firebase/compat/app';\nimport { inject } from 'vue';\nexport default (_inject$setup$mounted = {\n  inject: ['messaging'],\n  //composition api\n  setup: function setup() {\n    app.messaging().getToken({\n      vapidKey: 'BC9E9EweLWoSortR7kVMtqCwYb58uN-AoGBpWZaW1qUL4YlgECl8tFqItm_00FhaVv2o9OXJTR_Gtn4EwWcx2RA'\n    }).then(function (currentToken) {\n      if (currentToken) {\n        console.log('client token', currentToken);\n      } else {\n        console.log('No registration token available. Request permission to generate one.');\n      }\n    }).catch(function (err) {\n      console.log('An error occurred while retrieving token. ', err);\n    });\n    var messaging = inject('messaging');\n    messaging.getToken({\n      vapidKey: ' BC9E9EweLWoSortR7kVMtqCwYb58uN-AoGBpWZaW1qUL4YlgECl8tFqItm_00FhaVv2o9OXJTR_Gtn4EwWcx2RA'\n    });\n    console.log('Firebase cloud messaging object', messaging);\n  },\n  mounted: function mounted() {\n    console.log('Firebase cloud messaging object', this.$messaging);\n  },\n  data: function data() {\n    return {\n      isLoggedIn: false,\n      currentUser: false,\n      cart: '',\n      form: {\n        user: '',\n        pass: ''\n      }\n    };\n  },\n  created: function created() {\n    if (firebase.auth().currentUser) {\n      this.isLoggedIn = true;\n      this.currentUser = firebase.auth().currentUser.email;\n    }\n\n    ;\n\n    if (JSON.parse(localStorage.getItem('products'))) {\n      this.cart = JSON.parse(localStorage.getItem('products'));\n    } else {\n      return;\n    }\n  },\n  methods: {\n    logout: function logout() {\n      var _this = this;\n\n      firebase.auth().signOut().then(function () {\n        _this.$router.go({\n          path: _this.$router.path\n        });\n      });\n    },\n    gotocart: function gotocart() {\n      this.$router.push('/cart');\n    },\n    gotologin: function gotologin() {\n      this.$router.push('/login');\n    },\n    gotoregister: function gotoregister() {\n      this.$router.push('/register');\n    },\n    goHome: function goHome() {\n      this.$router.push('/');\n    },\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n\n      if (this.form.user == 'admin' && this.form.pass == '456789') {\n        this.$refs['my-modal'].hide();\n        this.$router.push('/admin');\n        localStorage.setItem('admin', JSON.stringify('true'));\n      } else {\n        return false;\n      }\n    }\n  }\n}, _defineProperty(_inject$setup$mounted, \"inject\", ['messaging']), _defineProperty(_inject$setup$mounted, \"mounted\", function mounted() {\n  console.log('Firebase cloud messaging object', this.$messaging);\n}), _defineProperty(_inject$setup$mounted, \"setup\", function setup() {\n  var messaging = inject('messaging');\n  console.log('Firebase cloud messaging object', messaging);\n}), _inject$setup$mounted);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACAA,uBADA;AAEA;AACAC,OAHA,mBAGA;AACAC;AAAAC;AAAA,OACAC,IADA,CACA;AACA;AACAC;AACA,OAFA,MAEA;AACAA;AACA;AACA,KAPA,EAOAC,KAPA,CAOA;AACAD;AACA,KATA;AAWA;AACAE;AAAAJ;AAAA;AACAE;AACA,GAlBA;AAmBAG,SAnBA,qBAmBA;AACAH;AACA,GArBA;AAsBAI,MAtBA,kBAsBA;AACA;AACAC,uBADA;AAEAC,wBAFA;AAGAC,cAHA;AAIAC;AACAC,gBADA;AAEAC;AAFA;AAJA;AASA,GAhCA;AAiCAC,SAjCA,qBAiCA;AACA;AACA;AACA;AACA;;AAAA;;AACA;AACA;AACA,KAFA,MAEA;AACA;AACA;AACA,GA3CA;AA4CAC;AACAC;AAAA;;AACAC,eACAC,IADA,GAEAC,OAFA,GAGAjB,IAHA,CAGA;AACA;AAAAkB;AAAA;AACA,OALA;AAMA,KARA;AASAC,YATA,sBASA;AACA;AACA,KAXA;AAYAC,aAZA,uBAYA;AACA;AACA,KAdA;AAeAC,gBAfA,0BAeA;AACA;AACA,KAjBA;AAkBAC,UAlBA,oBAkBA;AACA;AACA,KApBA;AAqBAC,YArBA,oBAqBAC,CArBA,EAqBA;AACAA;;AACA;AACA;AACA;AACAC;AACA,OAJA,MAIA;AACA;AACA;AACA;AA9BA;AA5CA,oDA4EA,aA5EA,wEA6EA;AACAxB;AACA,CA/EA,oEAiFA;AACA;AAEAA;AACA,CArFA","names":["inject","setup","app","vapidKey","then","console","catch","messaging","mounted","data","isLoggedIn","currentUser","cart","form","user","pass","created","methods","logout","firebase","auth","signOut","path","gotocart","gotologin","gotoregister","goHome","onSubmit","e","localStorage"],"sourceRoot":"src/components","sources":["Navbar.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<b-navbar toggleable=\"lg\" type=\"dark\" variant=\"success\">\r\n\t\t\t<b-navbar-brand @click=\"goHome\" href=\"#\">\r\n\t\t\t\t<!-- <b-icon-brightness-fill-high></b-icon-brightness-fill-high> -->\r\n\t\t\t\tEcommerce</b-navbar-brand>\r\n\t\t\t\r\n\t\t\t<b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\r\n\t\t\t\r\n\t\t\t<b-collapse id=\"nav-collapse\" is-nav>\r\n\t\t\t\t\r\n\t\t\t\t<!--Right alligned nav items-->\r\n\t\t\t\t<b-navbar-nav class=\"ml-auto\">\r\n\t\t\t\t\t<b-nav-item v-if=\"isLoggedIn\" id=\"usr\"><span class=\"email black-text\">{{currentUser}}</span></b-nav-item>\r\n\t\t\t\t\t<b-nav-item v-if=\"isLoggedIn\" @click=\"gotocart\" active>Shopping Cart</b-nav-item>\r\n\t\t\t\t\t<b-nav-item v-if=\"!isLoggedIn\" @click=\"gotologin\" active>Login</b-nav-item>\r\n\t\t\t\t\t<b-nav-item v-if=\"!isLoggedIn\" @click=\"gotoregister\" active>Register</b-nav-item>\r\n\t\t\t\t\t<button v-if=\"isLoggedIn\" v-on:click=\"logout\" class=\"btn black\">Logout</button>\r\n\t\t\t\t\t<b-nav-item-dropdown right>\r\n\t\t\t\t\t\t<!--Using 'button-content' slot-->\r\n\t\t\t\t\t\t<template v-slot:button-content>\r\n\t\t\t\t\t\t\t<em>Admin</em>\r\n\t\t\t\t\t\t</template>\r\n\t\t\t\t\t\t<b-dropdown-item v-b-modal.modal-1>Sign in</b-dropdown-item>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</b-nav-item-dropdown>\r\n\t\t\t\t</b-navbar-nav>\r\n\t\t\t</b-collapse>\r\n\t\t</b-navbar>\r\n\t\t\r\n\t\t \r\n\t\t\r\n\t\t<div>\r\n\t\t\r\n\t\t\r\n\t\t\t<b-modal hide-footer ref=\"my-modal\" id=\"modal-1\" title=\"Admin\">\r\n\t\t\t\t<b-form @submit=\"onSubmit\">\r\n\t\t\t\t<b-form-group\r\n\t\t\t\t\tid=\"input-group-1\"\r\n\t\t\t\t\tlabel=\"User:\"\r\n\t\t\t\t\tlabel-for=\"input-1\"\r\n\t\t\t\t\t\r\n\t\t\t\t>\r\n\t\t\t\t\t<b-form-input\r\n\t\t\t\t\t\tid=\"input-1\"\r\n\t\t\t\t\t\tv-model=\"form.user\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tplaceholder=\"Enter User\"\r\n\t\t\t\t\t></b-form-input>\r\n\t\t\t\t</b-form-group>\r\n\t\t\t\t\r\n\t\t\t\t<b-form-group id=\"input-group-2\" label=\"Password:\" label-for=\"input-2\">\r\n\t\t\t\t\t<b-form-input\r\n\t\t\t\t\t\tid=\"input-2\"\r\n\t\t\t\t\t\tv-model=\"form.pass\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tplaceholder=\"Enter Password\"\r\n\t\t\t\t\t\t></b-form-input>\r\n\t\t\t\t</b-form-group>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<b-button type=\"submit\" block variant=\"primary\">Submit</b-button>\r\n\t\t\t\t\r\n\t\t\t\t</b-form>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t</b-modal>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport firebase from 'firebase/compat/app';\r\nimport { inject } from 'vue'\r\nexport default {\r\n\t\tinject: ['messaging'],\r\n  //composition api\r\n  setup() {\r\n\t  app.messaging().getToken({ vapidKey:  'BC9E9EweLWoSortR7kVMtqCwYb58uN-AoGBpWZaW1qUL4YlgECl8tFqItm_00FhaVv2o9OXJTR_Gtn4EwWcx2RA' })\r\n.then((currentToken) => {\r\n  if (currentToken) {\r\n    console.log('client token', currentToken)\r\n  } else {\r\n    console.log('No registration token available. Request permission to generate one.');\r\n  }\r\n}).catch((err) => {\r\n  console.log('An error occurred while retrieving token. ', err);\r\n})\r\n\r\n    const messaging = inject('messaging')\r\n\tmessaging.getToken({ vapidKey:' BC9E9EweLWoSortR7kVMtqCwYb58uN-AoGBpWZaW1qUL4YlgECl8tFqItm_00FhaVv2o9OXJTR_Gtn4EwWcx2RA' })\r\n    console.log('Firebase cloud messaging object', messaging)\r\n  },\r\n  mounted () {\r\n    console.log('Firebase cloud messaging object', this.$messaging)\r\n  },\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tisLoggedIn: false,\r\n      \t\tcurrentUser: false,\r\n\t\t\tcart:'',\r\n\t\t\tform: {\r\n\t\t\t\tuser:'',\r\n\t\t\t\tpass:''\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreated(){\r\n\t\tif (firebase.auth().currentUser) {\r\n      \t\tthis.isLoggedIn = true;\r\n      \t\tthis.currentUser = firebase.auth().currentUser.email;\r\n    \t};\r\n\t\tif(JSON.parse(localStorage.getItem('products'))) {\r\n\t\t\tthis.cart = JSON.parse(localStorage.getItem('products'))\r\n\t\t} else {\r\n\t\t\t\treturn\r\n\t\t}\r\n\t},\r\n\tmethods:{\r\n\t\tlogout: function() {\r\n      \tfirebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n          this.$router.go({ path: this.$router.path });\r\n        });\r\n\t\t},\r\n\t\tgotocart(){\r\n\t\t\tthis.$router.push('/cart')\r\n\t\t},\r\n\t\tgotologin(){\r\n\t\t\tthis.$router.push('/login')\r\n\t\t},\r\n\t\tgotoregister(){\r\n\t\t\tthis.$router.push('/register')\r\n\t\t},\r\n\t\tgoHome(){\r\n\t\t\tthis.$router.push('/')\r\n\t\t},\r\n\t\tonSubmit(e){\r\n\t\t\te.preventDefault();\r\n\t\t\tif(this.form.user=='admin' && this.form.pass=='456789'){\r\n\t\t\t\tthis.$refs['my-modal'].hide()\r\n\t\t\t\tthis.$router.push('/admin')\r\n\t\t\t\tlocalStorage.setItem('admin', JSON.stringify('true'))\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t  inject: ['messaging'],\r\n  mounted () {\r\n    console.log('Firebase cloud messaging object', this.$messaging)\r\n  },\r\n  //composition api\r\n  setup() {\r\n    const messaging = inject('messaging')\r\n\r\n    console.log('Firebase cloud messaging object', messaging)\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}