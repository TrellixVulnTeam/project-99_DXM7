{"ast":null,"code":"import _slicedToArray from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _asyncToGenerator from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _assertThisInitialized from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import _toConsumableArray from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _createForOfIteratorHelper from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";import _typeof from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/typeof.js\";import _classCallCheck from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/createClass.js\";import\"regenerator-runtime/runtime.js\";import\"core-js/modules/es.object.to-string.js\";import\"core-js/modules/es.regexp.to-string.js\";import\"core-js/modules/es.array.concat.js\";import\"core-js/modules/es.error.cause.js\";import\"core-js/modules/es.number.constructor.js\";import\"core-js/modules/es.array.sort.js\";import\"core-js/modules/es.array.join.js\";import\"core-js/modules/es.regexp.exec.js\";import\"core-js/modules/es.regexp.test.js\";import\"core-js/modules/es.regexp.constructor.js\";import\"core-js/modules/es.regexp.dot-all.js\";import\"core-js/modules/es.regexp.sticky.js\";import\"core-js/modules/es.string.search.js\";import\"core-js/modules/es.set.js\";import\"core-js/modules/es.string.iterator.js\";import\"core-js/modules/web.dom-collections.iterator.js\";import\"core-js/modules/es.string.match.js\";import\"core-js/modules/es.array.splice.js\";import\"core-js/modules/es.array.find.js\";import\"core-js/modules/es.string.split.js\";import\"core-js/modules/es.array.slice.js\";import\"core-js/modules/es.map.js\";import\"core-js/modules/es.array.map.js\";import\"core-js/modules/es.string.replace.js\";import\"core-js/modules/es.function.name.js\";import\"core-js/modules/es.string.repeat.js\";import\"core-js/modules/web.dom-collections.for-each.js\";import\"core-js/modules/es.array.filter.js\";import\"core-js/modules/es.array.find-index.js\";import\"core-js/modules/es.array.from.js\";import\"core-js/modules/es.json.stringify.js\";import\"core-js/modules/web.url.to-json.js\";import{getApp,_getProvider,SDK_VERSION as SDK_VERSION$1,_registerComponent,registerVersion}from'@firebase/app';import{Component}from'@firebase/component';import{stringify,jsonEval,contains,assert,base64,stringToByteArray,Sha1,isNodeSdk,deepCopy,base64Encode,isMobileCordova,stringLength,Deferred,safeGet,isAdmin,isValidFormat,isEmpty,isReactNative,assertionError,map,querystring,errorPrefix,getModularInstance,createMockUserToken}from'@firebase/util';import{Logger,LogLevel}from'@firebase/logger';var name=\"@firebase/database\";var version=\"0.12.8\";/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** The semver (www.semver.org) version of the SDK. */var SDK_VERSION='';/**\r\n * SDK_VERSION should be set before any database instance is created\r\n * @internal\r\n */function setSDKVersion(version){SDK_VERSION=version;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n */var DOMStorageWrapper=/*#__PURE__*/function(){/**\r\n     * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */function DOMStorageWrapper(domStorage_){_classCallCheck(this,DOMStorageWrapper);this.domStorage_=domStorage_;// Use a prefix to avoid collisions with other stuff saved by the app.\nthis.prefix_='firebase:';}/**\r\n     * @param key - The key to save the value under\r\n     * @param value - The value being stored, or null to remove the key.\r\n     */_createClass(DOMStorageWrapper,[{key:\"set\",value:function set(key,value){if(value==null){this.domStorage_.removeItem(this.prefixedName_(key));}else{this.domStorage_.setItem(this.prefixedName_(key),stringify(value));}}/**\r\n     * @returns The value that was stored under this key, or null\r\n     */},{key:\"get\",value:function get(key){var storedVal=this.domStorage_.getItem(this.prefixedName_(key));if(storedVal==null){return null;}else{return jsonEval(storedVal);}}},{key:\"remove\",value:function remove(key){this.domStorage_.removeItem(this.prefixedName_(key));}},{key:\"prefixedName_\",value:function prefixedName_(name){return this.prefix_+name;}},{key:\"toString\",value:function toString(){return this.domStorage_.toString();}}]);return DOMStorageWrapper;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n */var MemoryStorage=/*#__PURE__*/function(){function MemoryStorage(){_classCallCheck(this,MemoryStorage);this.cache_={};this.isInMemoryStorage=true;}_createClass(MemoryStorage,[{key:\"set\",value:function set(key,value){if(value==null){delete this.cache_[key];}else{this.cache_[key]=value;}}},{key:\"get\",value:function get(key){if(contains(this.cache_,key)){return this.cache_[key];}return null;}},{key:\"remove\",value:function remove(key){delete this.cache_[key];}}]);return MemoryStorage;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param domStorageName - Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @returns Turning off type information until a common interface is defined.\r\n */var createStoragefor=function createStoragefor(domStorageName){try{// NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n// so it must be inside the try/catch.\nif(typeof window!=='undefined'&&typeof window[domStorageName]!=='undefined'){// Need to test cache. Just because it's here doesn't mean it works\nvar domStorage=window[domStorageName];domStorage.setItem('firebase:sentinel','cache');domStorage.removeItem('firebase:sentinel');return new DOMStorageWrapper(domStorage);}}catch(e){}// Failed to create wrapper.  Just return in-memory storage.\n// TODO: log?\nreturn new MemoryStorage();};/** A storage object that lasts across sessions */var PersistentStorage=createStoragefor('localStorage');/** A storage object that only lasts one session */var SessionStorage=createStoragefor('sessionStorage');/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var logClient=new Logger('@firebase/database');/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n */var LUIDGenerator=function(){var id=1;return function(){return id++;};}();/**\r\n * Sha1 hash of the input string\r\n * @param str - The string to hash\r\n * @returns {!string} The resulting hash\r\n */var sha1=function sha1(str){var utf8Bytes=stringToByteArray(str);var sha1=new Sha1();sha1.update(utf8Bytes);var sha1Bytes=sha1.digest();return base64.encodeByteArray(sha1Bytes);};var buildLogMessage_=function buildLogMessage_(){var message='';for(var i=0;i<arguments.length;i++){var arg=i<0||arguments.length<=i?undefined:arguments[i];if(Array.isArray(arg)||arg&&_typeof(arg)==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntypeof arg.length==='number'){message+=buildLogMessage_.apply(null,arg);}else if(_typeof(arg)==='object'){message+=stringify(arg);}else{message+=arg;}message+=' ';}return message;};/**\r\n * Use this for all debug messages in Firebase.\r\n */var logger=null;/**\r\n * Flag to check for log availability on first log message\r\n */var firstLog_=true;/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param logger_ - A flag to turn on logging, or a custom logger\r\n * @param persistent - Whether or not to persist logging settings across refreshes\r\n */var enableLogging$1=function enableLogging$1(logger_,persistent){assert(!persistent||logger_===true||logger_===false,\"Can't turn on custom loggers persistently.\");if(logger_===true){logClient.logLevel=LogLevel.VERBOSE;logger=logClient.log.bind(logClient);if(persistent){SessionStorage.set('logging_enabled',true);}}else if(typeof logger_==='function'){logger=logger_;}else{logger=null;SessionStorage.remove('logging_enabled');}};var log=function log(){if(firstLog_===true){firstLog_=false;if(logger===null&&SessionStorage.get('logging_enabled')===true){enableLogging$1(true);}}if(logger){for(var _len=arguments.length,varArgs=new Array(_len),_key2=0;_key2<_len;_key2++){varArgs[_key2]=arguments[_key2];}var message=buildLogMessage_.apply(null,varArgs);logger(message);}};var logWrapper=function logWrapper(prefix){return function(){for(var _len2=arguments.length,varArgs=new Array(_len2),_key3=0;_key3<_len2;_key3++){varArgs[_key3]=arguments[_key3];}log.apply(void 0,[prefix].concat(varArgs));};};var error=function error(){var message='FIREBASE INTERNAL ERROR: '+buildLogMessage_.apply(void 0,arguments);logClient.error(message);};var fatal=function fatal(){var message=\"FIREBASE FATAL ERROR: \".concat(buildLogMessage_.apply(void 0,arguments));logClient.error(message);throw new Error(message);};var warn=function warn(){var message='FIREBASE WARNING: '+buildLogMessage_.apply(void 0,arguments);logClient.warn(message);};/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */var warnIfPageIsSecure=function warnIfPageIsSecure(){// Be very careful accessing browser globals. Who knows what may or may not exist.\nif(typeof window!=='undefined'&&window.location&&window.location.protocol&&window.location.protocol.indexOf('https:')!==-1){warn('Insecure Firebase access from a secure page. '+'Please use https in calls to new Firebase().');}};/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n */var isInvalidJSONNumber=function isInvalidJSONNumber(data){return typeof data==='number'&&(data!==data||// NaN\ndata===Number.POSITIVE_INFINITY||data===Number.NEGATIVE_INFINITY);};var executeWhenDOMReady=function executeWhenDOMReady(fn){if(isNodeSdk()||document.readyState==='complete'){fn();}else{// Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n// fire before onload), but fall back to onload.\nvar called=false;var wrappedFn=function wrappedFn(){if(!document.body){setTimeout(wrappedFn,Math.floor(10));return;}if(!called){called=true;fn();}};if(document.addEventListener){document.addEventListener('DOMContentLoaded',wrappedFn,false);// fallback to onload.\nwindow.addEventListener('load',wrappedFn,false);// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(document.attachEvent){// IE.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndocument.attachEvent('onreadystatechange',function(){if(document.readyState==='complete'){wrappedFn();}});// fallback to onload.\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwindow.attachEvent('onload',wrappedFn);// jQuery has an extra hack for IE that we could employ (based on\n// http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n// I'm hoping we don't need it.\n}}};/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n */var MIN_NAME='[MIN_NAME]';/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n */var MAX_NAME='[MAX_NAME]';/**\r\n * Compares valid Firebase key names, plus min and max name\r\n */var nameCompare=function nameCompare(a,b){if(a===b){return 0;}else if(a===MIN_NAME||b===MAX_NAME){return-1;}else if(b===MIN_NAME||a===MAX_NAME){return 1;}else{var aAsInt=tryParseInt(a),bAsInt=tryParseInt(b);if(aAsInt!==null){if(bAsInt!==null){return aAsInt-bAsInt===0?a.length-b.length:aAsInt-bAsInt;}else{return-1;}}else if(bAsInt!==null){return 1;}else{return a<b?-1:1;}}};/**\r\n * @returns {!number} comparison result.\r\n */var stringCompare=function stringCompare(a,b){if(a===b){return 0;}else if(a<b){return-1;}else{return 1;}};var requireKey=function requireKey(key,obj){if(obj&&key in obj){return obj[key];}else{throw new Error('Missing required key ('+key+') in object: '+stringify(obj));}};var ObjectToUniqueKey=function ObjectToUniqueKey(obj){if(_typeof(obj)!=='object'||obj===null){return stringify(obj);}var keys=[];// eslint-disable-next-line guard-for-in\nfor(var k in obj){keys.push(k);}// Export as json, but with the keys sorted.\nkeys.sort();var key='{';for(var i=0;i<keys.length;i++){if(i!==0){key+=',';}key+=stringify(keys[i]);key+=':';key+=ObjectToUniqueKey(obj[keys[i]]);}key+='}';return key;};/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param str - The string\r\n * @param segsize - The maximum number of chars in the string.\r\n * @returns The string, split into appropriately-sized chunks\r\n */var splitStringBySize=function splitStringBySize(str,segsize){var len=str.length;if(len<=segsize){return[str];}var dataSegs=[];for(var c=0;c<len;c+=segsize){if(c+segsize>len){dataSegs.push(str.substring(c,len));}else{dataSegs.push(str.substring(c,c+segsize));}}return dataSegs;};/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj - The object or array to iterate over\r\n * @param fn - The function to apply\r\n */function each(obj,fn){for(var key in obj){if(obj.hasOwnProperty(key)){fn(key,obj[key]);}}}/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param v - A double\r\n *\r\n */var doubleToIEEE754String=function doubleToIEEE754String(v){assert(!isInvalidJSONNumber(v),'Invalid JSON number');// MJL\nvar ebits=11,fbits=52;var bias=(1<<ebits-1)-1;var s,e,f,ln,i;// Compute sign, exponent, fraction\n// Skip NaN / Infinity handling --MJL.\nif(v===0){e=0;f=0;s=1/v===-Infinity?1:0;}else{s=v<0;v=Math.abs(v);if(v>=Math.pow(2,1-bias)){// Normalized\nln=Math.min(Math.floor(Math.log(v)/Math.LN2),bias);e=ln+bias;f=Math.round(v*Math.pow(2,fbits-ln)-Math.pow(2,fbits));}else{// Denormalized\ne=0;f=Math.round(v/Math.pow(2,1-bias-fbits));}}// Pack sign, exponent, fraction\nvar bits=[];for(i=fbits;i;i-=1){bits.push(f%2?1:0);f=Math.floor(f/2);}for(i=ebits;i;i-=1){bits.push(e%2?1:0);e=Math.floor(e/2);}bits.push(s?1:0);bits.reverse();var str=bits.join('');// Return the data as a hex string. --MJL\nvar hexByteString='';for(i=0;i<64;i+=8){var hexByte=parseInt(str.substr(i,8),2).toString(16);if(hexByte.length===1){hexByte='0'+hexByte;}hexByteString=hexByteString+hexByte;}return hexByteString.toLowerCase();};/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n */var isChromeExtensionContentScript=function isChromeExtensionContentScript(){return!!((typeof window===\"undefined\"?\"undefined\":_typeof(window))==='object'&&window['chrome']&&window['chrome']['extension']&&!/^chrome/.test(window.location.href));};/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n */var isWindowsStoreApp=function isWindowsStoreApp(){// Check for the presence of a couple WinRT globals\nreturn(typeof Windows===\"undefined\"?\"undefined\":_typeof(Windows))==='object'&&_typeof(Windows.UI)==='object';};/**\r\n * Converts a server error code to a Javascript Error\r\n */function errorForServerCode(code,query){var reason='Unknown Error';if(code==='too_big'){reason='The data requested exceeds the maximum size '+'that can be accessed with a single request.';}else if(code==='permission_denied'){reason=\"Client doesn't have permission to access the desired data.\";}else if(code==='unavailable'){reason='The service is unavailable';}var error=new Error(code+' at '+query._path.toString()+': '+reason);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nerror.code=code.toUpperCase();return error;}/**\r\n * Used to test for integer-looking strings\r\n */var INTEGER_REGEXP_=new RegExp('^-?(0*)\\\\d{1,10}$');/**\r\n * For use in keys, the minimum possible 32-bit integer.\r\n */var INTEGER_32_MIN=-2147483648;/**\r\n * For use in kyes, the maximum possible 32-bit integer.\r\n */var INTEGER_32_MAX=2147483647;/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n */var tryParseInt=function tryParseInt(str){if(INTEGER_REGEXP_.test(str)){var intVal=Number(str);if(intVal>=INTEGER_32_MIN&&intVal<=INTEGER_32_MAX){return intVal;}}return null;};/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param fn - The code to guard.\r\n */var exceptionGuard=function exceptionGuard(fn){try{fn();}catch(e){// Re-throw exception when it's safe.\nsetTimeout(function(){// It used to be that \"throw e\" would result in a good console error with\n// relevant context, but as of Chrome 39, you just get the firebase.js\n// file/line number where we re-throw it, which is useless. So we log\n// e.stack explicitly.\nvar stack=e.stack||'';warn('Exception was thrown by user callback.',stack);throw e;},Math.floor(0));}};/**\r\n * @returns {boolean} true if we think we're currently being crawled.\r\n */var beingCrawled=function beingCrawled(){var userAgent=(typeof window===\"undefined\"?\"undefined\":_typeof(window))==='object'&&window['navigator']&&window['navigator']['userAgent']||'';// For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n// believe to support JavaScript/AJAX rendering.\n// NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n// would have seen the page\" is flaky if we don't treat it as a crawler.\nreturn userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i)>=0;};/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param fn - Function to run.\r\n * @param time - Milliseconds to wait before running.\r\n * @returns The setTimeout() return value.\r\n */var setTimeoutNonBlocking=function setTimeoutNonBlocking(fn,time){var timeout=setTimeout(fn,time);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nif(_typeof(timeout)==='object'&&timeout['unref']){// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntimeout['unref']();}return timeout;};/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Abstraction around AppCheck's token fetching capabilities.\r\n */var AppCheckTokenProvider=/*#__PURE__*/function(){function AppCheckTokenProvider(appName_,appCheckProvider){var _this=this;_classCallCheck(this,AppCheckTokenProvider);this.appName_=appName_;this.appCheckProvider=appCheckProvider;this.appCheck=appCheckProvider===null||appCheckProvider===void 0?void 0:appCheckProvider.getImmediate({optional:true});if(!this.appCheck){appCheckProvider===null||appCheckProvider===void 0?void 0:appCheckProvider.get().then(function(appCheck){return _this.appCheck=appCheck;});}}_createClass(AppCheckTokenProvider,[{key:\"getToken\",value:function getToken(forceRefresh){var _this2=this;if(!this.appCheck){return new Promise(function(resolve,reject){// Support delayed initialization of FirebaseAppCheck. This allows our\n// customers to initialize the RTDB SDK before initializing Firebase\n// AppCheck and ensures that all requests are authenticated if a token\n// becomes available before the timoeout below expires.\nsetTimeout(function(){if(_this2.appCheck){_this2.getToken(forceRefresh).then(resolve,reject);}else{resolve(null);}},0);});}return this.appCheck.getToken(forceRefresh);}},{key:\"addTokenChangeListener\",value:function addTokenChangeListener(listener){var _a;(_a=this.appCheckProvider)===null||_a===void 0?void 0:_a.get().then(function(appCheck){return appCheck.addTokenListener(listener);});}},{key:\"notifyForInvalidToken\",value:function notifyForInvalidToken(){warn(\"Provided AppCheck credentials for the app named \\\"\".concat(this.appName_,\"\\\" \")+'are invalid. This usually indicates your app was not initialized correctly.');}}]);return AppCheckTokenProvider;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */var FirebaseAuthTokenProvider=/*#__PURE__*/function(){function FirebaseAuthTokenProvider(appName_,firebaseOptions_,authProvider_){var _this3=this;_classCallCheck(this,FirebaseAuthTokenProvider);this.appName_=appName_;this.firebaseOptions_=firebaseOptions_;this.authProvider_=authProvider_;this.auth_=null;this.auth_=authProvider_.getImmediate({optional:true});if(!this.auth_){authProvider_.onInit(function(auth){return _this3.auth_=auth;});}}_createClass(FirebaseAuthTokenProvider,[{key:\"getToken\",value:function getToken(forceRefresh){var _this4=this;if(!this.auth_){return new Promise(function(resolve,reject){// Support delayed initialization of FirebaseAuth. This allows our\n// customers to initialize the RTDB SDK before initializing Firebase\n// Auth and ensures that all requests are authenticated if a token\n// becomes available before the timoeout below expires.\nsetTimeout(function(){if(_this4.auth_){_this4.getToken(forceRefresh).then(resolve,reject);}else{resolve(null);}},0);});}return this.auth_.getToken(forceRefresh).catch(function(error){// TODO: Need to figure out all the cases this is raised and whether\n// this makes sense.\nif(error&&error.code==='auth/token-not-initialized'){log('Got auth/token-not-initialized error.  Treating as null token.');return null;}else{return Promise.reject(error);}});}},{key:\"addTokenChangeListener\",value:function addTokenChangeListener(listener){// TODO: We might want to wrap the listener and call it with no args to\n// avoid a leaky abstraction, but that makes removing the listener harder.\nif(this.auth_){this.auth_.addAuthTokenListener(listener);}else{this.authProvider_.get().then(function(auth){return auth.addAuthTokenListener(listener);});}}},{key:\"removeTokenChangeListener\",value:function removeTokenChangeListener(listener){this.authProvider_.get().then(function(auth){return auth.removeAuthTokenListener(listener);});}},{key:\"notifyForInvalidToken\",value:function notifyForInvalidToken(){var errorMessage='Provided authentication credentials for the app named \"'+this.appName_+'\" are invalid. This usually indicates your app was not '+'initialized correctly. ';if('credential'in this.firebaseOptions_){errorMessage+='Make sure the \"credential\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else if('serviceAccount'in this.firebaseOptions_){errorMessage+='Make sure the \"serviceAccount\" property provided to initializeApp() '+'is authorized to access the specified \"databaseURL\" and is from the correct '+'project.';}else{errorMessage+='Make sure the \"apiKey\" and \"databaseURL\" properties provided to '+'initializeApp() match the values provided for your app at '+'https://console.firebase.google.com/.';}warn(errorMessage);}}]);return FirebaseAuthTokenProvider;}();/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */var EmulatorTokenProvider=/*#__PURE__*/function(){function EmulatorTokenProvider(accessToken){_classCallCheck(this,EmulatorTokenProvider);this.accessToken=accessToken;}_createClass(EmulatorTokenProvider,[{key:\"getToken\",value:function getToken(forceRefresh){return Promise.resolve({accessToken:this.accessToken});}},{key:\"addTokenChangeListener\",value:function addTokenChangeListener(listener){// Invoke the listener immediately to match the behavior in Firebase Auth\n// (see packages/auth/src/auth.js#L1807)\nlistener(this.accessToken);}},{key:\"removeTokenChangeListener\",value:function removeTokenChangeListener(listener){}},{key:\"notifyForInvalidToken\",value:function notifyForInvalidToken(){}}]);return EmulatorTokenProvider;}();/** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */EmulatorTokenProvider.OWNER='owner';/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var PROTOCOL_VERSION='5';var VERSION_PARAM='v';var TRANSPORT_SESSION_PARAM='s';var REFERER_PARAM='r';var FORGE_REF='f';// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nvar FORGE_DOMAIN_RE=/(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;var LAST_SESSION_PARAM='ls';var APPLICATION_ID_PARAM='p';var APP_CHECK_TOKEN_PARAM='ac';var WEBSOCKET='websocket';var LONG_POLLING='long_polling';/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A class that holds metadata about a Repo object\r\n */var RepoInfo=/*#__PURE__*/function(){/**\r\n     * @param host - Hostname portion of the url for the repo\r\n     * @param secure - Whether or not this repo is accessed over ssl\r\n     * @param namespace - The namespace represented by the repo\r\n     * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin - Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey - Override the default session persistence storage key\r\n     */function RepoInfo(host,secure,namespace,webSocketOnly){var nodeAdmin=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var persistenceKey=arguments.length>5&&arguments[5]!==undefined?arguments[5]:'';var includeNamespaceInQueryParams=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;_classCallCheck(this,RepoInfo);this.secure=secure;this.namespace=namespace;this.webSocketOnly=webSocketOnly;this.nodeAdmin=nodeAdmin;this.persistenceKey=persistenceKey;this.includeNamespaceInQueryParams=includeNamespaceInQueryParams;this._host=host.toLowerCase();this._domain=this._host.substr(this._host.indexOf('.')+1);this.internalHost=PersistentStorage.get('host:'+host)||this._host;}_createClass(RepoInfo,[{key:\"isCacheableHost\",value:function isCacheableHost(){return this.internalHost.substr(0,2)==='s-';}},{key:\"isCustomHost\",value:function isCustomHost(){return this._domain!=='firebaseio.com'&&this._domain!=='firebaseio-demo.com';}},{key:\"host\",get:function get(){return this._host;},set:function set(newHost){if(newHost!==this.internalHost){this.internalHost=newHost;if(this.isCacheableHost()){PersistentStorage.set('host:'+this._host,this.internalHost);}}}},{key:\"toString\",value:function toString(){var str=this.toURLString();if(this.persistenceKey){str+='<'+this.persistenceKey+'>';}return str;}},{key:\"toURLString\",value:function toURLString(){var protocol=this.secure?'https://':'http://';var query=this.includeNamespaceInQueryParams?\"?ns=\".concat(this.namespace):'';return\"\".concat(protocol).concat(this.host,\"/\").concat(query);}}]);return RepoInfo;}();function repoInfoNeedsQueryParam(repoInfo){return repoInfo.host!==repoInfo.internalHost||repoInfo.isCustomHost()||repoInfo.includeNamespaceInQueryParams;}/**\r\n * Returns the websocket URL for this repo\r\n * @param repoInfo - RepoInfo object\r\n * @param type - of connection\r\n * @param params - list\r\n * @returns The URL for this repo\r\n */function repoInfoConnectionURL(repoInfo,type,params){assert(typeof type==='string','typeof type must == string');assert(_typeof(params)==='object','typeof params must == object');var connURL;if(type===WEBSOCKET){connURL=(repoInfo.secure?'wss://':'ws://')+repoInfo.internalHost+'/.ws?';}else if(type===LONG_POLLING){connURL=(repoInfo.secure?'https://':'http://')+repoInfo.internalHost+'/.lp?';}else{throw new Error('Unknown connection type: '+type);}if(repoInfoNeedsQueryParam(repoInfo)){params['ns']=repoInfo.namespace;}var pairs=[];each(params,function(key,value){pairs.push(key+'='+value);});return connURL+pairs.join('&');}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Tracks a collection of stats.\r\n */var StatsCollection=/*#__PURE__*/function(){function StatsCollection(){_classCallCheck(this,StatsCollection);this.counters_={};}_createClass(StatsCollection,[{key:\"incrementCounter\",value:function incrementCounter(name){var amount=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;if(!contains(this.counters_,name)){this.counters_[name]=0;}this.counters_[name]+=amount;}},{key:\"get\",value:function get(){return deepCopy(this.counters_);}}]);return StatsCollection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var collections={};var reporters={};function statsManagerGetCollection(repoInfo){var hashString=repoInfo.toString();if(!collections[hashString]){collections[hashString]=new StatsCollection();}return collections[hashString];}function statsManagerGetOrCreateReporter(repoInfo,creatorFunction){var hashString=repoInfo.toString();if(!reporters[hashString]){reporters[hashString]=creatorFunction();}return reporters[hashString];}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n */var PacketReceiver=/*#__PURE__*/function(){/**\r\n     * @param onMessage_\r\n     */function PacketReceiver(onMessage_){_classCallCheck(this,PacketReceiver);this.onMessage_=onMessage_;this.pendingResponses=[];this.currentResponseNum=0;this.closeAfterResponse=-1;this.onClose=null;}_createClass(PacketReceiver,[{key:\"closeAfter\",value:function closeAfter(responseNum,callback){this.closeAfterResponse=responseNum;this.onClose=callback;if(this.closeAfterResponse<this.currentResponseNum){this.onClose();this.onClose=null;}}/**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     */},{key:\"handleResponse\",value:function handleResponse(requestNum,data){var _this5=this;this.pendingResponses[requestNum]=data;var _loop=function _loop(){var toProcess=_this5.pendingResponses[_this5.currentResponseNum];delete _this5.pendingResponses[_this5.currentResponseNum];var _loop2=function _loop2(i){if(toProcess[i]){exceptionGuard(function(){_this5.onMessage_(toProcess[i]);});}};for(var i=0;i<toProcess.length;++i){_loop2(i);}if(_this5.currentResponseNum===_this5.closeAfterResponse){if(_this5.onClose){_this5.onClose();_this5.onClose=null;}return\"break\";}_this5.currentResponseNum++;};while(this.pendingResponses[this.currentResponseNum]){var _ret=_loop();if(_ret===\"break\")break;}}}]);return PacketReceiver;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // URL query parameters associated with longpolling\nvar FIREBASE_LONGPOLL_START_PARAM='start';var FIREBASE_LONGPOLL_CLOSE_COMMAND='close';var FIREBASE_LONGPOLL_COMMAND_CB_NAME='pLPCommand';var FIREBASE_LONGPOLL_DATA_CB_NAME='pRTLPCB';var FIREBASE_LONGPOLL_ID_PARAM='id';var FIREBASE_LONGPOLL_PW_PARAM='pw';var FIREBASE_LONGPOLL_SERIAL_PARAM='ser';var FIREBASE_LONGPOLL_CALLBACK_ID_PARAM='cb';var FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM='seg';var FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET='ts';var FIREBASE_LONGPOLL_DATA_PARAM='d';var FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM='dframe';//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nvar MAX_URL_DATA_SIZE=1870;var SEG_HEADER_SIZE=30;//ie: &seg=8299234&ts=982389123&d=\nvar MAX_PAYLOAD_SIZE=MAX_URL_DATA_SIZE-SEG_HEADER_SIZE;/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n */var KEEPALIVE_REQUEST_INTERVAL=25000;/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n */var LP_CONNECT_TIMEOUT=30000;/**\r\n * This class manages a single long-polling connection.\r\n */var BrowserPollConnection=/*#__PURE__*/function(){/**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The AppCheck token for this client.\r\n     * @param authToken The AuthToken to use for this connection.\r\n     * @param transportSessionId Optional transportSessionid if we are\r\n     * reconnecting for an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has\r\n     * already created a connection previously\r\n     */function BrowserPollConnection(connId,repoInfo,applicationId,appCheckToken,authToken,transportSessionId,lastSessionId){var _this6=this;_classCallCheck(this,BrowserPollConnection);this.connId=connId;this.repoInfo=repoInfo;this.applicationId=applicationId;this.appCheckToken=appCheckToken;this.authToken=authToken;this.transportSessionId=transportSessionId;this.lastSessionId=lastSessionId;this.bytesSent=0;this.bytesReceived=0;this.everConnected_=false;this.log_=logWrapper(connId);this.stats_=statsManagerGetCollection(repoInfo);this.urlFn=function(params){// Always add the token if we have one.\nif(_this6.appCheckToken){params[APP_CHECK_TOKEN_PARAM]=_this6.appCheckToken;}return repoInfoConnectionURL(repoInfo,LONG_POLLING,params);};}/**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */_createClass(BrowserPollConnection,[{key:\"open\",value:function open(onMessage,onDisconnect){var _this7=this;this.curSegmentNum=0;this.onDisconnect_=onDisconnect;this.myPacketOrderer=new PacketReceiver(onMessage);this.isClosed_=false;this.connectTimeoutTimer_=setTimeout(function(){_this7.log_('Timed out trying to connect.');// Make sure we clear the host cache\n_this7.onClosed_();_this7.connectTimeoutTimer_=null;// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(LP_CONNECT_TIMEOUT));// Ensure we delay the creation of the iframe until the DOM is loaded.\nexecuteWhenDOMReady(function(){if(_this7.isClosed_){return;}//Set up a callback that gets triggered once a connection is set up.\n_this7.scriptTagHolder=new FirebaseIFrameScriptHolder(function(){for(var _len3=arguments.length,args=new Array(_len3),_key4=0;_key4<_len3;_key4++){args[_key4]=arguments[_key4];}var command=args[0],arg1=args[1],arg2=args[2],arg3=args[3],arg4=args[4];_this7.incrementIncomingBytes_(args);if(!_this7.scriptTagHolder){return;// we closed the connection.\n}if(_this7.connectTimeoutTimer_){clearTimeout(_this7.connectTimeoutTimer_);_this7.connectTimeoutTimer_=null;}_this7.everConnected_=true;if(command===FIREBASE_LONGPOLL_START_PARAM){_this7.id=arg1;_this7.password=arg2;}else if(command===FIREBASE_LONGPOLL_CLOSE_COMMAND){// Don't clear the host cache. We got a response from the server, so we know it's reachable\nif(arg1){// We aren't expecting any more data (other than what the server's already in the process of sending us\n// through our already open polls), so don't send any more.\n_this7.scriptTagHolder.sendNewPolls=false;// arg1 in this case is the last response number sent by the server. We should try to receive\n// all of the responses up to this one before closing\n_this7.myPacketOrderer.closeAfter(arg1,function(){_this7.onClosed_();});}else{_this7.onClosed_();}}else{throw new Error('Unrecognized command received: '+command);}},function(){for(var _len4=arguments.length,args=new Array(_len4),_key5=0;_key5<_len4;_key5++){args[_key5]=arguments[_key5];}var pN=args[0],data=args[1];_this7.incrementIncomingBytes_(args);_this7.myPacketOrderer.handleResponse(pN,data);},function(){_this7.onClosed_();},_this7.urlFn);//Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n//from cache.\nvar urlParams={};urlParams[FIREBASE_LONGPOLL_START_PARAM]='t';urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=Math.floor(Math.random()*100000000);if(_this7.scriptTagHolder.uniqueCallbackIdentifier){urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM]=_this7.scriptTagHolder.uniqueCallbackIdentifier;}urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(_this7.transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=_this7.transportSessionId;}if(_this7.lastSessionId){urlParams[LAST_SESSION_PARAM]=_this7.lastSessionId;}if(_this7.applicationId){urlParams[APPLICATION_ID_PARAM]=_this7.applicationId;}if(_this7.appCheckToken){urlParams[APP_CHECK_TOKEN_PARAM]=_this7.appCheckToken;}if(typeof location!=='undefined'&&location.hostname&&FORGE_DOMAIN_RE.test(location.hostname)){urlParams[REFERER_PARAM]=FORGE_REF;}var connectURL=_this7.urlFn(urlParams);_this7.log_('Connecting via long-poll to '+connectURL);_this7.scriptTagHolder.addTag(connectURL,function(){/* do nothing */});});}/**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */},{key:\"start\",value:function start(){this.scriptTagHolder.startLongPoll(this.id,this.password);this.addDisconnectPingFrame(this.id,this.password);}/**\r\n     * Forces long polling to be considered as a potential transport\r\n     */},{key:\"markConnectionHealthy\",value:/**\r\n     * No-op for polling\r\n     */function markConnectionHealthy(){}/**\r\n     * Stops polling and cleans up the iframe\r\n     */},{key:\"shutdown_\",value:function shutdown_(){this.isClosed_=true;if(this.scriptTagHolder){this.scriptTagHolder.close();this.scriptTagHolder=null;}//remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\nif(this.myDisconnFrame){document.body.removeChild(this.myDisconnFrame);this.myDisconnFrame=null;}if(this.connectTimeoutTimer_){clearTimeout(this.connectTimeoutTimer_);this.connectTimeoutTimer_=null;}}/**\r\n     * Triggered when this transport is closed\r\n     */},{key:\"onClosed_\",value:function onClosed_(){if(!this.isClosed_){this.log_('Longpoll is closing itself');this.shutdown_();if(this.onDisconnect_){this.onDisconnect_(this.everConnected_);this.onDisconnect_=null;}}}/**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */},{key:\"close\",value:function close(){if(!this.isClosed_){this.log_('Longpoll is being closed.');this.shutdown_();}}/**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param data - The JSON data to transmit.\r\n     */},{key:\"send\",value:function send(data){var dataStr=stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//first, lets get the base64-encoded data\nvar base64data=base64Encode(dataStr);//We can only fit a certain amount in each URL, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(base64data,MAX_PAYLOAD_SIZE);//Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n//of segments so that we can reassemble the packet on the server.\nfor(var i=0;i<dataSegs.length;i++){this.scriptTagHolder.enqueueSegment(this.curSegmentNum,dataSegs.length,dataSegs[i]);this.curSegmentNum++;}}/**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     */},{key:\"addDisconnectPingFrame\",value:function addDisconnectPingFrame(id,pw){if(isNodeSdk()){return;}this.myDisconnFrame=document.createElement('iframe');var urlParams={};urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM]='t';urlParams[FIREBASE_LONGPOLL_ID_PARAM]=id;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=pw;this.myDisconnFrame.src=this.urlFn(urlParams);this.myDisconnFrame.style.display='none';document.body.appendChild(this.myDisconnFrame);}/**\r\n     * Used to track the bytes received by this client\r\n     */},{key:\"incrementIncomingBytes_\",value:function incrementIncomingBytes_(args){// TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\nvar bytesReceived=stringify(args).length;this.bytesReceived+=bytesReceived;this.stats_.incrementCounter('bytes_received',bytesReceived);}}],[{key:\"forceAllow\",value:function forceAllow(){BrowserPollConnection.forceAllow_=true;}/**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */},{key:\"forceDisallow\",value:function forceDisallow(){BrowserPollConnection.forceDisallow_=true;}// Static method, use string literal so it can be accessed in a generic way\n},{key:\"isAvailable\",value:function isAvailable(){if(isNodeSdk()){return false;}else if(BrowserPollConnection.forceAllow_){return true;}else{// NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n// the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\nreturn!BrowserPollConnection.forceDisallow_&&typeof document!=='undefined'&&document.createElement!=null&&!isChromeExtensionContentScript()&&!isWindowsStoreApp();}}}]);return BrowserPollConnection;}();/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n *********************************************************************************************/var FirebaseIFrameScriptHolder=/*#__PURE__*/function(){/**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */function FirebaseIFrameScriptHolder(commandCB,onMessageCB,onDisconnect,urlFn){_classCallCheck(this,FirebaseIFrameScriptHolder);this.onDisconnect=onDisconnect;this.urlFn=urlFn;//We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n//problems in some browsers.\nthis.outstandingRequests=new Set();//A queue of the pending segments waiting for transmission to the server.\nthis.pendingSegs=[];//A serial number. We use this for two things:\n// 1) A way to ensure the browser doesn't cache responses to polls\n// 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n//    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n//    JSONP code in the order it was added to the iframe.\nthis.currentSerial=Math.floor(Math.random()*100000000);// This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n// incoming data from the server that we're waiting for).\nthis.sendNewPolls=true;if(!isNodeSdk()){//Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n//iframes where we put the long-polling script tags. We have two callbacks:\n//   1) Command Callback - Triggered for control issues, like starting a connection.\n//   2) Message Callback - Triggered when new data arrives.\nthis.uniqueCallbackIdentifier=LUIDGenerator();window[FIREBASE_LONGPOLL_COMMAND_CB_NAME+this.uniqueCallbackIdentifier]=commandCB;window[FIREBASE_LONGPOLL_DATA_CB_NAME+this.uniqueCallbackIdentifier]=onMessageCB;//Create an iframe for us to add script tags to.\nthis.myIFrame=FirebaseIFrameScriptHolder.createIFrame_();// Set the iframe's contents.\nvar script='';// if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n// for ie9, but ie8 needs to do it again in the document itself.\nif(this.myIFrame.src&&this.myIFrame.src.substr(0,'javascript:'.length)==='javascript:'){var currentDomain=document.domain;script='<script>document.domain=\"'+currentDomain+'\";</script>';}var iframeContents='<html><body>'+script+'</body></html>';try{this.myIFrame.doc.open();this.myIFrame.doc.write(iframeContents);this.myIFrame.doc.close();}catch(e){log('frame writing exception');if(e.stack){log(e.stack);}log(e);}}else{this.commandCB=commandCB;this.onMessageCB=onMessageCB;}}/**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     */_createClass(FirebaseIFrameScriptHolder,[{key:\"close\",value:/**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */function close(){var _this8=this;//Mark this iframe as dead, so no new requests are sent.\nthis.alive=false;if(this.myIFrame){//We have to actually remove all of the html inside this iframe before removing it from the\n//window, or IE will continue loading and executing the script tags we've already added, which\n//can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\nthis.myIFrame.doc.body.innerHTML='';setTimeout(function(){if(_this8.myIFrame!==null){document.body.removeChild(_this8.myIFrame);_this8.myIFrame=null;}},Math.floor(0));}// Protect from being called recursively.\nvar onDisconnect=this.onDisconnect;if(onDisconnect){this.onDisconnect=null;onDisconnect();}}/**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param id - The ID of this connection\r\n     * @param pw - The password for this connection\r\n     */},{key:\"startLongPoll\",value:function startLongPoll(id,pw){this.myID=id;this.myPW=pw;this.alive=true;//send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\nwhile(this.newRequest_()){}}/**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */},{key:\"newRequest_\",value:function newRequest_(){// We keep one outstanding request open all the time to receive data, but if we need to send data\n// (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n// close the old request.\nif(this.alive&&this.sendNewPolls&&this.outstandingRequests.size<(this.pendingSegs.length>0?2:1)){//construct our url\nthis.currentSerial++;var urlParams={};urlParams[FIREBASE_LONGPOLL_ID_PARAM]=this.myID;urlParams[FIREBASE_LONGPOLL_PW_PARAM]=this.myPW;urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM]=this.currentSerial;var theURL=this.urlFn(urlParams);//Now add as much data as we can.\nvar curDataString='';var i=0;while(this.pendingSegs.length>0){//first, lets see if the next segment will fit.\nvar nextSeg=this.pendingSegs[0];if(nextSeg.d.length+SEG_HEADER_SIZE+curDataString.length<=MAX_URL_DATA_SIZE){//great, the segment will fit. Lets append it.\nvar theSeg=this.pendingSegs.shift();curDataString=curDataString+'&'+FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM+i+'='+theSeg.seg+'&'+FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET+i+'='+theSeg.ts+'&'+FIREBASE_LONGPOLL_DATA_PARAM+i+'='+theSeg.d;i++;}else{break;}}theURL=theURL+curDataString;this.addLongPollTag_(theURL,this.currentSerial);return true;}else{return false;}}/**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */},{key:\"enqueueSegment\",value:function enqueueSegment(segnum,totalsegs,data){//add this to the queue of segments to send.\nthis.pendingSegs.push({seg:segnum,ts:totalsegs,d:data});//send the data immediately if there isn't already data being transmitted, unless\n//startLongPoll hasn't been called yet.\nif(this.alive){this.newRequest_();}}/**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param url - The URL of the script tag.\r\n     * @param serial - The serial number of the request.\r\n     */},{key:\"addLongPollTag_\",value:function addLongPollTag_(url,serial){var _this9=this;//remember that we sent this request.\nthis.outstandingRequests.add(serial);var doNewRequest=function doNewRequest(){_this9.outstandingRequests.delete(serial);_this9.newRequest_();};// If this request doesn't return on its own accord (by the server sending us some data), we'll\n// create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\nvar keepaliveTimeout=setTimeout(doNewRequest,Math.floor(KEEPALIVE_REQUEST_INTERVAL));var readyStateCB=function readyStateCB(){// Request completed.  Cancel the keepalive.\nclearTimeout(keepaliveTimeout);// Trigger a new request so we can continue receiving data.\ndoNewRequest();};this.addTag(url,readyStateCB);}/**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param url - The URL for the script tag source.\r\n     * @param loadCB - A callback to be triggered once the script has loaded.\r\n     */},{key:\"addTag\",value:function addTag(url,loadCB){var _this10=this;if(isNodeSdk()){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nthis.doNodeLongPoll(url,loadCB);}else{setTimeout(function(){try{// if we're already closed, don't add this poll\nif(!_this10.sendNewPolls){return;}var newScript=_this10.myIFrame.doc.createElement('script');newScript.type='text/javascript';newScript.async=true;newScript.src=url;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript.onload=newScript.onreadystatechange=function(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar rstate=newScript.readyState;if(!rstate||rstate==='loaded'||rstate==='complete'){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewScript.onload=newScript.onreadystatechange=null;if(newScript.parentNode){newScript.parentNode.removeChild(newScript);}loadCB();}};newScript.onerror=function(){log('Long-poll script failed to load: '+url);_this10.sendNewPolls=false;_this10.close();};_this10.myIFrame.doc.body.appendChild(newScript);}catch(e){// TODO: we should make this error visible somehow\n}},Math.floor(1));}}}],[{key:\"createIFrame_\",value:function createIFrame_(){var iframe=document.createElement('iframe');iframe.style.display='none';// This is necessary in order to initialize the document inside the iframe\nif(document.body){document.body.appendChild(iframe);try{// If document.domain has been modified in IE, this will throw an error, and we need to set the\n// domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n// Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\nvar a=iframe.contentWindow.document;if(!a){// Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\nlog('No IE domain setting required');}}catch(e){var domain=document.domain;iframe.src=\"javascript:void((function(){document.open();document.domain='\"+domain+\"';document.close();})())\";}}else{// LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n// never gets hit.\nthrow'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';}// Get the document of the iframe in a browser-specific way.\nif(iframe.contentDocument){iframe.doc=iframe.contentDocument;// Firefox, Opera, Safari\n}else if(iframe.contentWindow){iframe.doc=iframe.contentWindow.document;// Internet Explorer\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n}else if(iframe.document){// eslint-disable-next-line @typescript-eslint/no-explicit-any\niframe.doc=iframe.document;//others?\n}return iframe;}}]);return FirebaseIFrameScriptHolder;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var WEBSOCKET_MAX_FRAME_SIZE=16384;var WEBSOCKET_KEEPALIVE_INTERVAL=45000;var WebSocketImpl=null;if(typeof MozWebSocket!=='undefined'){WebSocketImpl=MozWebSocket;}else if(typeof WebSocket!=='undefined'){WebSocketImpl=WebSocket;}/**\r\n * Create a new websocket connection with the given callbacks.\r\n */var WebSocketConnection=/*#__PURE__*/function(){/**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param appCheckToken The App Check Token for this client.\r\n     * @param authToken The Auth Token for this client.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting\r\n     * to an existing transport session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous\r\n     * connection\r\n     */function WebSocketConnection(connId,repoInfo,applicationId,appCheckToken,authToken,transportSessionId,lastSessionId){_classCallCheck(this,WebSocketConnection);this.connId=connId;this.applicationId=applicationId;this.appCheckToken=appCheckToken;this.authToken=authToken;this.keepaliveTimer=null;this.frames=null;this.totalFrames=0;this.bytesSent=0;this.bytesReceived=0;this.log_=logWrapper(this.connId);this.stats_=statsManagerGetCollection(repoInfo);this.connURL=WebSocketConnection.connectionURL_(repoInfo,transportSessionId,lastSessionId,appCheckToken);this.nodeAdmin=repoInfo.nodeAdmin;}/**\r\n     * @param repoInfo - The info for the websocket endpoint.\r\n     * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId - Optional lastSessionId if there was a previous connection\r\n     * @returns connection url\r\n     */_createClass(WebSocketConnection,[{key:\"open\",value:/**\r\n     * @param onMessage - Callback when messages arrive\r\n     * @param onDisconnect - Callback with connection lost.\r\n     */function open(onMessage,onDisconnect){var _this11=this;this.onDisconnect=onDisconnect;this.onMessage=onMessage;this.log_('Websocket connecting to '+this.connURL);this.everConnected_=false;// Assume failure until proven otherwise.\nPersistentStorage.set('previous_websocket_failure',true);try{if(isNodeSdk()){var device=this.nodeAdmin?'AdminNode':'Node';// UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\nvar options={headers:{'User-Agent':\"Firebase/\".concat(PROTOCOL_VERSION,\"/\").concat(SDK_VERSION,\"/\").concat(process.platform,\"/\").concat(device),'X-Firebase-GMPID':this.applicationId||''}};// If using Node with admin creds, AppCheck-related checks are unnecessary.\n// Note that we send the credentials here even if they aren't admin credentials, which is\n// not a problem.\n// Note that this header is just used to bypass appcheck, and the token should still be sent\n// through the websocket connection once it is established.\nif(this.authToken){options.headers['Authorization']=\"Bearer \".concat(this.authToken);}if(this.appCheckToken){options.headers['X-Firebase-AppCheck']=this.appCheckToken;}// Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\nvar env=process['env'];var proxy=this.connURL.indexOf('wss://')===0?env['HTTPS_PROXY']||env['https_proxy']:env['HTTP_PROXY']||env['http_proxy'];if(proxy){options['proxy']={origin:proxy};}this.mySock=new WebSocketImpl(this.connURL,[],options);}else{var _options={headers:{'X-Firebase-GMPID':this.applicationId||'','X-Firebase-AppCheck':this.appCheckToken||''}};this.mySock=new WebSocketImpl(this.connURL,[],_options);}}catch(e){this.log_('Error instantiating WebSocket.');var _error=e.message||e.data;if(_error){this.log_(_error);}this.onClosed_();return;}this.mySock.onopen=function(){_this11.log_('Websocket connected.');_this11.everConnected_=true;};this.mySock.onclose=function(){_this11.log_('Websocket connection was disconnected.');_this11.mySock=null;_this11.onClosed_();};this.mySock.onmessage=function(m){_this11.handleIncomingFrame(m);};this.mySock.onerror=function(e){_this11.log_('WebSocket error.  Closing connection.');// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar error=e.message||e.data;if(error){_this11.log_(error);}_this11.onClosed_();};}/**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */},{key:\"start\",value:function start(){}},{key:\"markConnectionHealthy\",value:function markConnectionHealthy(){PersistentStorage.remove('previous_websocket_failure');}},{key:\"appendFrame_\",value:function appendFrame_(data){this.frames.push(data);if(this.frames.length===this.totalFrames){var fullMess=this.frames.join('');this.frames=null;var jsonMess=jsonEval(fullMess);//handle the message\nthis.onMessage(jsonMess);}}/**\r\n     * @param frameCount - The number of frames we are expecting from the server\r\n     */},{key:\"handleNewFrameCount_\",value:function handleNewFrameCount_(frameCount){this.totalFrames=frameCount;this.frames=[];}/**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @returns Any remaining data to be process, or null if there is none\r\n     */},{key:\"extractFrameCount_\",value:function extractFrameCount_(data){assert(this.frames===null,'We already have a frame buffer');// TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n// currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\nif(data.length<=6){var frameCount=Number(data);if(!isNaN(frameCount)){this.handleNewFrameCount_(frameCount);return null;}}this.handleNewFrameCount_(1);return data;}/**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess - The frame data\r\n     */},{key:\"handleIncomingFrame\",value:function handleIncomingFrame(mess){if(this.mySock===null){return;// Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n}var data=mess['data'];this.bytesReceived+=data.length;this.stats_.incrementCounter('bytes_received',data.length);this.resetKeepAlive();if(this.frames!==null){// we're buffering\nthis.appendFrame_(data);}else{// try to parse out a frame count, otherwise, assume 1 and process it\nvar remainingData=this.extractFrameCount_(data);if(remainingData!==null){this.appendFrame_(remainingData);}}}/**\r\n     * Send a message to the server\r\n     * @param data - The JSON object to transmit\r\n     */},{key:\"send\",value:function send(data){this.resetKeepAlive();var dataStr=stringify(data);this.bytesSent+=dataStr.length;this.stats_.incrementCounter('bytes_sent',dataStr.length);//We can only fit a certain amount in each websocket frame, so we need to split this request\n//up into multiple pieces if it doesn't fit in one request.\nvar dataSegs=splitStringBySize(dataStr,WEBSOCKET_MAX_FRAME_SIZE);//Send the length header\nif(dataSegs.length>1){this.sendString_(String(dataSegs.length));}//Send the actual data in segments.\nfor(var i=0;i<dataSegs.length;i++){this.sendString_(dataSegs[i]);}}},{key:\"shutdown_\",value:function shutdown_(){this.isClosed_=true;if(this.keepaliveTimer){clearInterval(this.keepaliveTimer);this.keepaliveTimer=null;}if(this.mySock){this.mySock.close();this.mySock=null;}}},{key:\"onClosed_\",value:function onClosed_(){if(!this.isClosed_){this.log_('WebSocket is closing itself');this.shutdown_();// since this is an internal close, trigger the close listener\nif(this.onDisconnect){this.onDisconnect(this.everConnected_);this.onDisconnect=null;}}}/**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */},{key:\"close\",value:function close(){if(!this.isClosed_){this.log_('WebSocket is being closed');this.shutdown_();}}/**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */},{key:\"resetKeepAlive\",value:function resetKeepAlive(){var _this12=this;clearInterval(this.keepaliveTimer);this.keepaliveTimer=setInterval(function(){//If there has been no websocket activity for a while, send a no-op\nif(_this12.mySock){_this12.sendString_('0');}_this12.resetKeepAlive();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));}/**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param str - String to send.\r\n     */},{key:\"sendString_\",value:function sendString_(str){// Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n// calls for some unknown reason.  We treat these as an error and disconnect.\n// See https://app.asana.com/0/58926111402292/68021340250410\ntry{this.mySock.send(str);}catch(e){this.log_('Exception thrown from WebSocket.send():',e.message||e.data,'Closing connection.');setTimeout(this.onClosed_.bind(this),0);}}}],[{key:\"connectionURL_\",value:function connectionURL_(repoInfo,transportSessionId,lastSessionId,appCheckToken){var urlParams={};urlParams[VERSION_PARAM]=PROTOCOL_VERSION;if(!isNodeSdk()&&typeof location!=='undefined'&&location.hostname&&FORGE_DOMAIN_RE.test(location.hostname)){urlParams[REFERER_PARAM]=FORGE_REF;}if(transportSessionId){urlParams[TRANSPORT_SESSION_PARAM]=transportSessionId;}if(lastSessionId){urlParams[LAST_SESSION_PARAM]=lastSessionId;}if(appCheckToken){urlParams[APP_CHECK_TOKEN_PARAM]=appCheckToken;}return repoInfoConnectionURL(repoInfo,WEBSOCKET,urlParams);}},{key:\"forceDisallow\",value:function forceDisallow(){WebSocketConnection.forceDisallow_=true;}},{key:\"isAvailable\",value:function isAvailable(){var isOldAndroid=false;if(typeof navigator!=='undefined'&&navigator.userAgent){var oldAndroidRegex=/Android ([0-9]{0,}\\.[0-9]{0,})/;var oldAndroidMatch=navigator.userAgent.match(oldAndroidRegex);if(oldAndroidMatch&&oldAndroidMatch.length>1){if(parseFloat(oldAndroidMatch[1])<4.4){isOldAndroid=true;}}}return!isOldAndroid&&WebSocketImpl!==null&&!WebSocketConnection.forceDisallow_;}/**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     */},{key:\"previouslyFailed\",value:function previouslyFailed(){// If our persistent storage is actually only in-memory storage,\n// we default to assuming that it previously failed to be safe.\nreturn PersistentStorage.isInMemoryStorage||PersistentStorage.get('previous_websocket_failure')===true;}}]);return WebSocketConnection;}();/**\r\n * Number of response before we consider the connection \"healthy.\"\r\n */WebSocketConnection.responsesRequiredToBeHealthy=2;/**\r\n * Time to wait for the connection te become healthy before giving up.\r\n */WebSocketConnection.healthyTimeout=30000;/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n */var TransportManager=/*#__PURE__*/function(){/**\r\n     * @param repoInfo - Metadata around the namespace we're connecting to\r\n     */function TransportManager(repoInfo){_classCallCheck(this,TransportManager);this.initTransports_(repoInfo);}_createClass(TransportManager,[{key:\"initTransports_\",value:function initTransports_(repoInfo){var isWebSocketsAvailable=WebSocketConnection&&WebSocketConnection['isAvailable']();var isSkipPollConnection=isWebSocketsAvailable&&!WebSocketConnection.previouslyFailed();if(repoInfo.webSocketOnly){if(!isWebSocketsAvailable){warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");}isSkipPollConnection=true;}if(isSkipPollConnection){this.transports_=[WebSocketConnection];}else{var transports=this.transports_=[];var _iterator=_createForOfIteratorHelper(TransportManager.ALL_TRANSPORTS),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var transport=_step.value;if(transport&&transport['isAvailable']()){transports.push(transport);}}}catch(err){_iterator.e(err);}finally{_iterator.f();}}}/**\r\n     * @returns The constructor for the initial transport to use\r\n     */},{key:\"initialTransport\",value:function initialTransport(){if(this.transports_.length>0){return this.transports_[0];}else{throw new Error('No transports available');}}/**\r\n     * @returns The constructor for the next transport, or null\r\n     */},{key:\"upgradeTransport\",value:function upgradeTransport(){if(this.transports_.length>1){return this.transports_[1];}else{return null;}}}],[{key:\"ALL_TRANSPORTS\",get:function get(){return[BrowserPollConnection,WebSocketConnection];}}]);return TransportManager;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Abort upgrade attempt if it takes longer than 60s.\nvar UPGRADE_TIMEOUT=60000;// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS=5000;// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nvar BYTES_SENT_HEALTHY_OVERRIDE=10*1024;var BYTES_RECEIVED_HEALTHY_OVERRIDE=100*1024;var MESSAGE_TYPE='t';var MESSAGE_DATA='d';var CONTROL_SHUTDOWN='s';var CONTROL_RESET='r';var CONTROL_ERROR='e';var CONTROL_PONG='o';var SWITCH_ACK='a';var END_TRANSMISSION='n';var PING='p';var SERVER_HELLO='h';/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n */var Connection=/*#__PURE__*/function(){/**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param appCheckToken_ - The App Check Token for this device.\r\n     * @param authToken_ - The auth token for this session.\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */function Connection(id,repoInfo_,applicationId_,appCheckToken_,authToken_,onMessage_,onReady_,onDisconnect_,onKill_,lastSessionId){_classCallCheck(this,Connection);this.id=id;this.repoInfo_=repoInfo_;this.applicationId_=applicationId_;this.appCheckToken_=appCheckToken_;this.authToken_=authToken_;this.onMessage_=onMessage_;this.onReady_=onReady_;this.onDisconnect_=onDisconnect_;this.onKill_=onKill_;this.lastSessionId=lastSessionId;this.connectionCount=0;this.pendingDataMessages=[];this.state_=0/* CONNECTING */;this.log_=logWrapper('c:'+this.id+':');this.transportManager_=new TransportManager(repoInfo_);this.log_('Connection created');this.start_();}/**\r\n     * Starts a connection attempt\r\n     */_createClass(Connection,[{key:\"start_\",value:function start_(){var _this13=this;var conn=this.transportManager_.initialTransport();this.conn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,null,this.lastSessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.primaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessageReceived=this.connReceiver_(this.conn_);var onConnectionLost=this.disconnReceiver_(this.conn_);this.tx_=this.conn_;this.rx_=this.conn_;this.secondaryConn_=null;this.isHealthy_=false;/*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */setTimeout(function(){// this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n_this13.conn_&&_this13.conn_.open(onMessageReceived,onConnectionLost);},Math.floor(0));var healthyTimeoutMS=conn['healthyTimeout']||0;if(healthyTimeoutMS>0){this.healthyTimeout_=setTimeoutNonBlocking(function(){_this13.healthyTimeout_=null;if(!_this13.isHealthy_){if(_this13.conn_&&_this13.conn_.bytesReceived>BYTES_RECEIVED_HEALTHY_OVERRIDE){_this13.log_('Connection exceeded healthy timeout but has received '+_this13.conn_.bytesReceived+' bytes.  Marking connection healthy.');_this13.isHealthy_=true;_this13.conn_.markConnectionHealthy();}else if(_this13.conn_&&_this13.conn_.bytesSent>BYTES_SENT_HEALTHY_OVERRIDE){_this13.log_('Connection exceeded healthy timeout but has sent '+_this13.conn_.bytesSent+' bytes.  Leaving connection alive.');// NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n// the server.\n}else{_this13.log_('Closing unhealthy connection after timeout.');_this13.close();}}// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(healthyTimeoutMS));}}},{key:\"nextTransportId_\",value:function nextTransportId_(){return'c:'+this.id+':'+this.connectionCount++;}},{key:\"disconnReceiver_\",value:function disconnReceiver_(conn){var _this14=this;return function(everConnected){if(conn===_this14.conn_){_this14.onConnectionLost_(everConnected);}else if(conn===_this14.secondaryConn_){_this14.log_('Secondary connection lost.');_this14.onSecondaryConnectionLost_();}else{_this14.log_('closing an old connection');}};}},{key:\"connReceiver_\",value:function connReceiver_(conn){var _this15=this;return function(message){if(_this15.state_!==2/* DISCONNECTED */){if(conn===_this15.rx_){_this15.onPrimaryMessageReceived_(message);}else if(conn===_this15.secondaryConn_){_this15.onSecondaryMessageReceived_(message);}else{_this15.log_('message on old connection');}}};}/**\r\n     * @param dataMsg - An arbitrary data message to be sent to the server\r\n     */},{key:\"sendRequest\",value:function sendRequest(dataMsg){// wrap in a data message envelope and send it on\nvar msg={t:'d',d:dataMsg};this.sendData_(msg);}},{key:\"tryCleanupConnection\",value:function tryCleanupConnection(){if(this.tx_===this.secondaryConn_&&this.rx_===this.secondaryConn_){this.log_('cleaning up and promoting a connection: '+this.secondaryConn_.connId);this.conn_=this.secondaryConn_;this.secondaryConn_=null;// the server will shutdown the old connection\n}}},{key:\"onSecondaryControl_\",value:function onSecondaryControl_(controlData){if(MESSAGE_TYPE in controlData){var cmd=controlData[MESSAGE_TYPE];if(cmd===SWITCH_ACK){this.upgradeIfSecondaryHealthy_();}else if(cmd===CONTROL_RESET){// Most likely the session wasn't valid. Abandon the switch attempt\nthis.log_('Got a reset on secondary, closing it');this.secondaryConn_.close();// If we were already using this connection for something, than we need to fully close\nif(this.tx_===this.secondaryConn_||this.rx_===this.secondaryConn_){this.close();}}else if(cmd===CONTROL_PONG){this.log_('got pong on secondary.');this.secondaryResponsesRequired_--;this.upgradeIfSecondaryHealthy_();}}}},{key:\"onSecondaryMessageReceived_\",value:function onSecondaryMessageReceived_(parsedData){var layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer==='c'){this.onSecondaryControl_(data);}else if(layer==='d'){// got a data message, but we're still second connection. Need to buffer it up\nthis.pendingDataMessages.push(data);}else{throw new Error('Unknown protocol layer: '+layer);}}},{key:\"upgradeIfSecondaryHealthy_\",value:function upgradeIfSecondaryHealthy_(){if(this.secondaryResponsesRequired_<=0){this.log_('Secondary connection is healthy.');this.isHealthy_=true;this.secondaryConn_.markConnectionHealthy();this.proceedWithUpgrade_();}else{// Send a ping to make sure the connection is healthy.\nthis.log_('sending ping on secondary.');this.secondaryConn_.send({t:'c',d:{t:PING,d:{}}});}}},{key:\"proceedWithUpgrade_\",value:function proceedWithUpgrade_(){// tell this connection to consider itself open\nthis.secondaryConn_.start();// send ack\nthis.log_('sending client ack on secondary');this.secondaryConn_.send({t:'c',d:{t:SWITCH_ACK,d:{}}});// send end packet on primary transport, switch to sending on this one\n// can receive on this one, buffer responses until end received on primary transport\nthis.log_('Ending transmission on primary');this.conn_.send({t:'c',d:{t:END_TRANSMISSION,d:{}}});this.tx_=this.secondaryConn_;this.tryCleanupConnection();}},{key:\"onPrimaryMessageReceived_\",value:function onPrimaryMessageReceived_(parsedData){// Must refer to parsedData properties in quotes, so closure doesn't touch them.\nvar layer=requireKey('t',parsedData);var data=requireKey('d',parsedData);if(layer==='c'){this.onControl_(data);}else if(layer==='d'){this.onDataMessage_(data);}}},{key:\"onDataMessage_\",value:function onDataMessage_(message){this.onPrimaryResponse_();// We don't do anything with data messages, just kick them up a level\nthis.onMessage_(message);}},{key:\"onPrimaryResponse_\",value:function onPrimaryResponse_(){if(!this.isHealthy_){this.primaryResponsesRequired_--;if(this.primaryResponsesRequired_<=0){this.log_('Primary connection is healthy.');this.isHealthy_=true;this.conn_.markConnectionHealthy();}}}},{key:\"onControl_\",value:function onControl_(controlData){var cmd=requireKey(MESSAGE_TYPE,controlData);if(MESSAGE_DATA in controlData){var payload=controlData[MESSAGE_DATA];if(cmd===SERVER_HELLO){this.onHandshake_(payload);}else if(cmd===END_TRANSMISSION){this.log_('recvd end transmission on primary');this.rx_=this.secondaryConn_;for(var i=0;i<this.pendingDataMessages.length;++i){this.onDataMessage_(this.pendingDataMessages[i]);}this.pendingDataMessages=[];this.tryCleanupConnection();}else if(cmd===CONTROL_SHUTDOWN){// This was previously the 'onKill' callback passed to the lower-level connection\n// payload in this case is the reason for the shutdown. Generally a human-readable error\nthis.onConnectionShutdown_(payload);}else if(cmd===CONTROL_RESET){// payload in this case is the host we should contact\nthis.onReset_(payload);}else if(cmd===CONTROL_ERROR){error('Server Error: '+payload);}else if(cmd===CONTROL_PONG){this.log_('got pong on primary.');this.onPrimaryResponse_();this.sendPingOnPrimaryIfNecessary_();}else{error('Unknown control packet command: '+cmd);}}}/**\r\n     * @param handshake - The handshake data returned from the server\r\n     */},{key:\"onHandshake_\",value:function onHandshake_(handshake){var timestamp=handshake.ts;var version=handshake.v;var host=handshake.h;this.sessionId=handshake.s;this.repoInfo_.host=host;// if we've already closed the connection, then don't bother trying to progress further\nif(this.state_===0/* CONNECTING */){this.conn_.start();this.onConnectionEstablished_(this.conn_,timestamp);if(PROTOCOL_VERSION!==version){warn('Protocol version mismatch detected');}// TODO: do we want to upgrade? when? maybe a delay?\nthis.tryStartUpgrade_();}}},{key:\"tryStartUpgrade_\",value:function tryStartUpgrade_(){var conn=this.transportManager_.upgradeTransport();if(conn){this.startUpgrade_(conn);}}},{key:\"startUpgrade_\",value:function startUpgrade_(conn){var _this16=this;this.secondaryConn_=new conn(this.nextTransportId_(),this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,this.sessionId);// For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n// can consider the transport healthy.\nthis.secondaryResponsesRequired_=conn['responsesRequiredToBeHealthy']||0;var onMessage=this.connReceiver_(this.secondaryConn_);var onDisconnect=this.disconnReceiver_(this.secondaryConn_);this.secondaryConn_.open(onMessage,onDisconnect);// If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\nsetTimeoutNonBlocking(function(){if(_this16.secondaryConn_){_this16.log_('Timed out trying to upgrade.');_this16.secondaryConn_.close();}},Math.floor(UPGRADE_TIMEOUT));}},{key:\"onReset_\",value:function onReset_(host){this.log_('Reset packet received.  New host: '+host);this.repoInfo_.host=host;// TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n// We don't currently support resets after the connection has already been established\nif(this.state_===1/* CONNECTED */){this.close();}else{// Close whatever connections we have open and start again.\nthis.closeConnections_();this.start_();}}},{key:\"onConnectionEstablished_\",value:function onConnectionEstablished_(conn,timestamp){var _this17=this;this.log_('Realtime connection established.');this.conn_=conn;this.state_=1/* CONNECTED */;if(this.onReady_){this.onReady_(timestamp,this.sessionId);this.onReady_=null;}// If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n// send some pings.\nif(this.primaryResponsesRequired_===0){this.log_('Primary connection is healthy.');this.isHealthy_=true;}else{setTimeoutNonBlocking(function(){_this17.sendPingOnPrimaryIfNecessary_();},Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));}}},{key:\"sendPingOnPrimaryIfNecessary_\",value:function sendPingOnPrimaryIfNecessary_(){// If the connection isn't considered healthy yet, we'll send a noop ping packet request.\nif(!this.isHealthy_&&this.state_===1/* CONNECTED */){this.log_('sending ping on primary.');this.sendData_({t:'c',d:{t:PING,d:{}}});}}},{key:\"onSecondaryConnectionLost_\",value:function onSecondaryConnectionLost_(){var conn=this.secondaryConn_;this.secondaryConn_=null;if(this.tx_===conn||this.rx_===conn){// we are relying on this connection already in some capacity. Therefore, a failure is real\nthis.close();}}/**\r\n     * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     */},{key:\"onConnectionLost_\",value:function onConnectionLost_(everConnected){this.conn_=null;// NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n// called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\nif(!everConnected&&this.state_===0/* CONNECTING */){this.log_('Realtime connection failed.');// Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\nif(this.repoInfo_.isCacheableHost()){PersistentStorage.remove('host:'+this.repoInfo_.host);// reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\nthis.repoInfo_.internalHost=this.repoInfo_.host;}}else if(this.state_===1/* CONNECTED */){this.log_('Realtime connection lost.');}this.close();}},{key:\"onConnectionShutdown_\",value:function onConnectionShutdown_(reason){this.log_('Connection shutdown command received. Shutting down...');if(this.onKill_){this.onKill_(reason);this.onKill_=null;}// We intentionally don't want to fire onDisconnect (kill is a different case),\n// so clear the callback.\nthis.onDisconnect_=null;this.close();}},{key:\"sendData_\",value:function sendData_(data){if(this.state_!==1/* CONNECTED */){throw'Connection is not connected';}else{this.tx_.send(data);}}/**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */},{key:\"close\",value:function close(){if(this.state_!==2/* DISCONNECTED */){this.log_('Closing realtime connection.');this.state_=2/* DISCONNECTED */;this.closeConnections_();if(this.onDisconnect_){this.onDisconnect_();this.onDisconnect_=null;}}}},{key:\"closeConnections_\",value:function closeConnections_(){this.log_('Shutting down all connections');if(this.conn_){this.conn_.close();this.conn_=null;}if(this.secondaryConn_){this.secondaryConn_.close();this.secondaryConn_=null;}if(this.healthyTimeout_){clearTimeout(this.healthyTimeout_);this.healthyTimeout_=null;}}}]);return Connection;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */var ServerActions=/*#__PURE__*/function(){function ServerActions(){_classCallCheck(this,ServerActions);}_createClass(ServerActions,[{key:\"put\",value:function put(pathString,data,onComplete,hash){}},{key:\"merge\",value:function merge(pathString,data,onComplete,hash){}/**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param token - The authentication token\r\n     */},{key:\"refreshAuthToken\",value:function refreshAuthToken(token){}/**\r\n     * Refreshes the app check token for the current connection.\r\n     * @param token The app check token\r\n     */},{key:\"refreshAppCheckToken\",value:function refreshAppCheckToken(token){}},{key:\"onDisconnectPut\",value:function onDisconnectPut(pathString,data,onComplete){}},{key:\"onDisconnectMerge\",value:function onDisconnectMerge(pathString,data,onComplete){}},{key:\"onDisconnectCancel\",value:function onDisconnectCancel(pathString,onComplete){}},{key:\"reportStats\",value:function reportStats(stats){}}]);return ServerActions;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */var EventEmitter=/*#__PURE__*/function(){function EventEmitter(allowedEvents_){_classCallCheck(this,EventEmitter);this.allowedEvents_=allowedEvents_;this.listeners_={};assert(Array.isArray(allowedEvents_)&&allowedEvents_.length>0,'Requires a non-empty array');}/**\r\n     * To be called by derived classes to trigger events.\r\n     */_createClass(EventEmitter,[{key:\"trigger\",value:function trigger(eventType){if(Array.isArray(this.listeners_[eventType])){// Clone the list, since callbacks could add/remove listeners.\nvar listeners=_toConsumableArray(this.listeners_[eventType]);for(var _len5=arguments.length,varArgs=new Array(_len5>1?_len5-1:0),_key6=1;_key6<_len5;_key6++){varArgs[_key6-1]=arguments[_key6];}for(var i=0;i<listeners.length;i++){listeners[i].callback.apply(listeners[i].context,varArgs);}}}},{key:\"on\",value:function on(eventType,callback,context){this.validateEventType_(eventType);this.listeners_[eventType]=this.listeners_[eventType]||[];this.listeners_[eventType].push({callback:callback,context:context});var eventData=this.getInitialEvent(eventType);if(eventData){callback.apply(context,eventData);}}},{key:\"off\",value:function off(eventType,callback,context){this.validateEventType_(eventType);var listeners=this.listeners_[eventType]||[];for(var i=0;i<listeners.length;i++){if(listeners[i].callback===callback&&(!context||context===listeners[i].context)){listeners.splice(i,1);return;}}}},{key:\"validateEventType_\",value:function validateEventType_(eventType){assert(this.allowedEvents_.find(function(et){return et===eventType;}),'Unknown event: '+eventType);}}]);return EventEmitter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n */var OnlineMonitor=/*#__PURE__*/function(_EventEmitter){_inherits(OnlineMonitor,_EventEmitter);var _super=_createSuper(OnlineMonitor);function OnlineMonitor(){var _this18;_classCallCheck(this,OnlineMonitor);_this18=_super.call(this,['online']);_this18.online_=true;// We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n// https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n// It would seem that the 'online' event does not always fire consistently. So we disable it\n// for Cordova.\nif(typeof window!=='undefined'&&typeof window.addEventListener!=='undefined'&&!isMobileCordova()){window.addEventListener('online',function(){if(!_this18.online_){_this18.online_=true;_this18.trigger('online',true);}},false);window.addEventListener('offline',function(){if(_this18.online_){_this18.online_=false;_this18.trigger('online',false);}},false);}return _this18;}_createClass(OnlineMonitor,[{key:\"getInitialEvent\",value:function getInitialEvent(eventType){assert(eventType==='online','Unknown event type: '+eventType);return[this.online_];}},{key:\"currentlyOnline\",value:function currentlyOnline(){return this.online_;}}],[{key:\"getInstance\",value:function getInstance(){return new OnlineMonitor();}}]);return OnlineMonitor;}(EventEmitter);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /** Maximum key depth. */var MAX_PATH_DEPTH=32;/** Maximum number of (UTF8) bytes in a Firebase path. */var MAX_PATH_LENGTH_BYTES=768;/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */var Path=/*#__PURE__*/function(){/**\r\n     * @param pathOrString - Path string to parse, or another path, or the raw\r\n     * tokens array\r\n     */function Path(pathOrString,pieceNum){_classCallCheck(this,Path);if(pieceNum===void 0){this.pieces_=pathOrString.split('/');// Remove empty pieces.\nvar copyTo=0;for(var i=0;i<this.pieces_.length;i++){if(this.pieces_[i].length>0){this.pieces_[copyTo]=this.pieces_[i];copyTo++;}}this.pieces_.length=copyTo;this.pieceNum_=0;}else{this.pieces_=pathOrString;this.pieceNum_=pieceNum;}}_createClass(Path,[{key:\"toString\",value:function toString(){var pathString='';for(var i=this.pieceNum_;i<this.pieces_.length;i++){if(this.pieces_[i]!==''){pathString+='/'+this.pieces_[i];}}return pathString||'/';}}]);return Path;}();function newEmptyPath(){return new Path('');}function pathGetFront(path){if(path.pieceNum_>=path.pieces_.length){return null;}return path.pieces_[path.pieceNum_];}/**\r\n * @returns The number of segments in this path\r\n */function pathGetLength(path){return path.pieces_.length-path.pieceNum_;}function pathPopFront(path){var pieceNum=path.pieceNum_;if(pieceNum<path.pieces_.length){pieceNum++;}return new Path(path.pieces_,pieceNum);}function pathGetBack(path){if(path.pieceNum_<path.pieces_.length){return path.pieces_[path.pieces_.length-1];}return null;}function pathToUrlEncodedString(path){var pathString='';for(var i=path.pieceNum_;i<path.pieces_.length;i++){if(path.pieces_[i]!==''){pathString+='/'+encodeURIComponent(String(path.pieces_[i]));}}return pathString||'/';}/**\r\n * Shallow copy of the parts of the path.\r\n *\r\n */function pathSlice(path){var begin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return path.pieces_.slice(path.pieceNum_+begin);}function pathParent(path){if(path.pieceNum_>=path.pieces_.length){return null;}var pieces=[];for(var i=path.pieceNum_;i<path.pieces_.length-1;i++){pieces.push(path.pieces_[i]);}return new Path(pieces,0);}function pathChild(path,childPathObj){var pieces=[];for(var i=path.pieceNum_;i<path.pieces_.length;i++){pieces.push(path.pieces_[i]);}if(childPathObj instanceof Path){for(var _i=childPathObj.pieceNum_;_i<childPathObj.pieces_.length;_i++){pieces.push(childPathObj.pieces_[_i]);}}else{var childPieces=childPathObj.split('/');for(var _i2=0;_i2<childPieces.length;_i2++){if(childPieces[_i2].length>0){pieces.push(childPieces[_i2]);}}}return new Path(pieces,0);}/**\r\n * @returns True if there are no segments in this path\r\n */function pathIsEmpty(path){return path.pieceNum_>=path.pieces_.length;}/**\r\n * @returns The path from outerPath to innerPath\r\n */function newRelativePath(outerPath,innerPath){var outer=pathGetFront(outerPath),inner=pathGetFront(innerPath);if(outer===null){return innerPath;}else if(outer===inner){return newRelativePath(pathPopFront(outerPath),pathPopFront(innerPath));}else{throw new Error('INTERNAL ERROR: innerPath ('+innerPath+') is not within '+'outerPath ('+outerPath+')');}}/**\r\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\r\n */function pathCompare(left,right){var leftKeys=pathSlice(left,0);var rightKeys=pathSlice(right,0);for(var i=0;i<leftKeys.length&&i<rightKeys.length;i++){var cmp=nameCompare(leftKeys[i],rightKeys[i]);if(cmp!==0){return cmp;}}if(leftKeys.length===rightKeys.length){return 0;}return leftKeys.length<rightKeys.length?-1:1;}/**\r\n * @returns true if paths are the same.\r\n */function pathEquals(path,other){if(pathGetLength(path)!==pathGetLength(other)){return false;}for(var i=path.pieceNum_,j=other.pieceNum_;i<=path.pieces_.length;i++,j++){if(path.pieces_[i]!==other.pieces_[j]){return false;}}return true;}/**\r\n * @returns True if this path is a parent (or the same as) other\r\n */function pathContains(path,other){var i=path.pieceNum_;var j=other.pieceNum_;if(pathGetLength(path)>pathGetLength(other)){return false;}while(i<path.pieces_.length){if(path.pieces_[i]!==other.pieces_[j]){return false;}++i;++j;}return true;}/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */var ValidationPath=/*#__PURE__*/_createClass(/**\r\n     * @param path - Initial Path.\r\n     * @param errorPrefix_ - Prefix for any error messages.\r\n     */function ValidationPath(path,errorPrefix_){_classCallCheck(this,ValidationPath);this.errorPrefix_=errorPrefix_;this.parts_=pathSlice(path,0);/** Initialize to number of '/' chars needed in path. */this.byteLength_=Math.max(1,this.parts_.length);for(var i=0;i<this.parts_.length;i++){this.byteLength_+=stringLength(this.parts_[i]);}validationPathCheckValid(this);});function validationPathPush(validationPath,child){// Count the needed '/'\nif(validationPath.parts_.length>0){validationPath.byteLength_+=1;}validationPath.parts_.push(child);validationPath.byteLength_+=stringLength(child);validationPathCheckValid(validationPath);}function validationPathPop(validationPath){var last=validationPath.parts_.pop();validationPath.byteLength_-=stringLength(last);// Un-count the previous '/'\nif(validationPath.parts_.length>0){validationPath.byteLength_-=1;}}function validationPathCheckValid(validationPath){if(validationPath.byteLength_>MAX_PATH_LENGTH_BYTES){throw new Error(validationPath.errorPrefix_+'has a key path longer than '+MAX_PATH_LENGTH_BYTES+' bytes ('+validationPath.byteLength_+').');}if(validationPath.parts_.length>MAX_PATH_DEPTH){throw new Error(validationPath.errorPrefix_+'path specified exceeds the maximum depth that can be written ('+MAX_PATH_DEPTH+') or object contains a cycle '+validationPathToErrorString(validationPath));}}/**\r\n * String for use in error messages - uses '.' notation for path.\r\n */function validationPathToErrorString(validationPath){if(validationPath.parts_.length===0){return'';}return\"in property '\"+validationPath.parts_.join('.')+\"'\";}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var VisibilityMonitor=/*#__PURE__*/function(_EventEmitter2){_inherits(VisibilityMonitor,_EventEmitter2);var _super2=_createSuper(VisibilityMonitor);function VisibilityMonitor(){var _this19;_classCallCheck(this,VisibilityMonitor);_this19=_super2.call(this,['visible']);var hidden;var visibilityChange;if(typeof document!=='undefined'&&typeof document.addEventListener!=='undefined'){if(typeof document['hidden']!=='undefined'){// Opera 12.10 and Firefox 18 and later support\nvisibilityChange='visibilitychange';hidden='hidden';}else if(typeof document['mozHidden']!=='undefined'){visibilityChange='mozvisibilitychange';hidden='mozHidden';}else if(typeof document['msHidden']!=='undefined'){visibilityChange='msvisibilitychange';hidden='msHidden';}else if(typeof document['webkitHidden']!=='undefined'){visibilityChange='webkitvisibilitychange';hidden='webkitHidden';}}// Initially, we always assume we are visible. This ensures that in browsers\n// without page visibility support or in cases where we are never visible\n// (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n// reconnects\n_this19.visible_=true;if(visibilityChange){document.addEventListener(visibilityChange,function(){var visible=!document[hidden];if(visible!==_this19.visible_){_this19.visible_=visible;_this19.trigger('visible',visible);}},false);}return _this19;}_createClass(VisibilityMonitor,[{key:\"getInitialEvent\",value:function getInitialEvent(eventType){assert(eventType==='visible','Unknown event type: '+eventType);return[this.visible_];}}],[{key:\"getInstance\",value:function getInstance(){return new VisibilityMonitor();}}]);return VisibilityMonitor;}(EventEmitter);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var RECONNECT_MIN_DELAY=1000;var RECONNECT_MAX_DELAY_DEFAULT=60*5*1000;// 5 minutes in milliseconds (Case: 1858)\nvar GET_CONNECT_TIMEOUT=3*1000;var RECONNECT_MAX_DELAY_FOR_ADMINS=30*1000;// 30 seconds for admin clients (likely to be a backend server)\nvar RECONNECT_DELAY_MULTIPLIER=1.3;var RECONNECT_DELAY_RESET_TIMEOUT=30000;// Reset delay back to MIN_DELAY after being connected for 30sec.\nvar SERVER_KILL_INTERRUPT_REASON='server_kill';// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nvar INVALID_TOKEN_THRESHOLD=3;/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */var PersistentConnection=/*#__PURE__*/function(_ServerActions){_inherits(PersistentConnection,_ServerActions);var _super3=_createSuper(PersistentConnection);/**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param applicationId_ - The Firebase App ID for this project\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */function PersistentConnection(repoInfo_,applicationId_,onDataUpdate_,onConnectStatus_,onServerInfoUpdate_,authTokenProvider_,appCheckTokenProvider_,authOverride_){var _this20;_classCallCheck(this,PersistentConnection);_this20=_super3.call(this);_this20.repoInfo_=repoInfo_;_this20.applicationId_=applicationId_;_this20.onDataUpdate_=onDataUpdate_;_this20.onConnectStatus_=onConnectStatus_;_this20.onServerInfoUpdate_=onServerInfoUpdate_;_this20.authTokenProvider_=authTokenProvider_;_this20.appCheckTokenProvider_=appCheckTokenProvider_;_this20.authOverride_=authOverride_;// Used for diagnostic logging.\n_this20.id=PersistentConnection.nextPersistentConnectionId_++;_this20.log_=logWrapper('p:'+_this20.id+':');_this20.interruptReasons_={};_this20.listens=new Map();_this20.outstandingPuts_=[];_this20.outstandingGets_=[];_this20.outstandingPutCount_=0;_this20.outstandingGetCount_=0;_this20.onDisconnectRequestQueue_=[];_this20.connected_=false;_this20.reconnectDelay_=RECONNECT_MIN_DELAY;_this20.maxReconnectDelay_=RECONNECT_MAX_DELAY_DEFAULT;_this20.securityDebugCallback_=null;_this20.lastSessionId=null;_this20.establishConnectionTimer_=null;_this20.visible_=false;// Before we get connected, we keep a queue of pending messages to send.\n_this20.requestCBHash_={};_this20.requestNumber_=0;_this20.realtime_=null;_this20.authToken_=null;_this20.appCheckToken_=null;_this20.forceTokenRefresh_=false;_this20.invalidAuthTokenCount_=0;_this20.invalidAppCheckTokenCount_=0;_this20.firstConnection_=true;_this20.lastConnectionAttemptTime_=null;_this20.lastConnectionEstablishedTime_=null;if(authOverride_&&!isNodeSdk()){throw new Error('Auth override specified in options, but not supported on non Node.js platforms');}VisibilityMonitor.getInstance().on('visible',_this20.onVisible_,_assertThisInitialized(_this20));if(repoInfo_.host.indexOf('fblocal')===-1){OnlineMonitor.getInstance().on('online',_this20.onOnline_,_assertThisInitialized(_this20));}return _this20;}_createClass(PersistentConnection,[{key:\"sendRequest\",value:function sendRequest(action,body,onResponse){var curReqNum=++this.requestNumber_;var msg={r:curReqNum,a:action,b:body};this.log_(stringify(msg));assert(this.connected_,\"sendRequest call when we're not connected not allowed.\");this.realtime_.sendRequest(msg);if(onResponse){this.requestCBHash_[curReqNum]=onResponse;}}},{key:\"get\",value:function get(query){var _this21=this;this.initConnection_();var deferred=new Deferred();var request={p:query._path.toString(),q:query._queryObject};var outstandingGet={action:'g',request:request,onComplete:function onComplete(message){var payload=message['d'];if(message['s']==='ok'){_this21.onDataUpdate_(request['p'],payload,/*isMerge*/false,/*tag*/null);deferred.resolve(payload);}else{deferred.reject(payload);}}};this.outstandingGets_.push(outstandingGet);this.outstandingGetCount_++;var index=this.outstandingGets_.length-1;if(!this.connected_){setTimeout(function(){var get=_this21.outstandingGets_[index];if(get===undefined||outstandingGet!==get){return;}delete _this21.outstandingGets_[index];_this21.outstandingGetCount_--;if(_this21.outstandingGetCount_===0){_this21.outstandingGets_=[];}_this21.log_('get '+index+' timed out on connection');deferred.reject(new Error('Client is offline.'));},GET_CONNECT_TIMEOUT);}if(this.connected_){this.sendGet_(index);}return deferred.promise;}},{key:\"listen\",value:function listen(query,currentHashFn,tag,onComplete){this.initConnection_();var queryId=query._queryIdentifier;var pathString=query._path.toString();this.log_('Listen called for '+pathString+' '+queryId);if(!this.listens.has(pathString)){this.listens.set(pathString,new Map());}assert(query._queryParams.isDefault()||!query._queryParams.loadsAllData(),'listen() called for non-default but complete query');assert(!this.listens.get(pathString).has(queryId),'listen() called twice for same path/queryId.');var listenSpec={onComplete:onComplete,hashFn:currentHashFn,query:query,tag:tag};this.listens.get(pathString).set(queryId,listenSpec);if(this.connected_){this.sendListen_(listenSpec);}}},{key:\"sendGet_\",value:function sendGet_(index){var _this22=this;var get=this.outstandingGets_[index];this.sendRequest('g',get.request,function(message){delete _this22.outstandingGets_[index];_this22.outstandingGetCount_--;if(_this22.outstandingGetCount_===0){_this22.outstandingGets_=[];}if(get.onComplete){get.onComplete(message);}});}},{key:\"sendListen_\",value:function sendListen_(listenSpec){var _this23=this;var query=listenSpec.query;var pathString=query._path.toString();var queryId=query._queryIdentifier;this.log_('Listen on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='q';// Only bother to send query if it's non-default.\nif(listenSpec.tag){req['q']=query._queryObject;req['t']=listenSpec.tag;}req[/*hash*/'h']=listenSpec.hashFn();this.sendRequest(action,req,function(message){var payload=message[/*data*/'d'];var status=message[/*status*/'s'];// print warnings in any case...\nPersistentConnection.warnOnListenWarnings_(payload,query);var currentListenSpec=_this23.listens.get(pathString)&&_this23.listens.get(pathString).get(queryId);// only trigger actions if the listen hasn't been removed and readded\nif(currentListenSpec===listenSpec){_this23.log_('listen response',message);if(status!=='ok'){_this23.removeListen_(pathString,queryId);}if(listenSpec.onComplete){listenSpec.onComplete(status,payload);}}});}},{key:\"refreshAuthToken\",value:function refreshAuthToken(token){this.authToken_=token;this.log_('Auth token refreshed');if(this.authToken_){this.tryAuth();}else{//If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n//the credential so we dont become authenticated next time we connect.\nif(this.connected_){this.sendRequest('unauth',{},function(){});}}this.reduceReconnectDelayIfAdminCredential_(token);}},{key:\"reduceReconnectDelayIfAdminCredential_\",value:function reduceReconnectDelayIfAdminCredential_(credential){// NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n// Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\nvar isFirebaseSecret=credential&&credential.length===40;if(isFirebaseSecret||isAdmin(credential)){this.log_('Admin auth credential detected.  Reducing max reconnect time.');this.maxReconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;}}},{key:\"refreshAppCheckToken\",value:function refreshAppCheckToken(token){this.appCheckToken_=token;this.log_('App check token refreshed');if(this.appCheckToken_){this.tryAppCheck();}else{//If we're connected we want to let the server know to unauthenticate us.\n//If we're not connected, simply delete the credential so we dont become\n// authenticated next time we connect.\nif(this.connected_){this.sendRequest('unappeck',{},function(){});}}}/**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */},{key:\"tryAuth\",value:function tryAuth(){var _this24=this;if(this.connected_&&this.authToken_){var token=this.authToken_;var authMethod=isValidFormat(token)?'auth':'gauth';var requestData={cred:token};if(this.authOverride_===null){requestData['noauth']=true;}else if(_typeof(this.authOverride_)==='object'){requestData['authvar']=this.authOverride_;}this.sendRequest(authMethod,requestData,function(res){var status=res[/*status*/'s'];var data=res[/*data*/'d']||'error';if(_this24.authToken_===token){if(status==='ok'){_this24.invalidAuthTokenCount_=0;}else{// Triggers reconnect and force refresh for auth token\n_this24.onAuthRevoked_(status,data);}}});}}/**\r\n     * Attempts to authenticate with the given token. If the authentication\r\n     * attempt fails, it's triggered like the token was revoked (the connection is\r\n     * closed).\r\n     */},{key:\"tryAppCheck\",value:function tryAppCheck(){var _this25=this;if(this.connected_&&this.appCheckToken_){this.sendRequest('appcheck',{'token':this.appCheckToken_},function(res){var status=res[/*status*/'s'];var data=res[/*data*/'d']||'error';if(status==='ok'){_this25.invalidAppCheckTokenCount_=0;}else{_this25.onAppCheckRevoked_(status,data);}});}}/**\r\n     * @inheritDoc\r\n     */},{key:\"unlisten\",value:function unlisten(query,tag){var pathString=query._path.toString();var queryId=query._queryIdentifier;this.log_('Unlisten called for '+pathString+' '+queryId);assert(query._queryParams.isDefault()||!query._queryParams.loadsAllData(),'unlisten() called for non-default but complete query');var listen=this.removeListen_(pathString,queryId);if(listen&&this.connected_){this.sendUnlisten_(pathString,queryId,query._queryObject,tag);}}},{key:\"sendUnlisten_\",value:function sendUnlisten_(pathString,queryId,queryObj,tag){this.log_('Unlisten on '+pathString+' for '+queryId);var req={/*path*/p:pathString};var action='n';// Only bother sending queryId if it's non-default.\nif(tag){req['q']=queryObj;req['t']=tag;}this.sendRequest(action,req);}},{key:\"onDisconnectPut\",value:function onDisconnectPut(pathString,data,onComplete){this.initConnection_();if(this.connected_){this.sendOnDisconnect_('o',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'o',data:data,onComplete:onComplete});}}},{key:\"onDisconnectMerge\",value:function onDisconnectMerge(pathString,data,onComplete){this.initConnection_();if(this.connected_){this.sendOnDisconnect_('om',pathString,data,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'om',data:data,onComplete:onComplete});}}},{key:\"onDisconnectCancel\",value:function onDisconnectCancel(pathString,onComplete){this.initConnection_();if(this.connected_){this.sendOnDisconnect_('oc',pathString,null,onComplete);}else{this.onDisconnectRequestQueue_.push({pathString:pathString,action:'oc',data:null,onComplete:onComplete});}}},{key:\"sendOnDisconnect_\",value:function sendOnDisconnect_(action,pathString,data,onComplete){var request={/*path*/p:pathString,/*data*/d:data};this.log_('onDisconnect '+action,request);this.sendRequest(action,request,function(response){if(onComplete){setTimeout(function(){onComplete(response[/*status*/'s'],response[/* data */'d']);},Math.floor(0));}});}},{key:\"put\",value:function put(pathString,data,onComplete,hash){this.putInternal('p',pathString,data,onComplete,hash);}},{key:\"merge\",value:function merge(pathString,data,onComplete,hash){this.putInternal('m',pathString,data,onComplete,hash);}},{key:\"putInternal\",value:function putInternal(action,pathString,data,onComplete,hash){this.initConnection_();var request={/*path*/p:pathString,/*data*/d:data};if(hash!==undefined){request[/*hash*/'h']=hash;}// TODO: Only keep track of the most recent put for a given path?\nthis.outstandingPuts_.push({action:action,request:request,onComplete:onComplete});this.outstandingPutCount_++;var index=this.outstandingPuts_.length-1;if(this.connected_){this.sendPut_(index);}else{this.log_('Buffering put: '+pathString);}}},{key:\"sendPut_\",value:function sendPut_(index){var _this26=this;var action=this.outstandingPuts_[index].action;var request=this.outstandingPuts_[index].request;var onComplete=this.outstandingPuts_[index].onComplete;this.outstandingPuts_[index].queued=this.connected_;this.sendRequest(action,request,function(message){_this26.log_(action+' response',message);delete _this26.outstandingPuts_[index];_this26.outstandingPutCount_--;// Clean up array occasionally.\nif(_this26.outstandingPutCount_===0){_this26.outstandingPuts_=[];}if(onComplete){onComplete(message[/*status*/'s'],message[/* data */'d']);}});}},{key:\"reportStats\",value:function reportStats(stats){var _this27=this;// If we're not connected, we just drop the stats.\nif(this.connected_){var request={/*counters*/c:stats};this.log_('reportStats',request);this.sendRequest(/*stats*/'s',request,function(result){var status=result[/*status*/'s'];if(status!=='ok'){var errorReason=result[/* data */'d'];_this27.log_('reportStats','Error sending stats: '+errorReason);}});}}},{key:\"onDataMessage_\",value:function onDataMessage_(message){if('r'in message){// this is a response\nthis.log_('from server: '+stringify(message));var reqNum=message['r'];var onResponse=this.requestCBHash_[reqNum];if(onResponse){delete this.requestCBHash_[reqNum];onResponse(message[/*body*/'b']);}}else if('error'in message){throw'A server-side error has occurred: '+message['error'];}else if('a'in message){// a and b are action and body, respectively\nthis.onDataPush_(message['a'],message['b']);}}},{key:\"onDataPush_\",value:function onDataPush_(action,body){this.log_('handleServerMessage',action,body);if(action==='d'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge*/false,body['t']);}else if(action==='m'){this.onDataUpdate_(body[/*path*/'p'],body[/*data*/'d'],/*isMerge=*/true,body['t']);}else if(action==='c'){this.onListenRevoked_(body[/*path*/'p'],body[/*query*/'q']);}else if(action==='ac'){this.onAuthRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);}else if(action==='apc'){this.onAppCheckRevoked_(body[/*status code*/'s'],body[/* explanation */'d']);}else if(action==='sd'){this.onSecurityDebugPacket_(body);}else{error('Unrecognized action received from server: '+stringify(action)+'\\nAre you using the latest client?');}}},{key:\"onReady_\",value:function onReady_(timestamp,sessionId){this.log_('connection ready');this.connected_=true;this.lastConnectionEstablishedTime_=new Date().getTime();this.handleTimestamp_(timestamp);this.lastSessionId=sessionId;if(this.firstConnection_){this.sendConnectStats_();}this.restoreState_();this.firstConnection_=false;this.onConnectStatus_(true);}},{key:\"scheduleConnect_\",value:function scheduleConnect_(timeout){var _this28=this;assert(!this.realtime_,\"Scheduling a connect when we're already connected/ing?\");if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);}// NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n// Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\nthis.establishConnectionTimer_=setTimeout(function(){_this28.establishConnectionTimer_=null;_this28.establishConnection_();// eslint-disable-next-line @typescript-eslint/no-explicit-any\n},Math.floor(timeout));}},{key:\"initConnection_\",value:function initConnection_(){if(!this.realtime_&&this.firstConnection_){this.scheduleConnect_(0);}}},{key:\"onVisible_\",value:function onVisible_(visible){// NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\nif(visible&&!this.visible_&&this.reconnectDelay_===this.maxReconnectDelay_){this.log_('Window became visible.  Reducing delay.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}this.visible_=visible;}},{key:\"onOnline_\",value:function onOnline_(online){if(online){this.log_('Browser went online.');this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}else{this.log_('Browser went offline.  Killing connection.');if(this.realtime_){this.realtime_.close();}}}},{key:\"onRealtimeDisconnect_\",value:function onRealtimeDisconnect_(){this.log_('data client disconnected');this.connected_=false;this.realtime_=null;// Since we don't know if our sent transactions succeeded or not, we need to cancel them.\nthis.cancelSentTransactions_();// Clear out the pending requests.\nthis.requestCBHash_={};if(this.shouldReconnect_()){if(!this.visible_){this.log_(\"Window isn't visible.  Delaying reconnect.\");this.reconnectDelay_=this.maxReconnectDelay_;this.lastConnectionAttemptTime_=new Date().getTime();}else if(this.lastConnectionEstablishedTime_){// If we've been connected long enough, reset reconnect delay to minimum.\nvar timeSinceLastConnectSucceeded=new Date().getTime()-this.lastConnectionEstablishedTime_;if(timeSinceLastConnectSucceeded>RECONNECT_DELAY_RESET_TIMEOUT){this.reconnectDelay_=RECONNECT_MIN_DELAY;}this.lastConnectionEstablishedTime_=null;}var timeSinceLastConnectAttempt=new Date().getTime()-this.lastConnectionAttemptTime_;var reconnectDelay=Math.max(0,this.reconnectDelay_-timeSinceLastConnectAttempt);reconnectDelay=Math.random()*reconnectDelay;this.log_('Trying to reconnect in '+reconnectDelay+'ms');this.scheduleConnect_(reconnectDelay);// Adjust reconnect delay for next time.\nthis.reconnectDelay_=Math.min(this.maxReconnectDelay_,this.reconnectDelay_*RECONNECT_DELAY_MULTIPLIER);}this.onConnectStatus_(false);}},{key:\"establishConnection_\",value:function(){var _establishConnection_=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee(){var _this29=this;var onDataMessage,onReady,_onDisconnect,connId,lastSessionId,canceled,connection,closeFn,sendRequestFn,forceRefresh,_yield$Promise$all,_yield$Promise$all2,authToken,appCheckToken;return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!this.shouldReconnect_()){_context.next=30;break;}this.log_('Making a connection attempt');this.lastConnectionAttemptTime_=new Date().getTime();this.lastConnectionEstablishedTime_=null;onDataMessage=this.onDataMessage_.bind(this);onReady=this.onReady_.bind(this);_onDisconnect=this.onRealtimeDisconnect_.bind(this);connId=this.id+':'+PersistentConnection.nextConnectionId_++;lastSessionId=this.lastSessionId;canceled=false;connection=null;closeFn=function closeFn(){if(connection){connection.close();}else{canceled=true;_onDisconnect();}};sendRequestFn=function sendRequestFn(msg){assert(connection,\"sendRequest call when we're not connected not allowed.\");connection.sendRequest(msg);};this.realtime_={close:closeFn,sendRequest:sendRequestFn};forceRefresh=this.forceTokenRefresh_;this.forceTokenRefresh_=false;_context.prev=16;_context.next=19;return Promise.all([this.authTokenProvider_.getToken(forceRefresh),this.appCheckTokenProvider_.getToken(forceRefresh)]);case 19:_yield$Promise$all=_context.sent;_yield$Promise$all2=_slicedToArray(_yield$Promise$all,2);authToken=_yield$Promise$all2[0];appCheckToken=_yield$Promise$all2[1];if(!canceled){log('getToken() completed. Creating connection.');this.authToken_=authToken&&authToken.accessToken;this.appCheckToken_=appCheckToken&&appCheckToken.token;connection=new Connection(connId,this.repoInfo_,this.applicationId_,this.appCheckToken_,this.authToken_,onDataMessage,onReady,_onDisconnect,/* onKill= */function(reason){warn(reason+' ('+_this29.repoInfo_.toString()+')');_this29.interrupt(SERVER_KILL_INTERRUPT_REASON);},lastSessionId);}else{log('getToken() completed but was canceled');}_context.next=30;break;case 26:_context.prev=26;_context.t0=_context[\"catch\"](16);this.log_('Failed to get token: '+_context.t0);if(!canceled){if(this.repoInfo_.nodeAdmin){// This may be a critical error for the Admin Node.js SDK, so log a warning.\n// But getToken() may also just have temporarily failed, so we still want to\n// continue retrying.\nwarn(_context.t0);}closeFn();}case 30:case\"end\":return _context.stop();}}},_callee,this,[[16,26]]);}));function establishConnection_(){return _establishConnection_.apply(this,arguments);}return establishConnection_;}()},{key:\"interrupt\",value:function interrupt(reason){log('Interrupting connection for reason: '+reason);this.interruptReasons_[reason]=true;if(this.realtime_){this.realtime_.close();}else{if(this.establishConnectionTimer_){clearTimeout(this.establishConnectionTimer_);this.establishConnectionTimer_=null;}if(this.connected_){this.onRealtimeDisconnect_();}}}},{key:\"resume\",value:function resume(reason){log('Resuming connection for reason: '+reason);delete this.interruptReasons_[reason];if(isEmpty(this.interruptReasons_)){this.reconnectDelay_=RECONNECT_MIN_DELAY;if(!this.realtime_){this.scheduleConnect_(0);}}}},{key:\"handleTimestamp_\",value:function handleTimestamp_(timestamp){var delta=timestamp-new Date().getTime();this.onServerInfoUpdate_({serverTimeOffset:delta});}},{key:\"cancelSentTransactions_\",value:function cancelSentTransactions_(){for(var i=0;i<this.outstandingPuts_.length;i++){var put=this.outstandingPuts_[i];if(put&&/*hash*/'h'in put.request&&put.queued){if(put.onComplete){put.onComplete('disconnect');}delete this.outstandingPuts_[i];this.outstandingPutCount_--;}}// Clean up array occasionally.\nif(this.outstandingPutCount_===0){this.outstandingPuts_=[];}}},{key:\"onListenRevoked_\",value:function onListenRevoked_(pathString,query){// Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\nvar queryId;if(!query){queryId='default';}else{queryId=query.map(function(q){return ObjectToUniqueKey(q);}).join('$');}var listen=this.removeListen_(pathString,queryId);if(listen&&listen.onComplete){listen.onComplete('permission_denied');}}},{key:\"removeListen_\",value:function removeListen_(pathString,queryId){var normalizedPathString=new Path(pathString).toString();// normalize path.\nvar listen;if(this.listens.has(normalizedPathString)){var _map=this.listens.get(normalizedPathString);listen=_map.get(queryId);_map.delete(queryId);if(_map.size===0){this.listens.delete(normalizedPathString);}}else{// all listens for this path has already been removed\nlisten=undefined;}return listen;}},{key:\"onAuthRevoked_\",value:function onAuthRevoked_(statusCode,explanation){log('Auth token revoked: '+statusCode+'/'+explanation);this.authToken_=null;this.forceTokenRefresh_=true;this.realtime_.close();if(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the\n// retry period since oauth tokens will report as \"invalid\" if they're\n// just expired. Plus there may be transient issues that resolve themselves.\nthis.invalidAuthTokenCount_++;if(this.invalidAuthTokenCount_>=INVALID_TOKEN_THRESHOLD){// Set a long reconnect delay because recovery is unlikely\nthis.reconnectDelay_=RECONNECT_MAX_DELAY_FOR_ADMINS;// Notify the auth token provider that the token is invalid, which will log\n// a warning\nthis.authTokenProvider_.notifyForInvalidToken();}}}},{key:\"onAppCheckRevoked_\",value:function onAppCheckRevoked_(statusCode,explanation){log('App check token revoked: '+statusCode+'/'+explanation);this.appCheckToken_=null;this.forceTokenRefresh_=true;// Note: We don't close the connection as the developer may not have\n// enforcement enabled. The backend closes connections with enforcements.\nif(statusCode==='invalid_token'||statusCode==='permission_denied'){// We'll wait a couple times before logging the warning / increasing the\n// retry period since oauth tokens will report as \"invalid\" if they're\n// just expired. Plus there may be transient issues that resolve themselves.\nthis.invalidAppCheckTokenCount_++;if(this.invalidAppCheckTokenCount_>=INVALID_TOKEN_THRESHOLD){this.appCheckTokenProvider_.notifyForInvalidToken();}}}},{key:\"onSecurityDebugPacket_\",value:function onSecurityDebugPacket_(body){if(this.securityDebugCallback_){this.securityDebugCallback_(body);}else{if('msg'in body){console.log('FIREBASE: '+body['msg'].replace('\\n','\\nFIREBASE: '));}}}},{key:\"restoreState_\",value:function restoreState_(){//Re-authenticate ourselves if we have a credential stored.\nthis.tryAuth();this.tryAppCheck();// Puts depend on having received the corresponding data update from the server before they complete, so we must\n// make sure to send listens before puts.\nvar _iterator2=_createForOfIteratorHelper(this.listens.values()),_step2;try{for(_iterator2.s();!(_step2=_iterator2.n()).done;){var queries=_step2.value;var _iterator3=_createForOfIteratorHelper(queries.values()),_step3;try{for(_iterator3.s();!(_step3=_iterator3.n()).done;){var listenSpec=_step3.value;this.sendListen_(listenSpec);}}catch(err){_iterator3.e(err);}finally{_iterator3.f();}}}catch(err){_iterator2.e(err);}finally{_iterator2.f();}for(var i=0;i<this.outstandingPuts_.length;i++){if(this.outstandingPuts_[i]){this.sendPut_(i);}}while(this.onDisconnectRequestQueue_.length){var request=this.onDisconnectRequestQueue_.shift();this.sendOnDisconnect_(request.action,request.pathString,request.data,request.onComplete);}for(var _i3=0;_i3<this.outstandingGets_.length;_i3++){if(this.outstandingGets_[_i3]){this.sendGet_(_i3);}}}/**\r\n     * Sends client stats for first connection\r\n     */},{key:\"sendConnectStats_\",value:function sendConnectStats_(){var stats={};var clientName='js';if(isNodeSdk()){if(this.repoInfo_.nodeAdmin){clientName='admin_node';}else{clientName='node';}}stats['sdk.'+clientName+'.'+SDK_VERSION.replace(/\\./g,'-')]=1;if(isMobileCordova()){stats['framework.cordova']=1;}else if(isReactNative()){stats['framework.reactnative']=1;}this.reportStats(stats);}},{key:\"shouldReconnect_\",value:function shouldReconnect_(){var online=OnlineMonitor.getInstance().currentlyOnline();return isEmpty(this.interruptReasons_)&&online;}}],[{key:\"warnOnListenWarnings_\",value:function warnOnListenWarnings_(payload,query){if(payload&&_typeof(payload)==='object'&&contains(payload,'w')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar warnings=safeGet(payload,'w');if(Array.isArray(warnings)&&~warnings.indexOf('no_index')){var indexSpec='\".indexOn\": \"'+query._queryParams.getIndex().toString()+'\"';var indexPath=query._path.toString();warn(\"Using an unspecified index. Your data will be downloaded and \"+\"filtered on the client. Consider adding \".concat(indexSpec,\" at \")+\"\".concat(indexPath,\" to your security rules for better performance.\"));}}}}]);return PersistentConnection;}(ServerActions);PersistentConnection.nextPersistentConnectionId_=0;/**\r\n * Counter for number of connections created. Mainly used for tagging in the logs\r\n */PersistentConnection.nextConnectionId_=0;/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var NamedNode=/*#__PURE__*/function(){function NamedNode(name,node){_classCallCheck(this,NamedNode);this.name=name;this.node=node;}_createClass(NamedNode,null,[{key:\"Wrap\",value:function Wrap(name,node){return new NamedNode(name,node);}}]);return NamedNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Index=/*#__PURE__*/function(){function Index(){_classCallCheck(this,Index);}_createClass(Index,[{key:\"getCompare\",value:/**\r\n     * @returns A standalone comparison function for\r\n     * this index\r\n     */function getCompare(){return this.compare.bind(this);}/**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     *\r\n     * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */},{key:\"indexedValueChanged\",value:function indexedValueChanged(oldNode,newNode){var oldWrapped=new NamedNode(MIN_NAME,oldNode);var newWrapped=new NamedNode(MIN_NAME,newNode);return this.compare(oldWrapped,newWrapped)!==0;}/**\r\n     * @returns a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */},{key:\"minPost\",value:function minPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;}}]);return Index;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __EMPTY_NODE;var KeyIndex=/*#__PURE__*/function(_Index){_inherits(KeyIndex,_Index);var _super4=_createSuper(KeyIndex);function KeyIndex(){_classCallCheck(this,KeyIndex);return _super4.apply(this,arguments);}_createClass(KeyIndex,[{key:\"compare\",value:function compare(a,b){return nameCompare(a.name,b.name);}},{key:\"isDefinedOn\",value:function isDefinedOn(node){// We could probably return true here (since every node has a key), but it's never called\n// so just leaving unimplemented for now.\nthrow assertionError('KeyIndex.isDefinedOn not expected to be called.');}},{key:\"indexedValueChanged\",value:function indexedValueChanged(oldNode,newNode){return false;// The key for a node never changes.\n}},{key:\"minPost\",value:function minPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;}},{key:\"maxPost\",value:function maxPost(){// TODO: This should really be created once and cached in a static property, but\n// NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\nreturn new NamedNode(MAX_NAME,__EMPTY_NODE);}},{key:\"makePost\",value:function makePost(indexValue,name){assert(typeof indexValue==='string','KeyIndex indexValue must always be a string.');// We just use empty node, but it'll never be compared, since our comparator only looks at name.\nreturn new NamedNode(indexValue,__EMPTY_NODE);}/**\r\n     * @returns String representation for inclusion in a query spec\r\n     */},{key:\"toString\",value:function toString(){return'.key';}}],[{key:\"__EMPTY_NODE\",get:function get(){return __EMPTY_NODE;},set:function set(val){__EMPTY_NODE=val;}}]);return KeyIndex;}(Index);var KEY_INDEX=new KeyIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An iterator over an LLRBNode.\r\n */var SortedMapIterator=/*#__PURE__*/function(){/**\r\n     * @param node - Node to iterate.\r\n     * @param isReverse_ - Whether or not to iterate in reverse\r\n     */function SortedMapIterator(node,startKey,comparator,isReverse_){var resultGenerator_=arguments.length>4&&arguments[4]!==undefined?arguments[4]:null;_classCallCheck(this,SortedMapIterator);this.isReverse_=isReverse_;this.resultGenerator_=resultGenerator_;this.nodeStack_=[];var cmp=1;while(!node.isEmpty()){node=node;cmp=startKey?comparator(node.key,startKey):1;// flip the comparison if we're going in reverse\nif(isReverse_){cmp*=-1;}if(cmp<0){// This node is less than our start key. ignore it\nif(this.isReverse_){node=node.left;}else{node=node.right;}}else if(cmp===0){// This node is exactly equal to our start key. Push it on the stack, but stop iterating;\nthis.nodeStack_.push(node);break;}else{// This node is greater than our start key, add it to the stack and move to the next one\nthis.nodeStack_.push(node);if(this.isReverse_){node=node.right;}else{node=node.left;}}}}_createClass(SortedMapIterator,[{key:\"getNext\",value:function getNext(){if(this.nodeStack_.length===0){return null;}var node=this.nodeStack_.pop();var result;if(this.resultGenerator_){result=this.resultGenerator_(node.key,node.value);}else{result={key:node.key,value:node.value};}if(this.isReverse_){node=node.left;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.right;}}else{node=node.right;while(!node.isEmpty()){this.nodeStack_.push(node);node=node.left;}}return result;}},{key:\"hasNext\",value:function hasNext(){return this.nodeStack_.length>0;}},{key:\"peek\",value:function peek(){if(this.nodeStack_.length===0){return null;}var node=this.nodeStack_[this.nodeStack_.length-1];if(this.resultGenerator_){return this.resultGenerator_(node.key,node.value);}else{return{key:node.key,value:node.value};}}}]);return SortedMapIterator;}();/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */var LLRBNode=/*#__PURE__*/function(){/**\r\n     * @param key - Key associated with this node.\r\n     * @param value - Value associated with this node.\r\n     * @param color - Whether this node is red.\r\n     * @param left - Left child.\r\n     * @param right - Right child.\r\n     */function LLRBNode(key,value,color,left,right){_classCallCheck(this,LLRBNode);this.key=key;this.value=value;this.color=color!=null?color:LLRBNode.RED;this.left=left!=null?left:SortedMap.EMPTY_NODE;this.right=right!=null?right:SortedMap.EMPTY_NODE;}/**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param key - New key for the node, or null.\r\n     * @param value - New value for the node, or null.\r\n     * @param color - New color for the node, or null.\r\n     * @param left - New left child for the node, or null.\r\n     * @param right - New right child for the node, or null.\r\n     * @returns The node copy.\r\n     */_createClass(LLRBNode,[{key:\"copy\",value:function copy(key,value,color,left,right){return new LLRBNode(key!=null?key:this.key,value!=null?value:this.value,color!=null?color:this.color,left!=null?left:this.left,right!=null?right:this.right);}/**\r\n     * @returns The total number of nodes in the tree.\r\n     */},{key:\"count\",value:function count(){return this.left.count()+1+this.right.count();}/**\r\n     * @returns True if the tree is empty.\r\n     */},{key:\"isEmpty\",value:function isEmpty(){return false;}/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */},{key:\"inorderTraversal\",value:function inorderTraversal(action){return this.left.inorderTraversal(action)||!!action(this.key,this.value)||this.right.inorderTraversal(action);}/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */},{key:\"reverseTraversal\",value:function reverseTraversal(action){return this.right.reverseTraversal(action)||action(this.key,this.value)||this.left.reverseTraversal(action);}/**\r\n     * @returns The minimum node in the tree.\r\n     */},{key:\"min_\",value:function min_(){if(this.left.isEmpty()){return this;}else{return this.left.min_();}}/**\r\n     * @returns The maximum key in the tree.\r\n     */},{key:\"minKey\",value:function minKey(){return this.min_().key;}/**\r\n     * @returns The maximum key in the tree.\r\n     */},{key:\"maxKey\",value:function maxKey(){if(this.right.isEmpty()){return this.key;}else{return this.right.maxKey();}}/**\r\n     * @param key - Key to insert.\r\n     * @param value - Value to insert.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the key/value added.\r\n     */},{key:\"insert\",value:function insert(key,value,comparator){var n=this;var cmp=comparator(key,n.key);if(cmp<0){n=n.copy(null,null,null,n.left.insert(key,value,comparator),null);}else if(cmp===0){n=n.copy(null,value,null,null,null);}else{n=n.copy(null,null,null,null,n.right.insert(key,value,comparator));}return n.fixUp_();}/**\r\n     * @returns New tree, with the minimum key removed.\r\n     */},{key:\"removeMin_\",value:function removeMin_(){if(this.left.isEmpty()){return SortedMap.EMPTY_NODE;}var n=this;if(!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.removeMin_(),null);return n.fixUp_();}/**\r\n     * @param key - The key of the item to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with the specified item removed.\r\n     */},{key:\"remove\",value:function remove(key,comparator){var n,smallest;n=this;if(comparator(key,n.key)<0){if(!n.left.isEmpty()&&!n.left.isRed_()&&!n.left.left.isRed_()){n=n.moveRedLeft_();}n=n.copy(null,null,null,n.left.remove(key,comparator),null);}else{if(n.left.isRed_()){n=n.rotateRight_();}if(!n.right.isEmpty()&&!n.right.isRed_()&&!n.right.left.isRed_()){n=n.moveRedRight_();}if(comparator(key,n.key)===0){if(n.right.isEmpty()){return SortedMap.EMPTY_NODE;}else{smallest=n.right.min_();n=n.copy(smallest.key,smallest.value,null,null,n.right.removeMin_());}}n=n.copy(null,null,null,null,n.right.remove(key,comparator));}return n.fixUp_();}/**\r\n     * @returns Whether this is a RED node.\r\n     */},{key:\"isRed_\",value:function isRed_(){return this.color;}/**\r\n     * @returns New tree after performing any needed rotations.\r\n     */},{key:\"fixUp_\",value:function fixUp_(){var n=this;if(n.right.isRed_()&&!n.left.isRed_()){n=n.rotateLeft_();}if(n.left.isRed_()&&n.left.left.isRed_()){n=n.rotateRight_();}if(n.left.isRed_()&&n.right.isRed_()){n=n.colorFlip_();}return n;}/**\r\n     * @returns New tree, after moveRedLeft.\r\n     */},{key:\"moveRedLeft_\",value:function moveRedLeft_(){var n=this.colorFlip_();if(n.right.left.isRed_()){n=n.copy(null,null,null,null,n.right.rotateRight_());n=n.rotateLeft_();n=n.colorFlip_();}return n;}/**\r\n     * @returns New tree, after moveRedRight.\r\n     */},{key:\"moveRedRight_\",value:function moveRedRight_(){var n=this.colorFlip_();if(n.left.left.isRed_()){n=n.rotateRight_();n=n.colorFlip_();}return n;}/**\r\n     * @returns New tree, after rotateLeft.\r\n     */},{key:\"rotateLeft_\",value:function rotateLeft_(){var nl=this.copy(null,null,LLRBNode.RED,null,this.right.left);return this.right.copy(null,null,this.color,nl,null);}/**\r\n     * @returns New tree, after rotateRight.\r\n     */},{key:\"rotateRight_\",value:function rotateRight_(){var nr=this.copy(null,null,LLRBNode.RED,this.left.right,null);return this.left.copy(null,null,this.color,null,nr);}/**\r\n     * @returns Newt ree, after colorFlip.\r\n     */},{key:\"colorFlip_\",value:function colorFlip_(){var left=this.left.copy(null,null,!this.left.color,null,null);var right=this.right.copy(null,null,!this.right.color,null,null);return this.copy(null,null,!this.color,left,right);}/**\r\n     * For testing.\r\n     *\r\n     * @returns True if all is well.\r\n     */},{key:\"checkMaxDepth_\",value:function checkMaxDepth_(){var blackDepth=this.check_();return Math.pow(2.0,blackDepth)<=this.count()+1;}},{key:\"check_\",value:function check_(){if(this.isRed_()&&this.left.isRed_()){throw new Error('Red node has red child('+this.key+','+this.value+')');}if(this.right.isRed_()){throw new Error('Right child of ('+this.key+','+this.value+') is red');}var blackDepth=this.left.check_();if(blackDepth!==this.right.check_()){throw new Error('Black depths differ');}else{return blackDepth+(this.isRed_()?0:1);}}}]);return LLRBNode;}();LLRBNode.RED=true;LLRBNode.BLACK=false;/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */var LLRBEmptyNode=/*#__PURE__*/function(){function LLRBEmptyNode(){_classCallCheck(this,LLRBEmptyNode);}_createClass(LLRBEmptyNode,[{key:\"copy\",value:/**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @returns The node copy.\r\n     */function copy(key,value,color,left,right){return this;}/**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item added.\r\n     */},{key:\"insert\",value:function insert(key,value,comparator){return new LLRBNode(key,value,null);}/**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @param comparator - Comparator.\r\n     * @returns New tree, with item removed.\r\n     */},{key:\"remove\",value:function remove(key,comparator){return this;}/**\r\n     * @returns The total number of nodes in the tree.\r\n     */},{key:\"count\",value:function count(){return 0;}/**\r\n     * @returns True if the tree is empty.\r\n     */},{key:\"isEmpty\",value:function isEmpty(){return true;}/**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */},{key:\"inorderTraversal\",value:function inorderTraversal(action){return false;}/**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param action - Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @returns True if traversal was aborted.\r\n     */},{key:\"reverseTraversal\",value:function reverseTraversal(action){return false;}},{key:\"minKey\",value:function minKey(){return null;}},{key:\"maxKey\",value:function maxKey(){return null;}},{key:\"check_\",value:function check_(){return 0;}/**\r\n     * @returns Whether this node is red.\r\n     */},{key:\"isRed_\",value:function isRed_(){return false;}}]);return LLRBEmptyNode;}();/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */var SortedMap=/*#__PURE__*/function(){/**\r\n     * @param comparator_ - Key comparator.\r\n     * @param root_ - Optional root node for the map.\r\n     */function SortedMap(comparator_){var root_=arguments.length>1&&arguments[1]!==undefined?arguments[1]:SortedMap.EMPTY_NODE;_classCallCheck(this,SortedMap);this.comparator_=comparator_;this.root_=root_;}/**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param key - Key to be added.\r\n     * @param value - Value to be added.\r\n     * @returns New map, with item added.\r\n     */_createClass(SortedMap,[{key:\"insert\",value:function insert(key,value){return new SortedMap(this.comparator_,this.root_.insert(key,value,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));}/**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param key - The key to remove.\r\n     * @returns New map, with item removed.\r\n     */},{key:\"remove\",value:function remove(key){return new SortedMap(this.comparator_,this.root_.remove(key,this.comparator_).copy(null,null,LLRBNode.BLACK,null,null));}/**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param key - The key to look up.\r\n     * @returns The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */},{key:\"get\",value:function get(key){var cmp;var node=this.root_;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){return node.value;}else if(cmp<0){node=node.left;}else if(cmp>0){node=node.right;}}return null;}/**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param key - The key to find the predecessor of\r\n     * @returns The predecessor key.\r\n     */},{key:\"getPredecessorKey\",value:function getPredecessorKey(key){var cmp,node=this.root_,rightParent=null;while(!node.isEmpty()){cmp=this.comparator_(key,node.key);if(cmp===0){if(!node.left.isEmpty()){node=node.left;while(!node.right.isEmpty()){node=node.right;}return node.key;}else if(rightParent){return rightParent.key;}else{return null;// first item.\n}}else if(cmp<0){node=node.left;}else if(cmp>0){rightParent=node;node=node.right;}}throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');}/**\r\n     * @returns True if the map is empty.\r\n     */},{key:\"isEmpty\",value:function isEmpty(){return this.root_.isEmpty();}/**\r\n     * @returns The total number of nodes in the map.\r\n     */},{key:\"count\",value:function count(){return this.root_.count();}/**\r\n     * @returns The minimum key in the map.\r\n     */},{key:\"minKey\",value:function minKey(){return this.root_.minKey();}/**\r\n     * @returns The maximum key in the map.\r\n     */},{key:\"maxKey\",value:function maxKey(){return this.root_.maxKey();}/**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */},{key:\"inorderTraversal\",value:function inorderTraversal(action){return this.root_.inorderTraversal(action);}/**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param action - Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @returns True if the traversal was aborted.\r\n     */},{key:\"reverseTraversal\",value:function reverseTraversal(action){return this.root_.reverseTraversal(action);}/**\r\n     * Returns an iterator over the SortedMap.\r\n     * @returns The iterator.\r\n     */},{key:\"getIterator\",value:function getIterator(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,false,resultGenerator);}},{key:\"getIteratorFrom\",value:function getIteratorFrom(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,false,resultGenerator);}},{key:\"getReverseIteratorFrom\",value:function getReverseIteratorFrom(key,resultGenerator){return new SortedMapIterator(this.root_,key,this.comparator_,true,resultGenerator);}},{key:\"getReverseIterator\",value:function getReverseIterator(resultGenerator){return new SortedMapIterator(this.root_,null,this.comparator_,true,resultGenerator);}}]);return SortedMap;}();/**\r\n * Always use the same empty node, to reduce memory.\r\n */SortedMap.EMPTY_NODE=new LLRBEmptyNode();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function NAME_ONLY_COMPARATOR(left,right){return nameCompare(left.name,right.name);}function NAME_COMPARATOR(left,right){return nameCompare(left,right);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var MAX_NODE$2;function setMaxNode$1(val){MAX_NODE$2=val;}var priorityHashText=function priorityHashText(priority){if(typeof priority==='number'){return'number:'+doubleToIEEE754String(priority);}else{return'string:'+priority;}};/**\r\n * Validates that a priority snapshot Node is valid.\r\n */var validatePriorityNode=function validatePriorityNode(priorityNode){if(priorityNode.isLeafNode()){var val=priorityNode.val();assert(typeof val==='string'||typeof val==='number'||_typeof(val)==='object'&&contains(val,'.sv'),'Priority must be a string or number.');}else{assert(priorityNode===MAX_NODE$2||priorityNode.isEmpty(),'priority of unexpected type.');}// Don't call getPriority() on MAX_NODE to avoid hitting assertion.\nassert(priorityNode===MAX_NODE$2||priorityNode.getPriority().isEmpty(),\"Priority nodes can't have a priority of their own.\");};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var __childrenNodeConstructor;/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */var LeafNode=/*#__PURE__*/function(){/**\r\n     * @param value_ - The value to store in this leaf node. The object type is\r\n     * possible in the event of a deferred value\r\n     * @param priorityNode_ - The priority of this node.\r\n     */function LeafNode(value_){var priorityNode_=arguments.length>1&&arguments[1]!==undefined?arguments[1]:LeafNode.__childrenNodeConstructor.EMPTY_NODE;_classCallCheck(this,LeafNode);this.value_=value_;this.priorityNode_=priorityNode_;this.lazyHash_=null;assert(this.value_!==undefined&&this.value_!==null,\"LeafNode shouldn't be created with null/undefined value.\");validatePriorityNode(this.priorityNode_);}_createClass(LeafNode,[{key:\"isLeafNode\",value:/** @inheritDoc */function isLeafNode(){return true;}/** @inheritDoc */},{key:\"getPriority\",value:function getPriority(){return this.priorityNode_;}/** @inheritDoc */},{key:\"updatePriority\",value:function updatePriority(newPriorityNode){return new LeafNode(this.value_,newPriorityNode);}/** @inheritDoc */},{key:\"getImmediateChild\",value:function getImmediateChild(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}}/** @inheritDoc */},{key:\"getChild\",value:function getChild(path){if(pathIsEmpty(path)){return this;}else if(pathGetFront(path)==='.priority'){return this.priorityNode_;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE;}}},{key:\"hasChild\",value:function hasChild(){return false;}/** @inheritDoc */},{key:\"getPredecessorChildName\",value:function getPredecessorChildName(childName,childNode){return null;}/** @inheritDoc */},{key:\"updateImmediateChild\",value:function updateImmediateChild(childName,newChildNode){if(childName==='.priority'){return this.updatePriority(newChildNode);}else if(newChildNode.isEmpty()&&childName!=='.priority'){return this;}else{return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName,newChildNode).updatePriority(this.priorityNode_);}}/** @inheritDoc */},{key:\"updateChild\",value:function updateChild(path,newChildNode){var front=pathGetFront(path);if(front===null){return newChildNode;}else if(newChildNode.isEmpty()&&front!=='.priority'){return this;}else{assert(front!=='.priority'||pathGetLength(path)===1,'.priority must be the last token in a path');return this.updateImmediateChild(front,LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(pathPopFront(path),newChildNode));}}/** @inheritDoc */},{key:\"isEmpty\",value:function isEmpty(){return false;}/** @inheritDoc */},{key:\"numChildren\",value:function numChildren(){return 0;}/** @inheritDoc */},{key:\"forEachChild\",value:function forEachChild(index,action){return false;}},{key:\"val\",value:function val(exportFormat){if(exportFormat&&!this.getPriority().isEmpty()){return{'.value':this.getValue(),'.priority':this.getPriority().val()};}else{return this.getValue();}}/** @inheritDoc */},{key:\"hash\",value:function hash(){if(this.lazyHash_===null){var toHash='';if(!this.priorityNode_.isEmpty()){toHash+='priority:'+priorityHashText(this.priorityNode_.val())+':';}var type=_typeof(this.value_);toHash+=type+':';if(type==='number'){toHash+=doubleToIEEE754String(this.value_);}else{toHash+=this.value_;}this.lazyHash_=sha1(toHash);}return this.lazyHash_;}/**\r\n     * Returns the value of the leaf node.\r\n     * @returns The value of the node.\r\n     */},{key:\"getValue\",value:function getValue(){return this.value_;}},{key:\"compareTo\",value:function compareTo(other){if(other===LeafNode.__childrenNodeConstructor.EMPTY_NODE){return 1;}else if(other instanceof LeafNode.__childrenNodeConstructor){return-1;}else{assert(other.isLeafNode(),'Unknown node type');return this.compareToLeafNode_(other);}}/**\r\n     * Comparison specifically for two leaf nodes\r\n     */},{key:\"compareToLeafNode_\",value:function compareToLeafNode_(otherLeaf){var otherLeafType=_typeof(otherLeaf.value_);var thisLeafType=_typeof(this.value_);var otherIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);var thisIndex=LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);assert(otherIndex>=0,'Unknown leaf type: '+otherLeafType);assert(thisIndex>=0,'Unknown leaf type: '+thisLeafType);if(otherIndex===thisIndex){// Same type, compare values\nif(thisLeafType==='object'){// Deferred value nodes are all equal, but we should also never get to this point...\nreturn 0;}else{// Note that this works because true > false, all others are number or string comparisons\nif(this.value_<otherLeaf.value_){return-1;}else if(this.value_===otherLeaf.value_){return 0;}else{return 1;}}}else{return thisIndex-otherIndex;}}},{key:\"withIndex\",value:function withIndex(){return this;}},{key:\"isIndexed\",value:function isIndexed(){return true;}},{key:\"equals\",value:function equals(other){if(other===this){return true;}else if(other.isLeafNode()){var otherLeaf=other;return this.value_===otherLeaf.value_&&this.priorityNode_.equals(otherLeaf.priorityNode_);}else{return false;}}}],[{key:\"__childrenNodeConstructor\",get:function get(){return __childrenNodeConstructor;},set:function set(val){__childrenNodeConstructor=val;}}]);return LeafNode;}();/**\r\n * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n * the same type, the comparison falls back to their value\r\n */LeafNode.VALUE_TYPE_ORDER=['object','boolean','number','string'];/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var nodeFromJSON$1;var MAX_NODE$1;function setNodeFromJSON(val){nodeFromJSON$1=val;}function setMaxNode(val){MAX_NODE$1=val;}var PriorityIndex=/*#__PURE__*/function(_Index2){_inherits(PriorityIndex,_Index2);var _super5=_createSuper(PriorityIndex);function PriorityIndex(){_classCallCheck(this,PriorityIndex);return _super5.apply(this,arguments);}_createClass(PriorityIndex,[{key:\"compare\",value:function compare(a,b){var aPriority=a.node.getPriority();var bPriority=b.node.getPriority();var indexCmp=aPriority.compareTo(bPriority);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}}},{key:\"isDefinedOn\",value:function isDefinedOn(node){return!node.getPriority().isEmpty();}},{key:\"indexedValueChanged\",value:function indexedValueChanged(oldNode,newNode){return!oldNode.getPriority().equals(newNode.getPriority());}},{key:\"minPost\",value:function minPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;}},{key:\"maxPost\",value:function maxPost(){return new NamedNode(MAX_NAME,new LeafNode('[PRIORITY-POST]',MAX_NODE$1));}},{key:\"makePost\",value:function makePost(indexValue,name){var priorityNode=nodeFromJSON$1(indexValue);return new NamedNode(name,new LeafNode('[PRIORITY-POST]',priorityNode));}/**\r\n     * @returns String representation for inclusion in a query spec\r\n     */},{key:\"toString\",value:function toString(){return'.priority';}}]);return PriorityIndex;}(Index);var PRIORITY_INDEX=new PriorityIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var LOG_2=Math.log(2);var Base12Num=/*#__PURE__*/function(){function Base12Num(length){_classCallCheck(this,Base12Num);var logBase2=function logBase2(num){return(// eslint-disable-next-line @typescript-eslint/no-explicit-any\nparseInt(Math.log(num)/LOG_2,10));};var bitMask=function bitMask(bits){return parseInt(Array(bits+1).join('1'),2);};this.count=logBase2(length+1);this.current_=this.count-1;var mask=bitMask(this.count);this.bits_=length+1&mask;}_createClass(Base12Num,[{key:\"nextBitIsOne\",value:function nextBitIsOne(){//noinspection JSBitwiseOperatorUsage\nvar result=!(this.bits_&0x1<<this.current_);this.current_--;return result;}}]);return Base12Num;}();/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @param childList - Unsorted list of children\r\n * @param cmp - The comparison method to be used\r\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\r\n * type is not NamedNode\r\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\r\n */var buildChildSet=function buildChildSet(childList,cmp,keyFn,mapSortFn){childList.sort(cmp);var buildBalancedTree=function buildBalancedTree(low,high){var length=high-low;var namedNode;var key;if(length===0){return null;}else if(length===1){namedNode=childList[low];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,null,null);}else{// eslint-disable-next-line @typescript-eslint/no-explicit-any\nvar middle=parseInt(length/2,10)+low;var left=buildBalancedTree(low,middle);var right=buildBalancedTree(middle+1,high);namedNode=childList[middle];key=keyFn?keyFn(namedNode):namedNode;return new LLRBNode(key,namedNode.node,LLRBNode.BLACK,left,right);}};var buildFrom12Array=function buildFrom12Array(base12){var node=null;var root=null;var index=childList.length;var buildPennant=function buildPennant(chunkSize,color){var low=index-chunkSize;var high=index;index-=chunkSize;var childTree=buildBalancedTree(low+1,high);var namedNode=childList[low];var key=keyFn?keyFn(namedNode):namedNode;attachPennant(new LLRBNode(key,namedNode.node,color,null,childTree));};var attachPennant=function attachPennant(pennant){if(node){node.left=pennant;node=pennant;}else{root=pennant;node=pennant;}};for(var i=0;i<base12.count;++i){var isOne=base12.nextBitIsOne();// The number of nodes taken in each slice is 2^(arr.length - (i + 1))\nvar chunkSize=Math.pow(2,base12.count-(i+1));if(isOne){buildPennant(chunkSize,LLRBNode.BLACK);}else{// current == 2\nbuildPennant(chunkSize,LLRBNode.BLACK);buildPennant(chunkSize,LLRBNode.RED);}}return root;};var base12=new Base12Num(childList.length);var root=buildFrom12Array(base12);// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn new SortedMap(mapSortFn||cmp,root);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var _defaultIndexMap;var fallbackObject={};var IndexMap=/*#__PURE__*/function(){function IndexMap(indexes_,indexSet_){_classCallCheck(this,IndexMap);this.indexes_=indexes_;this.indexSet_=indexSet_;}/**\r\n     * The default IndexMap for nodes without a priority\r\n     */_createClass(IndexMap,[{key:\"get\",value:function get(indexKey){var sortedMap=safeGet(this.indexes_,indexKey);if(!sortedMap){throw new Error('No index defined for '+indexKey);}if(sortedMap instanceof SortedMap){return sortedMap;}else{// The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n// regular child map\nreturn null;}}},{key:\"hasIndex\",value:function hasIndex(indexDefinition){return contains(this.indexSet_,indexDefinition.toString());}},{key:\"addIndex\",value:function addIndex(indexDefinition,existingChildren){assert(indexDefinition!==KEY_INDEX,\"KeyIndex always exists and isn't meant to be added to the IndexMap.\");var childList=[];var sawIndexedValue=false;var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){sawIndexedValue=sawIndexedValue||indexDefinition.isDefinedOn(next.node);childList.push(next);next=iter.getNext();}var newIndex;if(sawIndexedValue){newIndex=buildChildSet(childList,indexDefinition.getCompare());}else{newIndex=fallbackObject;}var indexName=indexDefinition.toString();var newIndexSet=Object.assign({},this.indexSet_);newIndexSet[indexName]=indexDefinition;var newIndexes=Object.assign({},this.indexes_);newIndexes[indexName]=newIndex;return new IndexMap(newIndexes,newIndexSet);}/**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */},{key:\"addToIndexes\",value:function addToIndexes(namedNode,existingChildren){var _this30=this;var newIndexes=map(this.indexes_,function(indexedChildren,indexName){var index=safeGet(_this30.indexSet_,indexName);assert(index,'Missing index implementation for '+indexName);if(indexedChildren===fallbackObject){// Check to see if we need to index everything\nif(index.isDefinedOn(namedNode.node)){// We need to build this index\nvar childList=[];var iter=existingChildren.getIterator(NamedNode.Wrap);var next=iter.getNext();while(next){if(next.name!==namedNode.name){childList.push(next);}next=iter.getNext();}childList.push(namedNode);return buildChildSet(childList,index.getCompare());}else{// No change, this remains a fallback\nreturn fallbackObject;}}else{var existingSnap=existingChildren.get(namedNode.name);var newChildren=indexedChildren;if(existingSnap){newChildren=newChildren.remove(new NamedNode(namedNode.name,existingSnap));}return newChildren.insert(namedNode,namedNode.node);}});return new IndexMap(newIndexes,this.indexSet_);}/**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */},{key:\"removeFromIndexes\",value:function removeFromIndexes(namedNode,existingChildren){var newIndexes=map(this.indexes_,function(indexedChildren){if(indexedChildren===fallbackObject){// This is the fallback. Just return it, nothing to do in this case\nreturn indexedChildren;}else{var existingSnap=existingChildren.get(namedNode.name);if(existingSnap){return indexedChildren.remove(new NamedNode(namedNode.name,existingSnap));}else{// No record of this child\nreturn indexedChildren;}}});return new IndexMap(newIndexes,this.indexSet_);}}],[{key:\"Default\",get:function get(){assert(fallbackObject&&PRIORITY_INDEX,'ChildrenNode.ts has not been loaded');_defaultIndexMap=_defaultIndexMap||new IndexMap({'.priority':fallbackObject},{'.priority':PRIORITY_INDEX});return _defaultIndexMap;}}]);return IndexMap;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // TODO: For memory savings, don't store priorityNode_ if it's empty.\nvar EMPTY_NODE;/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n */var ChildrenNode=/*#__PURE__*/function(){/**\r\n     * @param children_ - List of children of this node..\r\n     * @param priorityNode_ - The priority of this node (as a snapshot node).\r\n     */function ChildrenNode(children_,priorityNode_,indexMap_){_classCallCheck(this,ChildrenNode);this.children_=children_;this.priorityNode_=priorityNode_;this.indexMap_=indexMap_;this.lazyHash_=null;/**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */if(this.priorityNode_){validatePriorityNode(this.priorityNode_);}if(this.children_.isEmpty()){assert(!this.priorityNode_||this.priorityNode_.isEmpty(),'An empty node cannot have a priority');}}_createClass(ChildrenNode,[{key:\"isLeafNode\",value:/** @inheritDoc */function isLeafNode(){return false;}/** @inheritDoc */},{key:\"getPriority\",value:function getPriority(){return this.priorityNode_||EMPTY_NODE;}/** @inheritDoc */},{key:\"updatePriority\",value:function updatePriority(newPriorityNode){if(this.children_.isEmpty()){// Don't allow priorities on empty nodes\nreturn this;}else{return new ChildrenNode(this.children_,newPriorityNode,this.indexMap_);}}/** @inheritDoc */},{key:\"getImmediateChild\",value:function getImmediateChild(childName){// Hack to treat priority as a regular child\nif(childName==='.priority'){return this.getPriority();}else{var _child=this.children_.get(childName);return _child===null?EMPTY_NODE:_child;}}/** @inheritDoc */},{key:\"getChild\",value:function getChild(path){var front=pathGetFront(path);if(front===null){return this;}return this.getImmediateChild(front).getChild(pathPopFront(path));}/** @inheritDoc */},{key:\"hasChild\",value:function hasChild(childName){return this.children_.get(childName)!==null;}/** @inheritDoc */},{key:\"updateImmediateChild\",value:function updateImmediateChild(childName,newChildNode){assert(newChildNode,'We should always be passing snapshot nodes');if(childName==='.priority'){return this.updatePriority(newChildNode);}else{var namedNode=new NamedNode(childName,newChildNode);var newChildren,newIndexMap;if(newChildNode.isEmpty()){newChildren=this.children_.remove(childName);newIndexMap=this.indexMap_.removeFromIndexes(namedNode,this.children_);}else{newChildren=this.children_.insert(childName,newChildNode);newIndexMap=this.indexMap_.addToIndexes(namedNode,this.children_);}var newPriority=newChildren.isEmpty()?EMPTY_NODE:this.priorityNode_;return new ChildrenNode(newChildren,newPriority,newIndexMap);}}/** @inheritDoc */},{key:\"updateChild\",value:function updateChild(path,newChildNode){var front=pathGetFront(path);if(front===null){return newChildNode;}else{assert(pathGetFront(path)!=='.priority'||pathGetLength(path)===1,'.priority must be the last token in a path');var newImmediateChild=this.getImmediateChild(front).updateChild(pathPopFront(path),newChildNode);return this.updateImmediateChild(front,newImmediateChild);}}/** @inheritDoc */},{key:\"isEmpty\",value:function isEmpty(){return this.children_.isEmpty();}/** @inheritDoc */},{key:\"numChildren\",value:function numChildren(){return this.children_.count();}/** @inheritDoc */},{key:\"val\",value:function val(exportFormat){if(this.isEmpty()){return null;}var obj={};var numKeys=0,maxKey=0,allIntegerKeys=true;this.forEachChild(PRIORITY_INDEX,function(key,childNode){obj[key]=childNode.val(exportFormat);numKeys++;if(allIntegerKeys&&ChildrenNode.INTEGER_REGEXP_.test(key)){maxKey=Math.max(maxKey,Number(key));}else{allIntegerKeys=false;}});if(!exportFormat&&allIntegerKeys&&maxKey<2*numKeys){// convert to array.\nvar array=[];// eslint-disable-next-line guard-for-in\nfor(var key in obj){array[key]=obj[key];}return array;}else{if(exportFormat&&!this.getPriority().isEmpty()){obj['.priority']=this.getPriority().val();}return obj;}}/** @inheritDoc */},{key:\"hash\",value:function hash(){if(this.lazyHash_===null){var toHash='';if(!this.getPriority().isEmpty()){toHash+='priority:'+priorityHashText(this.getPriority().val())+':';}this.forEachChild(PRIORITY_INDEX,function(key,childNode){var childHash=childNode.hash();if(childHash!==''){toHash+=':'+key+':'+childHash;}});this.lazyHash_=toHash===''?'':sha1(toHash);}return this.lazyHash_;}/** @inheritDoc */},{key:\"getPredecessorChildName\",value:function getPredecessorChildName(childName,childNode,index){var idx=this.resolveIndex_(index);if(idx){var _predecessor=idx.getPredecessorKey(new NamedNode(childName,childNode));return _predecessor?_predecessor.name:null;}else{return this.children_.getPredecessorKey(childName);}}},{key:\"getFirstChildName\",value:function getFirstChildName(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var minKey=idx.minKey();return minKey&&minKey.name;}else{return this.children_.minKey();}}},{key:\"getFirstChild\",value:function getFirstChild(indexDefinition){var minKey=this.getFirstChildName(indexDefinition);if(minKey){return new NamedNode(minKey,this.children_.get(minKey));}else{return null;}}/**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     */},{key:\"getLastChildName\",value:function getLastChildName(indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){var maxKey=idx.maxKey();return maxKey&&maxKey.name;}else{return this.children_.maxKey();}}},{key:\"getLastChild\",value:function getLastChild(indexDefinition){var maxKey=this.getLastChildName(indexDefinition);if(maxKey){return new NamedNode(maxKey,this.children_.get(maxKey));}else{return null;}}},{key:\"forEachChild\",value:function forEachChild(index,action){var idx=this.resolveIndex_(index);if(idx){return idx.inorderTraversal(function(wrappedNode){return action(wrappedNode.name,wrappedNode.node);});}else{return this.children_.inorderTraversal(action);}}},{key:\"getIterator\",value:function getIterator(indexDefinition){return this.getIteratorFrom(indexDefinition.minPost(),indexDefinition);}},{key:\"getIteratorFrom\",value:function getIteratorFrom(startPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getIteratorFrom(startPost,function(key){return key;});}else{var iterator=this.children_.getIteratorFrom(startPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,startPost)<0){iterator.getNext();next=iterator.peek();}return iterator;}}},{key:\"getReverseIterator\",value:function getReverseIterator(indexDefinition){return this.getReverseIteratorFrom(indexDefinition.maxPost(),indexDefinition);}},{key:\"getReverseIteratorFrom\",value:function getReverseIteratorFrom(endPost,indexDefinition){var idx=this.resolveIndex_(indexDefinition);if(idx){return idx.getReverseIteratorFrom(endPost,function(key){return key;});}else{var iterator=this.children_.getReverseIteratorFrom(endPost.name,NamedNode.Wrap);var next=iterator.peek();while(next!=null&&indexDefinition.compare(next,endPost)>0){iterator.getNext();next=iterator.peek();}return iterator;}}},{key:\"compareTo\",value:function compareTo(other){if(this.isEmpty()){if(other.isEmpty()){return 0;}else{return-1;}}else if(other.isLeafNode()||other.isEmpty()){return 1;}else if(other===MAX_NODE){return-1;}else{// Must be another node with children.\nreturn 0;}}},{key:\"withIndex\",value:function withIndex(indexDefinition){if(indexDefinition===KEY_INDEX||this.indexMap_.hasIndex(indexDefinition)){return this;}else{var newIndexMap=this.indexMap_.addIndex(indexDefinition,this.children_);return new ChildrenNode(this.children_,this.priorityNode_,newIndexMap);}}},{key:\"isIndexed\",value:function isIndexed(index){return index===KEY_INDEX||this.indexMap_.hasIndex(index);}},{key:\"equals\",value:function equals(other){if(other===this){return true;}else if(other.isLeafNode()){return false;}else{var otherChildrenNode=other;if(!this.getPriority().equals(otherChildrenNode.getPriority())){return false;}else if(this.children_.count()===otherChildrenNode.children_.count()){var thisIter=this.getIterator(PRIORITY_INDEX);var otherIter=otherChildrenNode.getIterator(PRIORITY_INDEX);var thisCurrent=thisIter.getNext();var otherCurrent=otherIter.getNext();while(thisCurrent&&otherCurrent){if(thisCurrent.name!==otherCurrent.name||!thisCurrent.node.equals(otherCurrent.node)){return false;}thisCurrent=thisIter.getNext();otherCurrent=otherIter.getNext();}return thisCurrent===null&&otherCurrent===null;}else{return false;}}}/**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     */},{key:\"resolveIndex_\",value:function resolveIndex_(indexDefinition){if(indexDefinition===KEY_INDEX){return null;}else{return this.indexMap_.get(indexDefinition.toString());}}}],[{key:\"EMPTY_NODE\",get:function get(){return EMPTY_NODE||(EMPTY_NODE=new ChildrenNode(new SortedMap(NAME_COMPARATOR),null,IndexMap.Default));}}]);return ChildrenNode;}();ChildrenNode.INTEGER_REGEXP_=/^(0|[1-9]\\d*)$/;var MaxNode=/*#__PURE__*/function(_ChildrenNode){_inherits(MaxNode,_ChildrenNode);var _super6=_createSuper(MaxNode);function MaxNode(){_classCallCheck(this,MaxNode);return _super6.call(this,new SortedMap(NAME_COMPARATOR),ChildrenNode.EMPTY_NODE,IndexMap.Default);}_createClass(MaxNode,[{key:\"compareTo\",value:function compareTo(other){if(other===this){return 0;}else{return 1;}}},{key:\"equals\",value:function equals(other){// Not that we every compare it, but MAX_NODE is only ever equal to itself\nreturn other===this;}},{key:\"getPriority\",value:function getPriority(){return this;}},{key:\"getImmediateChild\",value:function getImmediateChild(childName){return ChildrenNode.EMPTY_NODE;}},{key:\"isEmpty\",value:function isEmpty(){return false;}}]);return MaxNode;}(ChildrenNode);/**\r\n * Marker that will sort higher than any other snapshot.\r\n */var MAX_NODE=new MaxNode();Object.defineProperties(NamedNode,{MIN:{value:new NamedNode(MIN_NAME,ChildrenNode.EMPTY_NODE)},MAX:{value:new NamedNode(MAX_NAME,MAX_NODE)}});/**\r\n * Reference Extensions\r\n */KeyIndex.__EMPTY_NODE=ChildrenNode.EMPTY_NODE;LeafNode.__childrenNodeConstructor=ChildrenNode;setMaxNode$1(MAX_NODE);setMaxNode(MAX_NODE);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var USE_HINZE=true;/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param json - JSON to create a node for.\r\n * @param priority - Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n */function nodeFromJSON(json){var priority=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(json===null){return ChildrenNode.EMPTY_NODE;}if(_typeof(json)==='object'&&'.priority'in json){priority=json['.priority'];}assert(priority===null||typeof priority==='string'||typeof priority==='number'||_typeof(priority)==='object'&&'.sv'in priority,'Invalid priority type found: '+_typeof(priority));if(_typeof(json)==='object'&&'.value'in json&&json['.value']!==null){json=json['.value'];}// Valid leaf nodes include non-objects or server-value wrapper objects\nif(_typeof(json)!=='object'||'.sv'in json){var jsonLeaf=json;return new LeafNode(jsonLeaf,nodeFromJSON(priority));}if(!(json instanceof Array)&&USE_HINZE){var children=[];var childrenHavePriority=false;var hinzeJsonObj=json;each(hinzeJsonObj,function(key,child){if(key.substring(0,1)!=='.'){// Ignore metadata nodes\nvar childNode=nodeFromJSON(child);if(!childNode.isEmpty()){childrenHavePriority=childrenHavePriority||!childNode.getPriority().isEmpty();children.push(new NamedNode(key,childNode));}}});if(children.length===0){return ChildrenNode.EMPTY_NODE;}var childSet=buildChildSet(children,NAME_ONLY_COMPARATOR,function(namedNode){return namedNode.name;},NAME_COMPARATOR);if(childrenHavePriority){var sortedChildSet=buildChildSet(children,PRIORITY_INDEX.getCompare());return new ChildrenNode(childSet,nodeFromJSON(priority),new IndexMap({'.priority':sortedChildSet},{'.priority':PRIORITY_INDEX}));}else{return new ChildrenNode(childSet,nodeFromJSON(priority),IndexMap.Default);}}else{var node=ChildrenNode.EMPTY_NODE;each(json,function(key,childData){if(contains(json,key)){if(key.substring(0,1)!=='.'){// ignore metadata nodes.\nvar childNode=nodeFromJSON(childData);if(childNode.isLeafNode()||!childNode.isEmpty()){node=node.updateImmediateChild(key,childNode);}}}});return node.updatePriority(nodeFromJSON(priority));}}setNodeFromJSON(nodeFromJSON);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var PathIndex=/*#__PURE__*/function(_Index3){_inherits(PathIndex,_Index3);var _super7=_createSuper(PathIndex);function PathIndex(indexPath_){var _this31;_classCallCheck(this,PathIndex);_this31=_super7.call(this);_this31.indexPath_=indexPath_;assert(!pathIsEmpty(indexPath_)&&pathGetFront(indexPath_)!=='.priority',\"Can't create PathIndex with empty path or .priority key\");return _this31;}_createClass(PathIndex,[{key:\"extractChild\",value:function extractChild(snap){return snap.getChild(this.indexPath_);}},{key:\"isDefinedOn\",value:function isDefinedOn(node){return!node.getChild(this.indexPath_).isEmpty();}},{key:\"compare\",value:function compare(a,b){var aChild=this.extractChild(a.node);var bChild=this.extractChild(b.node);var indexCmp=aChild.compareTo(bChild);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}}},{key:\"makePost\",value:function makePost(indexValue,name){var valueNode=nodeFromJSON(indexValue);var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,valueNode);return new NamedNode(name,node);}},{key:\"maxPost\",value:function maxPost(){var node=ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_,MAX_NODE);return new NamedNode(MAX_NAME,node);}},{key:\"toString\",value:function toString(){return pathSlice(this.indexPath_,0).join('/');}}]);return PathIndex;}(Index);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ValueIndex=/*#__PURE__*/function(_Index4){_inherits(ValueIndex,_Index4);var _super8=_createSuper(ValueIndex);function ValueIndex(){_classCallCheck(this,ValueIndex);return _super8.apply(this,arguments);}_createClass(ValueIndex,[{key:\"compare\",value:function compare(a,b){var indexCmp=a.node.compareTo(b.node);if(indexCmp===0){return nameCompare(a.name,b.name);}else{return indexCmp;}}},{key:\"isDefinedOn\",value:function isDefinedOn(node){return true;}},{key:\"indexedValueChanged\",value:function indexedValueChanged(oldNode,newNode){return!oldNode.equals(newNode);}},{key:\"minPost\",value:function minPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MIN;}},{key:\"maxPost\",value:function maxPost(){// eslint-disable-next-line @typescript-eslint/no-explicit-any\nreturn NamedNode.MAX;}},{key:\"makePost\",value:function makePost(indexValue,name){var valueNode=nodeFromJSON(indexValue);return new NamedNode(name,valueNode);}/**\r\n     * @returns String representation for inclusion in a query spec\r\n     */},{key:\"toString\",value:function toString(){return'.value';}}]);return ValueIndex;}(Index);var VALUE_INDEX=new ValueIndex();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Modeled after base64 web-safe chars, but ordered by ASCII.\nvar PUSH_CHARS='-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';var MIN_PUSH_CHAR='-';var MAX_PUSH_CHAR='z';var MAX_KEY_LEN=786;/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */var nextPushId=function(){// Timestamp of last push, used to prevent local collisions if you push twice\n// in one ms.\nvar lastPushTime=0;// We generate 72-bits of randomness which get turned into 12 characters and\n// appended to the timestamp to prevent collisions with other clients. We\n// store the last characters we generated because in the event of a collision,\n// we'll use those same characters except \"incremented\" by one.\nvar lastRandChars=[];return function(now){var duplicateTime=now===lastPushTime;lastPushTime=now;var i;var timeStampChars=new Array(8);for(i=7;i>=0;i--){timeStampChars[i]=PUSH_CHARS.charAt(now%64);// NOTE: Can't use << here because javascript will convert to int and lose\n// the upper bits.\nnow=Math.floor(now/64);}assert(now===0,'Cannot push at time == 0');var id=timeStampChars.join('');if(!duplicateTime){for(i=0;i<12;i++){lastRandChars[i]=Math.floor(Math.random()*64);}}else{// If the timestamp hasn't changed since last push, use the same random\n// number, except incremented by 1.\nfor(i=11;i>=0&&lastRandChars[i]===63;i--){lastRandChars[i]=0;}lastRandChars[i]++;}for(i=0;i<12;i++){id+=PUSH_CHARS.charAt(lastRandChars[i]);}assert(id.length===20,'nextPushId: Length should be 20.');return id;};}();var successor=function successor(key){if(key===''+INTEGER_32_MAX){// See https://firebase.google.com/docs/database/web/lists-of-data#data-order\nreturn MIN_PUSH_CHAR;}var keyAsInt=tryParseInt(key);if(keyAsInt!=null){return''+(keyAsInt+1);}var next=new Array(key.length);for(var _i4=0;_i4<next.length;_i4++){next[_i4]=key.charAt(_i4);}if(next.length<MAX_KEY_LEN){next.push(MIN_PUSH_CHAR);return next.join('');}var i=next.length-1;while(i>=0&&next[i]===MAX_PUSH_CHAR){i--;}// `successor` was called on the largest possible key, so return the\n// MAX_NAME, which sorts larger than all keys.\nif(i===-1){return MAX_NAME;}var source=next[i];var sourcePlusOne=PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source)+1);next[i]=sourcePlusOne;return next.slice(0,i+1).join('');};// `key` is assumed to be non-empty.\nvar predecessor=function predecessor(key){if(key===''+INTEGER_32_MIN){return MIN_NAME;}var keyAsInt=tryParseInt(key);if(keyAsInt!=null){return''+(keyAsInt-1);}var next=new Array(key.length);for(var i=0;i<next.length;i++){next[i]=key.charAt(i);}// If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n// smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n// than that, `predecessor(predecessor(key))`, is\n//\n// `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n//   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n//\n// analogous to increment/decrement for base-10 integers.\n//\n// This works because lexigographic comparison works character-by-character,\n// using length as a tie-breaker if one key is a prefix of the other.\nif(next[next.length-1]===MIN_PUSH_CHAR){if(next.length===1){// See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\nreturn''+INTEGER_32_MAX;}delete next[next.length-1];return next.join('');}// Replace the last character with it's immediate predecessor, and\n// fill the suffix of the key with MAX_PUSH_CHAR. This is the\n// lexicographically largest possible key smaller than `key`.\nnext[next.length-1]=PUSH_CHARS.charAt(PUSH_CHARS.indexOf(next[next.length-1])-1);return next.join('')+MAX_PUSH_CHAR.repeat(MAX_KEY_LEN-next.length);};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function changeValue(snapshotNode){return{type:\"value\"/* VALUE */,snapshotNode:snapshotNode};}function changeChildAdded(childName,snapshotNode){return{type:\"child_added\"/* CHILD_ADDED */,snapshotNode:snapshotNode,childName:childName};}function changeChildRemoved(childName,snapshotNode){return{type:\"child_removed\"/* CHILD_REMOVED */,snapshotNode:snapshotNode,childName:childName};}function changeChildChanged(childName,snapshotNode,oldSnap){return{type:\"child_changed\"/* CHILD_CHANGED */,snapshotNode:snapshotNode,childName:childName,oldSnap:oldSnap};}function changeChildMoved(childName,snapshotNode){return{type:\"child_moved\"/* CHILD_MOVED */,snapshotNode:snapshotNode,childName:childName};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n */var IndexedFilter=/*#__PURE__*/function(){function IndexedFilter(index_){_classCallCheck(this,IndexedFilter);this.index_=index_;}_createClass(IndexedFilter,[{key:\"updateChild\",value:function updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator){assert(snap.isIndexed(this.index_),'A node must be indexed if only a child is updated');var oldChild=snap.getImmediateChild(key);// Check if anything actually changed.\nif(oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))){// There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n// In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n// to avoid treating these cases as \"nothing changed.\"\nif(oldChild.isEmpty()===newChild.isEmpty()){// Nothing changed.\n// This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n//assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\nreturn snap;}}if(optChangeAccumulator!=null){if(newChild.isEmpty()){if(snap.hasChild(key)){optChangeAccumulator.trackChildChange(changeChildRemoved(key,oldChild));}else{assert(snap.isLeafNode(),'A child remove without an old child only makes sense on a leaf node');}}else if(oldChild.isEmpty()){optChangeAccumulator.trackChildChange(changeChildAdded(key,newChild));}else{optChangeAccumulator.trackChildChange(changeChildChanged(key,newChild,oldChild));}}if(snap.isLeafNode()&&newChild.isEmpty()){return snap;}else{// Make sure the node is indexed\nreturn snap.updateImmediateChild(key,newChild).withIndex(this.index_);}}},{key:\"updateFullNode\",value:function updateFullNode(oldSnap,newSnap,optChangeAccumulator){if(optChangeAccumulator!=null){if(!oldSnap.isLeafNode()){oldSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!newSnap.hasChild(key)){optChangeAccumulator.trackChildChange(changeChildRemoved(key,childNode));}});}if(!newSnap.isLeafNode()){newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(oldSnap.hasChild(key)){var oldChild=oldSnap.getImmediateChild(key);if(!oldChild.equals(childNode)){optChangeAccumulator.trackChildChange(changeChildChanged(key,childNode,oldChild));}}else{optChangeAccumulator.trackChildChange(changeChildAdded(key,childNode));}});}}return newSnap.withIndex(this.index_);}},{key:\"updatePriority\",value:function updatePriority(oldSnap,newPriority){if(oldSnap.isEmpty()){return ChildrenNode.EMPTY_NODE;}else{return oldSnap.updatePriority(newPriority);}}},{key:\"filtersNodes\",value:function filtersNodes(){return false;}},{key:\"getIndexedFilter\",value:function getIndexedFilter(){return this;}},{key:\"getIndex\",value:function getIndex(){return this.index_;}}]);return IndexedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n */var RangedFilter=/*#__PURE__*/function(){function RangedFilter(params){_classCallCheck(this,RangedFilter);this.indexedFilter_=new IndexedFilter(params.getIndex());this.index_=params.getIndex();this.startPost_=RangedFilter.getStartPost_(params);this.endPost_=RangedFilter.getEndPost_(params);}_createClass(RangedFilter,[{key:\"getStartPost\",value:function getStartPost(){return this.startPost_;}},{key:\"getEndPost\",value:function getEndPost(){return this.endPost_;}},{key:\"matches\",value:function matches(node){return this.index_.compare(this.getStartPost(),node)<=0&&this.index_.compare(node,this.getEndPost())<=0;}},{key:\"updateChild\",value:function updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}return this.indexedFilter_.updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);}},{key:\"updateFullNode\",value:function updateFullNode(oldSnap,newSnap,optChangeAccumulator){if(newSnap.isLeafNode()){// Make sure we have a children node with the correct index, not a leaf node;\nnewSnap=ChildrenNode.EMPTY_NODE;}var filtered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var self=this;newSnap.forEachChild(PRIORITY_INDEX,function(key,childNode){if(!self.matches(new NamedNode(key,childNode))){filtered=filtered.updateImmediateChild(key,ChildrenNode.EMPTY_NODE);}});return this.indexedFilter_.updateFullNode(oldSnap,filtered,optChangeAccumulator);}},{key:\"updatePriority\",value:function updatePriority(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;}},{key:\"filtersNodes\",value:function filtersNodes(){return true;}},{key:\"getIndexedFilter\",value:function getIndexedFilter(){return this.indexedFilter_;}},{key:\"getIndex\",value:function getIndex(){return this.index_;}}],[{key:\"getStartPost_\",value:function getStartPost_(params){if(params.hasStart()){var startName=params.getIndexStartName();return params.getIndex().makePost(params.getIndexStartValue(),startName);}else{return params.getIndex().minPost();}}},{key:\"getEndPost_\",value:function getEndPost_(params){if(params.hasEnd()){var endName=params.getIndexEndName();return params.getIndex().makePost(params.getIndexEndValue(),endName);}else{return params.getIndex().maxPost();}}}]);return RangedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n */var LimitedFilter=/*#__PURE__*/function(){function LimitedFilter(params){_classCallCheck(this,LimitedFilter);this.rangedFilter_=new RangedFilter(params);this.index_=params.getIndex();this.limit_=params.getLimit();this.reverse_=!params.isViewFromLeft();}_createClass(LimitedFilter,[{key:\"updateChild\",value:function updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator){if(!this.rangedFilter_.matches(new NamedNode(key,newChild))){newChild=ChildrenNode.EMPTY_NODE;}if(snap.getImmediateChild(key).equals(newChild)){// No change\nreturn snap;}else if(snap.numChildren()<this.limit_){return this.rangedFilter_.getIndexedFilter().updateChild(snap,key,newChild,affectedPath,source,optChangeAccumulator);}else{return this.fullLimitUpdateChild_(snap,key,newChild,source,optChangeAccumulator);}}},{key:\"updateFullNode\",value:function updateFullNode(oldSnap,newSnap,optChangeAccumulator){var filtered;if(newSnap.isLeafNode()||newSnap.isEmpty()){// Make sure we have a children node with the correct index, not a leaf node;\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);}else{if(this.limit_*2<newSnap.numChildren()&&newSnap.isIndexed(this.index_)){// Easier to build up a snapshot, since what we're given has more than twice the elements we want\nfiltered=ChildrenNode.EMPTY_NODE.withIndex(this.index_);// anchor to the startPost, endPost, or last element as appropriate\nvar iterator;if(this.reverse_){iterator=newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(),this.index_);}else{iterator=newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(),this.index_);}var count=0;while(iterator.hasNext()&&count<this.limit_){var next=iterator.getNext();var inRange=void 0;if(this.reverse_){inRange=this.index_.compare(this.rangedFilter_.getStartPost(),next)<=0;}else{inRange=this.index_.compare(next,this.rangedFilter_.getEndPost())<=0;}if(inRange){filtered=filtered.updateImmediateChild(next.name,next.node);count++;}else{// if we have reached the end post, we cannot keep adding elemments\nbreak;}}}else{// The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\nfiltered=newSnap.withIndex(this.index_);// Don't support priorities on queries\nfiltered=filtered.updatePriority(ChildrenNode.EMPTY_NODE);var startPost;var endPost;var cmp;var _iterator4;if(this.reverse_){_iterator4=filtered.getReverseIterator(this.index_);startPost=this.rangedFilter_.getEndPost();endPost=this.rangedFilter_.getStartPost();var indexCompare=this.index_.getCompare();cmp=function cmp(a,b){return indexCompare(b,a);};}else{_iterator4=filtered.getIterator(this.index_);startPost=this.rangedFilter_.getStartPost();endPost=this.rangedFilter_.getEndPost();cmp=this.index_.getCompare();}var _count=0;var foundStartPost=false;while(_iterator4.hasNext()){var _next=_iterator4.getNext();if(!foundStartPost&&cmp(startPost,_next)<=0){// start adding\nfoundStartPost=true;}var _inRange=foundStartPost&&_count<this.limit_&&cmp(_next,endPost)<=0;if(_inRange){_count++;}else{filtered=filtered.updateImmediateChild(_next.name,ChildrenNode.EMPTY_NODE);}}}}return this.rangedFilter_.getIndexedFilter().updateFullNode(oldSnap,filtered,optChangeAccumulator);}},{key:\"updatePriority\",value:function updatePriority(oldSnap,newPriority){// Don't support priorities on queries\nreturn oldSnap;}},{key:\"filtersNodes\",value:function filtersNodes(){return true;}},{key:\"getIndexedFilter\",value:function getIndexedFilter(){return this.rangedFilter_.getIndexedFilter();}},{key:\"getIndex\",value:function getIndex(){return this.index_;}},{key:\"fullLimitUpdateChild_\",value:function fullLimitUpdateChild_(snap,childKey,childSnap,source,changeAccumulator){// TODO: rename all cache stuff etc to general snap terminology\nvar cmp;if(this.reverse_){var indexCmp=this.index_.getCompare();cmp=function cmp(a,b){return indexCmp(b,a);};}else{cmp=this.index_.getCompare();}var oldEventCache=snap;assert(oldEventCache.numChildren()===this.limit_,'');var newChildNamedNode=new NamedNode(childKey,childSnap);var windowBoundary=this.reverse_?oldEventCache.getFirstChild(this.index_):oldEventCache.getLastChild(this.index_);var inRange=this.rangedFilter_.matches(newChildNamedNode);if(oldEventCache.hasChild(childKey)){var oldChildSnap=oldEventCache.getImmediateChild(childKey);var nextChild=source.getChildAfterChild(this.index_,windowBoundary,this.reverse_);while(nextChild!=null&&(nextChild.name===childKey||oldEventCache.hasChild(nextChild.name))){// There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n// been applied to the limited filter yet. Ignore this next child which will be updated later in\n// the limited filter...\nnextChild=source.getChildAfterChild(this.index_,nextChild,this.reverse_);}var compareNext=nextChild==null?1:cmp(nextChild,newChildNamedNode);var remainsInWindow=inRange&&!childSnap.isEmpty()&&compareNext>=0;if(remainsInWindow){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildChanged(childKey,childSnap,oldChildSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap);}else{if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildRemoved(childKey,oldChildSnap));}var newEventCache=oldEventCache.updateImmediateChild(childKey,ChildrenNode.EMPTY_NODE);var nextChildInRange=nextChild!=null&&this.rangedFilter_.matches(nextChild);if(nextChildInRange){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildAdded(nextChild.name,nextChild.node));}return newEventCache.updateImmediateChild(nextChild.name,nextChild.node);}else{return newEventCache;}}}else if(childSnap.isEmpty()){// we're deleting a node, but it was not in the window, so ignore it\nreturn snap;}else if(inRange){if(cmp(windowBoundary,newChildNamedNode)>=0){if(changeAccumulator!=null){changeAccumulator.trackChildChange(changeChildRemoved(windowBoundary.name,windowBoundary.node));changeAccumulator.trackChildChange(changeChildAdded(childKey,childSnap));}return oldEventCache.updateImmediateChild(childKey,childSnap).updateImmediateChild(windowBoundary.name,ChildrenNode.EMPTY_NODE);}else{return snap;}}else{return snap;}}}]);return LimitedFilter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n *\r\n * @internal\r\n */var QueryParams=/*#__PURE__*/function(){function QueryParams(){_classCallCheck(this,QueryParams);this.limitSet_=false;this.startSet_=false;this.startNameSet_=false;this.startAfterSet_=false;this.endSet_=false;this.endNameSet_=false;this.endBeforeSet_=false;this.limit_=0;this.viewFrom_='';this.indexStartValue_=null;this.indexStartName_='';this.indexEndValue_=null;this.indexEndName_='';this.index_=PRIORITY_INDEX;}_createClass(QueryParams,[{key:\"hasStart\",value:function hasStart(){return this.startSet_;}},{key:\"hasStartAfter\",value:function hasStartAfter(){return this.startAfterSet_;}},{key:\"hasEndBefore\",value:function hasEndBefore(){return this.endBeforeSet_;}/**\r\n     * @returns True if it would return from left.\r\n     */},{key:\"isViewFromLeft\",value:function isViewFromLeft(){if(this.viewFrom_===''){// limit(), rather than limitToFirst or limitToLast was called.\n// This means that only one of startSet_ and endSet_ is true. Use them\n// to calculate which side of the view to anchor to. If neither is set,\n// anchor to the end.\nreturn this.startSet_;}else{return this.viewFrom_===\"l\"/* VIEW_FROM_LEFT */;}}/**\r\n     * Only valid to call if hasStart() returns true\r\n     */},{key:\"getIndexStartValue\",value:function getIndexStartValue(){assert(this.startSet_,'Only valid if start has been set');return this.indexStartValue_;}/**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     */},{key:\"getIndexStartName\",value:function getIndexStartName(){assert(this.startSet_,'Only valid if start has been set');if(this.startNameSet_){return this.indexStartName_;}else{return MIN_NAME;}}},{key:\"hasEnd\",value:function hasEnd(){return this.endSet_;}/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     */},{key:\"getIndexEndValue\",value:function getIndexEndValue(){assert(this.endSet_,'Only valid if end has been set');return this.indexEndValue_;}/**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     */},{key:\"getIndexEndName\",value:function getIndexEndName(){assert(this.endSet_,'Only valid if end has been set');if(this.endNameSet_){return this.indexEndName_;}else{return MAX_NAME;}}},{key:\"hasLimit\",value:function hasLimit(){return this.limitSet_;}/**\r\n     * @returns True if a limit has been set and it has been explicitly anchored\r\n     */},{key:\"hasAnchoredLimit\",value:function hasAnchoredLimit(){return this.limitSet_&&this.viewFrom_!=='';}/**\r\n     * Only valid to call if hasLimit() returns true\r\n     */},{key:\"getLimit\",value:function getLimit(){assert(this.limitSet_,'Only valid if limit has been set');return this.limit_;}},{key:\"getIndex\",value:function getIndex(){return this.index_;}},{key:\"loadsAllData\",value:function loadsAllData(){return!(this.startSet_||this.endSet_||this.limitSet_);}},{key:\"isDefault\",value:function isDefault(){return this.loadsAllData()&&this.index_===PRIORITY_INDEX;}},{key:\"copy\",value:function copy(){var copy=new QueryParams();copy.limitSet_=this.limitSet_;copy.limit_=this.limit_;copy.startSet_=this.startSet_;copy.indexStartValue_=this.indexStartValue_;copy.startNameSet_=this.startNameSet_;copy.indexStartName_=this.indexStartName_;copy.endSet_=this.endSet_;copy.indexEndValue_=this.indexEndValue_;copy.endNameSet_=this.endNameSet_;copy.indexEndName_=this.indexEndName_;copy.index_=this.index_;copy.viewFrom_=this.viewFrom_;return copy;}}]);return QueryParams;}();function queryParamsGetNodeFilter(queryParams){if(queryParams.loadsAllData()){return new IndexedFilter(queryParams.getIndex());}else if(queryParams.hasLimit()){return new LimitedFilter(queryParams);}else{return new RangedFilter(queryParams);}}function queryParamsLimitToFirst(queryParams,newLimit){var newParams=queryParams.copy();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=\"l\"/* VIEW_FROM_LEFT */;return newParams;}function queryParamsLimitToLast(queryParams,newLimit){var newParams=queryParams.copy();newParams.limitSet_=true;newParams.limit_=newLimit;newParams.viewFrom_=\"r\"/* VIEW_FROM_RIGHT */;return newParams;}function queryParamsStartAt(queryParams,indexValue,key){var newParams=queryParams.copy();newParams.startSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexStartValue_=indexValue;if(key!=null){newParams.startNameSet_=true;newParams.indexStartName_=key;}else{newParams.startNameSet_=false;newParams.indexStartName_='';}return newParams;}function queryParamsStartAfter(queryParams,indexValue,key){var params;if(queryParams.index_===KEY_INDEX){if(typeof indexValue==='string'){indexValue=successor(indexValue);}params=queryParamsStartAt(queryParams,indexValue,key);}else{var childKey;if(key==null){childKey=MAX_NAME;}else{childKey=successor(key);}params=queryParamsStartAt(queryParams,indexValue,childKey);}params.startAfterSet_=true;return params;}function queryParamsEndAt(queryParams,indexValue,key){var newParams=queryParams.copy();newParams.endSet_=true;if(indexValue===undefined){indexValue=null;}newParams.indexEndValue_=indexValue;if(key!==undefined){newParams.endNameSet_=true;newParams.indexEndName_=key;}else{newParams.endNameSet_=false;newParams.indexEndName_='';}return newParams;}function queryParamsEndBefore(queryParams,indexValue,key){var childKey;var params;if(queryParams.index_===KEY_INDEX){if(typeof indexValue==='string'){indexValue=predecessor(indexValue);}params=queryParamsEndAt(queryParams,indexValue,key);}else{if(key==null){childKey=MIN_NAME;}else{childKey=predecessor(key);}params=queryParamsEndAt(queryParams,indexValue,childKey);}params.endBeforeSet_=true;return params;}function queryParamsOrderBy(queryParams,index){var newParams=queryParams.copy();newParams.index_=index;return newParams;}/**\r\n * Returns a set of REST query string parameters representing this query.\r\n *\r\n * @returns query string parameters\r\n */function queryParamsToRestQueryStringParameters(queryParams){var qs={};if(queryParams.isDefault()){return qs;}var orderBy;if(queryParams.index_===PRIORITY_INDEX){orderBy=\"$priority\"/* PRIORITY_INDEX */;}else if(queryParams.index_===VALUE_INDEX){orderBy=\"$value\"/* VALUE_INDEX */;}else if(queryParams.index_===KEY_INDEX){orderBy=\"$key\"/* KEY_INDEX */;}else{assert(queryParams.index_ instanceof PathIndex,'Unrecognized index type!');orderBy=queryParams.index_.toString();}qs[\"orderBy\"/* ORDER_BY */]=stringify(orderBy);if(queryParams.startSet_){qs[\"startAt\"/* START_AT */]=stringify(queryParams.indexStartValue_);if(queryParams.startNameSet_){qs[\"startAt\"/* START_AT */]+=','+stringify(queryParams.indexStartName_);}}if(queryParams.endSet_){qs[\"endAt\"/* END_AT */]=stringify(queryParams.indexEndValue_);if(queryParams.endNameSet_){qs[\"endAt\"/* END_AT */]+=','+stringify(queryParams.indexEndName_);}}if(queryParams.limitSet_){if(queryParams.isViewFromLeft()){qs[\"limitToFirst\"/* LIMIT_TO_FIRST */]=queryParams.limit_;}else{qs[\"limitToLast\"/* LIMIT_TO_LAST */]=queryParams.limit_;}}return qs;}function queryParamsGetQueryObject(queryParams){var obj={};if(queryParams.startSet_){obj[\"sp\"/* INDEX_START_VALUE */]=queryParams.indexStartValue_;if(queryParams.startNameSet_){obj[\"sn\"/* INDEX_START_NAME */]=queryParams.indexStartName_;}}if(queryParams.endSet_){obj[\"ep\"/* INDEX_END_VALUE */]=queryParams.indexEndValue_;if(queryParams.endNameSet_){obj[\"en\"/* INDEX_END_NAME */]=queryParams.indexEndName_;}}if(queryParams.limitSet_){obj[\"l\"/* LIMIT */]=queryParams.limit_;var viewFrom=queryParams.viewFrom_;if(viewFrom===''){if(queryParams.isViewFromLeft()){viewFrom=\"l\"/* VIEW_FROM_LEFT */;}else{viewFrom=\"r\"/* VIEW_FROM_RIGHT */;}}obj[\"vf\"/* VIEW_FROM */]=viewFrom;}// For now, priority index is the default, so we only specify if it's some other index\nif(queryParams.index_!==PRIORITY_INDEX){obj[\"i\"/* INDEX */]=queryParams.index_.toString();}return obj;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */var ReadonlyRestClient=/*#__PURE__*/function(_ServerActions2){_inherits(ReadonlyRestClient,_ServerActions2);var _super9=_createSuper(ReadonlyRestClient);/**\r\n     * @param repoInfo_ - Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ - A callback for new data from the server\r\n     */function ReadonlyRestClient(repoInfo_,onDataUpdate_,authTokenProvider_,appCheckTokenProvider_){var _this32;_classCallCheck(this,ReadonlyRestClient);_this32=_super9.call(this);_this32.repoInfo_=repoInfo_;_this32.onDataUpdate_=onDataUpdate_;_this32.authTokenProvider_=authTokenProvider_;_this32.appCheckTokenProvider_=appCheckTokenProvider_;/** @private {function(...[*])} */_this32.log_=logWrapper('p:rest:');/**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         */_this32.listens_={};return _this32;}_createClass(ReadonlyRestClient,[{key:\"reportStats\",value:function reportStats(stats){throw new Error('Method not implemented.');}},{key:\"listen\",value:/** @inheritDoc */function listen(query,currentHashFn,tag,onComplete){var _this33=this;var pathString=query._path.toString();this.log_('Listen called for '+pathString+' '+query._queryIdentifier);// Mark this listener so we can tell if it's removed.\nvar listenId=ReadonlyRestClient.getListenId_(query,tag);var thisListen={};this.listens_[listenId]=thisListen;var queryStringParameters=queryParamsToRestQueryStringParameters(query._queryParams);this.restRequest_(pathString+'.json',queryStringParameters,function(error,result){var data=result;if(error===404){data=null;error=null;}if(error===null){_this33.onDataUpdate_(pathString,data,/*isMerge=*/false,tag);}if(safeGet(_this33.listens_,listenId)===thisListen){var status;if(!error){status='ok';}else if(error===401){status='permission_denied';}else{status='rest_error:'+error;}onComplete(status,null);}});}/** @inheritDoc */},{key:\"unlisten\",value:function unlisten(query,tag){var listenId=ReadonlyRestClient.getListenId_(query,tag);delete this.listens_[listenId];}},{key:\"get\",value:function get(query){var _this34=this;var queryStringParameters=queryParamsToRestQueryStringParameters(query._queryParams);var pathString=query._path.toString();var deferred=new Deferred();this.restRequest_(pathString+'.json',queryStringParameters,function(error,result){var data=result;if(error===404){data=null;error=null;}if(error===null){_this34.onDataUpdate_(pathString,data,/*isMerge=*/false,/*tag=*/null);deferred.resolve(data);}else{deferred.reject(new Error(data));}});return deferred.promise;}/** @inheritDoc */},{key:\"refreshAuthToken\",value:function refreshAuthToken(token){// no-op since we just always call getToken.\n}/**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     */},{key:\"restRequest_\",value:function restRequest_(pathString){var _this35=this;var queryStringParameters=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var callback=arguments.length>2?arguments[2]:undefined;queryStringParameters['format']='export';return Promise.all([this.authTokenProvider_.getToken(/*forceRefresh=*/false),this.appCheckTokenProvider_.getToken(/*forceRefresh=*/false)]).then(function(_ref){var _ref2=_slicedToArray(_ref,2),authToken=_ref2[0],appCheckToken=_ref2[1];if(authToken&&authToken.accessToken){queryStringParameters['auth']=authToken.accessToken;}if(appCheckToken&&appCheckToken.token){queryStringParameters['ac']=appCheckToken.token;}var url=(_this35.repoInfo_.secure?'https://':'http://')+_this35.repoInfo_.host+pathString+'?'+'ns='+_this35.repoInfo_.namespace+querystring(queryStringParameters);_this35.log_('Sending REST request for '+url);var xhr=new XMLHttpRequest();xhr.onreadystatechange=function(){if(callback&&xhr.readyState===4){_this35.log_('REST Response for '+url+' received. status:',xhr.status,'response:',xhr.responseText);var res=null;if(xhr.status>=200&&xhr.status<300){try{res=jsonEval(xhr.responseText);}catch(e){warn('Failed to parse JSON response for '+url+': '+xhr.responseText);}callback(null,res);}else{// 401 and 404 are expected.\nif(xhr.status!==401&&xhr.status!==404){warn('Got unsuccessful REST response for '+url+' Status: '+xhr.status);}callback(xhr.status);}callback=null;}};xhr.open('GET',url,/*asynchronous=*/true);xhr.send();});}}],[{key:\"getListenId_\",value:function getListenId_(query,tag){if(tag!==undefined){return'tag$'+tag;}else{assert(query._queryParams.isDefault(),\"should have a tag if it's not a default query.\");return query._path.toString();}}}]);return ReadonlyRestClient;}(ServerActions);/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n */var SnapshotHolder=/*#__PURE__*/function(){function SnapshotHolder(){_classCallCheck(this,SnapshotHolder);this.rootNode_=ChildrenNode.EMPTY_NODE;}_createClass(SnapshotHolder,[{key:\"getNode\",value:function getNode(path){return this.rootNode_.getChild(path);}},{key:\"updateSnapshot\",value:function updateSnapshot(path,newSnapshotNode){this.rootNode_=this.rootNode_.updateChild(path,newSnapshotNode);}}]);return SnapshotHolder;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newSparseSnapshotTree(){return{value:null,children:new Map()};}/**\r\n * Stores the given node at the specified path. If there is already a node\r\n * at a shallower path, it merges the new data into that snapshot node.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @param data - The new data, or null.\r\n */function sparseSnapshotTreeRemember(sparseSnapshotTree,path,data){if(pathIsEmpty(path)){sparseSnapshotTree.value=data;sparseSnapshotTree.children.clear();}else if(sparseSnapshotTree.value!==null){sparseSnapshotTree.value=sparseSnapshotTree.value.updateChild(path,data);}else{var childKey=pathGetFront(path);if(!sparseSnapshotTree.children.has(childKey)){sparseSnapshotTree.children.set(childKey,newSparseSnapshotTree());}var _child2=sparseSnapshotTree.children.get(childKey);path=pathPopFront(path);sparseSnapshotTreeRemember(_child2,path,data);}}/**\r\n * Purge the data at path from the cache.\r\n *\r\n * @param path - Path to look up snapshot for.\r\n * @returns True if this node should now be removed.\r\n */function sparseSnapshotTreeForget(sparseSnapshotTree,path){if(pathIsEmpty(path)){sparseSnapshotTree.value=null;sparseSnapshotTree.children.clear();return true;}else{if(sparseSnapshotTree.value!==null){if(sparseSnapshotTree.value.isLeafNode()){// We're trying to forget a node that doesn't exist\nreturn false;}else{var value=sparseSnapshotTree.value;sparseSnapshotTree.value=null;value.forEachChild(PRIORITY_INDEX,function(key,tree){sparseSnapshotTreeRemember(sparseSnapshotTree,new Path(key),tree);});return sparseSnapshotTreeForget(sparseSnapshotTree,path);}}else if(sparseSnapshotTree.children.size>0){var childKey=pathGetFront(path);path=pathPopFront(path);if(sparseSnapshotTree.children.has(childKey)){var safeToRemove=sparseSnapshotTreeForget(sparseSnapshotTree.children.get(childKey),path);if(safeToRemove){sparseSnapshotTree.children.delete(childKey);}}return sparseSnapshotTree.children.size===0;}else{return true;}}}/**\r\n * Recursively iterates through all of the stored tree and calls the\r\n * callback on each one.\r\n *\r\n * @param prefixPath - Path to look up node for.\r\n * @param func - The function to invoke for each tree.\r\n */function sparseSnapshotTreeForEachTree(sparseSnapshotTree,prefixPath,func){if(sparseSnapshotTree.value!==null){func(prefixPath,sparseSnapshotTree.value);}else{sparseSnapshotTreeForEachChild(sparseSnapshotTree,function(key,tree){var path=new Path(prefixPath.toString()+'/'+key);sparseSnapshotTreeForEachTree(tree,path,func);});}}/**\r\n * Iterates through each immediate child and triggers the callback.\r\n * Only seems to be used in tests.\r\n *\r\n * @param func - The function to invoke for each child.\r\n */function sparseSnapshotTreeForEachChild(sparseSnapshotTree,func){sparseSnapshotTree.children.forEach(function(tree,key){func(key,tree);});}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ - The collection to \"listen\" to.\r\n */var StatsListener=/*#__PURE__*/function(){function StatsListener(collection_){_classCallCheck(this,StatsListener);this.collection_=collection_;this.last_=null;}_createClass(StatsListener,[{key:\"get\",value:function get(){var newStats=this.collection_.get();var delta=Object.assign({},newStats);if(this.last_){each(this.last_,function(stat,value){delta[stat]=delta[stat]-value;});}this.last_=newStats;return delta;}}]);return StatsListener;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ // Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nvar FIRST_STATS_MIN_TIME=10*1000;var FIRST_STATS_MAX_TIME=30*1000;// We'll continue to report stats on average every 5 minutes.\nvar REPORT_STATS_INTERVAL=5*60*1000;var StatsReporter=/*#__PURE__*/function(){function StatsReporter(collection,server_){_classCallCheck(this,StatsReporter);this.server_=server_;this.statsToReport_={};this.statsListener_=new StatsListener(collection);var timeout=FIRST_STATS_MIN_TIME+(FIRST_STATS_MAX_TIME-FIRST_STATS_MIN_TIME)*Math.random();setTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(timeout));}_createClass(StatsReporter,[{key:\"reportStats_\",value:function reportStats_(){var _this36=this;var stats=this.statsListener_.get();var reportedStats={};var haveStatsToReport=false;each(stats,function(stat,value){if(value>0&&contains(_this36.statsToReport_,stat)){reportedStats[stat]=value;haveStatsToReport=true;}});if(haveStatsToReport){this.server_.reportStats(reportedStats);}// queue our next run.\nsetTimeoutNonBlocking(this.reportStats_.bind(this),Math.floor(Math.random()*2*REPORT_STATS_INTERVAL));}}]);return StatsReporter;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n *\r\n * @enum\r\n */var OperationType;(function(OperationType){OperationType[OperationType[\"OVERWRITE\"]=0]=\"OVERWRITE\";OperationType[OperationType[\"MERGE\"]=1]=\"MERGE\";OperationType[OperationType[\"ACK_USER_WRITE\"]=2]=\"ACK_USER_WRITE\";OperationType[OperationType[\"LISTEN_COMPLETE\"]=3]=\"LISTEN_COMPLETE\";})(OperationType||(OperationType={}));function newOperationSourceUser(){return{fromUser:true,fromServer:false,queryId:null,tagged:false};}function newOperationSourceServer(){return{fromUser:false,fromServer:true,queryId:null,tagged:false};}function newOperationSourceServerTaggedQuery(queryId){return{fromUser:false,fromServer:true,queryId:queryId,tagged:true};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var AckUserWrite=/*#__PURE__*/function(){/**\r\n     * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\r\n     */function AckUserWrite(/** @inheritDoc */path,/** @inheritDoc */affectedTree,/** @inheritDoc */revert){_classCallCheck(this,AckUserWrite);this.path=path;this.affectedTree=affectedTree;this.revert=revert;/** @inheritDoc */this.type=OperationType.ACK_USER_WRITE;/** @inheritDoc */this.source=newOperationSourceUser();}_createClass(AckUserWrite,[{key:\"operationForChild\",value:function operationForChild(childName){if(!pathIsEmpty(this.path)){assert(pathGetFront(this.path)===childName,'operationForChild called for unrelated child.');return new AckUserWrite(pathPopFront(this.path),this.affectedTree,this.revert);}else if(this.affectedTree.value!=null){assert(this.affectedTree.children.isEmpty(),'affectedTree should not have overlapping affected paths.');// All child locations are affected as well; just return same operation.\nreturn this;}else{var childTree=this.affectedTree.subtree(new Path(childName));return new AckUserWrite(newEmptyPath(),childTree,this.revert);}}}]);return AckUserWrite;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ListenComplete=/*#__PURE__*/function(){function ListenComplete(source,path){_classCallCheck(this,ListenComplete);this.source=source;this.path=path;/** @inheritDoc */this.type=OperationType.LISTEN_COMPLETE;}_createClass(ListenComplete,[{key:\"operationForChild\",value:function operationForChild(childName){if(pathIsEmpty(this.path)){return new ListenComplete(this.source,newEmptyPath());}else{return new ListenComplete(this.source,pathPopFront(this.path));}}}]);return ListenComplete;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Overwrite=/*#__PURE__*/function(){function Overwrite(source,path,snap){_classCallCheck(this,Overwrite);this.source=source;this.path=path;this.snap=snap;/** @inheritDoc */this.type=OperationType.OVERWRITE;}_createClass(Overwrite,[{key:\"operationForChild\",value:function operationForChild(childName){if(pathIsEmpty(this.path)){return new Overwrite(this.source,newEmptyPath(),this.snap.getImmediateChild(childName));}else{return new Overwrite(this.source,pathPopFront(this.path),this.snap);}}}]);return Overwrite;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var Merge=/*#__PURE__*/function(){function Merge(/** @inheritDoc */source,/** @inheritDoc */path,/** @inheritDoc */children){_classCallCheck(this,Merge);this.source=source;this.path=path;this.children=children;/** @inheritDoc */this.type=OperationType.MERGE;}_createClass(Merge,[{key:\"operationForChild\",value:function operationForChild(childName){if(pathIsEmpty(this.path)){var childTree=this.children.subtree(new Path(childName));if(childTree.isEmpty()){// This child is unaffected\nreturn null;}else if(childTree.value){// We have a snapshot for the child in question.  This becomes an overwrite of the child.\nreturn new Overwrite(this.source,newEmptyPath(),childTree.value);}else{// This is a merge at a deeper level\nreturn new Merge(this.source,newEmptyPath(),childTree);}}else{assert(pathGetFront(this.path)===childName,\"Can't get a merge for a child not on the path of the operation\");return new Merge(this.source,pathPopFront(this.path),this.children);}}},{key:\"toString\",value:function toString(){return'Operation('+this.path+': '+this.source.toString()+' merge: '+this.children.toString()+')';}}]);return Merge;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */var CacheNode=/*#__PURE__*/function(){function CacheNode(node_,fullyInitialized_,filtered_){_classCallCheck(this,CacheNode);this.node_=node_;this.fullyInitialized_=fullyInitialized_;this.filtered_=filtered_;}/**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     */_createClass(CacheNode,[{key:\"isFullyInitialized\",value:function isFullyInitialized(){return this.fullyInitialized_;}/**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     */},{key:\"isFiltered\",value:function isFiltered(){return this.filtered_;}},{key:\"isCompleteForPath\",value:function isCompleteForPath(path){if(pathIsEmpty(path)){return this.isFullyInitialized()&&!this.filtered_;}var childKey=pathGetFront(path);return this.isCompleteForChild(childKey);}},{key:\"isCompleteForChild\",value:function isCompleteForChild(key){return this.isFullyInitialized()&&!this.filtered_||this.node_.hasChild(key);}},{key:\"getNode\",value:function getNode(){return this.node_;}}]);return CacheNode;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n */var EventGenerator=/*#__PURE__*/_createClass(function EventGenerator(query_){_classCallCheck(this,EventGenerator);this.query_=query_;this.index_=this.query_._queryParams.getIndex();});/**\r\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n *\r\n * Notes:\r\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n *    our index.\r\n *  - prevName will be calculated based on the index ordering.\r\n */function eventGeneratorGenerateEventsForChanges(eventGenerator,changes,eventCache,eventRegistrations){var events=[];var moves=[];changes.forEach(function(change){if(change.type===\"child_changed\"/* CHILD_CHANGED */&&eventGenerator.index_.indexedValueChanged(change.oldSnap,change.snapshotNode)){moves.push(changeChildMoved(change.childName,change.snapshotNode));}});eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_removed\"/* CHILD_REMOVED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_added\"/* CHILD_ADDED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_moved\"/* CHILD_MOVED */,moves,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"child_changed\"/* CHILD_CHANGED */,changes,eventRegistrations,eventCache);eventGeneratorGenerateEventsForType(eventGenerator,events,\"value\"/* VALUE */,changes,eventRegistrations,eventCache);return events;}/**\r\n * Given changes of a single change type, generate the corresponding events.\r\n */function eventGeneratorGenerateEventsForType(eventGenerator,events,eventType,changes,registrations,eventCache){var filteredChanges=changes.filter(function(change){return change.type===eventType;});filteredChanges.sort(function(a,b){return eventGeneratorCompareChanges(eventGenerator,a,b);});filteredChanges.forEach(function(change){var materializedChange=eventGeneratorMaterializeSingleChange(eventGenerator,change,eventCache);registrations.forEach(function(registration){if(registration.respondsTo(change.type)){events.push(registration.createEvent(materializedChange,eventGenerator.query_));}});});}function eventGeneratorMaterializeSingleChange(eventGenerator,change,eventCache){if(change.type==='value'||change.type==='child_removed'){return change;}else{change.prevName=eventCache.getPredecessorChildName(change.childName,change.snapshotNode,eventGenerator.index_);return change;}}function eventGeneratorCompareChanges(eventGenerator,a,b){if(a.childName==null||b.childName==null){throw assertionError('Should only compare child_ events.');}var aWrapped=new NamedNode(a.childName,a.snapshotNode);var bWrapped=new NamedNode(b.childName,b.snapshotNode);return eventGenerator.index_.compare(aWrapped,bWrapped);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newViewCache(eventCache,serverCache){return{eventCache:eventCache,serverCache:serverCache};}function viewCacheUpdateEventSnap(viewCache,eventSnap,complete,filtered){return newViewCache(new CacheNode(eventSnap,complete,filtered),viewCache.serverCache);}function viewCacheUpdateServerSnap(viewCache,serverSnap,complete,filtered){return newViewCache(viewCache.eventCache,new CacheNode(serverSnap,complete,filtered));}function viewCacheGetCompleteEventSnap(viewCache){return viewCache.eventCache.isFullyInitialized()?viewCache.eventCache.getNode():null;}function viewCacheGetCompleteServerSnap(viewCache){return viewCache.serverCache.isFullyInitialized()?viewCache.serverCache.getNode():null;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var emptyChildrenSingleton;/**\r\n * Singleton empty children collection.\r\n *\r\n */var EmptyChildren=function EmptyChildren(){if(!emptyChildrenSingleton){emptyChildrenSingleton=new SortedMap(stringCompare);}return emptyChildrenSingleton;};/**\r\n * A tree with immutable elements.\r\n */var ImmutableTree=/*#__PURE__*/function(){function ImmutableTree(value){var children=arguments.length>1&&arguments[1]!==undefined?arguments[1]:EmptyChildren();_classCallCheck(this,ImmutableTree);this.value=value;this.children=children;}_createClass(ImmutableTree,[{key:\"isEmpty\",value:/**\r\n     * True if the value is empty and there are no children\r\n     */function isEmpty(){return this.value===null&&this.children.isEmpty();}/**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\r\n     * objects on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param relativePath - The remainder of the path\r\n     * @param predicate - The predicate to satisfy to return a node\r\n     */},{key:\"findRootMostMatchingPathAndValue\",value:function findRootMostMatchingPathAndValue(relativePath,predicate){if(this.value!=null&&predicate(this.value)){return{path:newEmptyPath(),value:this.value};}else{if(pathIsEmpty(relativePath)){return null;}else{var front=pathGetFront(relativePath);var _child3=this.children.get(front);if(_child3!==null){var childExistingPathAndValue=_child3.findRootMostMatchingPathAndValue(pathPopFront(relativePath),predicate);if(childExistingPathAndValue!=null){var fullPath=pathChild(new Path(front),childExistingPathAndValue.path);return{path:fullPath,value:childExistingPathAndValue.value};}else{return null;}}else{return null;}}}}/**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     */},{key:\"findRootMostValueAndPath\",value:function findRootMostValueAndPath(relativePath){return this.findRootMostMatchingPathAndValue(relativePath,function(){return true;});}/**\r\n     * @returns The subtree at the given path\r\n     */},{key:\"subtree\",value:function subtree(relativePath){if(pathIsEmpty(relativePath)){return this;}else{var front=pathGetFront(relativePath);var childTree=this.children.get(front);if(childTree!==null){return childTree.subtree(pathPopFront(relativePath));}else{return new ImmutableTree(null);}}}/**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param relativePath - Path to set value at.\r\n     * @param toSet - Value to set.\r\n     * @returns Resulting tree.\r\n     */},{key:\"set\",value:function set(relativePath,toSet){if(pathIsEmpty(relativePath)){return new ImmutableTree(toSet,this.children);}else{var front=pathGetFront(relativePath);var _child4=this.children.get(front)||new ImmutableTree(null);var newChild=_child4.set(pathPopFront(relativePath),toSet);var newChildren=this.children.insert(front,newChild);return new ImmutableTree(this.value,newChildren);}}/**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param relativePath - Path to value to remove.\r\n     * @returns Resulting tree.\r\n     */},{key:\"remove\",value:function remove(relativePath){if(pathIsEmpty(relativePath)){if(this.children.isEmpty()){return new ImmutableTree(null);}else{return new ImmutableTree(null,this.children);}}else{var front=pathGetFront(relativePath);var _child5=this.children.get(front);if(_child5){var newChild=_child5.remove(pathPopFront(relativePath));var newChildren;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}if(this.value===null&&newChildren.isEmpty()){return new ImmutableTree(null);}else{return new ImmutableTree(this.value,newChildren);}}else{return this;}}}/**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param relativePath - Path to get value for.\r\n     * @returns Value at path, or null.\r\n     */},{key:\"get\",value:function get(relativePath){if(pathIsEmpty(relativePath)){return this.value;}else{var front=pathGetFront(relativePath);var _child6=this.children.get(front);if(_child6){return _child6.get(pathPopFront(relativePath));}else{return null;}}}/**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param relativePath - Path to replace subtree for.\r\n     * @param newTree - New tree.\r\n     * @returns Resulting tree.\r\n     */},{key:\"setTree\",value:function setTree(relativePath,newTree){if(pathIsEmpty(relativePath)){return newTree;}else{var front=pathGetFront(relativePath);var _child7=this.children.get(front)||new ImmutableTree(null);var newChild=_child7.setTree(pathPopFront(relativePath),newTree);var newChildren;if(newChild.isEmpty()){newChildren=this.children.remove(front);}else{newChildren=this.children.insert(front,newChild);}return new ImmutableTree(this.value,newChildren);}}/**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     */},{key:\"fold\",value:function fold(fn){return this.fold_(newEmptyPath(),fn);}/**\r\n     * Recursive helper for public-facing fold() method\r\n     */},{key:\"fold_\",value:function fold_(pathSoFar,fn){var accum={};this.children.inorderTraversal(function(childKey,childTree){accum[childKey]=childTree.fold_(pathChild(pathSoFar,childKey),fn);});return fn(pathSoFar,this.value,accum);}/**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     */},{key:\"findOnPath\",value:function findOnPath(path,f){return this.findOnPath_(path,newEmptyPath(),f);}},{key:\"findOnPath_\",value:function findOnPath_(pathToFollow,pathSoFar,f){var result=this.value?f(pathSoFar,this.value):false;if(result){return result;}else{if(pathIsEmpty(pathToFollow)){return null;}else{var front=pathGetFront(pathToFollow);var nextChild=this.children.get(front);if(nextChild){return nextChild.findOnPath_(pathPopFront(pathToFollow),pathChild(pathSoFar,front),f);}else{return null;}}}}},{key:\"foreachOnPath\",value:function foreachOnPath(path,f){return this.foreachOnPath_(path,newEmptyPath(),f);}},{key:\"foreachOnPath_\",value:function foreachOnPath_(pathToFollow,currentRelativePath,f){if(pathIsEmpty(pathToFollow)){return this;}else{if(this.value){f(currentRelativePath,this.value);}var front=pathGetFront(pathToFollow);var nextChild=this.children.get(front);if(nextChild){return nextChild.foreachOnPath_(pathPopFront(pathToFollow),pathChild(currentRelativePath,front),f);}else{return new ImmutableTree(null);}}}/**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param f - A function to be called with the path from the root of the tree to\r\n     * a node, and the value at that node. Called in depth-first order.\r\n     */},{key:\"foreach\",value:function foreach(f){this.foreach_(newEmptyPath(),f);}},{key:\"foreach_\",value:function foreach_(currentRelativePath,f){this.children.inorderTraversal(function(childName,childTree){childTree.foreach_(pathChild(currentRelativePath,childName),f);});if(this.value){f(currentRelativePath,this.value);}}},{key:\"foreachChild\",value:function foreachChild(f){this.children.inorderTraversal(function(childName,childTree){if(childTree.value){f(childName,childTree.value);}});}}],[{key:\"fromObject\",value:function fromObject(obj){var tree=new ImmutableTree(null);each(obj,function(childPath,childSnap){tree=tree.set(new Path(childPath),childSnap);});return tree;}}]);return ImmutableTree;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */var CompoundWrite=/*#__PURE__*/function(){function CompoundWrite(writeTree_){_classCallCheck(this,CompoundWrite);this.writeTree_=writeTree_;}_createClass(CompoundWrite,null,[{key:\"empty\",value:function empty(){return new CompoundWrite(new ImmutableTree(null));}}]);return CompoundWrite;}();function compoundWriteAddWrite(compoundWrite,path,node){if(pathIsEmpty(path)){return new CompoundWrite(new ImmutableTree(node));}else{var rootmost=compoundWrite.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){var rootMostPath=rootmost.path;var value=rootmost.value;var relativePath=newRelativePath(rootMostPath,path);value=value.updateChild(relativePath,node);return new CompoundWrite(compoundWrite.writeTree_.set(rootMostPath,value));}else{var subtree=new ImmutableTree(node);var _newWriteTree=compoundWrite.writeTree_.setTree(path,subtree);return new CompoundWrite(_newWriteTree);}}}function compoundWriteAddWrites(compoundWrite,path,updates){var newWrite=compoundWrite;each(updates,function(childKey,node){newWrite=compoundWriteAddWrite(newWrite,pathChild(path,childKey),node);});return newWrite;}/**\r\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n * location, which must be removed by calling this method with that path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to remove.\r\n * @param path - The path at which a write and all deeper writes should be removed\r\n * @returns The new CompoundWrite with the removed path\r\n */function compoundWriteRemoveWrite(compoundWrite,path){if(pathIsEmpty(path)){return CompoundWrite.empty();}else{var _newWriteTree2=compoundWrite.writeTree_.setTree(path,new ImmutableTree(null));return new CompoundWrite(_newWriteTree2);}}/**\r\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n * considered \"complete\".\r\n *\r\n * @param compoundWrite - The CompoundWrite to check.\r\n * @param path - The path to check for\r\n * @returns Whether there is a complete write at that path\r\n */function compoundWriteHasCompleteWrite(compoundWrite,path){return compoundWriteGetCompleteNode(compoundWrite,path)!=null;}/**\r\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n * writes from deeper paths, but will return child nodes from a more shallow path.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get the node from.\r\n * @param path - The path to get a complete write\r\n * @returns The node if complete at that path, or null otherwise.\r\n */function compoundWriteGetCompleteNode(compoundWrite,path){var rootmost=compoundWrite.writeTree_.findRootMostValueAndPath(path);if(rootmost!=null){return compoundWrite.writeTree_.get(rootmost.path).getChild(newRelativePath(rootmost.path,path));}else{return null;}}/**\r\n * Returns all children that are guaranteed to be a complete overwrite.\r\n *\r\n * @param compoundWrite - The CompoundWrite to get children from.\r\n * @returns A list of all complete children.\r\n */function compoundWriteGetCompleteChildren(compoundWrite){var children=[];var node=compoundWrite.writeTree_.value;if(node!=null){// If it's a leaf node, it has no children; so nothing to do.\nif(!node.isLeafNode()){node.forEachChild(PRIORITY_INDEX,function(childName,childNode){children.push(new NamedNode(childName,childNode));});}}else{compoundWrite.writeTree_.children.inorderTraversal(function(childName,childTree){if(childTree.value!=null){children.push(new NamedNode(childName,childTree.value));}});}return children;}function compoundWriteChildCompoundWrite(compoundWrite,path){if(pathIsEmpty(path)){return compoundWrite;}else{var shadowingNode=compoundWriteGetCompleteNode(compoundWrite,path);if(shadowingNode!=null){return new CompoundWrite(new ImmutableTree(shadowingNode));}else{return new CompoundWrite(compoundWrite.writeTree_.subtree(path));}}}/**\r\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n * @returns Whether this CompoundWrite is empty\r\n */function compoundWriteIsEmpty(compoundWrite){return compoundWrite.writeTree_.isEmpty();}/**\r\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n * node\r\n * @param node - The node to apply this CompoundWrite to\r\n * @returns The node with all writes applied\r\n */function compoundWriteApply(compoundWrite,node){return applySubtreeWrite(newEmptyPath(),compoundWrite.writeTree_,node);}function applySubtreeWrite(relativePath,writeTree,node){if(writeTree.value!=null){// Since there a write is always a leaf, we're done here\nreturn node.updateChild(relativePath,writeTree.value);}else{var priorityWrite=null;writeTree.children.inorderTraversal(function(childKey,childTree){if(childKey==='.priority'){// Apply priorities at the end so we don't update priorities for either empty nodes or forget\n// to apply priorities to empty nodes that are later filled\nassert(childTree.value!==null,'Priority writes must always be leaf nodes');priorityWrite=childTree.value;}else{node=applySubtreeWrite(pathChild(relativePath,childKey),childTree,node);}});// If there was a priority write, we only apply it if the node is not empty\nif(!node.getChild(relativePath).isEmpty()&&priorityWrite!==null){node=node.updateChild(pathChild(relativePath,'.priority'),priorityWrite);}return node;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n *\r\n */function writeTreeChildWrites(writeTree,path){return newWriteTreeRef(path,writeTree);}/**\r\n * Record a new overwrite from user code.\r\n *\r\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\r\n */function writeTreeAddOverwrite(writeTree,path,snap,writeId,visible){assert(writeId>writeTree.lastWriteId,'Stacking an older write on top of newer ones');if(visible===undefined){visible=true;}writeTree.allWrites.push({path:path,snap:snap,writeId:writeId,visible:visible});if(visible){writeTree.visibleWrites=compoundWriteAddWrite(writeTree.visibleWrites,path,snap);}writeTree.lastWriteId=writeId;}/**\r\n * Record a new merge from user code.\r\n */function writeTreeAddMerge(writeTree,path,changedChildren,writeId){assert(writeId>writeTree.lastWriteId,'Stacking an older merge on top of newer ones');writeTree.allWrites.push({path:path,children:changedChildren,writeId:writeId,visible:true});writeTree.visibleWrites=compoundWriteAddWrites(writeTree.visibleWrites,path,changedChildren);writeTree.lastWriteId=writeId;}function writeTreeGetWrite(writeTree,writeId){for(var i=0;i<writeTree.allWrites.length;i++){var record=writeTree.allWrites[i];if(record.writeId===writeId){return record;}}return null;}/**\r\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n *\r\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n * events as a result).\r\n */function writeTreeRemoveWrite(writeTree,writeId){// Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n// out of order.\n//const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n//assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\nvar idx=writeTree.allWrites.findIndex(function(s){return s.writeId===writeId;});assert(idx>=0,'removeWrite called with nonexistent writeId.');var writeToRemove=writeTree.allWrites[idx];writeTree.allWrites.splice(idx,1);var removedWriteWasVisible=writeToRemove.visible;var removedWriteOverlapsWithOtherWrites=false;var i=writeTree.allWrites.length-1;while(removedWriteWasVisible&&i>=0){var currentWrite=writeTree.allWrites[i];if(currentWrite.visible){if(i>=idx&&writeTreeRecordContainsPath_(currentWrite,writeToRemove.path)){// The removed write was completely shadowed by a subsequent write.\nremovedWriteWasVisible=false;}else if(pathContains(writeToRemove.path,currentWrite.path)){// Either we're covering some writes or they're covering part of us (depending on which came first).\nremovedWriteOverlapsWithOtherWrites=true;}}i--;}if(!removedWriteWasVisible){return false;}else if(removedWriteOverlapsWithOtherWrites){// There's some shadowing going on. Just rebuild the visible writes from scratch.\nwriteTreeResetTree_(writeTree);return true;}else{// There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\nif(writeToRemove.snap){writeTree.visibleWrites=compoundWriteRemoveWrite(writeTree.visibleWrites,writeToRemove.path);}else{var children=writeToRemove.children;each(children,function(childName){writeTree.visibleWrites=compoundWriteRemoveWrite(writeTree.visibleWrites,pathChild(writeToRemove.path,childName));});}return true;}}function writeTreeRecordContainsPath_(writeRecord,path){if(writeRecord.snap){return pathContains(writeRecord.path,path);}else{for(var childName in writeRecord.children){if(writeRecord.children.hasOwnProperty(childName)&&pathContains(pathChild(writeRecord.path,childName),path)){return true;}}return false;}}/**\r\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n */function writeTreeResetTree_(writeTree){writeTree.visibleWrites=writeTreeLayerTree_(writeTree.allWrites,writeTreeDefaultFilter_,newEmptyPath());if(writeTree.allWrites.length>0){writeTree.lastWriteId=writeTree.allWrites[writeTree.allWrites.length-1].writeId;}else{writeTree.lastWriteId=-1;}}/**\r\n * The default filter used when constructing the tree. Keep everything that's visible.\r\n */function writeTreeDefaultFilter_(write){return write.visible;}/**\r\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n * event data at that path.\r\n */function writeTreeLayerTree_(writes,filter,treeRoot){var compoundWrite=CompoundWrite.empty();for(var i=0;i<writes.length;++i){var write=writes[i];// Theory, a later set will either:\n// a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n// b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\nif(filter(write)){var writePath=write.path;var relativePath=void 0;if(write.snap){if(pathContains(treeRoot,writePath)){relativePath=newRelativePath(treeRoot,writePath);compoundWrite=compoundWriteAddWrite(compoundWrite,relativePath,write.snap);}else if(pathContains(writePath,treeRoot)){relativePath=newRelativePath(writePath,treeRoot);compoundWrite=compoundWriteAddWrite(compoundWrite,newEmptyPath(),write.snap.getChild(relativePath));}else;}else if(write.children){if(pathContains(treeRoot,writePath)){relativePath=newRelativePath(treeRoot,writePath);compoundWrite=compoundWriteAddWrites(compoundWrite,relativePath,write.children);}else if(pathContains(writePath,treeRoot)){relativePath=newRelativePath(writePath,treeRoot);if(pathIsEmpty(relativePath)){compoundWrite=compoundWriteAddWrites(compoundWrite,newEmptyPath(),write.children);}else{var _child8=safeGet(write.children,pathGetFront(relativePath));if(_child8){// There exists a child in this node that matches the root path\nvar deepNode=_child8.getChild(pathPopFront(relativePath));compoundWrite=compoundWriteAddWrite(compoundWrite,newEmptyPath(),deepNode);}}}else;}else{throw assertionError('WriteRecord should have .snap or .children');}}}return compoundWrite;}/**\r\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n * writes), attempt to calculate a complete snapshot for the given path\r\n *\r\n * @param writeIdsToExclude - An optional set to be excluded\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */function writeTreeCalcCompleteEventCache(writeTree,treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites){if(!writeIdsToExclude&&!includeHiddenWrites){var shadowingNode=compoundWriteGetCompleteNode(writeTree.visibleWrites,treePath);if(shadowingNode!=null){return shadowingNode;}else{var subMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);if(compoundWriteIsEmpty(subMerge)){return completeServerCache;}else if(completeServerCache==null&&!compoundWriteHasCompleteWrite(subMerge,newEmptyPath())){// We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\nreturn null;}else{var layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return compoundWriteApply(subMerge,layeredCache);}}}else{var merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);if(!includeHiddenWrites&&compoundWriteIsEmpty(merge)){return completeServerCache;}else{// If the server cache is null, and we don't have a complete cache, we need to return null\nif(!includeHiddenWrites&&completeServerCache==null&&!compoundWriteHasCompleteWrite(merge,newEmptyPath())){return null;}else{var filter=function filter(write){return(write.visible||includeHiddenWrites)&&(!writeIdsToExclude||!~writeIdsToExclude.indexOf(write.writeId))&&(pathContains(write.path,treePath)||pathContains(treePath,write.path));};var mergeAtPath=writeTreeLayerTree_(writeTree.allWrites,filter,treePath);var _layeredCache=completeServerCache||ChildrenNode.EMPTY_NODE;return compoundWriteApply(mergeAtPath,_layeredCache);}}}}/**\r\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n * Used when creating new views, to pre-fill their complete event children snapshot.\r\n */function writeTreeCalcCompleteEventChildren(writeTree,treePath,completeServerChildren){var completeChildren=ChildrenNode.EMPTY_NODE;var topLevelSet=compoundWriteGetCompleteNode(writeTree.visibleWrites,treePath);if(topLevelSet){if(!topLevelSet.isLeafNode()){// we're shadowing everything. Return the children.\ntopLevelSet.forEachChild(PRIORITY_INDEX,function(childName,childSnap){completeChildren=completeChildren.updateImmediateChild(childName,childSnap);});}return completeChildren;}else if(completeServerChildren){// Layer any children we have on top of this\n// We know we don't have a top-level set, so just enumerate existing children\nvar merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);completeServerChildren.forEachChild(PRIORITY_INDEX,function(childName,childNode){var node=compoundWriteApply(compoundWriteChildCompoundWrite(merge,new Path(childName)),childNode);completeChildren=completeChildren.updateImmediateChild(childName,node);});// Add any complete children we have from the set\ncompoundWriteGetCompleteChildren(merge).forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}else{// We don't have anything to layer on top of. Layer on any children we have\n// Note that we can return an empty snap if we have a defined delete\nvar _merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);compoundWriteGetCompleteChildren(_merge).forEach(function(namedNode){completeChildren=completeChildren.updateImmediateChild(namedNode.name,namedNode.node);});return completeChildren;}}/**\r\n * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n * applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist\r\n */function writeTreeCalcEventCacheAfterServerOverwrite(writeTree,treePath,childPath,existingEventSnap,existingServerSnap){assert(existingEventSnap||existingServerSnap,'Either existingEventSnap or existingServerSnap must exist');var path=pathChild(treePath,childPath);if(compoundWriteHasCompleteWrite(writeTree.visibleWrites,path)){// At this point we can probably guarantee that we're in case 2, meaning no events\n// May need to check visibility while doing the findRootMostValueAndPath call\nreturn null;}else{// No complete shadowing. We're either partially shadowing or not shadowing at all.\nvar childMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,path);if(compoundWriteIsEmpty(childMerge)){// We're not shadowing at all. Case 1\nreturn existingServerSnap.getChild(childPath);}else{// This could be more efficient if the serverNode + updates doesn't change the eventSnap\n// However this is tricky to find out, since user updates don't necessary change the server\n// snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n// adds nodes, but doesn't change any existing writes. It is therefore not enough to\n// only check if the updates change the serverNode.\n// Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\nreturn compoundWriteApply(childMerge,existingServerSnap.getChild(childPath));}}}/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */function writeTreeCalcCompleteChild(writeTree,treePath,childKey,existingServerSnap){var path=pathChild(treePath,childKey);var shadowingNode=compoundWriteGetCompleteNode(writeTree.visibleWrites,path);if(shadowingNode!=null){return shadowingNode;}else{if(existingServerSnap.isCompleteForChild(childKey)){var childMerge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,path);return compoundWriteApply(childMerge,existingServerSnap.getNode().getImmediateChild(childKey));}else{return null;}}}/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n */function writeTreeShadowingWrite(writeTree,path){return compoundWriteGetCompleteNode(writeTree.visibleWrites,path);}/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window.\r\n */function writeTreeCalcIndexedSlice(writeTree,treePath,completeServerData,startPost,count,reverse,index){var toIterate;var merge=compoundWriteChildCompoundWrite(writeTree.visibleWrites,treePath);var shadowingNode=compoundWriteGetCompleteNode(merge,newEmptyPath());if(shadowingNode!=null){toIterate=shadowingNode;}else if(completeServerData!=null){toIterate=compoundWriteApply(merge,completeServerData);}else{// no children to iterate on\nreturn[];}toIterate=toIterate.withIndex(index);if(!toIterate.isEmpty()&&!toIterate.isLeafNode()){var nodes=[];var cmp=index.getCompare();var iter=reverse?toIterate.getReverseIteratorFrom(startPost,index):toIterate.getIteratorFrom(startPost,index);var next=iter.getNext();while(next&&nodes.length<count){if(cmp(next,startPost)!==0){nodes.push(next);}next=iter.getNext();}return nodes;}else{return[];}}function newWriteTree(){return{visibleWrites:CompoundWrite.empty(),allWrites:[],lastWriteId:-1};}/**\r\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n * can lead to a more expensive calculation.\r\n *\r\n * @param writeIdsToExclude - Optional writes to exclude.\r\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\r\n */function writeTreeRefCalcCompleteEventCache(writeTreeRef,completeServerCache,writeIdsToExclude,includeHiddenWrites){return writeTreeCalcCompleteEventCache(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerCache,writeIdsToExclude,includeHiddenWrites);}/**\r\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n * mix of the given server data and write data.\r\n *\r\n */function writeTreeRefCalcCompleteEventChildren(writeTreeRef,completeServerChildren){return writeTreeCalcCompleteEventChildren(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerChildren);}/**\r\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n * if anything, needs to be applied to the event cache.\r\n *\r\n * Possibilities:\r\n *\r\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n *\r\n * 2. Some write is completely shadowing. No events to be raised\r\n *\r\n * 3. Is partially shadowed. Events should be raised\r\n *\r\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n *\r\n *\r\n */function writeTreeRefCalcEventCacheAfterServerOverwrite(writeTreeRef,path,existingEventSnap,existingServerSnap){return writeTreeCalcEventCacheAfterServerOverwrite(writeTreeRef.writeTree,writeTreeRef.treePath,path,existingEventSnap,existingServerSnap);}/**\r\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n * a higher path, this will return the child of that write relative to the write and this path.\r\n * Returns null if there is no write at this path.\r\n *\r\n */function writeTreeRefShadowingWrite(writeTreeRef,path){return writeTreeShadowingWrite(writeTreeRef.writeTree,pathChild(writeTreeRef.treePath,path));}/**\r\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n * the window, but may now be in the window\r\n */function writeTreeRefCalcIndexedSlice(writeTreeRef,completeServerData,startPost,count,reverse,index){return writeTreeCalcIndexedSlice(writeTreeRef.writeTree,writeTreeRef.treePath,completeServerData,startPost,count,reverse,index);}/**\r\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n * complete child for this ChildKey.\r\n */function writeTreeRefCalcCompleteChild(writeTreeRef,childKey,existingServerCache){return writeTreeCalcCompleteChild(writeTreeRef.writeTree,writeTreeRef.treePath,childKey,existingServerCache);}/**\r\n * Return a WriteTreeRef for a child.\r\n */function writeTreeRefChild(writeTreeRef,childName){return newWriteTreeRef(pathChild(writeTreeRef.treePath,childName),writeTreeRef.writeTree);}function newWriteTreeRef(path,writeTree){return{treePath:path,writeTree:writeTree};}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ChildChangeAccumulator=/*#__PURE__*/function(){function ChildChangeAccumulator(){_classCallCheck(this,ChildChangeAccumulator);this.changeMap=new Map();}_createClass(ChildChangeAccumulator,[{key:\"trackChildChange\",value:function trackChildChange(change){var type=change.type;var childKey=change.childName;assert(type===\"child_added\"/* CHILD_ADDED */||type===\"child_changed\"/* CHILD_CHANGED */||type===\"child_removed\"/* CHILD_REMOVED */,'Only child changes supported for tracking');assert(childKey!=='.priority','Only non-priority child changes can be tracked.');var oldChange=this.changeMap.get(childKey);if(oldChange){var oldType=oldChange.type;if(type===\"child_added\"/* CHILD_ADDED */&&oldType===\"child_removed\"/* CHILD_REMOVED */){this.changeMap.set(childKey,changeChildChanged(childKey,change.snapshotNode,oldChange.snapshotNode));}else if(type===\"child_removed\"/* CHILD_REMOVED */&&oldType===\"child_added\"/* CHILD_ADDED */){this.changeMap.delete(childKey);}else if(type===\"child_removed\"/* CHILD_REMOVED */&&oldType===\"child_changed\"/* CHILD_CHANGED */){this.changeMap.set(childKey,changeChildRemoved(childKey,oldChange.oldSnap));}else if(type===\"child_changed\"/* CHILD_CHANGED */&&oldType===\"child_added\"/* CHILD_ADDED */){this.changeMap.set(childKey,changeChildAdded(childKey,change.snapshotNode));}else if(type===\"child_changed\"/* CHILD_CHANGED */&&oldType===\"child_changed\"/* CHILD_CHANGED */){this.changeMap.set(childKey,changeChildChanged(childKey,change.snapshotNode,oldChange.oldSnap));}else{throw assertionError('Illegal combination of changes: '+change+' occurred after '+oldChange);}}else{this.changeMap.set(childKey,change);}}},{key:\"getChanges\",value:function getChanges(){return Array.from(this.changeMap.values());}}]);return ChildChangeAccumulator;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nvar NoCompleteChildSource_=/*#__PURE__*/function(){function NoCompleteChildSource_(){_classCallCheck(this,NoCompleteChildSource_);}_createClass(NoCompleteChildSource_,[{key:\"getCompleteChild\",value:function getCompleteChild(childKey){return null;}},{key:\"getChildAfterChild\",value:function getChildAfterChild(index,child,reverse){return null;}}]);return NoCompleteChildSource_;}();/**\r\n * Singleton instance.\r\n */var NO_COMPLETE_CHILD_SOURCE=new NoCompleteChildSource_();/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n */var WriteTreeCompleteChildSource=/*#__PURE__*/function(){function WriteTreeCompleteChildSource(writes_,viewCache_){var optCompleteServerCache_=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;_classCallCheck(this,WriteTreeCompleteChildSource);this.writes_=writes_;this.viewCache_=viewCache_;this.optCompleteServerCache_=optCompleteServerCache_;}_createClass(WriteTreeCompleteChildSource,[{key:\"getCompleteChild\",value:function getCompleteChild(childKey){var node=this.viewCache_.eventCache;if(node.isCompleteForChild(childKey)){return node.getNode().getImmediateChild(childKey);}else{var serverNode=this.optCompleteServerCache_!=null?new CacheNode(this.optCompleteServerCache_,true,false):this.viewCache_.serverCache;return writeTreeRefCalcCompleteChild(this.writes_,childKey,serverNode);}}},{key:\"getChildAfterChild\",value:function getChildAfterChild(index,child,reverse){var completeServerData=this.optCompleteServerCache_!=null?this.optCompleteServerCache_:viewCacheGetCompleteServerSnap(this.viewCache_);var nodes=writeTreeRefCalcIndexedSlice(this.writes_,completeServerData,child,1,reverse,index);if(nodes.length===0){return null;}else{return nodes[0];}}}]);return WriteTreeCompleteChildSource;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function newViewProcessor(filter){return{filter:filter};}function viewProcessorAssertIndexed(viewProcessor,viewCache){assert(viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),'Event snap not indexed');assert(viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),'Server snap not indexed');}function viewProcessorApplyOperation(viewProcessor,oldViewCache,operation,writesCache,completeCache){var accumulator=new ChildChangeAccumulator();var newViewCache,filterServerNode;if(operation.type===OperationType.OVERWRITE){var overwrite=operation;if(overwrite.source.fromUser){newViewCache=viewProcessorApplyUserOverwrite(viewProcessor,oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,accumulator);}else{assert(overwrite.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered  and the\n// update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n// again\nfilterServerNode=overwrite.source.tagged||oldViewCache.serverCache.isFiltered()&&!pathIsEmpty(overwrite.path);newViewCache=viewProcessorApplyServerOverwrite(viewProcessor,oldViewCache,overwrite.path,overwrite.snap,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.MERGE){var merge=operation;if(merge.source.fromUser){newViewCache=viewProcessorApplyUserMerge(viewProcessor,oldViewCache,merge.path,merge.children,writesCache,completeCache,accumulator);}else{assert(merge.source.fromServer,'Unknown source.');// We filter the node if it's a tagged update or the node has been previously filtered\nfilterServerNode=merge.source.tagged||oldViewCache.serverCache.isFiltered();newViewCache=viewProcessorApplyServerMerge(viewProcessor,oldViewCache,merge.path,merge.children,writesCache,completeCache,filterServerNode,accumulator);}}else if(operation.type===OperationType.ACK_USER_WRITE){var ackUserWrite=operation;if(!ackUserWrite.revert){newViewCache=viewProcessorAckUserWrite(viewProcessor,oldViewCache,ackUserWrite.path,ackUserWrite.affectedTree,writesCache,completeCache,accumulator);}else{newViewCache=viewProcessorRevertUserWrite(viewProcessor,oldViewCache,ackUserWrite.path,writesCache,completeCache,accumulator);}}else if(operation.type===OperationType.LISTEN_COMPLETE){newViewCache=viewProcessorListenComplete(viewProcessor,oldViewCache,operation.path,writesCache,accumulator);}else{throw assertionError('Unknown operation type: '+operation.type);}var changes=accumulator.getChanges();viewProcessorMaybeAddValueEvent(oldViewCache,newViewCache,changes);return{viewCache:newViewCache,changes:changes};}function viewProcessorMaybeAddValueEvent(oldViewCache,newViewCache,accumulator){var eventSnap=newViewCache.eventCache;if(eventSnap.isFullyInitialized()){var isLeafOrEmpty=eventSnap.getNode().isLeafNode()||eventSnap.getNode().isEmpty();var oldCompleteSnap=viewCacheGetCompleteEventSnap(oldViewCache);if(accumulator.length>0||!oldViewCache.eventCache.isFullyInitialized()||isLeafOrEmpty&&!eventSnap.getNode().equals(oldCompleteSnap)||!eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())){accumulator.push(changeValue(viewCacheGetCompleteEventSnap(newViewCache)));}}}function viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,viewCache,changePath,writesCache,source,accumulator){var oldEventSnap=viewCache.eventCache;if(writeTreeRefShadowingWrite(writesCache,changePath)!=null){// we have a shadowing write, ignore changes\nreturn viewCache;}else{var newEventCache,serverNode;if(pathIsEmpty(changePath)){// TODO: figure out how this plays with \"sliding ack windows\"\nassert(viewCache.serverCache.isFullyInitialized(),'If change path is empty, we must have complete server data');if(viewCache.serverCache.isFiltered()){// We need to special case this, because we need to only apply writes to complete children, or\n// we might end up raising events for incomplete children. If the server data is filtered deep\n// writes cannot be guaranteed to be complete\nvar serverCache=viewCacheGetCompleteServerSnap(viewCache);var completeChildren=serverCache instanceof ChildrenNode?serverCache:ChildrenNode.EMPTY_NODE;var completeEventChildren=writeTreeRefCalcCompleteEventChildren(writesCache,completeChildren);newEventCache=viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(),completeEventChildren,accumulator);}else{var completeNode=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));newEventCache=viewProcessor.filter.updateFullNode(viewCache.eventCache.getNode(),completeNode,accumulator);}}else{var childKey=pathGetFront(changePath);if(childKey==='.priority'){assert(pathGetLength(changePath)===1,\"Can't have a priority with additional path components\");var oldEventNode=oldEventSnap.getNode();serverNode=viewCache.serverCache.getNode();// we might have overwrites for this priority\nvar updatedPriority=writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache,changePath,oldEventNode,serverNode);if(updatedPriority!=null){newEventCache=viewProcessor.filter.updatePriority(oldEventNode,updatedPriority);}else{// priority didn't change, keep old node\nnewEventCache=oldEventSnap.getNode();}}else{var childChangePath=pathPopFront(changePath);// update child\nvar newEventChild;if(oldEventSnap.isCompleteForChild(childKey)){serverNode=viewCache.serverCache.getNode();var eventChildUpdate=writeTreeRefCalcEventCacheAfterServerOverwrite(writesCache,changePath,oldEventSnap.getNode(),serverNode);if(eventChildUpdate!=null){newEventChild=oldEventSnap.getNode().getImmediateChild(childKey).updateChild(childChangePath,eventChildUpdate);}else{// Nothing changed, just keep the old child\nnewEventChild=oldEventSnap.getNode().getImmediateChild(childKey);}}else{newEventChild=writeTreeRefCalcCompleteChild(writesCache,childKey,viewCache.serverCache);}if(newEventChild!=null){newEventCache=viewProcessor.filter.updateChild(oldEventSnap.getNode(),childKey,newEventChild,childChangePath,source,accumulator);}else{// no complete child available or no change\nnewEventCache=oldEventSnap.getNode();}}}return viewCacheUpdateEventSnap(viewCache,newEventCache,oldEventSnap.isFullyInitialized()||pathIsEmpty(changePath),viewProcessor.filter.filtersNodes());}}function viewProcessorApplyServerOverwrite(viewProcessor,oldViewCache,changePath,changedSnap,writesCache,completeCache,filterServerNode,accumulator){var oldServerSnap=oldViewCache.serverCache;var newServerCache;var serverFilter=filterServerNode?viewProcessor.filter:viewProcessor.filter.getIndexedFilter();if(pathIsEmpty(changePath)){newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),changedSnap,null);}else if(serverFilter.filtersNodes()&&!oldServerSnap.isFiltered()){// we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\nvar newServerNode=oldServerSnap.getNode().updateChild(changePath,changedSnap);newServerCache=serverFilter.updateFullNode(oldServerSnap.getNode(),newServerNode,null);}else{var childKey=pathGetFront(changePath);if(!oldServerSnap.isCompleteForPath(changePath)&&pathGetLength(changePath)>1){// We don't update incomplete nodes with updates intended for other listeners\nreturn oldViewCache;}var childChangePath=pathPopFront(changePath);var childNode=oldServerSnap.getNode().getImmediateChild(childKey);var newChildNode=childNode.updateChild(childChangePath,changedSnap);if(childKey==='.priority'){newServerCache=serverFilter.updatePriority(oldServerSnap.getNode(),newChildNode);}else{newServerCache=serverFilter.updateChild(oldServerSnap.getNode(),childKey,newChildNode,childChangePath,NO_COMPLETE_CHILD_SOURCE,null);}}var newViewCache=viewCacheUpdateServerSnap(oldViewCache,newServerCache,oldServerSnap.isFullyInitialized()||pathIsEmpty(changePath),serverFilter.filtersNodes());var source=new WriteTreeCompleteChildSource(writesCache,newViewCache,completeCache);return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,newViewCache,changePath,writesCache,source,accumulator);}function viewProcessorApplyUserOverwrite(viewProcessor,oldViewCache,changePath,changedSnap,writesCache,completeCache,accumulator){var oldEventSnap=oldViewCache.eventCache;var newViewCache,newEventCache;var source=new WriteTreeCompleteChildSource(writesCache,oldViewCache,completeCache);if(pathIsEmpty(changePath)){newEventCache=viewProcessor.filter.updateFullNode(oldViewCache.eventCache.getNode(),changedSnap,accumulator);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventCache,true,viewProcessor.filter.filtersNodes());}else{var childKey=pathGetFront(changePath);if(childKey==='.priority'){newEventCache=viewProcessor.filter.updatePriority(oldViewCache.eventCache.getNode(),changedSnap);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventCache,oldEventSnap.isFullyInitialized(),oldEventSnap.isFiltered());}else{var childChangePath=pathPopFront(changePath);var oldChild=oldEventSnap.getNode().getImmediateChild(childKey);var newChild;if(pathIsEmpty(childChangePath)){// Child overwrite, we can replace the child\nnewChild=changedSnap;}else{var childNode=source.getCompleteChild(childKey);if(childNode!=null){if(pathGetBack(childChangePath)==='.priority'&&childNode.getChild(pathParent(childChangePath)).isEmpty()){// This is a priority update on an empty node. If this node exists on the server, the\n// server will send down the priority in the update, so ignore for now\nnewChild=childNode;}else{newChild=childNode.updateChild(childChangePath,changedSnap);}}else{// There is no complete child node available\nnewChild=ChildrenNode.EMPTY_NODE;}}if(!oldChild.equals(newChild)){var newEventSnap=viewProcessor.filter.updateChild(oldEventSnap.getNode(),childKey,newChild,childChangePath,source,accumulator);newViewCache=viewCacheUpdateEventSnap(oldViewCache,newEventSnap,oldEventSnap.isFullyInitialized(),viewProcessor.filter.filtersNodes());}else{newViewCache=oldViewCache;}}}return newViewCache;}function viewProcessorCacheHasChild(viewCache,childKey){return viewCache.eventCache.isCompleteForChild(childKey);}function viewProcessorApplyUserMerge(viewProcessor,viewCache,path,changedChildren,writesCache,serverCache,accumulator){// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;changedChildren.foreach(function(relativePath,childNode){var writePath=pathChild(path,relativePath);if(viewProcessorCacheHasChild(viewCache,pathGetFront(writePath))){curViewCache=viewProcessorApplyUserOverwrite(viewProcessor,curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});changedChildren.foreach(function(relativePath,childNode){var writePath=pathChild(path,relativePath);if(!viewProcessorCacheHasChild(viewCache,pathGetFront(writePath))){curViewCache=viewProcessorApplyUserOverwrite(viewProcessor,curViewCache,writePath,childNode,writesCache,serverCache,accumulator);}});return curViewCache;}function viewProcessorApplyMerge(viewProcessor,node,merge){merge.foreach(function(relativePath,childNode){node=node.updateChild(relativePath,childNode);});return node;}function viewProcessorApplyServerMerge(viewProcessor,viewCache,path,changedChildren,writesCache,serverCache,filterServerNode,accumulator){// If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n// wait for the complete data update coming soon.\nif(viewCache.serverCache.getNode().isEmpty()&&!viewCache.serverCache.isFullyInitialized()){return viewCache;}// HACK: In the case of a limit query, there may be some changes that bump things out of the\n// window leaving room for new items.  It's important we process these changes first, so we\n// iterate the changes twice, first processing any that affect items currently in view.\n// TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n// and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n// not the other.\nvar curViewCache=viewCache;var viewMergeTree;if(pathIsEmpty(path)){viewMergeTree=changedChildren;}else{viewMergeTree=new ImmutableTree(null).setTree(path,changedChildren);}var serverNode=viewCache.serverCache.getNode();viewMergeTree.children.inorderTraversal(function(childKey,childTree){if(serverNode.hasChild(childKey)){var serverChild=viewCache.serverCache.getNode().getImmediateChild(childKey);var newChild=viewProcessorApplyMerge(viewProcessor,serverChild,childTree);curViewCache=viewProcessorApplyServerOverwrite(viewProcessor,curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});viewMergeTree.children.inorderTraversal(function(childKey,childMergeTree){var isUnknownDeepMerge=!viewCache.serverCache.isCompleteForChild(childKey)&&childMergeTree.value===undefined;if(!serverNode.hasChild(childKey)&&!isUnknownDeepMerge){var serverChild=viewCache.serverCache.getNode().getImmediateChild(childKey);var newChild=viewProcessorApplyMerge(viewProcessor,serverChild,childMergeTree);curViewCache=viewProcessorApplyServerOverwrite(viewProcessor,curViewCache,new Path(childKey),newChild,writesCache,serverCache,filterServerNode,accumulator);}});return curViewCache;}function viewProcessorAckUserWrite(viewProcessor,viewCache,ackPath,affectedTree,writesCache,completeCache,accumulator){if(writeTreeRefShadowingWrite(writesCache,ackPath)!=null){return viewCache;}// Only filter server node if it is currently filtered\nvar filterServerNode=viewCache.serverCache.isFiltered();// Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n// now that it won't be shadowed.\nvar serverCache=viewCache.serverCache;if(affectedTree.value!=null){// This is an overwrite.\nif(pathIsEmpty(ackPath)&&serverCache.isFullyInitialized()||serverCache.isCompleteForPath(ackPath)){return viewProcessorApplyServerOverwrite(viewProcessor,viewCache,ackPath,serverCache.getNode().getChild(ackPath),writesCache,completeCache,filterServerNode,accumulator);}else if(pathIsEmpty(ackPath)){// This is a goofy edge case where we are acking data at this location but don't have full data.  We\n// should just re-apply whatever we have in our cache as a merge.\nvar changedChildren=new ImmutableTree(null);serverCache.getNode().forEachChild(KEY_INDEX,function(name,node){changedChildren=changedChildren.set(new Path(name),node);});return viewProcessorApplyServerMerge(viewProcessor,viewCache,ackPath,changedChildren,writesCache,completeCache,filterServerNode,accumulator);}else{return viewCache;}}else{// This is a merge.\nvar _changedChildren=new ImmutableTree(null);affectedTree.foreach(function(mergePath,value){var serverCachePath=pathChild(ackPath,mergePath);if(serverCache.isCompleteForPath(serverCachePath)){_changedChildren=_changedChildren.set(mergePath,serverCache.getNode().getChild(serverCachePath));}});return viewProcessorApplyServerMerge(viewProcessor,viewCache,ackPath,_changedChildren,writesCache,completeCache,filterServerNode,accumulator);}}function viewProcessorListenComplete(viewProcessor,viewCache,path,writesCache,accumulator){var oldServerNode=viewCache.serverCache;var newViewCache=viewCacheUpdateServerSnap(viewCache,oldServerNode.getNode(),oldServerNode.isFullyInitialized()||pathIsEmpty(path),oldServerNode.isFiltered());return viewProcessorGenerateEventCacheAfterServerEvent(viewProcessor,newViewCache,path,writesCache,NO_COMPLETE_CHILD_SOURCE,accumulator);}function viewProcessorRevertUserWrite(viewProcessor,viewCache,path,writesCache,completeServerCache,accumulator){var complete;if(writeTreeRefShadowingWrite(writesCache,path)!=null){return viewCache;}else{var source=new WriteTreeCompleteChildSource(writesCache,viewCache,completeServerCache);var oldEventCache=viewCache.eventCache.getNode();var newEventCache;if(pathIsEmpty(path)||pathGetFront(path)==='.priority'){var newNode;if(viewCache.serverCache.isFullyInitialized()){newNode=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));}else{var serverChildren=viewCache.serverCache.getNode();assert(serverChildren instanceof ChildrenNode,'serverChildren would be complete if leaf node');newNode=writeTreeRefCalcCompleteEventChildren(writesCache,serverChildren);}newNode=newNode;newEventCache=viewProcessor.filter.updateFullNode(oldEventCache,newNode,accumulator);}else{var childKey=pathGetFront(path);var newChild=writeTreeRefCalcCompleteChild(writesCache,childKey,viewCache.serverCache);if(newChild==null&&viewCache.serverCache.isCompleteForChild(childKey)){newChild=oldEventCache.getImmediateChild(childKey);}if(newChild!=null){newEventCache=viewProcessor.filter.updateChild(oldEventCache,childKey,newChild,pathPopFront(path),source,accumulator);}else if(viewCache.eventCache.getNode().hasChild(childKey)){// No complete child available, delete the existing one, if any\nnewEventCache=viewProcessor.filter.updateChild(oldEventCache,childKey,ChildrenNode.EMPTY_NODE,pathPopFront(path),source,accumulator);}else{newEventCache=oldEventCache;}if(newEventCache.isEmpty()&&viewCache.serverCache.isFullyInitialized()){// We might have reverted all child writes. Maybe the old event was a leaf node\ncomplete=writeTreeRefCalcCompleteEventCache(writesCache,viewCacheGetCompleteServerSnap(viewCache));if(complete.isLeafNode()){newEventCache=viewProcessor.filter.updateFullNode(newEventCache,complete,accumulator);}}}complete=viewCache.serverCache.isFullyInitialized()||writeTreeRefShadowingWrite(writesCache,newEmptyPath())!=null;return viewCacheUpdateEventSnap(viewCache,newEventCache,complete,viewProcessor.filter.filtersNodes());}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n */var View=/*#__PURE__*/function(){function View(query_,initialViewCache){_classCallCheck(this,View);this.query_=query_;this.eventRegistrations_=[];var params=this.query_._queryParams;var indexFilter=new IndexedFilter(params.getIndex());var filter=queryParamsGetNodeFilter(params);this.processor_=newViewProcessor(filter);var initialServerCache=initialViewCache.serverCache;var initialEventCache=initialViewCache.eventCache;// Don't filter server node with other filter than index, wait for tagged listen\nvar serverSnap=indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE,initialServerCache.getNode(),null);var eventSnap=filter.updateFullNode(ChildrenNode.EMPTY_NODE,initialEventCache.getNode(),null);var newServerCache=new CacheNode(serverSnap,initialServerCache.isFullyInitialized(),indexFilter.filtersNodes());var newEventCache=new CacheNode(eventSnap,initialEventCache.isFullyInitialized(),filter.filtersNodes());this.viewCache_=newViewCache(newEventCache,newServerCache);this.eventGenerator_=new EventGenerator(this.query_);}_createClass(View,[{key:\"query\",get:function get(){return this.query_;}}]);return View;}();function viewGetServerCache(view){return view.viewCache_.serverCache.getNode();}function viewGetCompleteNode(view){return viewCacheGetCompleteEventSnap(view.viewCache_);}function viewGetCompleteServerCache(view,path){var cache=viewCacheGetCompleteServerSnap(view.viewCache_);if(cache){// If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n// we need to see if it contains the child we're interested in.\nif(view.query._queryParams.loadsAllData()||!pathIsEmpty(path)&&!cache.getImmediateChild(pathGetFront(path)).isEmpty()){return cache.getChild(path);}}return null;}function viewIsEmpty(view){return view.eventRegistrations_.length===0;}function viewAddEventRegistration(view,eventRegistration){view.eventRegistrations_.push(eventRegistration);}/**\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */function viewRemoveEventRegistration(view,eventRegistration,cancelError){var cancelEvents=[];if(cancelError){assert(eventRegistration==null,'A cancel should cancel all event registrations.');var path=view.query._path;view.eventRegistrations_.forEach(function(registration){var maybeEvent=registration.createCancelEvent(cancelError,path);if(maybeEvent){cancelEvents.push(maybeEvent);}});}if(eventRegistration){var remaining=[];for(var i=0;i<view.eventRegistrations_.length;++i){var existing=view.eventRegistrations_[i];if(!existing.matches(eventRegistration)){remaining.push(existing);}else if(eventRegistration.hasAnyCallback()){// We're removing just this one\nremaining=remaining.concat(view.eventRegistrations_.slice(i+1));break;}}view.eventRegistrations_=remaining;}else{view.eventRegistrations_=[];}return cancelEvents;}/**\r\n * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n */function viewApplyOperation(view,operation,writesCache,completeServerCache){if(operation.type===OperationType.MERGE&&operation.source.queryId!==null){assert(viewCacheGetCompleteServerSnap(view.viewCache_),'We should always have a full cache before handling merges');assert(viewCacheGetCompleteEventSnap(view.viewCache_),'Missing event cache, even though we have a server cache');}var oldViewCache=view.viewCache_;var result=viewProcessorApplyOperation(view.processor_,oldViewCache,operation,writesCache,completeServerCache);viewProcessorAssertIndexed(view.processor_,result.viewCache);assert(result.viewCache.serverCache.isFullyInitialized()||!oldViewCache.serverCache.isFullyInitialized(),'Once a server snap is complete, it should never go back');view.viewCache_=result.viewCache;return viewGenerateEventsForChanges_(view,result.changes,result.viewCache.eventCache.getNode(),null);}function viewGetInitialEvents(view,registration){var eventSnap=view.viewCache_.eventCache;var initialChanges=[];if(!eventSnap.getNode().isLeafNode()){var eventNode=eventSnap.getNode();eventNode.forEachChild(PRIORITY_INDEX,function(key,childNode){initialChanges.push(changeChildAdded(key,childNode));});}if(eventSnap.isFullyInitialized()){initialChanges.push(changeValue(eventSnap.getNode()));}return viewGenerateEventsForChanges_(view,initialChanges,eventSnap.getNode(),registration);}function viewGenerateEventsForChanges_(view,changes,eventCache,eventRegistration){var registrations=eventRegistration?[eventRegistration]:view.eventRegistrations_;return eventGeneratorGenerateEventsForChanges(view.eventGenerator_,changes,eventCache,registrations);}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var referenceConstructor$1;/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */var SyncPoint=/*#__PURE__*/_createClass(function SyncPoint(){_classCallCheck(this,SyncPoint);/**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */this.views=new Map();});function syncPointSetReferenceConstructor(val){assert(!referenceConstructor$1,'__referenceConstructor has already been defined');referenceConstructor$1=val;}function syncPointGetReferenceConstructor(){assert(referenceConstructor$1,'Reference.ts has not been loaded');return referenceConstructor$1;}function syncPointIsEmpty(syncPoint){return syncPoint.views.size===0;}function syncPointApplyOperation(syncPoint,operation,writesCache,optCompleteServerCache){var queryId=operation.source.queryId;if(queryId!==null){var view=syncPoint.views.get(queryId);assert(view!=null,'SyncTree gave us an op for an invalid query.');return viewApplyOperation(view,operation,writesCache,optCompleteServerCache);}else{var events=[];var _iterator5=_createForOfIteratorHelper(syncPoint.views.values()),_step4;try{for(_iterator5.s();!(_step4=_iterator5.n()).done;){var _view=_step4.value;events=events.concat(viewApplyOperation(_view,operation,writesCache,optCompleteServerCache));}}catch(err){_iterator5.e(err);}finally{_iterator5.f();}return events;}}/**\r\n * Get a view for the specified query.\r\n *\r\n * @param query - The query to return a view for\r\n * @param writesCache\r\n * @param serverCache\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */function syncPointGetView(syncPoint,query,writesCache,serverCache,serverCacheComplete){var queryId=query._queryIdentifier;var view=syncPoint.views.get(queryId);if(!view){// TODO: make writesCache take flag for complete server node\nvar eventCache=writeTreeRefCalcCompleteEventCache(writesCache,serverCacheComplete?serverCache:null);var eventCacheComplete=false;if(eventCache){eventCacheComplete=true;}else if(serverCache instanceof ChildrenNode){eventCache=writeTreeRefCalcCompleteEventChildren(writesCache,serverCache);eventCacheComplete=false;}else{eventCache=ChildrenNode.EMPTY_NODE;eventCacheComplete=false;}var viewCache=newViewCache(new CacheNode(eventCache,eventCacheComplete,false),new CacheNode(serverCache,serverCacheComplete,false));return new View(query,viewCache);}return view;}/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @param query\r\n * @param eventRegistration\r\n * @param writesCache\r\n * @param serverCache - Complete server cache, if we have it.\r\n * @param serverCacheComplete\r\n * @returns Events to raise.\r\n */function syncPointAddEventRegistration(syncPoint,query,eventRegistration,writesCache,serverCache,serverCacheComplete){var view=syncPointGetView(syncPoint,query,writesCache,serverCache,serverCacheComplete);if(!syncPoint.views.has(query._queryIdentifier)){syncPoint.views.set(query._queryIdentifier,view);}// This is guaranteed to exist now, we just created anything that was missing\nviewAddEventRegistration(view,eventRegistration);return viewGetInitialEvents(view,eventRegistration);}/**\r\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n *\r\n * If query is the default query, we'll check all views for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n *\r\n * @param eventRegistration - If null, remove all callbacks.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns removed queries and any cancel events\r\n */function syncPointRemoveEventRegistration(syncPoint,query,eventRegistration,cancelError){var queryId=query._queryIdentifier;var removed=[];var cancelEvents=[];var hadCompleteView=syncPointHasCompleteView(syncPoint);if(queryId==='default'){// When you do ref.off(...), we search all views for the registration to remove.\nvar _iterator6=_createForOfIteratorHelper(syncPoint.views.entries()),_step5;try{for(_iterator6.s();!(_step5=_iterator6.n()).done;){var _step5$value=_slicedToArray(_step5.value,2),viewQueryId=_step5$value[0],view=_step5$value[1];cancelEvents=cancelEvents.concat(viewRemoveEventRegistration(view,eventRegistration,cancelError));if(viewIsEmpty(view)){syncPoint.views.delete(viewQueryId);// We'll deal with complete views later.\nif(!view.query._queryParams.loadsAllData()){removed.push(view.query);}}}}catch(err){_iterator6.e(err);}finally{_iterator6.f();}}else{// remove the callback from the specific view.\nvar _view2=syncPoint.views.get(queryId);if(_view2){cancelEvents=cancelEvents.concat(viewRemoveEventRegistration(_view2,eventRegistration,cancelError));if(viewIsEmpty(_view2)){syncPoint.views.delete(queryId);// We'll deal with complete views later.\nif(!_view2.query._queryParams.loadsAllData()){removed.push(_view2.query);}}}}if(hadCompleteView&&!syncPointHasCompleteView(syncPoint)){// We removed our last complete view.\nremoved.push(new(syncPointGetReferenceConstructor())(query._repo,query._path));}return{removed:removed,events:cancelEvents};}function syncPointGetQueryViews(syncPoint){var result=[];var _iterator7=_createForOfIteratorHelper(syncPoint.views.values()),_step6;try{for(_iterator7.s();!(_step6=_iterator7.n()).done;){var view=_step6.value;if(!view.query._queryParams.loadsAllData()){result.push(view);}}}catch(err){_iterator7.e(err);}finally{_iterator7.f();}return result;}/**\r\n * @param path - The path to the desired complete snapshot\r\n * @returns A complete cache, if it exists\r\n */function syncPointGetCompleteServerCache(syncPoint,path){var serverCache=null;var _iterator8=_createForOfIteratorHelper(syncPoint.views.values()),_step7;try{for(_iterator8.s();!(_step7=_iterator8.n()).done;){var view=_step7.value;serverCache=serverCache||viewGetCompleteServerCache(view,path);}}catch(err){_iterator8.e(err);}finally{_iterator8.f();}return serverCache;}function syncPointViewForQuery(syncPoint,query){var params=query._queryParams;if(params.loadsAllData()){return syncPointGetCompleteView(syncPoint);}else{var queryId=query._queryIdentifier;return syncPoint.views.get(queryId);}}function syncPointViewExistsForQuery(syncPoint,query){return syncPointViewForQuery(syncPoint,query)!=null;}function syncPointHasCompleteView(syncPoint){return syncPointGetCompleteView(syncPoint)!=null;}function syncPointGetCompleteView(syncPoint){var _iterator9=_createForOfIteratorHelper(syncPoint.views.values()),_step8;try{for(_iterator9.s();!(_step8=_iterator9.n()).done;){var view=_step8.value;if(view.query._queryParams.loadsAllData()){return view;}}}catch(err){_iterator9.e(err);}finally{_iterator9.f();}return null;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var referenceConstructor;function syncTreeSetReferenceConstructor(val){assert(!referenceConstructor,'__referenceConstructor has already been defined');referenceConstructor=val;}function syncTreeGetReferenceConstructor(){assert(referenceConstructor,'Reference.ts has not been loaded');return referenceConstructor;}/**\r\n * Static tracker for next query tag.\r\n */var syncTreeNextQueryTag_=1;/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n */var SyncTree=/*#__PURE__*/_createClass(/**\r\n     * @param listenProvider_ - Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */function SyncTree(listenProvider_){_classCallCheck(this,SyncTree);this.listenProvider_=listenProvider_;/**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */this.syncPointTree_=new ImmutableTree(null);/**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */this.pendingWriteTree_=newWriteTree();this.tagToQueryMap=new Map();this.queryToTagMap=new Map();});/**\r\n * Apply the data changes for a user-generated set() or transaction() call.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyUserOverwrite(syncTree,path,newData,writeId,visible){// Record pending write.\nwriteTreeAddOverwrite(syncTree.pendingWriteTree_,path,newData,writeId,visible);if(!visible){return[];}else{return syncTreeApplyOperationToSyncPoints_(syncTree,new Overwrite(newOperationSourceUser(),path,newData));}}/**\r\n * Apply the data from a user-generated update() call\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyUserMerge(syncTree,path,changedChildren,writeId){// Record pending merge.\nwriteTreeAddMerge(syncTree.pendingWriteTree_,path,changedChildren,writeId);var changeTree=ImmutableTree.fromObject(changedChildren);return syncTreeApplyOperationToSyncPoints_(syncTree,new Merge(newOperationSourceUser(),path,changeTree));}/**\r\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n *\r\n * @param revert - True if the given write failed and needs to be reverted\r\n * @returns Events to raise.\r\n */function syncTreeAckUserWrite(syncTree,writeId){var revert=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var write=writeTreeGetWrite(syncTree.pendingWriteTree_,writeId);var needToReevaluate=writeTreeRemoveWrite(syncTree.pendingWriteTree_,writeId);if(!needToReevaluate){return[];}else{var affectedTree=new ImmutableTree(null);if(write.snap!=null){// overwrite\naffectedTree=affectedTree.set(newEmptyPath(),true);}else{each(write.children,function(pathString){affectedTree=affectedTree.set(new Path(pathString),true);});}return syncTreeApplyOperationToSyncPoints_(syncTree,new AckUserWrite(write.path,affectedTree,revert));}}/**\r\n * Apply new server data for the specified path..\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyServerOverwrite(syncTree,path,newData){return syncTreeApplyOperationToSyncPoints_(syncTree,new Overwrite(newOperationSourceServer(),path,newData));}/**\r\n * Apply new server data to be merged in at the specified path.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyServerMerge(syncTree,path,changedChildren){var changeTree=ImmutableTree.fromObject(changedChildren);return syncTreeApplyOperationToSyncPoints_(syncTree,new Merge(newOperationSourceServer(),path,changeTree));}/**\r\n * Apply a listen complete for a query\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyListenComplete(syncTree,path){return syncTreeApplyOperationToSyncPoints_(syncTree,new ListenComplete(newOperationSourceServer(),path));}/**\r\n * Apply a listen complete for a tagged query\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyTaggedListenComplete(syncTree,path,tag){var queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey){var r=syncTreeParseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=newRelativePath(queryPath,path);var op=new ListenComplete(newOperationSourceServerTaggedQuery(queryId),relativePath);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}}/**\r\n * Remove event callback(s).\r\n *\r\n * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n *\r\n * @param eventRegistration - If null, all callbacks are removed.\r\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\r\n * @returns Cancel events, if cancelError was provided.\r\n */function syncTreeRemoveEventRegistration(syncTree,query,eventRegistration,cancelError){// Find the syncPoint first. Then deal with whether or not it has matching listeners\nvar path=query._path;var maybeSyncPoint=syncTree.syncPointTree_.get(path);var cancelEvents=[];// A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n// other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n// not loadsAllData().\nif(maybeSyncPoint&&(query._queryIdentifier==='default'||syncPointViewExistsForQuery(maybeSyncPoint,query))){var removedAndEvents=syncPointRemoveEventRegistration(maybeSyncPoint,query,eventRegistration,cancelError);if(syncPointIsEmpty(maybeSyncPoint)){syncTree.syncPointTree_=syncTree.syncPointTree_.remove(path);}var removed=removedAndEvents.removed;cancelEvents=removedAndEvents.events;// We may have just removed one of many listeners and can short-circuit this whole process\n// We may also not have removed a default listener, in which case all of the descendant listeners should already be\n// properly set up.\n//\n// Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n// queryId === 'default'\nvar removingDefault=-1!==removed.findIndex(function(query){return query._queryParams.loadsAllData();});var covered=syncTree.syncPointTree_.findOnPath(path,function(relativePath,parentSyncPoint){return syncPointHasCompleteView(parentSyncPoint);});if(removingDefault&&!covered){var subtree=syncTree.syncPointTree_.subtree(path);// There are potentially child listeners. Determine what if any listens we need to send before executing the\n// removal\nif(!subtree.isEmpty()){// We need to fold over our subtree and collect the listeners to send\nvar newViews=syncTreeCollectDistinctViewsForSubTree_(subtree);// Ok, we've collected all the listens we need. Set them up.\nfor(var i=0;i<newViews.length;++i){var view=newViews[i],newQuery=view.query;var listener=syncTreeCreateListenerForView_(syncTree,view);syncTree.listenProvider_.startListening(syncTreeQueryForListening_(newQuery),syncTreeTagForQuery_(syncTree,newQuery),listener.hashFn,listener.onComplete);}}}// If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n// The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n// Also, note that if we have a cancelError, it's already been removed at the provider level.\nif(!covered&&removed.length>0&&!cancelError){// If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n// default. Otherwise, we need to iterate through and cancel each individual query\nif(removingDefault){// We don't tag default listeners\nvar defaultTag=null;syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(query),defaultTag);}else{removed.forEach(function(queryToRemove){var tagToRemove=syncTree.queryToTagMap.get(syncTreeMakeQueryKey_(queryToRemove));syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToRemove),tagToRemove);});}}// Now, clear all of the tags we're tracking for the removed listens\nsyncTreeRemoveTags_(syncTree,removed);}return cancelEvents;}/**\r\n * Apply new server data for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyTaggedQueryOverwrite(syncTree,path,snap,tag){var queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey!=null){var r=syncTreeParseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=newRelativePath(queryPath,path);var op=new Overwrite(newOperationSourceServerTaggedQuery(queryId),relativePath,snap);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// Query must have been removed already\nreturn[];}}/**\r\n * Apply server data to be merged in for the specified tagged query.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeApplyTaggedQueryMerge(syncTree,path,changedChildren,tag){var queryKey=syncTreeQueryKeyForTag_(syncTree,tag);if(queryKey){var r=syncTreeParseQueryKey_(queryKey);var queryPath=r.path,queryId=r.queryId;var relativePath=newRelativePath(queryPath,path);var changeTree=ImmutableTree.fromObject(changedChildren);var op=new Merge(newOperationSourceServerTaggedQuery(queryId),relativePath,changeTree);return syncTreeApplyTaggedOperation_(syncTree,queryPath,op);}else{// We've already removed the query. No big deal, ignore the update\nreturn[];}}/**\r\n * Add an event callback for the specified query.\r\n *\r\n * @returns Events to raise.\r\n */function syncTreeAddEventRegistration(syncTree,query,eventRegistration){var path=query._path;var serverCache=null;var foundAncestorDefaultView=false;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nsyncTree.syncPointTree_.foreachOnPath(path,function(pathToSyncPoint,sp){var relativePath=newRelativePath(pathToSyncPoint,path);serverCache=serverCache||syncPointGetCompleteServerCache(sp,relativePath);foundAncestorDefaultView=foundAncestorDefaultView||syncPointHasCompleteView(sp);});var syncPoint=syncTree.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();syncTree.syncPointTree_=syncTree.syncPointTree_.set(path,syncPoint);}else{foundAncestorDefaultView=foundAncestorDefaultView||syncPointHasCompleteView(syncPoint);serverCache=serverCache||syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var serverCacheComplete;if(serverCache!=null){serverCacheComplete=true;}else{serverCacheComplete=false;serverCache=ChildrenNode.EMPTY_NODE;var subtree=syncTree.syncPointTree_.subtree(path);subtree.foreachChild(function(childName,childSyncPoint){var completeCache=syncPointGetCompleteServerCache(childSyncPoint,newEmptyPath());if(completeCache){serverCache=serverCache.updateImmediateChild(childName,completeCache);}});}var viewAlreadyExists=syncPointViewExistsForQuery(syncPoint,query);if(!viewAlreadyExists&&!query._queryParams.loadsAllData()){// We need to track a tag for this query\nvar queryKey=syncTreeMakeQueryKey_(query);assert(!syncTree.queryToTagMap.has(queryKey),'View does not exist, but we have a tag');var tag=syncTreeGetNextQueryTag_();syncTree.queryToTagMap.set(queryKey,tag);syncTree.tagToQueryMap.set(tag,queryKey);}var writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,path);var events=syncPointAddEventRegistration(syncPoint,query,eventRegistration,writesCache,serverCache,serverCacheComplete);if(!viewAlreadyExists&&!foundAncestorDefaultView){var view=syncPointViewForQuery(syncPoint,query);events=events.concat(syncTreeSetupListener_(syncTree,query,view));}return events;}/**\r\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n *\r\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n *\r\n * @param path - The path to the data we want\r\n * @param writeIdsToExclude - A specific set to be excluded\r\n */function syncTreeCalcCompleteEventCache(syncTree,path,writeIdsToExclude){var includeHiddenSets=true;var writeTree=syncTree.pendingWriteTree_;var serverCache=syncTree.syncPointTree_.findOnPath(path,function(pathSoFar,syncPoint){var relativePath=newRelativePath(pathSoFar,path);var serverCache=syncPointGetCompleteServerCache(syncPoint,relativePath);if(serverCache){return serverCache;}});return writeTreeCalcCompleteEventCache(writeTree,path,serverCache,writeIdsToExclude,includeHiddenSets);}function syncTreeGetServerValue(syncTree,query){var path=query._path;var serverCache=null;// Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n// Consider optimizing this once there's a better understanding of what actual behavior will be.\nsyncTree.syncPointTree_.foreachOnPath(path,function(pathToSyncPoint,sp){var relativePath=newRelativePath(pathToSyncPoint,path);serverCache=serverCache||syncPointGetCompleteServerCache(sp,relativePath);});var syncPoint=syncTree.syncPointTree_.get(path);if(!syncPoint){syncPoint=new SyncPoint();syncTree.syncPointTree_=syncTree.syncPointTree_.set(path,syncPoint);}else{serverCache=serverCache||syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var serverCacheComplete=serverCache!=null;var serverCacheNode=serverCacheComplete?new CacheNode(serverCache,true,false):null;var writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,query._path);var view=syncPointGetView(syncPoint,query,writesCache,serverCacheComplete?serverCacheNode.getNode():ChildrenNode.EMPTY_NODE,serverCacheComplete);return viewGetCompleteNode(view);}/**\r\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n *\r\n * NOTES:\r\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n *\r\n * - We call applyOperation() on each SyncPoint passing three things:\r\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n *   3. A snapshot Node with cached server data, if we have it.\r\n *\r\n * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n */function syncTreeApplyOperationToSyncPoints_(syncTree,operation){return syncTreeApplyOperationHelper_(operation,syncTree.syncPointTree_,/*serverCache=*/null,writeTreeChildWrites(syncTree.pendingWriteTree_,newEmptyPath()));}/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */function syncTreeApplyOperationHelper_(operation,syncPointTree,serverCache,writesCache){if(pathIsEmpty(operation.path)){return syncTreeApplyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache);}else{var syncPoint=syncPointTree.get(newEmptyPath());// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var events=[];var childName=pathGetFront(operation.path);var childOperation=operation.operationForChild(childName);var childTree=syncPointTree.children.get(childName);if(childTree&&childOperation){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writeTreeRefChild(writesCache,childName);events=events.concat(syncTreeApplyOperationHelper_(childOperation,childTree,childServerCache,childWritesCache));}if(syncPoint){events=events.concat(syncPointApplyOperation(syncPoint,operation,writesCache,serverCache));}return events;}}/**\r\n * Recursive helper for applyOperationToSyncPoints_\r\n */function syncTreeApplyOperationDescendantsHelper_(operation,syncPointTree,serverCache,writesCache){var syncPoint=syncPointTree.get(newEmptyPath());// If we don't have cached server data, see if we can get it from this SyncPoint.\nif(serverCache==null&&syncPoint!=null){serverCache=syncPointGetCompleteServerCache(syncPoint,newEmptyPath());}var events=[];syncPointTree.children.inorderTraversal(function(childName,childTree){var childServerCache=serverCache?serverCache.getImmediateChild(childName):null;var childWritesCache=writeTreeRefChild(writesCache,childName);var childOperation=operation.operationForChild(childName);if(childOperation){events=events.concat(syncTreeApplyOperationDescendantsHelper_(childOperation,childTree,childServerCache,childWritesCache));}});if(syncPoint){events=events.concat(syncPointApplyOperation(syncPoint,operation,writesCache,serverCache));}return events;}function syncTreeCreateListenerForView_(syncTree,view){var query=view.query;var tag=syncTreeTagForQuery_(syncTree,query);return{hashFn:function hashFn(){var cache=viewGetServerCache(view)||ChildrenNode.EMPTY_NODE;return cache.hash();},onComplete:function onComplete(status){if(status==='ok'){if(tag){return syncTreeApplyTaggedListenComplete(syncTree,query._path,tag);}else{return syncTreeApplyListenComplete(syncTree,query._path);}}else{// If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n// Note that this may need to be scoped to just this listener if we change permissions on filtered children\nvar _error2=errorForServerCode(status,query);return syncTreeRemoveEventRegistration(syncTree,query,/*eventRegistration*/null,_error2);}}};}/**\r\n * Return the tag associated with the given query.\r\n */function syncTreeTagForQuery_(syncTree,query){var queryKey=syncTreeMakeQueryKey_(query);return syncTree.queryToTagMap.get(queryKey);}/**\r\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n */function syncTreeMakeQueryKey_(query){return query._path.toString()+'$'+query._queryIdentifier;}/**\r\n * Return the query associated with the given tag, if we have one\r\n */function syncTreeQueryKeyForTag_(syncTree,tag){return syncTree.tagToQueryMap.get(tag);}/**\r\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n */function syncTreeParseQueryKey_(queryKey){var splitIndex=queryKey.indexOf('$');assert(splitIndex!==-1&&splitIndex<queryKey.length-1,'Bad queryKey.');return{queryId:queryKey.substr(splitIndex+1),path:new Path(queryKey.substr(0,splitIndex))};}/**\r\n * A helper method to apply tagged operations\r\n */function syncTreeApplyTaggedOperation_(syncTree,queryPath,operation){var syncPoint=syncTree.syncPointTree_.get(queryPath);assert(syncPoint,\"Missing sync point for query tag that we're tracking\");var writesCache=writeTreeChildWrites(syncTree.pendingWriteTree_,queryPath);return syncPointApplyOperation(syncPoint,operation,writesCache,null);}/**\r\n * This collapses multiple unfiltered views into a single view, since we only need a single\r\n * listener for them.\r\n */function syncTreeCollectDistinctViewsForSubTree_(subtree){return subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(maybeChildSyncPoint&&syncPointHasCompleteView(maybeChildSyncPoint)){var completeView=syncPointGetCompleteView(maybeChildSyncPoint);return[completeView];}else{// No complete view here, flatten any deeper listens into an array\nvar views=[];if(maybeChildSyncPoint){views=syncPointGetQueryViews(maybeChildSyncPoint);}each(childMap,function(_key,childViews){views=views.concat(childViews);});return views;}});}/**\r\n * Normalizes a query to a query we send the server for listening\r\n *\r\n * @returns The normalized query\r\n */function syncTreeQueryForListening_(query){if(query._queryParams.loadsAllData()&&!query._queryParams.isDefault()){// We treat queries that load all data as default queries\n// Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n// from Query\nreturn new(syncTreeGetReferenceConstructor())(query._repo,query._path);}else{return query;}}function syncTreeRemoveTags_(syncTree,queries){for(var j=0;j<queries.length;++j){var removedQuery=queries[j];if(!removedQuery._queryParams.loadsAllData()){// We should have a tag for this\nvar removedQueryKey=syncTreeMakeQueryKey_(removedQuery);var removedQueryTag=syncTree.queryToTagMap.get(removedQueryKey);syncTree.queryToTagMap.delete(removedQueryKey);syncTree.tagToQueryMap.delete(removedQueryTag);}}}/**\r\n * Static accessor for query tags.\r\n */function syncTreeGetNextQueryTag_(){return syncTreeNextQueryTag_++;}/**\r\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n *\r\n * @returns This method can return events to support synchronous data sources\r\n */function syncTreeSetupListener_(syncTree,query,view){var path=query._path;var tag=syncTreeTagForQuery_(syncTree,query);var listener=syncTreeCreateListenerForView_(syncTree,view);var events=syncTree.listenProvider_.startListening(syncTreeQueryForListening_(query),tag,listener.hashFn,listener.onComplete);var subtree=syncTree.syncPointTree_.subtree(path);// The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n// may need to shadow other listens as well.\nif(tag){assert(!syncPointHasCompleteView(subtree.value),\"If we're adding a query, it shouldn't be shadowed\");}else{// Shadow everything at or below this location, this is a default listener.\nvar queriesToStop=subtree.fold(function(relativePath,maybeChildSyncPoint,childMap){if(!pathIsEmpty(relativePath)&&maybeChildSyncPoint&&syncPointHasCompleteView(maybeChildSyncPoint)){return[syncPointGetCompleteView(maybeChildSyncPoint).query];}else{// No default listener here, flatten any deeper queries into an array\nvar queries=[];if(maybeChildSyncPoint){queries=queries.concat(syncPointGetQueryViews(maybeChildSyncPoint).map(function(view){return view.query;}));}each(childMap,function(_key,childQueries){queries=queries.concat(childQueries);});return queries;}});for(var i=0;i<queriesToStop.length;++i){var queryToStop=queriesToStop[i];syncTree.listenProvider_.stopListening(syncTreeQueryForListening_(queryToStop),syncTreeTagForQuery_(syncTree,queryToStop));}}return events;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var ExistingValueProvider=/*#__PURE__*/function(){function ExistingValueProvider(node_){_classCallCheck(this,ExistingValueProvider);this.node_=node_;}_createClass(ExistingValueProvider,[{key:\"getImmediateChild\",value:function getImmediateChild(childName){var child=this.node_.getImmediateChild(childName);return new ExistingValueProvider(child);}},{key:\"node\",value:function node(){return this.node_;}}]);return ExistingValueProvider;}();var DeferredValueProvider=/*#__PURE__*/function(){function DeferredValueProvider(syncTree,path){_classCallCheck(this,DeferredValueProvider);this.syncTree_=syncTree;this.path_=path;}_createClass(DeferredValueProvider,[{key:\"getImmediateChild\",value:function getImmediateChild(childName){var childPath=pathChild(this.path_,childName);return new DeferredValueProvider(this.syncTree_,childPath);}},{key:\"node\",value:function node(){return syncTreeCalcCompleteEventCache(this.syncTree_,this.path_);}}]);return DeferredValueProvider;}();/**\r\n * Generate placeholders for deferred values.\r\n */var generateWithValues=function generateWithValues(values){values=values||{};values['timestamp']=values['timestamp']||new Date().getTime();return values;};/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n */var resolveDeferredLeafValue=function resolveDeferredLeafValue(value,existingVal,serverValues){if(!value||_typeof(value)!=='object'){return value;}assert('.sv'in value,'Unexpected leaf node or priority contents');if(typeof value['.sv']==='string'){return resolveScalarDeferredValue(value['.sv'],existingVal,serverValues);}else if(_typeof(value['.sv'])==='object'){return resolveComplexDeferredValue(value['.sv'],existingVal);}else{assert(false,'Unexpected server value: '+JSON.stringify(value,null,2));}};var resolveScalarDeferredValue=function resolveScalarDeferredValue(op,existing,serverValues){switch(op){case'timestamp':return serverValues['timestamp'];default:assert(false,'Unexpected server value: '+op);}};var resolveComplexDeferredValue=function resolveComplexDeferredValue(op,existing,unused){if(!op.hasOwnProperty('increment')){assert(false,'Unexpected server value: '+JSON.stringify(op,null,2));}var delta=op['increment'];if(typeof delta!=='number'){assert(false,'Unexpected increment value: '+delta);}var existingNode=existing.node();assert(existingNode!==null&&typeof existingNode!=='undefined','Expected ChildrenNode.EMPTY_NODE for nulls');// Incrementing a non-number sets the value to the incremented amount\nif(!existingNode.isLeafNode()){return delta;}var leaf=existingNode;var existingVal=leaf.getValue();if(typeof existingVal!=='number'){return delta;}// No need to do over/underflow arithmetic here because JS only handles floats under the covers\nreturn existingVal+delta;};/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param path - path to which write is relative\r\n * @param node - new data written at path\r\n * @param syncTree - current data\r\n */var resolveDeferredValueTree=function resolveDeferredValueTree(path,node,syncTree,serverValues){return resolveDeferredValue(node,new DeferredValueProvider(syncTree,path),serverValues);};/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n */var resolveDeferredValueSnapshot=function resolveDeferredValueSnapshot(node,existing,serverValues){return resolveDeferredValue(node,new ExistingValueProvider(existing),serverValues);};function resolveDeferredValue(node,existingVal,serverValues){var rawPri=node.getPriority().val();var priority=resolveDeferredLeafValue(rawPri,existingVal.getImmediateChild('.priority'),serverValues);var newNode;if(node.isLeafNode()){var leafNode=node;var value=resolveDeferredLeafValue(leafNode.getValue(),existingVal,serverValues);if(value!==leafNode.getValue()||priority!==leafNode.getPriority().val()){return new LeafNode(value,nodeFromJSON(priority));}else{return node;}}else{var childrenNode=node;newNode=childrenNode;if(priority!==childrenNode.getPriority().val()){newNode=newNode.updatePriority(new LeafNode(priority));}childrenNode.forEachChild(PRIORITY_INDEX,function(childName,childNode){var newChildNode=resolveDeferredValue(childNode,existingVal.getImmediateChild(childName),serverValues);if(newChildNode!==childNode){newNode=newNode.updateImmediateChild(childName,newChildNode);}});return newNode;}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */var Tree=/*#__PURE__*/_createClass(/**\r\n     * @param name - Optional name of the node.\r\n     * @param parent - Optional parent node.\r\n     * @param node - Optional node to wrap.\r\n     */function Tree(){var name=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';var parent=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var node=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{children:{},childCount:0};_classCallCheck(this,Tree);this.name=name;this.parent=parent;this.node=node;});/**\r\n * Returns a sub-Tree for the given path.\r\n *\r\n * @param pathObj - Path to look up.\r\n * @returns Tree for path.\r\n */function treeSubTree(tree,pathObj){// TODO: Require pathObj to be Path?\nvar path=pathObj instanceof Path?pathObj:new Path(pathObj);var child=tree,next=pathGetFront(path);while(next!==null){var childNode=safeGet(child.node.children,next)||{children:{},childCount:0};child=new Tree(next,child,childNode);path=pathPopFront(path);next=pathGetFront(path);}return child;}/**\r\n * Returns the data associated with this tree node.\r\n *\r\n * @returns The data or null if no data exists.\r\n */function treeGetValue(tree){return tree.node.value;}/**\r\n * Sets data to this tree node.\r\n *\r\n * @param value - Value to set.\r\n */function treeSetValue(tree,value){tree.node.value=value;treeUpdateParents(tree);}/**\r\n * @returns Whether the tree has any children.\r\n */function treeHasChildren(tree){return tree.node.childCount>0;}/**\r\n * @returns Whethe rthe tree is empty (no value or children).\r\n */function treeIsEmpty(tree){return treeGetValue(tree)===undefined&&!treeHasChildren(tree);}/**\r\n * Calls action for each child of this tree node.\r\n *\r\n * @param action - Action to be called for each child.\r\n */function treeForEachChild(tree,action){each(tree.node.children,function(child,childTree){action(new Tree(child,tree,childTree));});}/**\r\n * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n *\r\n * @param action - Action to be called for each child.\r\n * @param includeSelf - Whether to call action on this node as well. Defaults to\r\n *   false.\r\n * @param childrenFirst - Whether to call action on children before calling it on\r\n *   parent.\r\n */function treeForEachDescendant(tree,action,includeSelf,childrenFirst){if(includeSelf&&!childrenFirst){action(tree);}treeForEachChild(tree,function(child){treeForEachDescendant(child,action,true,childrenFirst);});if(includeSelf&&childrenFirst){action(tree);}}/**\r\n * Calls action on each ancestor node.\r\n *\r\n * @param action - Action to be called on each parent; return\r\n *   true to abort.\r\n * @param includeSelf - Whether to call action on this node as well.\r\n * @returns true if the action callback returned true.\r\n */function treeForEachAncestor(tree,action,includeSelf){var node=includeSelf?tree:tree.parent;while(node!==null){if(action(node)){return true;}node=node.parent;}return false;}/**\r\n * @returns The path of this tree node, as a Path.\r\n */function treeGetPath(tree){return new Path(tree.parent===null?tree.name:treeGetPath(tree.parent)+'/'+tree.name);}/**\r\n * Adds or removes this child from its parent based on whether it's empty or not.\r\n */function treeUpdateParents(tree){if(tree.parent!==null){treeUpdateChild(tree.parent,tree.name,tree);}}/**\r\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n *\r\n * @param childName - The name of the child to update.\r\n * @param child - The child to update.\r\n */function treeUpdateChild(tree,childName,child){var childEmpty=treeIsEmpty(child);var childExists=contains(tree.node.children,childName);if(childEmpty&&childExists){delete tree.node.children[childName];tree.node.childCount--;treeUpdateParents(tree);}else if(!childEmpty&&!childExists){tree.node.children[childName]=child.node;tree.node.childCount++;treeUpdateParents(tree);}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * True for invalid Firebase keys\r\n */var INVALID_KEY_REGEX_=/[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n */var INVALID_PATH_REGEX_=/[\\[\\].#$\\u0000-\\u001F\\u007F]/;/**\r\n * Maximum number of characters to allow in leaf value\r\n */var MAX_LEAF_SIZE_=10*1024*1024;var isValidKey=function isValidKey(key){return typeof key==='string'&&key.length!==0&&!INVALID_KEY_REGEX_.test(key);};var isValidPathString=function isValidPathString(pathString){return typeof pathString==='string'&&pathString.length!==0&&!INVALID_PATH_REGEX_.test(pathString);};var isValidRootPathString=function isValidRootPathString(pathString){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}return isValidPathString(pathString);};var isValidPriority=function isValidPriority(priority){return priority===null||typeof priority==='string'||typeof priority==='number'&&!isInvalidJSONNumber(priority)||priority&&_typeof(priority)==='object'&&// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncontains(priority,'.sv');};/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n */var validateFirebaseDataArg=function validateFirebaseDataArg(fnName,value,path,optional){if(optional&&value===undefined){return;}validateFirebaseData(errorPrefix(fnName,'value'),value,path);};/**\r\n * Validate a data object client-side before sending to server.\r\n */var validateFirebaseData=function validateFirebaseData(errorPrefix,data,path_){var path=path_ instanceof Path?new ValidationPath(path_,errorPrefix):path_;if(data===undefined){throw new Error(errorPrefix+'contains undefined '+validationPathToErrorString(path));}if(typeof data==='function'){throw new Error(errorPrefix+'contains a function '+validationPathToErrorString(path)+' with contents = '+data.toString());}if(isInvalidJSONNumber(data)){throw new Error(errorPrefix+'contains '+data.toString()+' '+validationPathToErrorString(path));}// Check max leaf size, but try to avoid the utf8 conversion if we can.\nif(typeof data==='string'&&data.length>MAX_LEAF_SIZE_/3&&stringLength(data)>MAX_LEAF_SIZE_){throw new Error(errorPrefix+'contains a string greater than '+MAX_LEAF_SIZE_+' utf8 bytes '+validationPathToErrorString(path)+\" ('\"+data.substring(0,50)+\"...')\");}// TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n// to save extra walking of large objects.\nif(data&&_typeof(data)==='object'){var hasDotValue=false;var hasActualChild=false;each(data,function(key,value){if(key==='.value'){hasDotValue=true;}else if(key!=='.priority'&&key!=='.sv'){hasActualChild=true;if(!isValidKey(key)){throw new Error(errorPrefix+' contains an invalid key ('+key+') '+validationPathToErrorString(path)+'.  Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}validationPathPush(path,key);validateFirebaseData(errorPrefix,value,path);validationPathPop(path);});if(hasDotValue&&hasActualChild){throw new Error(errorPrefix+' contains \".value\" child '+validationPathToErrorString(path)+' in addition to actual children.');}}};/**\r\n * Pre-validate paths passed in the firebase function.\r\n */var validateFirebaseMergePaths=function validateFirebaseMergePaths(errorPrefix,mergePaths){var i,curPath;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];var keys=pathSlice(curPath);for(var j=0;j<keys.length;j++){if(keys[j]==='.priority'&&j===keys.length-1);else if(!isValidKey(keys[j])){throw new Error(errorPrefix+'contains an invalid key ('+keys[j]+') in path '+curPath.toString()+'. Keys must be non-empty strings '+'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');}}}// Check that update keys are not descendants of each other.\n// We rely on the property that sorting guarantees that ancestors come\n// right before descendants.\nmergePaths.sort(pathCompare);var prevPath=null;for(i=0;i<mergePaths.length;i++){curPath=mergePaths[i];if(prevPath!==null&&pathContains(prevPath,curPath)){throw new Error(errorPrefix+'contains a path '+prevPath.toString()+' that is ancestor of another path '+curPath.toString());}prevPath=curPath;}};/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n */var validateFirebaseMergeDataArg=function validateFirebaseMergeDataArg(fnName,data,path,optional){if(optional&&data===undefined){return;}var errorPrefix$1=errorPrefix(fnName,'values');if(!(data&&_typeof(data)==='object')||Array.isArray(data)){throw new Error(errorPrefix$1+' must be an object containing the children to replace.');}var mergePaths=[];each(data,function(key,value){var curPath=new Path(key);validateFirebaseData(errorPrefix$1,value,pathChild(path,curPath));if(pathGetBack(curPath)==='.priority'){if(!isValidPriority(value)){throw new Error(errorPrefix$1+\"contains an invalid value for '\"+curPath.toString()+\"', which must be a valid \"+'Firebase priority (a string, finite number, server value, or null).');}}mergePaths.push(curPath);});validateFirebaseMergePaths(errorPrefix$1,mergePaths);};var validatePriority=function validatePriority(fnName,priority,optional){if(optional&&priority===undefined){return;}if(isInvalidJSONNumber(priority)){throw new Error(errorPrefix(fnName,'priority')+'is '+priority.toString()+', but must be a valid Firebase priority (a string, finite number, '+'server value, or null).');}// Special case to allow importing data with a .sv.\nif(!isValidPriority(priority)){throw new Error(errorPrefix(fnName,'priority')+'must be a valid Firebase priority '+'(a string, finite number, server value, or null).');}};var validateKey=function validateKey(fnName,argumentName,key,optional){if(optional&&key===undefined){return;}if(!isValidKey(key)){throw new Error(errorPrefix(fnName,argumentName)+'was an invalid key = \"'+key+'\".  Firebase keys must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');}};/**\r\n * @internal\r\n */var validatePathString=function validatePathString(fnName,argumentName,pathString,optional){if(optional&&pathString===undefined){return;}if(!isValidPathString(pathString)){throw new Error(errorPrefix(fnName,argumentName)+'was an invalid path = \"'+pathString+'\". Paths must be non-empty strings and '+'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');}};var validateRootPathString=function validateRootPathString(fnName,argumentName,pathString,optional){if(pathString){// Allow '/.info/' at the beginning.\npathString=pathString.replace(/^\\/*\\.info(\\/|$)/,'/');}validatePathString(fnName,argumentName,pathString,optional);};/**\r\n * @internal\r\n */var validateWritablePath=function validateWritablePath(fnName,path){if(pathGetFront(path)==='.info'){throw new Error(fnName+\" failed = Can't modify data under /.info/\");}};var validateUrl=function validateUrl(fnName,parsedUrl){// TODO = Validate server better.\nvar pathString=parsedUrl.path.toString();if(!(typeof parsedUrl.repoInfo.host==='string')||parsedUrl.repoInfo.host.length===0||!isValidKey(parsedUrl.repoInfo.namespace)&&parsedUrl.repoInfo.host.split(':')[0]!=='localhost'||pathString.length!==0&&!isValidRootPathString(pathString)){throw new Error(errorPrefix(fnName,'url')+'must be a valid firebase URL and '+'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');}};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n */var EventQueue=/*#__PURE__*/_createClass(function EventQueue(){_classCallCheck(this,EventQueue);this.eventLists_=[];/**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         */this.recursionDepth_=0;});/**\r\n * @param eventDataList - The new events to queue.\r\n */function eventQueueQueueEvents(eventQueue,eventDataList){// We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\nvar currList=null;for(var i=0;i<eventDataList.length;i++){var data=eventDataList[i];var path=data.getPath();if(currList!==null&&!pathEquals(path,currList.path)){eventQueue.eventLists_.push(currList);currList=null;}if(currList===null){currList={events:[],path:path};}currList.events.push(data);}if(currList){eventQueue.eventLists_.push(currList);}}/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n * for the specified path.\r\n *\r\n * It is assumed that the new events are all for the specified path.\r\n *\r\n * @param path - The path to raise events for.\r\n * @param eventDataList - The new events to raise.\r\n */function eventQueueRaiseEventsAtPath(eventQueue,path,eventDataList){eventQueueQueueEvents(eventQueue,eventDataList);eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,function(eventPath){return pathEquals(eventPath,path);});}/**\r\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n * locations related to the specified change path (i.e. all ancestors and descendants).\r\n *\r\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n *\r\n * @param changedPath - The path to raise events for.\r\n * @param eventDataList - The events to raise\r\n */function eventQueueRaiseEventsForChangedPath(eventQueue,changedPath,eventDataList){eventQueueQueueEvents(eventQueue,eventDataList);eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,function(eventPath){return pathContains(eventPath,changedPath)||pathContains(changedPath,eventPath);});}function eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue,predicate){eventQueue.recursionDepth_++;var sentAll=true;for(var i=0;i<eventQueue.eventLists_.length;i++){var eventList=eventQueue.eventLists_[i];if(eventList){var eventPath=eventList.path;if(predicate(eventPath)){eventListRaise(eventQueue.eventLists_[i]);eventQueue.eventLists_[i]=null;}else{sentAll=false;}}}if(sentAll){eventQueue.eventLists_=[];}eventQueue.recursionDepth_--;}/**\r\n * Iterates through the list and raises each event\r\n */function eventListRaise(eventList){for(var i=0;i<eventList.events.length;i++){var eventData=eventList.events[i];if(eventData!==null){eventList.events[i]=null;var eventFn=eventData.getEventRunner();if(logger){log('event: '+eventData.toString());}exceptionGuard(eventFn);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var INTERRUPT_REASON='repo_interrupt';/**\r\n * If a transaction does not succeed after 25 retries, we abort it. Among other\r\n * things this ensure that if there's ever a bug causing a mismatch between\r\n * client / server hashes for some data, we won't retry indefinitely.\r\n */var MAX_TRANSACTION_RETRIES=25;/**\r\n * A connection to a single data repository.\r\n */var Repo=/*#__PURE__*/function(){function Repo(repoInfo_,forceRestClient_,authTokenProvider_,appCheckProvider_){_classCallCheck(this,Repo);this.repoInfo_=repoInfo_;this.forceRestClient_=forceRestClient_;this.authTokenProvider_=authTokenProvider_;this.appCheckProvider_=appCheckProvider_;this.dataUpdateCount=0;this.statsListener_=null;this.eventQueue_=new EventQueue();this.nextWriteId_=1;this.interceptServerDataCallback_=null;/** A list of data pieces and paths to be set when this client disconnects. */this.onDisconnect_=newSparseSnapshotTree();/** Stores queues of outstanding transactions for Firebase locations. */this.transactionQueueTree_=new Tree();// TODO: This should be @private but it's used by test_access.js and internal.js\nthis.persistentConnection_=null;// This key is intentionally not updated if RepoInfo is later changed or replaced\nthis.key=this.repoInfo_.toURLString();}/**\r\n     * @returns The URL corresponding to the root of this Firebase.\r\n     */_createClass(Repo,[{key:\"toString\",value:function toString(){return(this.repoInfo_.secure?'https://':'http://')+this.repoInfo_.host;}}]);return Repo;}();function repoStart(repo,appId,authOverride){repo.stats_=statsManagerGetCollection(repo.repoInfo_);if(repo.forceRestClient_||beingCrawled()){repo.server_=new ReadonlyRestClient(repo.repoInfo_,function(pathString,data,isMerge,tag){repoOnDataUpdate(repo,pathString,data,isMerge,tag);},repo.authTokenProvider_,repo.appCheckProvider_);// Minor hack: Fire onConnect immediately, since there's no actual connection.\nsetTimeout(function(){return repoOnConnectStatus(repo,/* connectStatus= */true);},0);}else{// Validate authOverride\nif(typeof authOverride!=='undefined'&&authOverride!==null){if(_typeof(authOverride)!=='object'){throw new Error('Only objects are supported for option databaseAuthVariableOverride');}try{stringify(authOverride);}catch(e){throw new Error('Invalid authOverride provided: '+e);}}repo.persistentConnection_=new PersistentConnection(repo.repoInfo_,appId,function(pathString,data,isMerge,tag){repoOnDataUpdate(repo,pathString,data,isMerge,tag);},function(connectStatus){repoOnConnectStatus(repo,connectStatus);},function(updates){repoOnServerInfoUpdate(repo,updates);},repo.authTokenProvider_,repo.appCheckProvider_,authOverride);repo.server_=repo.persistentConnection_;}repo.authTokenProvider_.addTokenChangeListener(function(token){repo.server_.refreshAuthToken(token);});repo.appCheckProvider_.addTokenChangeListener(function(result){repo.server_.refreshAppCheckToken(result.token);});// In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n// we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\nrepo.statsReporter_=statsManagerGetOrCreateReporter(repo.repoInfo_,function(){return new StatsReporter(repo.stats_,repo.server_);});// Used for .info.\nrepo.infoData_=new SnapshotHolder();repo.infoSyncTree_=new SyncTree({startListening:function startListening(query,tag,currentHashFn,onComplete){var infoEvents=[];var node=repo.infoData_.getNode(query._path);// This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n// on initial data...\nif(!node.isEmpty()){infoEvents=syncTreeApplyServerOverwrite(repo.infoSyncTree_,query._path,node);setTimeout(function(){onComplete('ok');},0);}return infoEvents;},stopListening:function stopListening(){}});repoUpdateInfo(repo,'connected',false);repo.serverSyncTree_=new SyncTree({startListening:function startListening(query,tag,currentHashFn,onComplete){repo.server_.listen(query,currentHashFn,tag,function(status,data){var events=onComplete(status,data);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,query._path,events);});// No synchronous events for network-backed sync trees\nreturn[];},stopListening:function stopListening(query,tag){repo.server_.unlisten(query,tag);}});}/**\r\n * @returns The time in milliseconds, taking the server offset into account if we have one.\r\n */function repoServerTime(repo){var offsetNode=repo.infoData_.getNode(new Path('.info/serverTimeOffset'));var offset=offsetNode.val()||0;return new Date().getTime()+offset;}/**\r\n * Generate ServerValues using some variables from the repo object.\r\n */function repoGenerateServerValues(repo){return generateWithValues({timestamp:repoServerTime(repo)});}/**\r\n * Called by realtime when we get new messages from the server.\r\n */function repoOnDataUpdate(repo,pathString,data,isMerge,tag){// For testing.\nrepo.dataUpdateCount++;var path=new Path(pathString);data=repo.interceptServerDataCallback_?repo.interceptServerDataCallback_(pathString,data):data;var events=[];if(tag){if(isMerge){var taggedChildren=map(data,function(raw){return nodeFromJSON(raw);});events=syncTreeApplyTaggedQueryMerge(repo.serverSyncTree_,path,taggedChildren,tag);}else{var taggedSnap=nodeFromJSON(data);events=syncTreeApplyTaggedQueryOverwrite(repo.serverSyncTree_,path,taggedSnap,tag);}}else if(isMerge){var changedChildren=map(data,function(raw){return nodeFromJSON(raw);});events=syncTreeApplyServerMerge(repo.serverSyncTree_,path,changedChildren);}else{var snap=nodeFromJSON(data);events=syncTreeApplyServerOverwrite(repo.serverSyncTree_,path,snap);}var affectedPath=path;if(events.length>0){// Since we have a listener outstanding for each transaction, receiving any events\n// is a proxy for some change having occurred.\naffectedPath=repoRerunTransactions(repo,path);}eventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,events);}function repoOnConnectStatus(repo,connectStatus){repoUpdateInfo(repo,'connected',connectStatus);if(connectStatus===false){repoRunOnDisconnectEvents(repo);}}function repoOnServerInfoUpdate(repo,updates){each(updates,function(key,value){repoUpdateInfo(repo,key,value);});}function repoUpdateInfo(repo,pathString,value){var path=new Path('/.info/'+pathString);var newNode=nodeFromJSON(value);repo.infoData_.updateSnapshot(path,newNode);var events=syncTreeApplyServerOverwrite(repo.infoSyncTree_,path,newNode);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);}function repoGetNextWriteId(repo){return repo.nextWriteId_++;}/**\r\n * The purpose of `getValue` is to return the latest known value\r\n * satisfying `query`.\r\n *\r\n * This method will first check for in-memory cached values\r\n * belonging to active listeners. If they are found, such values\r\n * are considered to be the most up-to-date.\r\n *\r\n * If the client is not connected, this method will try to\r\n * establish a connection and request the value for `query`. If\r\n * the client is not able to retrieve the query result, it reports\r\n * an error.\r\n *\r\n * @param query - The query to surface a value for.\r\n */function repoGetValue(repo,query){// Only active queries are cached. There is no persisted cache.\nvar cached=syncTreeGetServerValue(repo.serverSyncTree_,query);if(cached!=null){return Promise.resolve(cached);}return repo.server_.get(query).then(function(payload){var node=nodeFromJSON(payload).withIndex(query._queryParams.getIndex());var events=syncTreeApplyServerOverwrite(repo.serverSyncTree_,query._path,node);eventQueueRaiseEventsAtPath(repo.eventQueue_,query._path,events);return Promise.resolve(node);},function(err){repoLog(repo,'get for query '+stringify(query)+' failed: '+err);return Promise.reject(new Error(err));});}function repoSetWithPriority(repo,path,newVal,newPriority,onComplete){repoLog(repo,'set',{path:path.toString(),value:newVal,priority:newPriority});// TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n// (b) store unresolved paths on JSON parse\nvar serverValues=repoGenerateServerValues(repo);var newNodeUnresolved=nodeFromJSON(newVal,newPriority);var existing=syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,existing,serverValues);var writeId=repoGetNextWriteId(repo);var events=syncTreeApplyUserOverwrite(repo.serverSyncTree_,path,newNode,writeId,true);eventQueueQueueEvents(repo.eventQueue_,events);repo.server_.put(path.toString(),newNodeUnresolved.val(/*export=*/true),function(status,errorReason){var success=status==='ok';if(!success){warn('set at '+path+' failed: '+status);}var clearEvents=syncTreeAckUserWrite(repo.serverSyncTree_,writeId,!success);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,clearEvents);repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});var affectedPath=repoAbortTransactions(repo,path);repoRerunTransactions(repo,affectedPath);// We queued the events above, so just flush the queue here\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,[]);}function repoUpdate(repo,path,childrenToMerge,onComplete){repoLog(repo,'update',{path:path.toString(),value:childrenToMerge});// Start with our existing data and merge each child into it.\nvar empty=true;var serverValues=repoGenerateServerValues(repo);var changedChildren={};each(childrenToMerge,function(changedKey,changedValue){empty=false;changedChildren[changedKey]=resolveDeferredValueTree(pathChild(path,changedKey),nodeFromJSON(changedValue),repo.serverSyncTree_,serverValues);});if(!empty){var writeId=repoGetNextWriteId(repo);var events=syncTreeApplyUserMerge(repo.serverSyncTree_,path,changedChildren,writeId);eventQueueQueueEvents(repo.eventQueue_,events);repo.server_.merge(path.toString(),childrenToMerge,function(status,errorReason){var success=status==='ok';if(!success){warn('update at '+path+' failed: '+status);}var clearEvents=syncTreeAckUserWrite(repo.serverSyncTree_,writeId,!success);var affectedPath=clearEvents.length>0?repoRerunTransactions(repo,path):path;eventQueueRaiseEventsForChangedPath(repo.eventQueue_,affectedPath,clearEvents);repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});each(childrenToMerge,function(changedPath){var affectedPath=repoAbortTransactions(repo,pathChild(path,changedPath));repoRerunTransactions(repo,affectedPath);});// We queued the events above, so just flush the queue here\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,[]);}else{log(\"update() called with empty data.  Don't do anything.\");repoCallOnCompleteCallback(repo,onComplete,'ok',undefined);}}/**\r\n * Applies all of the changes stored up in the onDisconnect_ tree.\r\n */function repoRunOnDisconnectEvents(repo){repoLog(repo,'onDisconnectEvents');var serverValues=repoGenerateServerValues(repo);var resolvedOnDisconnectTree=newSparseSnapshotTree();sparseSnapshotTreeForEachTree(repo.onDisconnect_,newEmptyPath(),function(path,node){var resolved=resolveDeferredValueTree(path,node,repo.serverSyncTree_,serverValues);sparseSnapshotTreeRemember(resolvedOnDisconnectTree,path,resolved);});var events=[];sparseSnapshotTreeForEachTree(resolvedOnDisconnectTree,newEmptyPath(),function(path,snap){events=events.concat(syncTreeApplyServerOverwrite(repo.serverSyncTree_,path,snap));var affectedPath=repoAbortTransactions(repo,path);repoRerunTransactions(repo,affectedPath);});repo.onDisconnect_=newSparseSnapshotTree();eventQueueRaiseEventsForChangedPath(repo.eventQueue_,newEmptyPath(),events);}function repoOnDisconnectCancel(repo,path,onComplete){repo.server_.onDisconnectCancel(path.toString(),function(status,errorReason){if(status==='ok'){sparseSnapshotTreeForget(repo.onDisconnect_,path);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectSet(repo,path,value,onComplete){var newNode=nodeFromJSON(value);repo.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){sparseSnapshotTreeRemember(repo.onDisconnect_,path,newNode);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectSetWithPriority(repo,path,value,priority,onComplete){var newNode=nodeFromJSON(value,priority);repo.server_.onDisconnectPut(path.toString(),newNode.val(/*export=*/true),function(status,errorReason){if(status==='ok'){sparseSnapshotTreeRemember(repo.onDisconnect_,path,newNode);}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoOnDisconnectUpdate(repo,path,childrenToMerge,onComplete){if(isEmpty(childrenToMerge)){log(\"onDisconnect().update() called with empty data.  Don't do anything.\");repoCallOnCompleteCallback(repo,onComplete,'ok',undefined);return;}repo.server_.onDisconnectMerge(path.toString(),childrenToMerge,function(status,errorReason){if(status==='ok'){each(childrenToMerge,function(childName,childNode){var newChildNode=nodeFromJSON(childNode);sparseSnapshotTreeRemember(repo.onDisconnect_,pathChild(path,childName),newChildNode);});}repoCallOnCompleteCallback(repo,onComplete,status,errorReason);});}function repoAddEventCallbackForQuery(repo,query,eventRegistration){var events;if(pathGetFront(query._path)==='.info'){events=syncTreeAddEventRegistration(repo.infoSyncTree_,query,eventRegistration);}else{events=syncTreeAddEventRegistration(repo.serverSyncTree_,query,eventRegistration);}eventQueueRaiseEventsAtPath(repo.eventQueue_,query._path,events);}function repoRemoveEventCallbackForQuery(repo,query,eventRegistration){// These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n// a little bit by handling the return values anyways.\nvar events;if(pathGetFront(query._path)==='.info'){events=syncTreeRemoveEventRegistration(repo.infoSyncTree_,query,eventRegistration);}else{events=syncTreeRemoveEventRegistration(repo.serverSyncTree_,query,eventRegistration);}eventQueueRaiseEventsAtPath(repo.eventQueue_,query._path,events);}function repoInterrupt(repo){if(repo.persistentConnection_){repo.persistentConnection_.interrupt(INTERRUPT_REASON);}}function repoResume(repo){if(repo.persistentConnection_){repo.persistentConnection_.resume(INTERRUPT_REASON);}}function repoLog(repo){var prefix='';if(repo.persistentConnection_){prefix=repo.persistentConnection_.id+':';}for(var _len6=arguments.length,varArgs=new Array(_len6>1?_len6-1:0),_key7=1;_key7<_len6;_key7++){varArgs[_key7-1]=arguments[_key7];}log.apply(void 0,[prefix].concat(varArgs));}function repoCallOnCompleteCallback(repo,callback,status,errorReason){if(callback){exceptionGuard(function(){if(status==='ok'){callback(null);}else{var code=(status||'error').toUpperCase();var message=code;if(errorReason){message+=': '+errorReason;}var _error3=new Error(message);// eslint-disable-next-line @typescript-eslint/no-explicit-any\n_error3.code=code;callback(_error3);}});}}/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and\r\n * sends it to the server if possible.\r\n *\r\n * @param path - Path at which to do transaction.\r\n * @param transactionUpdate - Update callback.\r\n * @param onComplete - Completion callback.\r\n * @param unwatcher - Function that will be called when the transaction no longer\r\n * need data updates for `path`.\r\n * @param applyLocally - Whether or not to make intermediate results visible\r\n */function repoStartTransaction(repo,path,transactionUpdate,onComplete,unwatcher,applyLocally){repoLog(repo,'transaction on '+path);// Initialize transaction.\nvar transaction={path:path,update:transactionUpdate,onComplete:onComplete,// One of TransactionStatus enums.\nstatus:null,// Used when combining transactions at different locations to figure out\n// which one goes first.\norder:LUIDGenerator(),// Whether to raise local events for this transaction.\napplyLocally:applyLocally,// Count of how many times we've retried the transaction.\nretryCount:0,// Function to call to clean up our .on() listener.\nunwatcher:unwatcher,// Stores why a transaction was aborted.\nabortReason:null,currentWriteId:null,currentInputSnapshot:null,currentOutputSnapshotRaw:null,currentOutputSnapshotResolved:null};// Run transaction initially.\nvar currentState=repoGetLatestState(repo,path,undefined);transaction.currentInputSnapshot=currentState;var newVal=transaction.update(currentState.val());if(newVal===undefined){// Abort transaction.\ntransaction.unwatcher();transaction.currentOutputSnapshotRaw=null;transaction.currentOutputSnapshotResolved=null;if(transaction.onComplete){transaction.onComplete(null,false,transaction.currentInputSnapshot);}}else{validateFirebaseData('transaction failed: Data returned ',newVal,transaction.path);// Mark as run and add to our queue.\ntransaction.status=0/* RUN */;var queueNode=treeSubTree(repo.transactionQueueTree_,path);var nodeQueue=treeGetValue(queueNode)||[];nodeQueue.push(transaction);treeSetValue(queueNode,nodeQueue);// Update visibleData and raise events\n// Note: We intentionally raise events after updating all of our\n// transaction state, since the user could start new transactions from the\n// event callbacks.\nvar priorityForNode;if(_typeof(newVal)==='object'&&newVal!==null&&contains(newVal,'.priority')){// eslint-disable-next-line @typescript-eslint/no-explicit-any\npriorityForNode=safeGet(newVal,'.priority');assert(isValidPriority(priorityForNode),'Invalid priority returned by transaction. '+'Priority must be a valid string, finite number, server value, or null.');}else{var currentNode=syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path)||ChildrenNode.EMPTY_NODE;priorityForNode=currentNode.getPriority().val();}var serverValues=repoGenerateServerValues(repo);var newNodeUnresolved=nodeFromJSON(newVal,priorityForNode);var newNode=resolveDeferredValueSnapshot(newNodeUnresolved,currentState,serverValues);transaction.currentOutputSnapshotRaw=newNodeUnresolved;transaction.currentOutputSnapshotResolved=newNode;transaction.currentWriteId=repoGetNextWriteId(repo);var events=syncTreeApplyUserOverwrite(repo.serverSyncTree_,path,newNode,transaction.currentWriteId,transaction.applyLocally);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);repoSendReadyTransactions(repo,repo.transactionQueueTree_);}}/**\r\n * @param excludeSets - A specific set to exclude\r\n */function repoGetLatestState(repo,path,excludeSets){return syncTreeCalcCompleteEventCache(repo.serverSyncTree_,path,excludeSets)||ChildrenNode.EMPTY_NODE;}/**\r\n * Sends any already-run transactions that aren't waiting for outstanding\r\n * transactions to complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively\r\n * with a particular transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param node - transactionQueueTree node to start at.\r\n */function repoSendReadyTransactions(repo){var node=arguments.length>1&&arguments[1]!==undefined?arguments[1]:repo.transactionQueueTree_;// Before recursing, make sure any completed transactions are removed.\nif(!node){repoPruneCompletedTransactionsBelowNode(repo,node);}if(treeGetValue(node)){var queue=repoBuildTransactionQueue(repo,node);assert(queue.length>0,'Sending zero length transaction queue');var allRun=queue.every(function(transaction){return transaction.status===0;}/* RUN */);// If they're all run (and not sent), we can send them.  Else, we must wait.\nif(allRun){repoSendTransactionQueue(repo,treeGetPath(node),queue);}}else if(treeHasChildren(node)){treeForEachChild(node,function(childNode){repoSendReadyTransactions(repo,childNode);});}}/**\r\n * Given a list of run transactions, send them to the server and then handle\r\n * the result (success or failure).\r\n *\r\n * @param path - The location of the queue.\r\n * @param queue - Queue of transactions under the specified location.\r\n */function repoSendTransactionQueue(repo,path,queue){// Mark transactions as sent and increment retry count!\nvar setsToIgnore=queue.map(function(txn){return txn.currentWriteId;});var latestState=repoGetLatestState(repo,path,setsToIgnore);var snapToSend=latestState;var latestHash=latestState.hash();for(var i=0;i<queue.length;i++){var txn=queue[i];assert(txn.status===0/* RUN */,'tryToSendTransactionQueue_: items in queue should all be run.');txn.status=1/* SENT */;txn.retryCount++;var relativePath=newRelativePath(path,txn.path);// If we've gotten to this point, the output snapshot must be defined.\nsnapToSend=snapToSend.updateChild(relativePath/** @type {!Node} */,txn.currentOutputSnapshotRaw);}var dataToSend=snapToSend.val(true);var pathToSend=path;// Send the put.\nrepo.server_.put(pathToSend.toString(),dataToSend,function(status){repoLog(repo,'transaction put response',{path:pathToSend.toString(),status:status});var events=[];if(status==='ok'){// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more\n// transactions or sets.\nvar callbacks=[];var _loop3=function _loop3(_i5){queue[_i5].status=2/* COMPLETED */;events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,queue[_i5].currentWriteId));if(queue[_i5].onComplete){// We never unset the output snapshot, and given that this\n// transaction is complete, it should be set\ncallbacks.push(function(){return queue[_i5].onComplete(null,true,queue[_i5].currentOutputSnapshotResolved);});}queue[_i5].unwatcher();};for(var _i5=0;_i5<queue.length;_i5++){_loop3(_i5);}// Now remove the completed transactions.\nrepoPruneCompletedTransactionsBelowNode(repo,treeSubTree(repo.transactionQueueTree_,path));// There may be pending transactions that we can now send.\nrepoSendReadyTransactions(repo,repo.transactionQueueTree_);eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);// Finally, trigger onComplete callbacks.\nfor(var _i6=0;_i6<callbacks.length;_i6++){exceptionGuard(callbacks[_i6]);}}else{// transactions are no longer sent.  Update their status appropriately.\nif(status==='datastale'){for(var _i7=0;_i7<queue.length;_i7++){if(queue[_i7].status===3/* SENT_NEEDS_ABORT */){queue[_i7].status=4/* NEEDS_ABORT */;}else{queue[_i7].status=0/* RUN */;}}}else{warn('transaction at '+pathToSend.toString()+' failed: '+status);for(var _i8=0;_i8<queue.length;_i8++){queue[_i8].status=4/* NEEDS_ABORT */;queue[_i8].abortReason=status;}}repoRerunTransactions(repo,path);}},latestHash);}/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions. This\r\n * is the path at which events need to be raised for.\r\n *\r\n * @param changedPath - The path in mergedData that changed.\r\n * @returns The rootmost path that was affected by rerunning transactions.\r\n */function repoRerunTransactions(repo,changedPath){var rootMostTransactionNode=repoGetAncestorTransactionNode(repo,changedPath);var path=treeGetPath(rootMostTransactionNode);var queue=repoBuildTransactionQueue(repo,rootMostTransactionNode);repoRerunTransactionQueue(repo,queue,path);return path;}/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted\r\n * transactions and whatnot).\r\n *\r\n * @param queue - The queue of transactions to run.\r\n * @param path - The path the queue is for.\r\n */function repoRerunTransactionQueue(repo,queue,path){if(queue.length===0){return;// Nothing to do!\n}// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more transactions or\n// sets.\nvar callbacks=[];var events=[];// Ignore all of the sets we're going to re-run.\nvar txnsToRerun=queue.filter(function(q){return q.status===0/* RUN */;});var setsToIgnore=txnsToRerun.map(function(q){return q.currentWriteId;});var _loop4=function _loop4(i){var transaction=queue[i];var relativePath=newRelativePath(path,transaction.path);var abortTransaction=false,abortReason=void 0;assert(relativePath!==null,'rerunTransactionsUnderNode_: relativePath should not be null.');if(transaction.status===4/* NEEDS_ABORT */){abortTransaction=true;abortReason=transaction.abortReason;events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}else if(transaction.status===0/* RUN */){if(transaction.retryCount>=MAX_TRANSACTION_RETRIES){abortTransaction=true;abortReason='maxretry';events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}else{// This code reruns a transaction\nvar currentNode=repoGetLatestState(repo,transaction.path,setsToIgnore);transaction.currentInputSnapshot=currentNode;var newData=queue[i].update(currentNode.val());if(newData!==undefined){validateFirebaseData('transaction failed: Data returned ',newData,transaction.path);var newDataNode=nodeFromJSON(newData);var hasExplicitPriority=_typeof(newData)==='object'&&newData!=null&&contains(newData,'.priority');if(!hasExplicitPriority){// Keep the old priority if there wasn't a priority explicitly specified.\nnewDataNode=newDataNode.updatePriority(currentNode.getPriority());}var oldWriteId=transaction.currentWriteId;var serverValues=repoGenerateServerValues(repo);var newNodeResolved=resolveDeferredValueSnapshot(newDataNode,currentNode,serverValues);transaction.currentOutputSnapshotRaw=newDataNode;transaction.currentOutputSnapshotResolved=newNodeResolved;transaction.currentWriteId=repoGetNextWriteId(repo);// Mutates setsToIgnore in place\nsetsToIgnore.splice(setsToIgnore.indexOf(oldWriteId),1);events=events.concat(syncTreeApplyUserOverwrite(repo.serverSyncTree_,transaction.path,newNodeResolved,transaction.currentWriteId,transaction.applyLocally));events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,oldWriteId,true));}else{abortTransaction=true;abortReason='nodata';events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,transaction.currentWriteId,true));}}}eventQueueRaiseEventsForChangedPath(repo.eventQueue_,path,events);events=[];if(abortTransaction){// Abort.\nqueue[i].status=2/* COMPLETED */;// Removing a listener can trigger pruning which can muck with\n// mergedData/visibleData (as it prunes data). So defer the unwatcher\n// until we're done.\n(function(unwatcher){setTimeout(unwatcher,Math.floor(0));})(queue[i].unwatcher);if(queue[i].onComplete){if(abortReason==='nodata'){callbacks.push(function(){return queue[i].onComplete(null,false,queue[i].currentInputSnapshot);});}else{callbacks.push(function(){return queue[i].onComplete(new Error(abortReason),false,null);});}}}};for(var i=0;i<queue.length;i++){_loop4(i);}// Clean up completed transactions.\nrepoPruneCompletedTransactionsBelowNode(repo,repo.transactionQueueTree_);// Now fire callbacks, now that we're in a good, known state.\nfor(var _i9=0;_i9<callbacks.length;_i9++){exceptionGuard(callbacks[_i9]);}// Try to send the transaction result to the server.\nrepoSendReadyTransactions(repo,repo.transactionQueueTree_);}/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending\r\n * transaction on it, or just returns the node for the given path if there are\r\n * no pending transactions on any ancestor.\r\n *\r\n * @param path - The location to start at.\r\n * @returns The rootmost node with a transaction.\r\n */function repoGetAncestorTransactionNode(repo,path){var front;// Start at the root and walk deeper into the tree towards path until we\n// find a node with pending transactions.\nvar transactionNode=repo.transactionQueueTree_;front=pathGetFront(path);while(front!==null&&treeGetValue(transactionNode)===undefined){transactionNode=treeSubTree(transactionNode,front);path=pathPopFront(path);front=pathGetFront(path);}return transactionNode;}/**\r\n * Builds the queue of all transactions at or below the specified\r\n * transactionNode.\r\n *\r\n * @param transactionNode\r\n * @returns The generated queue.\r\n */function repoBuildTransactionQueue(repo,transactionNode){// Walk any child transaction queues and aggregate them into a single queue.\nvar transactionQueue=[];repoAggregateTransactionQueuesForNode(repo,transactionNode,transactionQueue);// Sort them by the order the transactions were created.\ntransactionQueue.sort(function(a,b){return a.order-b.order;});return transactionQueue;}function repoAggregateTransactionQueuesForNode(repo,node,queue){var nodeQueue=treeGetValue(node);if(nodeQueue){for(var i=0;i<nodeQueue.length;i++){queue.push(nodeQueue[i]);}}treeForEachChild(node,function(child){repoAggregateTransactionQueuesForNode(repo,child,queue);});}/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n */function repoPruneCompletedTransactionsBelowNode(repo,node){var queue=treeGetValue(node);if(queue){var to=0;for(var from=0;from<queue.length;from++){if(queue[from].status!==2/* COMPLETED */){queue[to]=queue[from];to++;}}queue.length=to;treeSetValue(node,queue.length>0?queue:undefined);}treeForEachChild(node,function(childNode){repoPruneCompletedTransactionsBelowNode(repo,childNode);});}/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.\r\n * Called when doing a set() or update() since we consider them incompatible\r\n * with transactions.\r\n *\r\n * @param path - Path for which we want to abort related transactions.\r\n */function repoAbortTransactions(repo,path){var affectedPath=treeGetPath(repoGetAncestorTransactionNode(repo,path));var transactionNode=treeSubTree(repo.transactionQueueTree_,path);treeForEachAncestor(transactionNode,function(node){repoAbortTransactionsOnNode(repo,node);});repoAbortTransactionsOnNode(repo,transactionNode);treeForEachDescendant(transactionNode,function(node){repoAbortTransactionsOnNode(repo,node);});return affectedPath;}/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param node - Node to abort transactions for.\r\n */function repoAbortTransactionsOnNode(repo,node){var queue=treeGetValue(node);if(queue){// Queue up the callbacks and fire them after cleaning up all of our\n// transaction state, since the callback could trigger more transactions\n// or sets.\nvar callbacks=[];// Go through queue.  Any already-sent transactions must be marked for\n// abort, while the unsent ones can be immediately aborted and removed.\nvar events=[];var lastSent=-1;for(var i=0;i<queue.length;i++){if(queue[i].status===3/* SENT_NEEDS_ABORT */);else if(queue[i].status===1/* SENT */){assert(lastSent===i-1,'All SENT items should be at beginning of queue.');lastSent=i;// Mark transaction for abort when it comes back.\nqueue[i].status=3/* SENT_NEEDS_ABORT */;queue[i].abortReason='set';}else{assert(queue[i].status===0/* RUN */,'Unexpected transaction status in abort');// We can abort it immediately.\nqueue[i].unwatcher();events=events.concat(syncTreeAckUserWrite(repo.serverSyncTree_,queue[i].currentWriteId,true));if(queue[i].onComplete){callbacks.push(queue[i].onComplete.bind(null,new Error('set'),false,null));}}}if(lastSent===-1){// We're not waiting for any sent transactions.  We can clear the queue.\ntreeSetValue(node,undefined);}else{// Remove the transactions we aborted.\nqueue.length=lastSent+1;}// Now fire the callbacks.\neventQueueRaiseEventsForChangedPath(repo.eventQueue_,treeGetPath(node),events);for(var _i10=0;_i10<callbacks.length;_i10++){exceptionGuard(callbacks[_i10]);}}}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function decodePath(pathString){var pathStringDecoded='';var pieces=pathString.split('/');for(var i=0;i<pieces.length;i++){if(pieces[i].length>0){var piece=pieces[i];try{piece=decodeURIComponent(piece.replace(/\\+/g,' '));}catch(e){}pathStringDecoded+='/'+piece;}}return pathStringDecoded;}/**\r\n * @returns key value hash\r\n */function decodeQuery(queryString){var results={};if(queryString.charAt(0)==='?'){queryString=queryString.substring(1);}var _iterator10=_createForOfIteratorHelper(queryString.split('&')),_step9;try{for(_iterator10.s();!(_step9=_iterator10.n()).done;){var segment=_step9.value;if(segment.length===0){continue;}var kv=segment.split('=');if(kv.length===2){results[decodeURIComponent(kv[0])]=decodeURIComponent(kv[1]);}else{warn(\"Invalid query segment '\".concat(segment,\"' in query '\").concat(queryString,\"'\"));}}}catch(err){_iterator10.e(err);}finally{_iterator10.f();}return results;}var parseRepoInfo=function parseRepoInfo(dataURL,nodeAdmin){var parsedUrl=parseDatabaseURL(dataURL),namespace=parsedUrl.namespace;if(parsedUrl.domain==='firebase.com'){fatal(parsedUrl.host+' is no longer supported. '+'Please use <YOUR FIREBASE>.firebaseio.com instead');}// Catch common error of uninitialized namespace value.\nif((!namespace||namespace==='undefined')&&parsedUrl.domain!=='localhost'){fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');}if(!parsedUrl.secure){warnIfPageIsSecure();}var webSocketOnly=parsedUrl.scheme==='ws'||parsedUrl.scheme==='wss';return{repoInfo:new RepoInfo(parsedUrl.host,parsedUrl.secure,namespace,webSocketOnly,nodeAdmin,/*persistenceKey=*/'',/*includeNamespaceInQueryParams=*/namespace!==parsedUrl.subdomain),path:new Path(parsedUrl.pathString)};};var parseDatabaseURL=function parseDatabaseURL(dataURL){// Default to empty strings in the event of a malformed string.\nvar host='',domain='',subdomain='',pathString='',namespace='';// Always default to SSL, unless otherwise specified.\nvar secure=true,scheme='https',port=443;// Don't do any validation here. The caller is responsible for validating the result of parsing.\nif(typeof dataURL==='string'){// Parse scheme.\nvar colonInd=dataURL.indexOf('//');if(colonInd>=0){scheme=dataURL.substring(0,colonInd-1);dataURL=dataURL.substring(colonInd+2);}// Parse host, path, and query string.\nvar slashInd=dataURL.indexOf('/');if(slashInd===-1){slashInd=dataURL.length;}var questionMarkInd=dataURL.indexOf('?');if(questionMarkInd===-1){questionMarkInd=dataURL.length;}host=dataURL.substring(0,Math.min(slashInd,questionMarkInd));if(slashInd<questionMarkInd){// For pathString, questionMarkInd will always come after slashInd\npathString=decodePath(dataURL.substring(slashInd,questionMarkInd));}var queryParams=decodeQuery(dataURL.substring(Math.min(dataURL.length,questionMarkInd)));// If we have a port, use scheme for determining if it's secure.\ncolonInd=host.indexOf(':');if(colonInd>=0){secure=scheme==='https'||scheme==='wss';port=parseInt(host.substring(colonInd+1),10);}else{colonInd=host.length;}var hostWithoutPort=host.slice(0,colonInd);if(hostWithoutPort.toLowerCase()==='localhost'){domain='localhost';}else if(hostWithoutPort.split('.').length<=2){domain=hostWithoutPort;}else{// Interpret the subdomain of a 3 or more component URL as the namespace name.\nvar dotInd=host.indexOf('.');subdomain=host.substring(0,dotInd).toLowerCase();domain=host.substring(dotInd+1);// Normalize namespaces to lowercase to share storage / connection.\nnamespace=subdomain;}// Always treat the value of the `ns` as the namespace name if it is present.\nif('ns'in queryParams){namespace=queryParams['ns'];}}return{host:host,port:port,domain:domain,subdomain:subdomain,secure:secure,scheme:scheme,pathString:pathString,namespace:namespace};};/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * Encapsulates the data needed to raise an event\r\n */var DataEvent=/*#__PURE__*/function(){/**\r\n     * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param eventRegistration - The function to call to with the event data. User provided\r\n     * @param snapshot - The data backing the event\r\n     * @param prevName - Optional, the name of the previous child for child_* events.\r\n     */function DataEvent(eventType,eventRegistration,snapshot,prevName){_classCallCheck(this,DataEvent);this.eventType=eventType;this.eventRegistration=eventRegistration;this.snapshot=snapshot;this.prevName=prevName;}_createClass(DataEvent,[{key:\"getPath\",value:function getPath(){var ref=this.snapshot.ref;if(this.eventType==='value'){return ref._path;}else{return ref.parent._path;}}},{key:\"getEventType\",value:function getEventType(){return this.eventType;}},{key:\"getEventRunner\",value:function getEventRunner(){return this.eventRegistration.getEventRunner(this);}},{key:\"toString\",value:function toString(){return this.getPath().toString()+':'+this.eventType+':'+stringify(this.snapshot.exportVal());}}]);return DataEvent;}();var CancelEvent=/*#__PURE__*/function(){function CancelEvent(eventRegistration,error,path){_classCallCheck(this,CancelEvent);this.eventRegistration=eventRegistration;this.error=error;this.path=path;}_createClass(CancelEvent,[{key:\"getPath\",value:function getPath(){return this.path;}},{key:\"getEventType\",value:function getEventType(){return'cancel';}},{key:\"getEventRunner\",value:function getEventRunner(){return this.eventRegistration.getEventRunner(this);}},{key:\"toString\",value:function toString(){return this.path.toString()+':cancel';}}]);return CancelEvent;}();/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A wrapper class that converts events from the database@exp SDK to the legacy\r\n * Database SDK. Events are not converted directly as event registration relies\r\n * on reference comparison of the original user callback (see `matches()`) and\r\n * relies on equality of the legacy SDK's `context` object.\r\n */var CallbackContext=/*#__PURE__*/function(){function CallbackContext(snapshotCallback,cancelCallback){_classCallCheck(this,CallbackContext);this.snapshotCallback=snapshotCallback;this.cancelCallback=cancelCallback;}_createClass(CallbackContext,[{key:\"onValue\",value:function onValue(expDataSnapshot,previousChildName){this.snapshotCallback.call(null,expDataSnapshot,previousChildName);}},{key:\"onCancel\",value:function onCancel(error){assert(this.hasCancelCallback,'Raising a cancel event on a listener with no cancel callback');return this.cancelCallback.call(null,error);}},{key:\"hasCancelCallback\",get:function get(){return!!this.cancelCallback;}},{key:\"matches\",value:function matches(other){return this.snapshotCallback===other.snapshotCallback||this.snapshotCallback.userCallback!==undefined&&this.snapshotCallback.userCallback===other.snapshotCallback.userCallback&&this.snapshotCallback.context===other.snapshotCallback.context;}}]);return CallbackContext;}();/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * The `onDisconnect` class allows you to write or clear data when your client\r\n * disconnects from the Database server. These updates occur whether your\r\n * client disconnects cleanly or not, so you can rely on them to clean up data\r\n * even if a connection is dropped or a client crashes.\r\n *\r\n * The `onDisconnect` class is most commonly used to manage presence in\r\n * applications where it is useful to detect how many clients are connected and\r\n * when other clients disconnect. See\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information.\r\n *\r\n * To avoid problems when a connection is dropped before the requests can be\r\n * transferred to the Database server, these functions should be called before\r\n * writing any data.\r\n *\r\n * Note that `onDisconnect` operations are only triggered once. If you want an\r\n * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n * the `onDisconnect` operations each time you reconnect.\r\n */var OnDisconnect=/*#__PURE__*/function(){/** @hideconstructor */function OnDisconnect(_repo,_path){_classCallCheck(this,OnDisconnect);this._repo=_repo;this._path=_path;}/**\r\n     * Cancels all previously queued `onDisconnect()` set or update events for this\r\n     * location and all children.\r\n     *\r\n     * If a write has been queued for this location via a `set()` or `update()` at a\r\n     * parent location, the write at this location will be canceled, though writes\r\n     * to sibling locations will still occur.\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */_createClass(OnDisconnect,[{key:\"cancel\",value:function cancel(){var deferred=new Deferred();repoOnDisconnectCancel(this._repo,this._path,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n     * Ensures the data at this location is deleted when the client is disconnected\r\n     * (due to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * @returns Resolves when synchronization to the server is complete.\r\n     */},{key:\"remove\",value:function remove(){validateWritablePath('OnDisconnect.remove',this._path);var deferred=new Deferred();repoOnDisconnectSet(this._repo,this._path,null,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n     * Ensures the data at this location is set to the specified value when the\r\n     * client is disconnected (due to closing the browser, navigating to a new page,\r\n     * or network issues).\r\n     *\r\n     * `set()` is especially useful for implementing \"presence\" systems, where a\r\n     * value should be changed or cleared when a user disconnects so that they\r\n     * appear \"offline\" to other users. See\r\n     * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n     * for more information.\r\n     *\r\n     * Note that `onDisconnect` operations are only triggered once. If you want an\r\n     * operation to occur each time a disconnect occurs, you'll need to re-establish\r\n     * the `onDisconnect` operations each time.\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */},{key:\"set\",value:function set(value){validateWritablePath('OnDisconnect.set',this._path);validateFirebaseDataArg('OnDisconnect.set',value,this._path,false);var deferred=new Deferred();repoOnDisconnectSet(this._repo,this._path,value,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n     * Ensures the data at this location is set to the specified value and priority\r\n     * when the client is disconnected (due to closing the browser, navigating to a\r\n     * new page, or network issues).\r\n     *\r\n     * @param value - The value to be written to this location on disconnect (can\r\n     * be an object, array, string, number, boolean, or null).\r\n     * @param priority - The priority to be written (string, number, or null).\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */},{key:\"setWithPriority\",value:function setWithPriority(value,priority){validateWritablePath('OnDisconnect.setWithPriority',this._path);validateFirebaseDataArg('OnDisconnect.setWithPriority',value,this._path,false);validatePriority('OnDisconnect.setWithPriority',priority,false);var deferred=new Deferred();repoOnDisconnectSetWithPriority(this._repo,this._path,value,priority,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n     * Writes multiple values at this location when the client is disconnected (due\r\n     * to closing the browser, navigating to a new page, or network issues).\r\n     *\r\n     * The `values` argument contains multiple property-value pairs that will be\r\n     * written to the Database together. Each child property can either be a simple\r\n     * property (for example, \"name\") or a relative path (for example, \"name/first\")\r\n     * from the current location to the data to update.\r\n     *\r\n     * As opposed to the `set()` method, `update()` can be use to selectively update\r\n     * only the referenced properties at the current location (instead of replacing\r\n     * all the child properties at the current location).\r\n     *\r\n     * @param values - Object containing multiple values.\r\n     * @returns Resolves when synchronization to the Database is complete.\r\n     */},{key:\"update\",value:function update(values){validateWritablePath('OnDisconnect.update',this._path);validateFirebaseMergeDataArg('OnDisconnect.update',values,this._path,false);var deferred=new Deferred();repoOnDisconnectUpdate(this._repo,this._path,values,deferred.wrapCallback(function(){}));return deferred.promise;}}]);return OnDisconnect;}();/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * @internal\r\n */var QueryImpl=/*#__PURE__*/function(){/**\r\n     * @hideconstructor\r\n     */function QueryImpl(_repo,_path,_queryParams,_orderByCalled){_classCallCheck(this,QueryImpl);this._repo=_repo;this._path=_path;this._queryParams=_queryParams;this._orderByCalled=_orderByCalled;}_createClass(QueryImpl,[{key:\"key\",get:function get(){if(pathIsEmpty(this._path)){return null;}else{return pathGetBack(this._path);}}},{key:\"ref\",get:function get(){return new ReferenceImpl(this._repo,this._path);}},{key:\"_queryIdentifier\",get:function get(){var obj=queryParamsGetQueryObject(this._queryParams);var id=ObjectToUniqueKey(obj);return id==='{}'?'default':id;}/**\r\n     * An object representation of the query parameters used by this Query.\r\n     */},{key:\"_queryObject\",get:function get(){return queryParamsGetQueryObject(this._queryParams);}},{key:\"isEqual\",value:function isEqual(other){other=getModularInstance(other);if(!(other instanceof QueryImpl)){return false;}var sameRepo=this._repo===other._repo;var samePath=pathEquals(this._path,other._path);var sameQueryIdentifier=this._queryIdentifier===other._queryIdentifier;return sameRepo&&samePath&&sameQueryIdentifier;}},{key:\"toJSON\",value:function toJSON(){return this.toString();}},{key:\"toString\",value:function toString(){return this._repo.toString()+pathToUrlEncodedString(this._path);}}]);return QueryImpl;}();/**\r\n * Validates that no other order by call has been made\r\n */function validateNoPreviousOrderByCall(query,fnName){if(query._orderByCalled===true){throw new Error(fnName+\": You can't combine multiple orderBy calls.\");}}/**\r\n * Validates start/end values for queries.\r\n */function validateQueryEndpoints(params){var startNode=null;var endNode=null;if(params.hasStart()){startNode=params.getIndexStartValue();}if(params.hasEnd()){endNode=params.getIndexEndValue();}if(params.getIndex()===KEY_INDEX){var tooManyArgsError='Query: When ordering by key, you may only pass one argument to '+'startAt(), endAt(), or equalTo().';var wrongArgTypeError='Query: When ordering by key, the argument passed to startAt(), startAfter(), '+'endAt(), endBefore(), or equalTo() must be a string.';if(params.hasStart()){var startName=params.getIndexStartName();if(startName!==MIN_NAME){throw new Error(tooManyArgsError);}else if(typeof startNode!=='string'){throw new Error(wrongArgTypeError);}}if(params.hasEnd()){var endName=params.getIndexEndName();if(endName!==MAX_NAME){throw new Error(tooManyArgsError);}else if(typeof endNode!=='string'){throw new Error(wrongArgTypeError);}}}else if(params.getIndex()===PRIORITY_INDEX){if(startNode!=null&&!isValidPriority(startNode)||endNode!=null&&!isValidPriority(endNode)){throw new Error('Query: When ordering by priority, the first argument passed to startAt(), '+'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value '+'(null, a number, or a string).');}}else{assert(params.getIndex()instanceof PathIndex||params.getIndex()===VALUE_INDEX,'unknown index type.');if(startNode!=null&&_typeof(startNode)==='object'||endNode!=null&&_typeof(endNode)==='object'){throw new Error('Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or '+'equalTo() cannot be an object.');}}}/**\r\n * Validates that limit* has been called with the correct combination of parameters\r\n */function validateLimit(params){if(params.hasStart()&&params.hasEnd()&&params.hasLimit()&&!params.hasAnchoredLimit()){throw new Error(\"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \"+'limitToFirst() or limitToLast() instead.');}}/**\r\n * @internal\r\n */var ReferenceImpl=/*#__PURE__*/function(_QueryImpl){_inherits(ReferenceImpl,_QueryImpl);var _super10=_createSuper(ReferenceImpl);/** @hideconstructor */function ReferenceImpl(repo,path){_classCallCheck(this,ReferenceImpl);return _super10.call(this,repo,path,new QueryParams(),false);}_createClass(ReferenceImpl,[{key:\"parent\",get:function get(){var parentPath=pathParent(this._path);return parentPath===null?null:new ReferenceImpl(this._repo,parentPath);}},{key:\"root\",get:function get(){var ref=this;while(ref.parent!==null){ref=ref.parent;}return ref;}}]);return ReferenceImpl;}(QueryImpl);/**\r\n * A `DataSnapshot` contains data from a Database location.\r\n *\r\n * Any time you read data from the Database, you receive the data as a\r\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\r\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\r\n * JavaScript object by calling the `val()` method. Alternatively, you can\r\n * traverse into the snapshot by calling `child()` to return child snapshots\r\n * (which you could then call `val()` on).\r\n *\r\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\r\n * a Database location. It cannot be modified and will never change (to modify\r\n * data, you always call the `set()` method on a `Reference` directly).\r\n */var DataSnapshot=/*#__PURE__*/function(){/**\r\n     * @param _node - A SnapshotNode to wrap.\r\n     * @param ref - The location this snapshot came from.\r\n     * @param _index - The iteration order for this snapshot\r\n     * @hideconstructor\r\n     */function DataSnapshot(_node,/**\r\n     * The location of this DataSnapshot.\r\n     */ref,_index){_classCallCheck(this,DataSnapshot);this._node=_node;this.ref=ref;this._index=_index;}/**\r\n     * Gets the priority value of the data in this `DataSnapshot`.\r\n     *\r\n     * Applications need not use priority but can order collections by\r\n     * ordinary properties (see\r\n     * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\r\n     * ).\r\n     */_createClass(DataSnapshot,[{key:\"priority\",get:function get(){// typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\nreturn this._node.getPriority().val();}/**\r\n     * The key (last part of the path) of the location of this `DataSnapshot`.\r\n     *\r\n     * The last token in a Database location is considered its key. For example,\r\n     * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\r\n     * `DataSnapshot` will return the key for the location that generated it.\r\n     * However, accessing the key on the root URL of a Database will return\r\n     * `null`.\r\n     */},{key:\"key\",get:function get(){return this.ref.key;}/** Returns the number of child properties of this `DataSnapshot`. */},{key:\"size\",get:function get(){return this._node.numChildren();}/**\r\n     * Gets another `DataSnapshot` for the location at the specified relative path.\r\n     *\r\n     * Passing a relative path to the `child()` method of a DataSnapshot returns\r\n     * another `DataSnapshot` for the location at the specified relative path. The\r\n     * relative path can either be a simple child name (for example, \"ada\") or a\r\n     * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\r\n     * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\r\n     * whose value is `null`) is returned.\r\n     *\r\n     * @param path - A relative path to the location of child data.\r\n     */},{key:\"child\",value:function child(path){var childPath=new Path(path);var childRef=_child9(this.ref,path);return new DataSnapshot(this._node.getChild(childPath),childRef,PRIORITY_INDEX);}/**\r\n     * Returns true if this `DataSnapshot` contains any data. It is slightly more\r\n     * efficient than using `snapshot.val() !== null`.\r\n     */},{key:\"exists\",value:function exists(){return!this._node.isEmpty();}/**\r\n     * Exports the entire contents of the DataSnapshot as a JavaScript object.\r\n     *\r\n     * The `exportVal()` method is similar to `val()`, except priority information\r\n     * is included (if available), making it suitable for backing up your data.\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\n},{key:\"exportVal\",value:function exportVal(){return this._node.val(true);}/**\r\n     * Enumerates the top-level children in the `DataSnapshot`.\r\n     *\r\n     * Because of the way JavaScript objects work, the ordering of data in the\r\n     * JavaScript object returned by `val()` is not guaranteed to match the\r\n     * ordering on the server nor the ordering of `onChildAdded()` events. That is\r\n     * where `forEach()` comes in handy. It guarantees the children of a\r\n     * `DataSnapshot` will be iterated in their query order.\r\n     *\r\n     * If no explicit `orderBy*()` method is used, results are returned\r\n     * ordered by key (unless priorities are used, in which case, results are\r\n     * returned by priority).\r\n     *\r\n     * @param action - A function that will be called for each child DataSnapshot.\r\n     * The callback can return true to cancel further enumeration.\r\n     * @returns true if enumeration was canceled due to your callback returning\r\n     * true.\r\n     */},{key:\"forEach\",value:function forEach(action){var _this37=this;if(this._node.isLeafNode()){return false;}var childrenNode=this._node;// Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\nreturn!!childrenNode.forEachChild(this._index,function(key,node){return action(new DataSnapshot(node,_child9(_this37.ref,key),PRIORITY_INDEX));});}/**\r\n     * Returns true if the specified child path has (non-null) data.\r\n     *\r\n     * @param path - A relative path to the location of a potential child.\r\n     * @returns `true` if data exists at the specified child path; else\r\n     *  `false`.\r\n     */},{key:\"hasChild\",value:function hasChild(path){var childPath=new Path(path);return!this._node.getChild(childPath).isEmpty();}/**\r\n     * Returns whether or not the `DataSnapshot` has any non-`null` child\r\n     * properties.\r\n     *\r\n     * You can use `hasChildren()` to determine if a `DataSnapshot` has any\r\n     * children. If it does, you can enumerate them using `forEach()`. If it\r\n     * doesn't, then either this snapshot contains a primitive value (which can be\r\n     * retrieved with `val()`) or it is empty (in which case, `val()` will return\r\n     * `null`).\r\n     *\r\n     * @returns true if this snapshot has any children; else false.\r\n     */},{key:\"hasChildren\",value:function hasChildren(){if(this._node.isLeafNode()){return false;}else{return!this._node.isEmpty();}}/**\r\n     * Returns a JSON-serializable representation of this object.\r\n     */},{key:\"toJSON\",value:function toJSON(){return this.exportVal();}/**\r\n     * Extracts a JavaScript value from a `DataSnapshot`.\r\n     *\r\n     * Depending on the data in a `DataSnapshot`, the `val()` method may return a\r\n     * scalar type (string, number, or boolean), an array, or an object. It may\r\n     * also return null, indicating that the `DataSnapshot` is empty (contains no\r\n     * data).\r\n     *\r\n     * @returns The DataSnapshot's contents as a JavaScript value (Object,\r\n     *   Array, string, number, boolean, or `null`).\r\n     */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\n},{key:\"val\",value:function val(){return this._node.val();}}]);return DataSnapshot;}();/**\r\n *\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided path. If no path is provided, the `Reference`\r\n * will point to the root of the Database.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param path - Optional path representing the location the returned\r\n *   `Reference` will point. If not provided, the returned `Reference` will\r\n *   point to the root of the Database.\r\n * @returns If a path is provided, a `Reference`\r\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\r\n *   root of the Database.\r\n */function ref(db,path){db=getModularInstance(db);db._checkNotDeleted('ref');return path!==undefined?_child9(db._root,path):db._root;}/**\r\n * Returns a `Reference` representing the location in the Database\r\n * corresponding to the provided Firebase URL.\r\n *\r\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\r\n * has a different domain than the current `Database` instance.\r\n *\r\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\r\n * and are not applied to the returned `Reference`.\r\n *\r\n * @param db - The database instance to obtain a reference for.\r\n * @param url - The Firebase URL at which the returned `Reference` will\r\n *   point.\r\n * @returns A `Reference` pointing to the provided\r\n *   Firebase URL.\r\n */function refFromURL(db,url){db=getModularInstance(db);db._checkNotDeleted('refFromURL');var parsedURL=parseRepoInfo(url,db._repo.repoInfo_.nodeAdmin);validateUrl('refFromURL',parsedURL);var repoInfo=parsedURL.repoInfo;if(!db._repo.repoInfo_.isCustomHost()&&repoInfo.host!==db._repo.repoInfo_.host){fatal('refFromURL'+': Host name does not match the current database: '+'(found '+repoInfo.host+' but expected '+db._repo.repoInfo_.host+')');}return ref(db,parsedURL.path.toString());}/**\r\n * Gets a `Reference` for the location at the specified relative path.\r\n *\r\n * The relative path can either be a simple child name (for example, \"ada\") or\r\n * a deeper slash-separated path (for example, \"ada/name/first\").\r\n *\r\n * @param parent - The parent location.\r\n * @param path - A relative path from this location to the desired child\r\n *   location.\r\n * @returns The specified child location.\r\n */function _child9(parent,path){parent=getModularInstance(parent);if(pathGetFront(parent._path)===null){validateRootPathString('child','path',path,false);}else{validatePathString('child','path',path,false);}return new ReferenceImpl(parent._repo,pathChild(parent._path,path));}/**\r\n * Returns an `OnDisconnect` object - see\r\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\r\n * for more information on how to use it.\r\n *\r\n * @param ref - The reference to add OnDisconnect triggers for.\r\n */function onDisconnect(ref){ref=getModularInstance(ref);return new OnDisconnect(ref._repo,ref._path);}/**\r\n * Generates a new child location using a unique key and returns its\r\n * `Reference`.\r\n *\r\n * This is the most common pattern for adding data to a collection of items.\r\n *\r\n * If you provide a value to `push()`, the value is written to the\r\n * generated location. If you don't pass a value, nothing is written to the\r\n * database and the child remains empty (but you can use the `Reference`\r\n * elsewhere).\r\n *\r\n * The unique keys generated by `push()` are ordered by the current time, so the\r\n * resulting list of items is chronologically sorted. The keys are also\r\n * designed to be unguessable (they contain 72 random bits of entropy).\r\n *\r\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\r\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\r\n *\r\n * @param parent - The parent location.\r\n * @param value - Optional value to be written at the generated location.\r\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\r\n * but can be used immediately as the `Reference` to the child location.\r\n */function push(parent,value){parent=getModularInstance(parent);validateWritablePath('push',parent._path);validateFirebaseDataArg('push',value,parent._path,true);var now=repoServerTime(parent._repo);var name=nextPushId(now);// push() returns a ThennableReference whose promise is fulfilled with a\n// regular Reference. We use child() to create handles to two different\n// references. The first is turned into a ThennableReference below by adding\n// then() and catch() methods and is used as the return value of push(). The\n// second remains a regular Reference and is used as the fulfilled value of\n// the first ThennableReference.\nvar thennablePushRef=_child9(parent,name);var pushRef=_child9(parent,name);var promise;if(value!=null){promise=set(pushRef,value).then(function(){return pushRef;});}else{promise=Promise.resolve(pushRef);}thennablePushRef.then=promise.then.bind(promise);thennablePushRef.catch=promise.then.bind(promise,undefined);return thennablePushRef;}/**\r\n * Removes the data at this Database location.\r\n *\r\n * Any data at child locations will also be deleted.\r\n *\r\n * The effect of the remove will be visible immediately and the corresponding\r\n * event 'value' will be triggered. Synchronization of the remove to the\r\n * Firebase servers will also be started, and the returned Promise will resolve\r\n * when complete. If provided, the onComplete callback will be called\r\n * asynchronously after synchronization has finished.\r\n *\r\n * @param ref - The location to remove.\r\n * @returns Resolves when remove on server is complete.\r\n */function remove(ref){validateWritablePath('remove',ref._path);return set(ref,null);}/**\r\n * Writes data to this Database location.\r\n *\r\n * This will overwrite any data at this location and all child locations.\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\r\n * all data at this location and all child locations will be deleted.\r\n *\r\n * `set()` will remove any priority stored at this location, so if priority is\r\n * meant to be preserved, you need to use `setWithPriority()` instead.\r\n *\r\n * Note that modifying data with `set()` will cancel any pending transactions\r\n * at that location, so extreme care should be taken if mixing `set()` and\r\n * `transaction()` to modify the same data.\r\n *\r\n * A single `set()` will generate a single \"value\" event at the location where\r\n * the `set()` was performed.\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @returns Resolves when write to server is complete.\r\n */function set(ref,value){ref=getModularInstance(ref);validateWritablePath('set',ref._path);validateFirebaseDataArg('set',value,ref._path,false);var deferred=new Deferred();repoSetWithPriority(ref._repo,ref._path,value,/*priority=*/null,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n * Sets a priority for the data at this Database location.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */function setPriority(ref,priority){ref=getModularInstance(ref);validateWritablePath('setPriority',ref._path);validatePriority('setPriority',priority,false);var deferred=new Deferred();repoSetWithPriority(ref._repo,pathChild(ref._path,'.priority'),priority,null,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n * Writes data the Database location. Like `set()` but also specifies the\r\n * priority for that data.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\r\n * ).\r\n *\r\n * @param ref - The location to write to.\r\n * @param value - The value to be written (string, number, boolean, object,\r\n *   array, or null).\r\n * @param priority - The priority to be written (string, number, or null).\r\n * @returns Resolves when write to server is complete.\r\n */function setWithPriority(ref,value,priority){validateWritablePath('setWithPriority',ref._path);validateFirebaseDataArg('setWithPriority',value,ref._path,false);validatePriority('setWithPriority',priority,false);if(ref.key==='.length'||ref.key==='.keys'){throw'setWithPriority failed: '+ref.key+' is a read-only object.';}var deferred=new Deferred();repoSetWithPriority(ref._repo,ref._path,value,priority,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n * Writes multiple values to the Database at once.\r\n *\r\n * The `values` argument contains multiple property-value pairs that will be\r\n * written to the Database together. Each child property can either be a simple\r\n * property (for example, \"name\") or a relative path (for example,\r\n * \"name/first\") from the current location to the data to update.\r\n *\r\n * As opposed to the `set()` method, `update()` can be use to selectively update\r\n * only the referenced properties at the current location (instead of replacing\r\n * all the child properties at the current location).\r\n *\r\n * The effect of the write will be visible immediately, and the corresponding\r\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\r\n * the data to the Firebase servers will also be started, and the returned\r\n * Promise will resolve when complete. If provided, the `onComplete` callback\r\n * will be called asynchronously after synchronization has finished.\r\n *\r\n * A single `update()` will generate a single \"value\" event at the location\r\n * where the `update()` was performed, regardless of how many children were\r\n * modified.\r\n *\r\n * Note that modifying data with `update()` will cancel any pending\r\n * transactions at that location, so extreme care should be taken if mixing\r\n * `update()` and `transaction()` to modify the same data.\r\n *\r\n * Passing `null` to `update()` will remove the data at this location.\r\n *\r\n * See\r\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\r\n *\r\n * @param ref - The location to write to.\r\n * @param values - Object containing multiple values.\r\n * @returns Resolves when update on server is complete.\r\n */function update(ref,values){validateFirebaseMergeDataArg('update',values,ref._path,false);var deferred=new Deferred();repoUpdate(ref._repo,ref._path,values,deferred.wrapCallback(function(){}));return deferred.promise;}/**\r\n * Gets the most up-to-date result for this query.\r\n *\r\n * @param query - The query to run.\r\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\r\n * available, or rejects if the client is unable to return a value (e.g., if the\r\n * server is unreachable and there is nothing cached).\r\n */function get(query){query=getModularInstance(query);return repoGetValue(query._repo,query).then(function(node){return new DataSnapshot(node,new ReferenceImpl(query._repo,query._path),query._queryParams.getIndex());});}/**\r\n * Represents registration for 'value' events.\r\n */var ValueEventRegistration=/*#__PURE__*/function(){function ValueEventRegistration(callbackContext){_classCallCheck(this,ValueEventRegistration);this.callbackContext=callbackContext;}_createClass(ValueEventRegistration,[{key:\"respondsTo\",value:function respondsTo(eventType){return eventType==='value';}},{key:\"createEvent\",value:function createEvent(change,query){var index=query._queryParams.getIndex();return new DataEvent('value',this,new DataSnapshot(change.snapshotNode,new ReferenceImpl(query._repo,query._path),index));}},{key:\"getEventRunner\",value:function getEventRunner(eventData){var _this38=this;if(eventData.getEventType()==='cancel'){return function(){return _this38.callbackContext.onCancel(eventData.error);};}else{return function(){return _this38.callbackContext.onValue(eventData.snapshot,null);};}}},{key:\"createCancelEvent\",value:function createCancelEvent(error,path){if(this.callbackContext.hasCancelCallback){return new CancelEvent(this,error,path);}else{return null;}}},{key:\"matches\",value:function matches(other){if(!(other instanceof ValueEventRegistration)){return false;}else if(!other.callbackContext||!this.callbackContext){// If no callback specified, we consider it to match any callback.\nreturn true;}else{return other.callbackContext.matches(this.callbackContext);}}},{key:\"hasAnyCallback\",value:function hasAnyCallback(){return this.callbackContext!==null;}}]);return ValueEventRegistration;}();/**\r\n * Represents the registration of a child_x event.\r\n */var ChildEventRegistration=/*#__PURE__*/function(){function ChildEventRegistration(eventType,callbackContext){_classCallCheck(this,ChildEventRegistration);this.eventType=eventType;this.callbackContext=callbackContext;}_createClass(ChildEventRegistration,[{key:\"respondsTo\",value:function respondsTo(eventType){var eventToCheck=eventType==='children_added'?'child_added':eventType;eventToCheck=eventToCheck==='children_removed'?'child_removed':eventToCheck;return this.eventType===eventToCheck;}},{key:\"createCancelEvent\",value:function createCancelEvent(error,path){if(this.callbackContext.hasCancelCallback){return new CancelEvent(this,error,path);}else{return null;}}},{key:\"createEvent\",value:function createEvent(change,query){assert(change.childName!=null,'Child events should have a childName.');var childRef=_child9(new ReferenceImpl(query._repo,query._path),change.childName);var index=query._queryParams.getIndex();return new DataEvent(change.type,this,new DataSnapshot(change.snapshotNode,childRef,index),change.prevName);}},{key:\"getEventRunner\",value:function getEventRunner(eventData){var _this39=this;if(eventData.getEventType()==='cancel'){return function(){return _this39.callbackContext.onCancel(eventData.error);};}else{return function(){return _this39.callbackContext.onValue(eventData.snapshot,eventData.prevName);};}}},{key:\"matches\",value:function matches(other){if(other instanceof ChildEventRegistration){return this.eventType===other.eventType&&(!this.callbackContext||!other.callbackContext||this.callbackContext.matches(other.callbackContext));}return false;}},{key:\"hasAnyCallback\",value:function hasAnyCallback(){return!!this.callbackContext;}}]);return ChildEventRegistration;}();function addEventListener(query,eventType,callback,cancelCallbackOrListenOptions,options){var cancelCallback;if(_typeof(cancelCallbackOrListenOptions)==='object'){cancelCallback=undefined;options=cancelCallbackOrListenOptions;}if(typeof cancelCallbackOrListenOptions==='function'){cancelCallback=cancelCallbackOrListenOptions;}if(options&&options.onlyOnce){var userCallback=callback;var onceCallback=function onceCallback(dataSnapshot,previousChildName){repoRemoveEventCallbackForQuery(query._repo,query,container);userCallback(dataSnapshot,previousChildName);};onceCallback.userCallback=callback.userCallback;onceCallback.context=callback.context;callback=onceCallback;}var callbackContext=new CallbackContext(callback,cancelCallback||undefined);var container=eventType==='value'?new ValueEventRegistration(callbackContext):new ChildEventRegistration(eventType,callbackContext);repoAddEventCallbackForQuery(query._repo,query,container);return function(){return repoRemoveEventCallbackForQuery(query._repo,query,container);};}function onValue(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'value',callback,cancelCallbackOrListenOptions,options);}function onChildAdded(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_added',callback,cancelCallbackOrListenOptions,options);}function onChildChanged(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_changed',callback,cancelCallbackOrListenOptions,options);}function onChildMoved(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_moved',callback,cancelCallbackOrListenOptions,options);}function onChildRemoved(query,callback,cancelCallbackOrListenOptions,options){return addEventListener(query,'child_removed',callback,cancelCallbackOrListenOptions,options);}/**\r\n * Detaches a callback previously attached with `on()`.\r\n *\r\n * Detach a callback previously attached with `on()`. Note that if `on()` was\r\n * called multiple times with the same eventType and callback, the callback\r\n * will be called multiple times for each event, and `off()` must be called\r\n * multiple times to remove the callback. Calling `off()` on a parent listener\r\n * will not automatically remove listeners registered on child nodes, `off()`\r\n * must also be called on any child listeners to remove the callback.\r\n *\r\n * If a callback is not specified, all callbacks for the specified eventType\r\n * will be removed. Similarly, if no eventType is specified, all callbacks\r\n * for the `Reference` will be removed.\r\n *\r\n * Individual listeners can also be removed by invoking their unsubscribe\r\n * callbacks.\r\n *\r\n * @param query - The query that the listener was registered with.\r\n * @param eventType - One of the following strings: \"value\", \"child_added\",\r\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\r\n * for the `Reference` will be removed.\r\n * @param callback - The callback function that was passed to `on()` or\r\n * `undefined` to remove all callbacks.\r\n */function off(query,eventType,callback){var container=null;var expCallback=callback?new CallbackContext(callback):null;if(eventType==='value'){container=new ValueEventRegistration(expCallback);}else if(eventType){container=new ChildEventRegistration(eventType,expCallback);}repoRemoveEventCallbackForQuery(query._repo,query,container);}/**\r\n * A `QueryConstraint` is used to narrow the set of documents returned by a\r\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\r\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\r\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\r\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\r\n * {@link orderByValue}  or {@link equalTo} and\r\n * can then be passed to {@link query} to create a new query instance that\r\n * also contains this `QueryConstraint`.\r\n */var QueryConstraint=/*#__PURE__*/_createClass(function QueryConstraint(){_classCallCheck(this,QueryConstraint);});var QueryEndAtConstraint=/*#__PURE__*/function(_QueryConstraint){_inherits(QueryEndAtConstraint,_QueryConstraint);var _super11=_createSuper(QueryEndAtConstraint);function QueryEndAtConstraint(_value,_key){var _this40;_classCallCheck(this,QueryEndAtConstraint);_this40=_super11.call(this);_this40._value=_value;_this40._key=_key;return _this40;}_createClass(QueryEndAtConstraint,[{key:\"_apply\",value:function _apply(query){validateFirebaseDataArg('endAt',this._value,query._path,true);var newParams=queryParamsEndAt(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasEnd()){throw new Error('endAt: Starting point was already set (by another call to endAt, '+'endBefore or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);}}]);return QueryEndAtConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` with the specified ending point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name less than or equal\r\n * to the specified key.\r\n *\r\n * You can read more about `endAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to end at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end at, among the children with the previously\r\n * specified priority. This argument is only allowed if ordering by child,\r\n * value, or priority.\r\n */function endAt(value,key){validateKey('endAt','key',key,true);return new QueryEndAtConstraint(value,key);}var QueryEndBeforeConstraint=/*#__PURE__*/function(_QueryConstraint2){_inherits(QueryEndBeforeConstraint,_QueryConstraint2);var _super12=_createSuper(QueryEndBeforeConstraint);function QueryEndBeforeConstraint(_value,_key){var _this41;_classCallCheck(this,QueryEndBeforeConstraint);_this41=_super12.call(this);_this41._value=_value;_this41._key=_key;return _this41;}_createClass(QueryEndBeforeConstraint,[{key:\"_apply\",value:function _apply(query){validateFirebaseDataArg('endBefore',this._value,query._path,false);var newParams=queryParamsEndBefore(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasEnd()){throw new Error('endBefore: Starting point was already set (by another call to endAt, '+'endBefore or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);}}]);return QueryEndBeforeConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The ending point is exclusive. If only a value is provided, children\r\n * with a value less than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value lesss than or equal\r\n * to the specified value and a a key name less than the specified key.\r\n *\r\n * @param value - The value to end before. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to end before, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */function endBefore(value,key){validateKey('endBefore','key',key,true);return new QueryEndBeforeConstraint(value,key);}var QueryStartAtConstraint=/*#__PURE__*/function(_QueryConstraint3){_inherits(QueryStartAtConstraint,_QueryConstraint3);var _super13=_createSuper(QueryStartAtConstraint);function QueryStartAtConstraint(_value,_key){var _this42;_classCallCheck(this,QueryStartAtConstraint);_this42=_super13.call(this);_this42._value=_value;_this42._key=_key;return _this42;}_createClass(QueryStartAtConstraint,[{key:\"_apply\",value:function _apply(query){validateFirebaseDataArg('startAt',this._value,query._path,true);var newParams=queryParamsStartAt(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasStart()){throw new Error('startAt: Starting point was already set (by another call to startAt, '+'startBefore or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);}}]);return QueryStartAtConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` with the specified starting point.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is inclusive, so children with exactly the specified value\r\n * will be included in the query. The optional key argument can be used to\r\n * further limit the range of the query. If it is specified, then children that\r\n * have exactly the specified value must also have a key name greater than or\r\n * equal to the specified key.\r\n *\r\n * You can read more about `startAt()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to start at. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */function startAt(){var value=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var key=arguments.length>1?arguments[1]:undefined;validateKey('startAt','key',key,true);return new QueryStartAtConstraint(value,key);}var QueryStartAfterConstraint=/*#__PURE__*/function(_QueryConstraint4){_inherits(QueryStartAfterConstraint,_QueryConstraint4);var _super14=_createSuper(QueryStartAfterConstraint);function QueryStartAfterConstraint(_value,_key){var _this43;_classCallCheck(this,QueryStartAfterConstraint);_this43=_super14.call(this);_this43._value=_value;_this43._key=_key;return _this43;}_createClass(QueryStartAfterConstraint,[{key:\"_apply\",value:function _apply(query){validateFirebaseDataArg('startAfter',this._value,query._path,false);var newParams=queryParamsStartAfter(query._queryParams,this._value,this._key);validateLimit(newParams);validateQueryEndpoints(newParams);if(query._queryParams.hasStart()){throw new Error('startAfter: Starting point was already set (by another call to startAt, '+'startAfter, or equalTo).');}return new QueryImpl(query._repo,query._path,newParams,query._orderByCalled);}}]);return QueryStartAfterConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The starting point is exclusive. If only a value is provided, children\r\n * with a value greater than the specified value will be included in the query.\r\n * If a key is specified, then children must have a value greater than or equal\r\n * to the specified value and a a key name greater than the specified key.\r\n *\r\n * @param value - The value to start after. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start after. This argument is only allowed if\r\n * ordering by child, value, or priority.\r\n */function startAfter(value,key){validateKey('startAfter','key',key,true);return new QueryStartAfterConstraint(value,key);}var QueryLimitToFirstConstraint=/*#__PURE__*/function(_QueryConstraint5){_inherits(QueryLimitToFirstConstraint,_QueryConstraint5);var _super15=_createSuper(QueryLimitToFirstConstraint);function QueryLimitToFirstConstraint(_limit){var _this44;_classCallCheck(this,QueryLimitToFirstConstraint);_this44=_super15.call(this);_this44._limit=_limit;return _this44;}_createClass(QueryLimitToFirstConstraint,[{key:\"_apply\",value:function _apply(query){if(query._queryParams.hasLimit()){throw new Error('limitToFirst: Limit was already set (by another call to limitToFirst '+'or limitToLast).');}return new QueryImpl(query._repo,query._path,queryParamsLimitToFirst(query._queryParams,this._limit),query._orderByCalled);}}]);return QueryLimitToFirstConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that if limited to the first specific number\r\n * of children.\r\n *\r\n * The `limitToFirst()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the first 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToFirst()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */function limitToFirst(limit){if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('limitToFirst: First argument must be a positive integer.');}return new QueryLimitToFirstConstraint(limit);}var QueryLimitToLastConstraint=/*#__PURE__*/function(_QueryConstraint6){_inherits(QueryLimitToLastConstraint,_QueryConstraint6);var _super16=_createSuper(QueryLimitToLastConstraint);function QueryLimitToLastConstraint(_limit){var _this45;_classCallCheck(this,QueryLimitToLastConstraint);_this45=_super16.call(this);_this45._limit=_limit;return _this45;}_createClass(QueryLimitToLastConstraint,[{key:\"_apply\",value:function _apply(query){if(query._queryParams.hasLimit()){throw new Error('limitToLast: Limit was already set (by another call to limitToFirst '+'or limitToLast).');}return new QueryImpl(query._repo,query._path,queryParamsLimitToLast(query._queryParams,this._limit),query._orderByCalled);}}]);return QueryLimitToLastConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that is limited to return only the last\r\n * specified number of children.\r\n *\r\n * The `limitToLast()` method is used to set a maximum number of children to be\r\n * synced for a given callback. If we set a limit of 100, we will initially only\r\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\r\n * stored in our Database, a `child_added` event will fire for each message.\r\n * However, if we have over 100 messages, we will only receive a `child_added`\r\n * event for the last 100 ordered messages. As items change, we will receive\r\n * `child_removed` events for each item that drops out of the active list so\r\n * that the total number stays at 100.\r\n *\r\n * You can read more about `limitToLast()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param limit - The maximum number of nodes to include in this query.\r\n */function limitToLast(limit){if(typeof limit!=='number'||Math.floor(limit)!==limit||limit<=0){throw new Error('limitToLast: First argument must be a positive integer.');}return new QueryLimitToLastConstraint(limit);}var QueryOrderByChildConstraint=/*#__PURE__*/function(_QueryConstraint7){_inherits(QueryOrderByChildConstraint,_QueryConstraint7);var _super17=_createSuper(QueryOrderByChildConstraint);function QueryOrderByChildConstraint(_path){var _this46;_classCallCheck(this,QueryOrderByChildConstraint);_this46=_super17.call(this);_this46._path=_path;return _this46;}_createClass(QueryOrderByChildConstraint,[{key:\"_apply\",value:function _apply(query){validateNoPreviousOrderByCall(query,'orderByChild');var parsedPath=new Path(this._path);if(pathIsEmpty(parsedPath)){throw new Error('orderByChild: cannot pass in empty path. Use orderByValue() instead.');}var index=new PathIndex(parsedPath);var newParams=queryParamsOrderBy(query._queryParams,index);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);}}]);return QueryOrderByChildConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that orders by the specified child key.\r\n *\r\n * Queries can only order by one key at a time. Calling `orderByChild()`\r\n * multiple times on the same query is an error.\r\n *\r\n * Firebase queries allow you to order your data by any child key on the fly.\r\n * However, if you know in advance what your indexes will be, you can define\r\n * them via the .indexOn rule in your Security Rules for better performance. See\r\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\r\n * rule for more information.\r\n *\r\n * You can read more about `orderByChild()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n *\r\n * @param path - The path to order by.\r\n */function orderByChild(path){if(path==='$key'){throw new Error('orderByChild: \"$key\" is invalid.  Use orderByKey() instead.');}else if(path==='$priority'){throw new Error('orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.');}else if(path==='$value'){throw new Error('orderByChild: \"$value\" is invalid.  Use orderByValue() instead.');}validatePathString('orderByChild','path',path,false);return new QueryOrderByChildConstraint(path);}var QueryOrderByKeyConstraint=/*#__PURE__*/function(_QueryConstraint8){_inherits(QueryOrderByKeyConstraint,_QueryConstraint8);var _super18=_createSuper(QueryOrderByKeyConstraint);function QueryOrderByKeyConstraint(){_classCallCheck(this,QueryOrderByKeyConstraint);return _super18.apply(this,arguments);}_createClass(QueryOrderByKeyConstraint,[{key:\"_apply\",value:function _apply(query){validateNoPreviousOrderByCall(query,'orderByKey');var newParams=queryParamsOrderBy(query._queryParams,KEY_INDEX);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);}}]);return QueryOrderByKeyConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that orders by the key.\r\n *\r\n * Sorts the results of a query by their (ascending) key values.\r\n *\r\n * You can read more about `orderByKey()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */function orderByKey(){return new QueryOrderByKeyConstraint();}var QueryOrderByPriorityConstraint=/*#__PURE__*/function(_QueryConstraint9){_inherits(QueryOrderByPriorityConstraint,_QueryConstraint9);var _super19=_createSuper(QueryOrderByPriorityConstraint);function QueryOrderByPriorityConstraint(){_classCallCheck(this,QueryOrderByPriorityConstraint);return _super19.apply(this,arguments);}_createClass(QueryOrderByPriorityConstraint,[{key:\"_apply\",value:function _apply(query){validateNoPreviousOrderByCall(query,'orderByPriority');var newParams=queryParamsOrderBy(query._queryParams,PRIORITY_INDEX);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);}}]);return QueryOrderByPriorityConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that orders by priority.\r\n *\r\n * Applications need not use priority but can order collections by\r\n * ordinary properties (see\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\r\n * for alternatives to priority.\r\n */function orderByPriority(){return new QueryOrderByPriorityConstraint();}var QueryOrderByValueConstraint=/*#__PURE__*/function(_QueryConstraint10){_inherits(QueryOrderByValueConstraint,_QueryConstraint10);var _super20=_createSuper(QueryOrderByValueConstraint);function QueryOrderByValueConstraint(){_classCallCheck(this,QueryOrderByValueConstraint);return _super20.apply(this,arguments);}_createClass(QueryOrderByValueConstraint,[{key:\"_apply\",value:function _apply(query){validateNoPreviousOrderByCall(query,'orderByValue');var newParams=queryParamsOrderBy(query._queryParams,VALUE_INDEX);validateQueryEndpoints(newParams);return new QueryImpl(query._repo,query._path,newParams,/*orderByCalled=*/true);}}]);return QueryOrderByValueConstraint;}(QueryConstraint);/**\r\n * Creates a new `QueryConstraint` that orders by value.\r\n *\r\n * If the children of a query are all scalar values (string, number, or\r\n * boolean), you can order the results by their (ascending) values.\r\n *\r\n * You can read more about `orderByValue()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\r\n */function orderByValue(){return new QueryOrderByValueConstraint();}var QueryEqualToValueConstraint=/*#__PURE__*/function(_QueryConstraint11){_inherits(QueryEqualToValueConstraint,_QueryConstraint11);var _super21=_createSuper(QueryEqualToValueConstraint);function QueryEqualToValueConstraint(_value,_key){var _this47;_classCallCheck(this,QueryEqualToValueConstraint);_this47=_super21.call(this);_this47._value=_value;_this47._key=_key;return _this47;}_createClass(QueryEqualToValueConstraint,[{key:\"_apply\",value:function _apply(query){validateFirebaseDataArg('equalTo',this._value,query._path,false);if(query._queryParams.hasStart()){throw new Error('equalTo: Starting point was already set (by another call to startAt/startAfter or '+'equalTo).');}if(query._queryParams.hasEnd()){throw new Error('equalTo: Ending point was already set (by another call to endAt/endBefore or '+'equalTo).');}return new QueryEndAtConstraint(this._value,this._key)._apply(new QueryStartAtConstraint(this._value,this._key)._apply(query));}}]);return QueryEqualToValueConstraint;}(QueryConstraint);/**\r\n * Creates a `QueryConstraint` that includes children that match the specified\r\n * value.\r\n *\r\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\r\n * allows you to choose arbitrary starting and ending points for your queries.\r\n *\r\n * The optional key argument can be used to further limit the range of the\r\n * query. If it is specified, then children that have exactly the specified\r\n * value must also have exactly the specified key as their key name. This can be\r\n * used to filter result sets with many matches for the same value.\r\n *\r\n * You can read more about `equalTo()` in\r\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\r\n *\r\n * @param value - The value to match for. The argument type depends on which\r\n * `orderBy*()` function was used in this query. Specify a value that matches\r\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\r\n * value must be a string.\r\n * @param key - The child key to start at, among the children with the\r\n * previously specified priority. This argument is only allowed if ordering by\r\n * child, value, or priority.\r\n */function equalTo(value,key){validateKey('equalTo','key',key,true);return new QueryEqualToValueConstraint(value,key);}/**\r\n * Creates a new immutable instance of `Query` that is extended to also include\r\n * additional query constraints.\r\n *\r\n * @param query - The Query instance to use as a base for the new constraints.\r\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\r\n * @throws if any of the provided query constraints cannot be combined with the\r\n * existing or new constraints.\r\n */function query(query){var queryImpl=getModularInstance(query);for(var _len7=arguments.length,queryConstraints=new Array(_len7>1?_len7-1:0),_key8=1;_key8<_len7;_key8++){queryConstraints[_key8-1]=arguments[_key8];}for(var _i11=0,_queryConstraints=queryConstraints;_i11<_queryConstraints.length;_i11++){var constraint=_queryConstraints[_i11];queryImpl=constraint._apply(queryImpl);}return queryImpl;}/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */syncPointSetReferenceConstructor(ReferenceImpl);syncTreeSetReferenceConstructor(ReferenceImpl);/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * This variable is also defined in the firebase Node.js Admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */var FIREBASE_DATABASE_EMULATOR_HOST_VAR='FIREBASE_DATABASE_EMULATOR_HOST';/**\r\n * Creates and caches `Repo` instances.\r\n */var repos={};/**\r\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\r\n */var useRestClient=false;/**\r\n * Update an existing `Repo` in place to point to a new host/port.\r\n */function repoManagerApplyEmulatorSettings(repo,host,port,tokenProvider){repo.repoInfo_=new RepoInfo(\"\".concat(host,\":\").concat(port),/* secure= */false,repo.repoInfo_.namespace,repo.repoInfo_.webSocketOnly,repo.repoInfo_.nodeAdmin,repo.repoInfo_.persistenceKey,repo.repoInfo_.includeNamespaceInQueryParams);if(tokenProvider){repo.authTokenProvider_=tokenProvider;}}/**\r\n * This function should only ever be called to CREATE a new database instance.\r\n * @internal\r\n */function repoManagerDatabaseFromApp(app,authProvider,appCheckProvider,url,nodeAdmin){var dbUrl=url||app.options.databaseURL;if(dbUrl===undefined){if(!app.options.projectId){fatal(\"Can't determine Firebase Database URL. Be sure to include \"+' a Project ID when calling firebase.initializeApp().');}log('Using default host for project ',app.options.projectId);dbUrl=\"\".concat(app.options.projectId,\"-default-rtdb.firebaseio.com\");}var parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);var repoInfo=parsedUrl.repoInfo;var isEmulator;var dbEmulatorHost=undefined;if(typeof process!=='undefined'&&process.env){dbEmulatorHost=process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];}if(dbEmulatorHost){isEmulator=true;dbUrl=\"http://\".concat(dbEmulatorHost,\"?ns=\").concat(repoInfo.namespace);parsedUrl=parseRepoInfo(dbUrl,nodeAdmin);repoInfo=parsedUrl.repoInfo;}else{isEmulator=!parsedUrl.repoInfo.secure;}var authTokenProvider=nodeAdmin&&isEmulator?new EmulatorTokenProvider(EmulatorTokenProvider.OWNER):new FirebaseAuthTokenProvider(app.name,app.options,authProvider);validateUrl('Invalid Firebase Database URL',parsedUrl);if(!pathIsEmpty(parsedUrl.path)){fatal('Database URL must point to the root of a Firebase Database '+'(not including a child path).');}var repo=repoManagerCreateRepo(repoInfo,app,authTokenProvider,new AppCheckTokenProvider(app.name,appCheckProvider));return new Database(repo,app);}/**\r\n * Remove the repo and make sure it is disconnected.\r\n *\r\n */function repoManagerDeleteRepo(repo,appName){var appRepos=repos[appName];// This should never happen...\nif(!appRepos||appRepos[repo.key]!==repo){fatal(\"Database \".concat(appName,\"(\").concat(repo.repoInfo_,\") has already been deleted.\"));}repoInterrupt(repo);delete appRepos[repo.key];}/**\r\n * Ensures a repo doesn't already exist and then creates one using the\r\n * provided app.\r\n *\r\n * @param repoInfo - The metadata about the Repo\r\n * @returns The Repo object for the specified server / repoName.\r\n */function repoManagerCreateRepo(repoInfo,app,authTokenProvider,appCheckProvider){var appRepos=repos[app.name];if(!appRepos){appRepos={};repos[app.name]=appRepos;}var repo=appRepos[repoInfo.toURLString()];if(repo){fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');}repo=new Repo(repoInfo,useRestClient,authTokenProvider,appCheckProvider);appRepos[repoInfo.toURLString()]=repo;return repo;}/**\r\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n */function repoManagerForceRestClient(forceRestClient){useRestClient=forceRestClient;}/**\r\n * Class representing a Firebase Realtime Database.\r\n */var Database=/*#__PURE__*/function(){/** @hideconstructor */function Database(_repoInternal,/** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */app){_classCallCheck(this,Database);this._repoInternal=_repoInternal;this.app=app;/** Represents a `Database` instance. */this['type']='database';/** Track if the instance has been used (root or repo accessed) */this._instanceStarted=false;}_createClass(Database,[{key:\"_repo\",get:function get(){if(!this._instanceStarted){repoStart(this._repoInternal,this.app.options.appId,this.app.options['databaseAuthVariableOverride']);this._instanceStarted=true;}return this._repoInternal;}},{key:\"_root\",get:function get(){if(!this._rootInternal){this._rootInternal=new ReferenceImpl(this._repo,newEmptyPath());}return this._rootInternal;}},{key:\"_delete\",value:function _delete(){if(this._rootInternal!==null){repoManagerDeleteRepo(this._repo,this.app.name);this._repoInternal=null;this._rootInternal=null;}return Promise.resolve();}},{key:\"_checkNotDeleted\",value:function _checkNotDeleted(apiName){if(this._rootInternal===null){fatal('Cannot call '+apiName+' on a deleted database.');}}}]);return Database;}();/**\r\n * Returns the instance of the Realtime Database SDK that is associated\r\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\r\n * with default settings if no instance exists or if the existing instance uses\r\n * a custom database URL.\r\n *\r\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\r\n * Database instance is associated with.\r\n * @param url - The URL of the Realtime Database instance to connect to. If not\r\n * provided, the SDK connects to the default instance of the Firebase App.\r\n * @returns The `Database` instance of the provided app.\r\n */function getDatabase(){var app=arguments.length>0&&arguments[0]!==undefined?arguments[0]:getApp();var url=arguments.length>1?arguments[1]:undefined;return _getProvider(app,'database').getImmediate({identifier:url});}/**\r\n * Modify the provided instance to communicate with the Realtime Database\r\n * emulator.\r\n *\r\n * <p>Note: This method must be called before performing any other operation.\r\n *\r\n * @param db - The instance to modify.\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 8080)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\r\n */function connectDatabaseEmulator(db,host,port){var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};db=getModularInstance(db);db._checkNotDeleted('useEmulator');if(db._instanceStarted){fatal('Cannot call useEmulator() after instance has already been initialized.');}var repo=db._repoInternal;var tokenProvider=undefined;if(repo.repoInfo_.nodeAdmin){if(options.mockUserToken){fatal('mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".');}tokenProvider=new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);}else if(options.mockUserToken){var token=typeof options.mockUserToken==='string'?options.mockUserToken:createMockUserToken(options.mockUserToken,db.app.options.projectId);tokenProvider=new EmulatorTokenProvider(token);}// Modify the repo to apply emulator settings\nrepoManagerApplyEmulatorSettings(repo,host,port,tokenProvider);}/**\r\n * Disconnects from the server (all Database operations will be completed\r\n * offline).\r\n *\r\n * The client automatically maintains a persistent connection to the Database\r\n * server, which will remain active indefinitely and reconnect when\r\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\r\n * to control the client connection in cases where a persistent connection is\r\n * undesirable.\r\n *\r\n * While offline, the client will no longer receive data updates from the\r\n * Database. However, all Database operations performed locally will continue to\r\n * immediately fire events, allowing your application to continue behaving\r\n * normally. Additionally, each operation performed locally will automatically\r\n * be queued and retried upon reconnection to the Database server.\r\n *\r\n * To reconnect to the Database and begin receiving remote events, see\r\n * `goOnline()`.\r\n *\r\n * @param db - The instance to disconnect.\r\n */function goOffline(db){db=getModularInstance(db);db._checkNotDeleted('goOffline');repoInterrupt(db._repo);}/**\r\n * Reconnects to the server and synchronizes the offline Database state\r\n * with the server state.\r\n *\r\n * This method should be used after disabling the active connection with\r\n * `goOffline()`. Once reconnected, the client will transmit the proper data\r\n * and fire the appropriate events so that your client \"catches up\"\r\n * automatically.\r\n *\r\n * @param db - The instance to reconnect.\r\n */function goOnline(db){db=getModularInstance(db);db._checkNotDeleted('goOnline');repoResume(db._repo);}function enableLogging(logger,persistent){enableLogging$1(logger,persistent);}/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */function registerDatabase(variant){setSDKVersion(SDK_VERSION$1);_registerComponent(new Component('database',function(container,_ref3){var url=_ref3.instanceIdentifier;var app=container.getProvider('app').getImmediate();var authProvider=container.getProvider('auth-internal');var appCheckProvider=container.getProvider('app-check-internal');return repoManagerDatabaseFromApp(app,authProvider,appCheckProvider,url);},\"PUBLIC\"/* PUBLIC */).setMultipleInstances(true));registerVersion(name,version,variant);// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name,version,'esm2017');}/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */var SERVER_TIMESTAMP={'.sv':'timestamp'};/**\r\n * Returns a placeholder value for auto-populating the current timestamp (time\r\n * since the Unix epoch, in milliseconds) as determined by the Firebase\r\n * servers.\r\n */function serverTimestamp(){return SERVER_TIMESTAMP;}/**\r\n * Returns a placeholder value that can be used to atomically increment the\r\n * current database value by the provided delta.\r\n *\r\n * @param delta - the amount to modify the current value atomically.\r\n * @returns A placeholder value for modifying data atomically server-side.\r\n */function increment(delta){return{'.sv':{'increment':delta}};}/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */ /**\r\n * A type for the resolve value of {@link runTransaction}.\r\n */var TransactionResult=/*#__PURE__*/function(){/** @hideconstructor */function TransactionResult(/** Whether the transaction was successfully committed. */committed,/** The resulting data snapshot. */snapshot){_classCallCheck(this,TransactionResult);this.committed=committed;this.snapshot=snapshot;}/** Returns a JSON-serializable representation of this object. */_createClass(TransactionResult,[{key:\"toJSON\",value:function toJSON(){return{committed:this.committed,snapshot:this.snapshot.toJSON()};}}]);return TransactionResult;}();/**\r\n * Atomically modifies the data at this location.\r\n *\r\n * Atomically modify the data at this location. Unlike a normal `set()`, which\r\n * just overwrites the data regardless of its previous value, `runTransaction()` is\r\n * used to modify the existing value to a new value, ensuring there are no\r\n * conflicts with other clients writing to the same location at the same time.\r\n *\r\n * To accomplish this, you pass `runTransaction()` an update function which is\r\n * used to transform the current value into a new value. If another client\r\n * writes to the location before your new value is successfully written, your\r\n * update function will be called again with the new current value, and the\r\n * write will be retried. This will happen repeatedly until your write succeeds\r\n * without conflict or you abort the transaction by not returning a value from\r\n * your update function.\r\n *\r\n * Note: Modifying data with `set()` will cancel any pending transactions at\r\n * that location, so extreme care should be taken if mixing `set()` and\r\n * `runTransaction()` to update the same data.\r\n *\r\n * Note: When using transactions with Security and Firebase Rules in place, be\r\n * aware that a client needs `.read` access in addition to `.write` access in\r\n * order to perform a transaction. This is because the client-side nature of\r\n * transactions requires the client to read the data in order to transactionally\r\n * update it.\r\n *\r\n * @param ref - The location to atomically modify.\r\n * @param transactionUpdate - A developer-supplied function which will be passed\r\n * the current data stored at this location (as a JavaScript object). The\r\n * function should return the new value it would like written (as a JavaScript\r\n * object). If `undefined` is returned (i.e. you return with no arguments) the\r\n * transaction will be aborted and the data at this location will not be\r\n * modified.\r\n * @param options - An options object to configure transactions.\r\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\r\n * callback to handle success and failure.\r\n */function runTransaction(ref,// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntransactionUpdate,options){var _a;ref=getModularInstance(ref);validateWritablePath('Reference.transaction',ref._path);if(ref.key==='.length'||ref.key==='.keys'){throw'Reference.transaction failed: '+ref.key+' is a read-only object.';}var applyLocally=(_a=options===null||options===void 0?void 0:options.applyLocally)!==null&&_a!==void 0?_a:true;var deferred=new Deferred();var promiseComplete=function promiseComplete(error,committed,node){var dataSnapshot=null;if(error){deferred.reject(error);}else{dataSnapshot=new DataSnapshot(node,new ReferenceImpl(ref._repo,ref._path),PRIORITY_INDEX);deferred.resolve(new TransactionResult(committed,dataSnapshot));}};// Add a watch to make sure we get server updates.\nvar unwatcher=onValue(ref,function(){});repoStartTransaction(ref._repo,ref._path,transactionUpdate,promiseComplete,unwatcher,applyLocally);return deferred.promise;}/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */PersistentConnection;// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.simpleListen=function(pathString,onComplete){this.sendRequest('q',{p:pathString},onComplete);};// eslint-disable-next-line @typescript-eslint/no-explicit-any\nPersistentConnection.prototype.echo=function(data,onEcho){this.sendRequest('echo',{d:data},onEcho);};// RealTimeConnection properties that we use in tests.\nConnection;/**\r\n * @internal\r\n */var hijackHash=function hijackHash(newHash){var oldPut=PersistentConnection.prototype.put;PersistentConnection.prototype.put=function(pathString,data,onComplete,hash){if(hash!==undefined){hash=newHash();}oldPut.call(this,pathString,data,onComplete,hash);};return function(){PersistentConnection.prototype.put=oldPut;};};RepoInfo;/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n * @internal\r\n */var forceRestClient=function forceRestClient(_forceRestClient){repoManagerForceRestClient(_forceRestClient);};/**\r\n * Firebase Realtime Database\r\n *\r\n * @packageDocumentation\r\n */registerDatabase();export{DataSnapshot,Database,OnDisconnect,QueryConstraint,TransactionResult,QueryImpl as _QueryImpl,QueryParams as _QueryParams,ReferenceImpl as _ReferenceImpl,forceRestClient as _TEST_ACCESS_forceRestClient,hijackHash as _TEST_ACCESS_hijackHash,repoManagerDatabaseFromApp as _repoManagerDatabaseFromApp,setSDKVersion as _setSDKVersion,validatePathString as _validatePathString,validateWritablePath as _validateWritablePath,_child9 as child,connectDatabaseEmulator,enableLogging,endAt,endBefore,equalTo,get,getDatabase,goOffline,goOnline,increment,limitToFirst,limitToLast,off,onChildAdded,onChildChanged,onChildMoved,onChildRemoved,onDisconnect,onValue,orderByChild,orderByKey,orderByPriority,orderByValue,push,query,ref,refFromURL,remove,runTransaction,serverTimestamp,set,setPriority,setWithPriority,startAfter,startAt,update};","map":{"version":3,"mappings":"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","names":["SDK_VERSION","setSDKVersion","version","DOMStorageWrapper","domStorage_","key","value","removeItem","prefixedName_","setItem","stringify","storedVal","getItem","jsonEval","name","prefix_","toString","MemoryStorage","cache_","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","message","i","length","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","set","remove","get","varArgs","logWrapper","prefix","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","isNodeSdk","document","readyState","called","wrappedFn","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","ebits","fbits","bias","s","f","ln","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","_path","toUpperCase","INTEGER_REGEXP_","RegExp","INTEGER_32_MIN","INTEGER_32_MAX","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","AppCheckTokenProvider","appName_","appCheckProvider","appCheck","getImmediate","optional","then","forceRefresh","Promise","resolve","reject","getToken","listener","_a","addTokenListener","FirebaseAuthTokenProvider","firebaseOptions_","authProvider_","auth_","onInit","auth","catch","addAuthTokenListener","removeAuthTokenListener","errorMessage","EmulatorTokenProvider","accessToken","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN_RE","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","APP_CHECK_TOKEN_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","_host","_domain","internalHost","newHost","isCacheableHost","toURLString","repoInfoNeedsQueryParam","repoInfo","isCustomHost","repoInfoConnectionURL","type","params","connURL","pairs","StatsCollection","amount","counters_","deepCopy","collections","reporters","statsManagerGetCollection","hashString","statsManagerGetOrCreateReporter","creatorFunction","PacketReceiver","onMessage_","responseNum","callback","closeAfterResponse","onClose","currentResponseNum","requestNum","pendingResponses","toProcess","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","appCheckToken","authToken","transportSessionId","lastSessionId","log_","stats_","urlFn","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","arg3","arg4","incrementIncomingBytes_","clearTimeout","everConnected_","password","sendNewPolls","closeAfter","pN","handleResponse","urlParams","random","uniqueCallbackIdentifier","hostname","connectURL","addTag","startLongPoll","addDisconnectPingFrame","close","myDisconnFrame","removeChild","shutdown_","dataStr","bytesSent","incrementCounter","base64data","base64Encode","enqueueSegment","pw","createElement","src","style","display","appendChild","bytesReceived","forceAllow_","forceDisallow_","commandCB","onMessageCB","Set","myIFrame","createIFrame_","script","currentDomain","domain","iframeContents","doc","open","write","alive","innerHTML","myID","myPW","newRequest_","outstandingRequests","size","pendingSegs","currentSerial","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","add","doNewRequest","delete","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript","async","onload","onreadystatechange","rstate","parentNode","onerror","iframe","contentWindow","contentDocument","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","handleIncomingFrame","m","frames","totalFrames","fullMess","jsonMess","frameCount","isNaN","handleNewFrameCount_","mess","resetKeepAlive","appendFrame_","remainingData","extractFrameCount_","sendString_","String","keepaliveTimer","clearInterval","setInterval","send","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","isInMemoryStorage","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","previouslyFailed","transports_","transports","ALL_TRANSPORTS","transport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","appCheckToken_","authToken_","onReady_","onKill_","transportManager_","start_","conn","initialTransport","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","markConnectionHealthy","connectionCount","onConnectionLost_","everConnected","onSecondaryConnectionLost_","state_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","dataMsg","msg","t","sendData_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","onSecondaryControl_","pendingDataMessages","proceedWithUpgrade_","start","tryCleanupConnection","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","upgradeTransport","startUpgrade_","closeConnections_","ServerActions","pathString","onComplete","hash","token","stats","EventEmitter","allowedEvents_","eventType","listeners_","listeners","context","validateEventType_","eventData","getInitialEvent","splice","find","et","OnlineMonitor","isMobileCordova","online_","trigger","MAX_PATH_DEPTH","MAX_PATH_LENGTH_BYTES","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","newEmptyPath","pathGetFront","path","pathGetLength","pathPopFront","pathGetBack","pathToUrlEncodedString","encodeURIComponent","pathSlice","begin","slice","pathParent","pieces","pathChild","childPathObj","childPieces","pathIsEmpty","newRelativePath","outerPath","innerPath","outer","inner","pathCompare","left","right","leftKeys","rightKeys","cmp","pathEquals","other","j","pathContains","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","validationPathCheckValid","validationPathPush","validationPath","child","validationPathPop","last","pop","validationPathToErrorString","VisibilityMonitor","hidden","visibilityChange","visible_","visible","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","appCheckTokenProvider_","authOverride_","nextPersistentConnectionId_","Map","getInstance","on","onVisible_","onOnline_","action","onResponse","curReqNum","requestNumber_","r","connected_","realtime_","sendRequest","requestCBHash_","initConnection_","deferred","Deferred","request","p","q","_queryObject","outstandingGet","outstandingGets_","outstandingGetCount_","index","undefined","sendGet_","promise","currentHashFn","tag","queryId","_queryIdentifier","listens","has","_queryParams","isDefault","loadsAllData","listenSpec","hashFn","sendListen_","req","status","warnOnListenWarnings_","currentListenSpec","removeListen_","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","maxReconnectDelay_","tryAppCheck","authMethod","isValidFormat","requestData","cred","res","invalidAuthTokenCount_","onAuthRevoked_","invalidAppCheckTokenCount_","onAppCheckRevoked_","listen","sendUnlisten_","queryObj","sendOnDisconnect_","onDisconnectRequestQueue_","response","putInternal","outstandingPuts_","outstandingPutCount_","sendPut_","queued","result","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","lastConnectionEstablishedTime_","Date","getTime","handleTimestamp_","firstConnection_","sendConnectStats_","restoreState_","establishConnectionTimer_","establishConnection_","scheduleConnect_","reconnectDelay_","online","cancelSentTransactions_","shouldReconnect_","lastConnectionAttemptTime_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage","onReady","onRealtimeDisconnect_","nextConnectionId_","canceled","connection","closeFn","sendRequestFn","forceTokenRefresh_","all","interrupt","interruptReasons_","isEmpty","delta","serverTimeOffset","put","map","normalizedPathString","statusCode","explanation","notifyForInvalidToken","securityDebugCallback_","console","replace","values","queries","clientName","isReactNative","reportStats","currentlyOnline","warnings","safeGet","indexSpec","getIndex","indexPath","NamedNode","node","Index","compare","oldNode","newNode","oldWrapped","newWrapped","MIN","__EMPTY_NODE","KeyIndex","assertionError","indexValue","val","KEY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","LLRBNode","color","RED","SortedMap","EMPTY_NODE","count","inorderTraversal","reverseTraversal","min_","maxKey","n","copy","insert","fixUp_","isRed_","moveRedLeft_","removeMin_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","blackDepth","check_","LLRBEmptyNode","comparator_","root_","BLACK","rightParent","minKey","resultGenerator","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","MAX_NODE","setMaxNode","priorityHashText","priority","validatePriorityNode","priorityNode","isLeafNode","getPriority","__childrenNodeConstructor","LeafNode","value_","priorityNode_","newPriorityNode","childName","childNode","newChildNode","updatePriority","updateImmediateChild","front","updateChild","exportFormat","getValue","lazyHash_","toHash","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","equals","nodeFromJSON","setNodeFromJSON","PriorityIndex","aPriority","bPriority","indexCmp","compareTo","PRIORITY_INDEX","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","nextBitIsOne","_defaultIndexMap","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","indexDefinition","existingChildren","sawIndexedValue","iter","getIterator","Wrap","next","getNext","isDefinedOn","newIndex","getCompare","indexName","newIndexSet","newIndexes","indexedChildren","existingSnap","newChildren","ChildrenNode","children_","indexMap_","getImmediateChild","getChild","newIndexMap","removeFromIndexes","addToIndexes","newPriority","newImmediateChild","numKeys","allIntegerKeys","forEachChild","array","childHash","idx","resolveIndex_","predecessor","getPredecessorKey","getFirstChildName","getLastChildName","wrappedNode","getIteratorFrom","minPost","startPost","iterator","peek","getReverseIteratorFrom","maxPost","endPost","hasIndex","addIndex","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","Default","MaxNode","Object","defineProperties","MAX","setPriorityMaxNode","USE_HINZE","json","jsonLeaf","children","childrenHavePriority","hinzeJsonObj","childSet","sortedChildSet","childData","PathIndex","indexPath_","snap","aChild","extractChild","bChild","valueNode","ValueIndex","VALUE_INDEX","PUSH_CHARS","MIN_PUSH_CHAR","MAX_PUSH_CHAR","MAX_KEY_LEN","nextPushId","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","charAt","successor","keyAsInt","source","sourcePlusOne","repeat","changeValue","snapshotNode","changeChildAdded","changeChildRemoved","changeChildChanged","oldSnap","changeChildMoved","IndexedFilter","index_","newChild","affectedPath","optChangeAccumulator","isIndexed","oldChild","hasChild","trackChildChange","withIndex","newSnap","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","matches","filtered","self","updateFullNode","hasStart","startName","getIndexStartName","makePost","getIndexStartValue","hasEnd","endName","getIndexEndName","getIndexEndValue","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","numChildren","getIndexedFilter","fullLimitUpdateChild_","hasNext","inRange","getReverseIterator","indexCompare","foundStartPost","childKey","childSnap","changeAccumulator","oldEventCache","newChildNamedNode","windowBoundary","getFirstChild","getLastChild","oldChildSnap","nextChild","getChildAfterChild","compareNext","remainsInWindow","newEventCache","nextChildInRange","QueryParams","startSet_","startAfterSet_","endBeforeSet_","viewFrom_","indexStartValue_","startNameSet_","indexStartName_","endSet_","indexEndValue_","endNameSet_","indexEndName_","limitSet_","queryParamsGetNodeFilter","queryParams","hasLimit","queryParamsLimitToFirst","newLimit","newParams","queryParamsLimitToLast","queryParamsStartAt","queryParamsStartAfter","queryParamsEndAt","queryParamsEndBefore","queryParamsOrderBy","queryParamsToRestQueryStringParameters","qs","orderBy","queryParamsGetQueryObject","viewFrom","ReadonlyRestClient","listenId","getListenId_","thisListen","listens_","queryStringParameters","restRequest_","querystring","xhr","XMLHttpRequest","responseText","SnapshotHolder","rootNode_","newSnapshotNode","newSparseSnapshotTree","sparseSnapshotTreeRemember","sparseSnapshotTree","clear","sparseSnapshotTreeForget","tree","safeToRemove","sparseSnapshotTreeForEachTree","prefixPath","func","sparseSnapshotTreeForEachChild","forEach","StatsListener","collection_","newStats","last_","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsListener_","reportStats_","reportedStats","haveStatsToReport","statsToReport_","OperationType","newOperationSourceUser","fromUser","fromServer","tagged","newOperationSourceServer","newOperationSourceServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","subtree","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","node_","fullyInitialized_","filtered_","isFullyInitialized","isCompleteForChild","EventGenerator","query_","eventGeneratorGenerateEventsForChanges","eventGenerator","changes","eventCache","eventRegistrations","events","moves","change","indexedValueChanged","eventGeneratorGenerateEventsForType","registrations","filteredChanges","filter","eventGeneratorCompareChanges","materializedChange","eventGeneratorMaterializeSingleChange","registration","respondsTo","createEvent","prevName","getPredecessorChildName","aWrapped","bWrapped","newViewCache","serverCache","viewCacheUpdateEventSnap","viewCache","eventSnap","complete","viewCacheUpdateServerSnap","serverSnap","viewCacheGetCompleteEventSnap","getNode","viewCacheGetCompleteServerSnap","emptyChildrenSingleton","EmptyChildren","ImmutableTree","relativePath","predicate","childExistingPathAndValue","findRootMostMatchingPathAndValue","fullPath","toSet","newTree","setTree","fold_","pathSoFar","accum","findOnPath_","pathToFollow","foreachOnPath_","currentRelativePath","foreach_","childPath","CompoundWrite","writeTree_","compoundWriteAddWrite","compoundWrite","rootmost","findRootMostValueAndPath","rootMostPath","newWriteTree","compoundWriteAddWrites","updates","newWrite","compoundWriteRemoveWrite","empty","compoundWriteHasCompleteWrite","compoundWriteGetCompleteNode","compoundWriteGetCompleteChildren","compoundWriteChildCompoundWrite","shadowingNode","compoundWriteIsEmpty","compoundWriteApply","applySubtreeWrite","writeTree","priorityWrite","writeTreeChildWrites","newWriteTreeRef","writeTreeAddOverwrite","writeId","lastWriteId","allWrites","visibleWrites","writeTreeAddMerge","changedChildren","writeTreeGetWrite","record","writeTreeRemoveWrite","findIndex","writeToRemove","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","writeTreeRecordContainsPath_","writeTreeResetTree_","writeRecord","writeTreeLayerTree_","writeTreeDefaultFilter_","writes","treeRoot","writePath","deepNode","writeTreeCalcCompleteEventCache","treePath","completeServerCache","writeIdsToExclude","includeHiddenWrites","subMerge","layeredCache","merge","mergeAtPath","writeTreeCalcCompleteEventChildren","completeServerChildren","completeChildren","topLevelSet","writeTreeCalcEventCacheAfterServerOverwrite","existingEventSnap","existingServerSnap","childMerge","writeTreeCalcCompleteChild","writeTreeShadowingWrite","writeTreeCalcIndexedSlice","completeServerData","toIterate","nodes","writeTreeRefCalcCompleteEventCache","writeTreeRef","writeTreeRefCalcCompleteEventChildren","writeTreeRefCalcEventCacheAfterServerOverwrite","writeTreeRefShadowingWrite","writeTreeRefCalcIndexedSlice","writeTreeRefCalcCompleteChild","existingServerCache","writeTreeRefChild","ChildChangeAccumulator","oldChange","changeMap","oldType","from","NoCompleteChildSource_","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","newViewProcessor","viewProcessorAssertIndexed","viewProcessor","viewProcessorApplyOperation","oldViewCache","operation","writesCache","completeCache","accumulator","filterServerNode","overwrite","viewProcessorApplyUserOverwrite","isFiltered","viewProcessorApplyServerOverwrite","viewProcessorApplyUserMerge","viewProcessorApplyServerMerge","ackUserWrite","viewProcessorAckUserWrite","viewProcessorRevertUserWrite","viewProcessorListenComplete","getChanges","viewProcessorMaybeAddValueEvent","isLeafOrEmpty","oldCompleteSnap","viewProcessorGenerateEventCacheAfterServerEvent","changePath","oldEventSnap","completeEventChildren","completeNode","oldEventNode","updatedPriority","childChangePath","newEventChild","eventChildUpdate","filtersNodes","changedSnap","oldServerSnap","newServerCache","serverFilter","newServerNode","isCompleteForPath","getCompleteChild","newEventSnap","viewProcessorCacheHasChild","curViewCache","foreach","viewProcessorApplyMerge","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","mergePath","serverCachePath","oldServerNode","serverChildren","View","initialViewCache","indexFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","viewGetServerCache","view","viewGetCompleteNode","viewGetCompleteServerCache","cache","viewIsEmpty","eventRegistrations_","viewAddEventRegistration","eventRegistration","viewRemoveEventRegistration","cancelError","cancelEvents","maybeEvent","createCancelEvent","remaining","existing","hasAnyCallback","concat","viewApplyOperation","viewGenerateEventsForChanges_","viewGetInitialEvents","initialChanges","eventNode","referenceConstructor","SyncPoint","syncPointSetReferenceConstructor","syncPointGetReferenceConstructor","syncPointIsEmpty","syncPoint","views","syncPointApplyOperation","optCompleteServerCache","syncPointGetView","serverCacheComplete","eventCacheComplete","syncPointAddEventRegistration","syncPointRemoveEventRegistration","removed","hadCompleteView","syncPointHasCompleteView","entries","viewQueryId","_repo","syncPointGetQueryViews","syncPointGetCompleteServerCache","syncPointViewForQuery","syncPointGetCompleteView","syncPointViewExistsForQuery","syncTreeSetReferenceConstructor","syncTreeGetReferenceConstructor","syncTreeNextQueryTag_","SyncTree","listenProvider_","syncTreeApplyUserOverwrite","syncTree","newData","pendingWriteTree_","syncTreeApplyOperationToSyncPoints_","syncTreeApplyUserMerge","changeTree","fromObject","syncTreeAckUserWrite","needToReevaluate","syncTreeApplyServerOverwrite","syncTreeApplyServerMerge","syncTreeApplyListenComplete","syncTreeApplyTaggedListenComplete","queryKey","syncTreeQueryKeyForTag_","syncTreeParseQueryKey_","queryPath","op","syncTreeApplyTaggedOperation_","syncTreeRemoveEventRegistration","maybeSyncPoint","syncPointTree_","removedAndEvents","removingDefault","covered","findOnPath","parentSyncPoint","newViews","syncTreeCollectDistinctViewsForSubTree_","newQuery","syncTreeCreateListenerForView_","startListening","syncTreeQueryForListening_","syncTreeTagForQuery_","defaultTag","stopListening","queryToRemove","tagToRemove","queryToTagMap","syncTreeMakeQueryKey_","syncTreeRemoveTags_","syncTreeApplyTaggedQueryOverwrite","syncTreeApplyTaggedQueryMerge","syncTreeAddEventRegistration","foundAncestorDefaultView","foreachOnPath","pathToSyncPoint","sp","foreachChild","childSyncPoint","viewAlreadyExists","syncTreeGetNextQueryTag_","tagToQueryMap","syncTreeSetupListener_","syncTreeCalcCompleteEventCache","includeHiddenSets","syncTreeGetServerValue","serverCacheNode","syncTreeApplyOperationHelper_","syncPointTree","syncTreeApplyOperationDescendantsHelper_","childOperation","operationForChild","childServerCache","childWritesCache","splitIndex","fold","maybeChildSyncPoint","childMap","completeView","_key","childViews","removedQuery","removedQueryKey","removedQueryTag","queriesToStop","childQueries","queryToStop","ExistingValueProvider","DeferredValueProvider","syncTree_","path_","generateWithValues","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","unused","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","childrenNode","Tree","parent","childCount","treeSubTree","pathObj","treeGetValue","treeSetValue","treeUpdateParents","treeHasChildren","treeIsEmpty","treeForEachChild","treeForEachDescendant","includeSelf","childrenFirst","treeForEachAncestor","treeGetPath","treeUpdateChild","childEmpty","childExists","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","validateFirebaseDataArg","fnName","validateFirebaseData","errorPrefixFxn","errorPrefix","hasDotValue","hasActualChild","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateKey","argumentName","validatePathString","validateRootPathString","validateWritablePath","validateUrl","parsedUrl","EventQueue","eventQueueQueueEvents","eventQueue","eventDataList","currList","getPath","eventLists_","eventQueueRaiseEventsAtPath","eventQueueRaiseQueuedEventsMatchingPredicate","eventPath","eventQueueRaiseEventsForChangedPath","changedPath","recursionDepth_","sentAll","eventList","eventListRaise","eventFn","getEventRunner","INTERRUPT_REASON","MAX_TRANSACTION_RETRIES","Repo","forceRestClient_","appCheckProvider_","repoStart","repo","appId","authOverride","isMerge","repoOnDataUpdate","repoOnConnectStatus","persistentConnection_","connectStatus","repoOnServerInfoUpdate","addTokenChangeListener","refreshAuthToken","refreshAppCheckToken","statsReporter_","infoData_","infoSyncTree_","infoEvents","repoUpdateInfo","serverSyncTree_","eventQueue_","unlisten","repoServerTime","offsetNode","offset","repoGenerateServerValues","dataUpdateCount","interceptServerDataCallback_","taggedChildren","raw","taggedSnap","repoRerunTransactions","repoRunOnDisconnectEvents","updateSnapshot","repoGetNextWriteId","nextWriteId_","repoGetValue","cached","repoLog","err","repoSetWithPriority","newVal","newNodeUnresolved","success","clearEvents","repoCallOnCompleteCallback","repoAbortTransactions","repoUpdate","childrenToMerge","changedKey","changedValue","resolvedOnDisconnectTree","resolved","repoOnDisconnectCancel","onDisconnectCancel","repoOnDisconnectSet","onDisconnectPut","repoOnDisconnectSetWithPriority","repoOnDisconnectUpdate","onDisconnectMerge","repoAddEventCallbackForQuery","repoRemoveEventCallbackForQuery","repoInterrupt","repoResume","resume","repoStartTransaction","transactionUpdate","unwatcher","applyLocally","transaction","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","repoGetLatestState","queueNode","transactionQueueTree_","nodeQueue","priorityForNode","currentNode","repoSendReadyTransactions","excludeSets","repoPruneCompletedTransactionsBelowNode","queue","repoBuildTransactionQueue","allRun","every","repoSendTransactionQueue","setsToIgnore","txn","latestState","snapToSend","latestHash","dataToSend","pathToSend","callbacks","rootMostTransactionNode","repoGetAncestorTransactionNode","repoRerunTransactionQueue","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","transactionNode","transactionQueue","repoAggregateTransactionQueuesForNode","to","repoAbortTransactionsOnNode","lastSent","decodePath","pathStringDecoded","piece","decodeURIComponent","decodeQuery","queryString","results","segment","kv","parseRepoInfo","dataURL","parseDatabaseURL","scheme","subdomain","port","colonInd","slashInd","questionMarkInd","hostWithoutPort","dotInd","DataEvent","snapshot","ref","exportVal","CancelEvent","CallbackContext","snapshotCallback","cancelCallback","expDataSnapshot","previousChildName","call","hasCancelCallback","userCallback","OnDisconnect","wrapCallback","QueryImpl","_orderByCalled","ReferenceImpl","getModularInstance","sameRepo","samePath","sameQueryIdentifier","validateNoPreviousOrderByCall","validateQueryEndpoints","startNode","endNode","tooManyArgsError","wrongArgTypeError","validateLimit","hasAnchoredLimit","parentPath","DataSnapshot","_node","_index","childRef","db","_checkNotDeleted","_root","refFromURL","parsedURL","thennablePushRef","pushRef","setPriority","setWithPriority","ValueEventRegistration","callbackContext","getEventType","onCancel","onValue","ChildEventRegistration","eventToCheck","cancelCallbackOrListenOptions","onlyOnce","onceCallback","dataSnapshot","container","onChildAdded","onChildChanged","onChildMoved","onChildRemoved","off","expCallback","QueryConstraint","QueryEndAtConstraint","_value","endAt","QueryEndBeforeConstraint","endBefore","QueryStartAtConstraint","startAt","QueryStartAfterConstraint","startAfter","QueryLimitToFirstConstraint","_limit","limitToFirst","limit","QueryLimitToLastConstraint","limitToLast","QueryOrderByChildConstraint","parsedPath","orderByChild","QueryOrderByKeyConstraint","orderByKey","QueryOrderByPriorityConstraint","orderByPriority","QueryOrderByValueConstraint","orderByValue","QueryEqualToValueConstraint","_apply","equalTo","queryImpl","queryConstraints","constraint","FIREBASE_DATABASE_EMULATOR_HOST_VAR","repos","useRestClient","repoManagerApplyEmulatorSettings","tokenProvider","repoManagerDatabaseFromApp","app","authProvider","dbUrl","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","OWNER","repoManagerCreateRepo","Database","repoManagerDeleteRepo","appName","appRepos","repoManagerForceRestClient","forceRestClient","_repoInternal","_instanceStarted","_rootInternal","apiName","getDatabase","getApp","_getProvider","identifier","connectDatabaseEmulator","mockUserToken","createMockUserToken","goOffline","goOnline","enableLoggingImpl","registerDatabase","variant","_registerComponent","Component","instanceIdentifier","getProvider","setMultipleInstances","registerVersion","SERVER_TIMESTAMP","serverTimestamp","increment","TransactionResult","committed","toJSON","runTransaction","promiseComplete","prototype","simpleListen","echo","onEcho","hijackHash","newHash","oldPut"],"sources":["../src/core/version.ts","../src/core/storage/DOMStorageWrapper.ts","../src/core/storage/MemoryStorage.ts","../src/core/storage/storage.ts","../src/core/util/util.ts","../src/core/AppCheckTokenProvider.ts","../src/core/AuthTokenProvider.ts","../src/realtime/Constants.ts","../src/core/RepoInfo.ts","../src/core/stats/StatsCollection.ts","../src/core/stats/StatsManager.ts","../src/realtime/polling/PacketReceiver.ts","../src/realtime/BrowserPollConnection.ts","../src/realtime/WebSocketConnection.ts","../src/realtime/TransportManager.ts","../src/realtime/Connection.ts","../src/core/ServerActions.ts","../src/core/util/EventEmitter.ts","../src/core/util/OnlineMonitor.ts","../src/core/util/Path.ts","../src/core/util/VisibilityMonitor.ts","../src/core/PersistentConnection.ts","../src/core/snap/Node.ts","../src/core/snap/indexes/Index.ts","../src/core/snap/indexes/KeyIndex.ts","../src/core/util/SortedMap.ts","../src/core/snap/comparators.ts","../src/core/snap/snap.ts","../src/core/snap/LeafNode.ts","../src/core/snap/indexes/PriorityIndex.ts","../src/core/snap/childSet.ts","../src/core/snap/IndexMap.ts","../src/core/snap/ChildrenNode.ts","../src/core/snap/nodeFromJSON.ts","../src/core/snap/indexes/PathIndex.ts","../src/core/snap/indexes/ValueIndex.ts","../src/core/util/NextPushId.ts","../src/core/view/Change.ts","../src/core/view/filter/IndexedFilter.ts","../src/core/view/filter/RangedFilter.ts","../src/core/view/filter/LimitedFilter.ts","../src/core/view/QueryParams.ts","../src/core/ReadonlyRestClient.ts","../src/core/SnapshotHolder.ts","../src/core/SparseSnapshotTree.ts","../src/core/stats/StatsListener.ts","../src/core/stats/StatsReporter.ts","../src/core/operation/Operation.ts","../src/core/operation/AckUserWrite.ts","../src/core/operation/ListenComplete.ts","../src/core/operation/Overwrite.ts","../src/core/operation/Merge.ts","../src/core/view/CacheNode.ts","../src/core/view/EventGenerator.ts","../src/core/view/ViewCache.ts","../src/core/util/ImmutableTree.ts","../src/core/CompoundWrite.ts","../src/core/WriteTree.ts","../src/core/view/ChildChangeAccumulator.ts","../src/core/view/CompleteChildSource.ts","../src/core/view/ViewProcessor.ts","../src/core/view/View.ts","../src/core/SyncPoint.ts","../src/core/SyncTree.ts","../src/core/util/ServerValues.ts","../src/core/util/Tree.ts","../src/core/util/validation.ts","../src/core/view/EventQueue.ts","../src/core/Repo.ts","../src/core/util/libs/parser.ts","../src/core/view/Event.ts","../src/core/view/EventRegistration.ts","../src/api/OnDisconnect.ts","../src/api/Reference_impl.ts","../src/api/Database.ts","../src/register.ts","../src/api/ServerValue.ts","../src/api/Transaction.ts","../src/api/test_access.ts","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** The semver (www.semver.org) version of the SDK. */\nexport let SDK_VERSION = '';\n\n/**\n * SDK_VERSION should be set before any database instance is created\n * @internal\n */\nexport function setSDKVersion(version: string): void {\n  SDK_VERSION = version;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { jsonEval, stringify } from '@firebase/util';\n\n/**\n * Wraps a DOM Storage object and:\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\n *\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\n * and one for localStorage.\n *\n */\nexport class DOMStorageWrapper {\n  // Use a prefix to avoid collisions with other stuff saved by the app.\n  private prefix_ = 'firebase:';\n\n  /**\n   * @param domStorage_ - The underlying storage object (e.g. localStorage or sessionStorage)\n   */\n  constructor(private domStorage_: Storage) {}\n\n  /**\n   * @param key - The key to save the value under\n   * @param value - The value being stored, or null to remove the key.\n   */\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      this.domStorage_.removeItem(this.prefixedName_(key));\n    } else {\n      this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\n    }\n  }\n\n  /**\n   * @returns The value that was stored under this key, or null\n   */\n  get(key: string): unknown {\n    const storedVal = this.domStorage_.getItem(this.prefixedName_(key));\n    if (storedVal == null) {\n      return null;\n    } else {\n      return jsonEval(storedVal);\n    }\n  }\n\n  remove(key: string) {\n    this.domStorage_.removeItem(this.prefixedName_(key));\n  }\n\n  isInMemoryStorage: boolean;\n\n  prefixedName_(name: string): string {\n    return this.prefix_ + name;\n  }\n\n  toString(): string {\n    return this.domStorage_.toString();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\n/**\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\n * (TODO: create interface for both to implement).\n */\nexport class MemoryStorage {\n  private cache_: { [k: string]: unknown } = {};\n\n  set(key: string, value: unknown | null) {\n    if (value == null) {\n      delete this.cache_[key];\n    } else {\n      this.cache_[key] = value;\n    }\n  }\n\n  get(key: string): unknown {\n    if (contains(this.cache_, key)) {\n      return this.cache_[key];\n    }\n    return null;\n  }\n\n  remove(key: string) {\n    delete this.cache_[key];\n  }\n\n  isInMemoryStorage = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DOMStorageWrapper } from './DOMStorageWrapper';\nimport { MemoryStorage } from './MemoryStorage';\n\ndeclare const window: Window;\n\n/**\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\n * to reflect this type\n *\n * @param domStorageName - Name of the underlying storage object\n *   (e.g. 'localStorage' or 'sessionStorage').\n * @returns Turning off type information until a common interface is defined.\n */\nconst createStoragefor = function (\n  domStorageName: string\n): DOMStorageWrapper | MemoryStorage {\n  try {\n    // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\n    // so it must be inside the try/catch.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window[domStorageName] !== 'undefined'\n    ) {\n      // Need to test cache. Just because it's here doesn't mean it works\n      const domStorage = window[domStorageName];\n      domStorage.setItem('firebase:sentinel', 'cache');\n      domStorage.removeItem('firebase:sentinel');\n      return new DOMStorageWrapper(domStorage);\n    }\n  } catch (e) {}\n\n  // Failed to create wrapper.  Just return in-memory storage.\n  // TODO: log?\n  return new MemoryStorage();\n};\n\n/** A storage object that lasts across sessions */\nexport const PersistentStorage = createStoragefor('localStorage');\n\n/** A storage object that only lasts one session */\nexport const SessionStorage = createStoragefor('sessionStorage');\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Logger, LogLevel } from '@firebase/logger';\nimport {\n  assert,\n  base64,\n  Sha1,\n  stringToByteArray,\n  stringify,\n  isNodeSdk\n} from '@firebase/util';\n\nimport { SessionStorage } from '../storage/storage';\nimport { QueryContext } from '../view/EventRegistration';\n\ndeclare const window: Window;\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const Windows: any;\n\nconst logClient = new Logger('@firebase/database');\n\n/**\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\n */\nexport const LUIDGenerator: () => number = (function () {\n  let id = 1;\n  return function () {\n    return id++;\n  };\n})();\n\n/**\n * Sha1 hash of the input string\n * @param str - The string to hash\n * @returns {!string} The resulting hash\n */\nexport const sha1 = function (str: string): string {\n  const utf8Bytes = stringToByteArray(str);\n  const sha1 = new Sha1();\n  sha1.update(utf8Bytes);\n  const sha1Bytes = sha1.digest();\n  return base64.encodeByteArray(sha1Bytes);\n};\n\nconst buildLogMessage_ = function (...varArgs: unknown[]): string {\n  let message = '';\n  for (let i = 0; i < varArgs.length; i++) {\n    const arg = varArgs[i];\n    if (\n      Array.isArray(arg) ||\n      (arg &&\n        typeof arg === 'object' &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof (arg as any).length === 'number')\n    ) {\n      message += buildLogMessage_.apply(null, arg);\n    } else if (typeof arg === 'object') {\n      message += stringify(arg);\n    } else {\n      message += arg;\n    }\n    message += ' ';\n  }\n\n  return message;\n};\n\n/**\n * Use this for all debug messages in Firebase.\n */\nexport let logger: ((a: string) => void) | null = null;\n\n/**\n * Flag to check for log availability on first log message\n */\nlet firstLog_ = true;\n\n/**\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\n * @param logger_ - A flag to turn on logging, or a custom logger\n * @param persistent - Whether or not to persist logging settings across refreshes\n */\nexport const enableLogging = function (\n  logger_?: boolean | ((a: string) => void) | null,\n  persistent?: boolean\n) {\n  assert(\n    !persistent || logger_ === true || logger_ === false,\n    \"Can't turn on custom loggers persistently.\"\n  );\n  if (logger_ === true) {\n    logClient.logLevel = LogLevel.VERBOSE;\n    logger = logClient.log.bind(logClient);\n    if (persistent) {\n      SessionStorage.set('logging_enabled', true);\n    }\n  } else if (typeof logger_ === 'function') {\n    logger = logger_;\n  } else {\n    logger = null;\n    SessionStorage.remove('logging_enabled');\n  }\n};\n\nexport const log = function (...varArgs: unknown[]) {\n  if (firstLog_ === true) {\n    firstLog_ = false;\n    if (logger === null && SessionStorage.get('logging_enabled') === true) {\n      enableLogging(true);\n    }\n  }\n\n  if (logger) {\n    const message = buildLogMessage_.apply(null, varArgs);\n    logger(message);\n  }\n};\n\nexport const logWrapper = function (\n  prefix: string\n): (...varArgs: unknown[]) => void {\n  return function (...varArgs: unknown[]) {\n    log(prefix, ...varArgs);\n  };\n};\n\nexport const error = function (...varArgs: string[]) {\n  const message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_(...varArgs);\n  logClient.error(message);\n};\n\nexport const fatal = function (...varArgs: string[]) {\n  const message = `FIREBASE FATAL ERROR: ${buildLogMessage_(...varArgs)}`;\n  logClient.error(message);\n  throw new Error(message);\n};\n\nexport const warn = function (...varArgs: unknown[]) {\n  const message = 'FIREBASE WARNING: ' + buildLogMessage_(...varArgs);\n  logClient.warn(message);\n};\n\n/**\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\n * does not use https.\n */\nexport const warnIfPageIsSecure = function () {\n  // Be very careful accessing browser globals. Who knows what may or may not exist.\n  if (\n    typeof window !== 'undefined' &&\n    window.location &&\n    window.location.protocol &&\n    window.location.protocol.indexOf('https:') !== -1\n  ) {\n    warn(\n      'Insecure Firebase access from a secure page. ' +\n        'Please use https in calls to new Firebase().'\n    );\n  }\n};\n\nexport const warnAboutUnsupportedMethod = function (methodName: string) {\n  warn(\n    methodName +\n      ' is unsupported and will likely change soon.  ' +\n      'Please do not use.'\n  );\n};\n\n/**\n * Returns true if data is NaN, or +/- Infinity.\n */\nexport const isInvalidJSONNumber = function (data: unknown): boolean {\n  return (\n    typeof data === 'number' &&\n    (data !== data || // NaN\n      data === Number.POSITIVE_INFINITY ||\n      data === Number.NEGATIVE_INFINITY)\n  );\n};\n\nexport const executeWhenDOMReady = function (fn: () => void) {\n  if (isNodeSdk() || document.readyState === 'complete') {\n    fn();\n  } else {\n    // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\n    // fire before onload), but fall back to onload.\n\n    let called = false;\n    const wrappedFn = function () {\n      if (!document.body) {\n        setTimeout(wrappedFn, Math.floor(10));\n        return;\n      }\n\n      if (!called) {\n        called = true;\n        fn();\n      }\n    };\n\n    if (document.addEventListener) {\n      document.addEventListener('DOMContentLoaded', wrappedFn, false);\n      // fallback to onload.\n      window.addEventListener('load', wrappedFn, false);\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((document as any).attachEvent) {\n      // IE.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (document as any).attachEvent('onreadystatechange', () => {\n        if (document.readyState === 'complete') {\n          wrappedFn();\n        }\n      });\n      // fallback to onload.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (window as any).attachEvent('onload', wrappedFn);\n\n      // jQuery has an extra hack for IE that we could employ (based on\n      // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\n      // I'm hoping we don't need it.\n    }\n  }\n};\n\n/**\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\n */\nexport const MIN_NAME = '[MIN_NAME]';\n\n/**\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\n */\nexport const MAX_NAME = '[MAX_NAME]';\n\n/**\n * Compares valid Firebase key names, plus min and max name\n */\nexport const nameCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a === MIN_NAME || b === MAX_NAME) {\n    return -1;\n  } else if (b === MIN_NAME || a === MAX_NAME) {\n    return 1;\n  } else {\n    const aAsInt = tryParseInt(a),\n      bAsInt = tryParseInt(b);\n\n    if (aAsInt !== null) {\n      if (bAsInt !== null) {\n        return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\n      } else {\n        return -1;\n      }\n    } else if (bAsInt !== null) {\n      return 1;\n    } else {\n      return a < b ? -1 : 1;\n    }\n  }\n};\n\n/**\n * @returns {!number} comparison result.\n */\nexport const stringCompare = function (a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  } else if (a < b) {\n    return -1;\n  } else {\n    return 1;\n  }\n};\n\nexport const requireKey = function (\n  key: string,\n  obj: { [k: string]: unknown }\n): unknown {\n  if (obj && key in obj) {\n    return obj[key];\n  } else {\n    throw new Error(\n      'Missing required key (' + key + ') in object: ' + stringify(obj)\n    );\n  }\n};\n\nexport const ObjectToUniqueKey = function (obj: unknown): string {\n  if (typeof obj !== 'object' || obj === null) {\n    return stringify(obj);\n  }\n\n  const keys = [];\n  // eslint-disable-next-line guard-for-in\n  for (const k in obj) {\n    keys.push(k);\n  }\n\n  // Export as json, but with the keys sorted.\n  keys.sort();\n  let key = '{';\n  for (let i = 0; i < keys.length; i++) {\n    if (i !== 0) {\n      key += ',';\n    }\n    key += stringify(keys[i]);\n    key += ':';\n    key += ObjectToUniqueKey(obj[keys[i]]);\n  }\n\n  key += '}';\n  return key;\n};\n\n/**\n * Splits a string into a number of smaller segments of maximum size\n * @param str - The string\n * @param segsize - The maximum number of chars in the string.\n * @returns The string, split into appropriately-sized chunks\n */\nexport const splitStringBySize = function (\n  str: string,\n  segsize: number\n): string[] {\n  const len = str.length;\n\n  if (len <= segsize) {\n    return [str];\n  }\n\n  const dataSegs = [];\n  for (let c = 0; c < len; c += segsize) {\n    if (c + segsize > len) {\n      dataSegs.push(str.substring(c, len));\n    } else {\n      dataSegs.push(str.substring(c, c + segsize));\n    }\n  }\n  return dataSegs;\n};\n\n/**\n * Apply a function to each (key, value) pair in an object or\n * apply a function to each (index, value) pair in an array\n * @param obj - The object or array to iterate over\n * @param fn - The function to apply\n */\nexport function each(obj: object, fn: (k: string, v: unknown) => void) {\n  for (const key in obj) {\n    if (obj.hasOwnProperty(key)) {\n      fn(key, obj[key]);\n    }\n  }\n}\n\n/**\n * Like goog.bind, but doesn't bother to create a closure if opt_context is null/undefined.\n * @param callback - Callback function.\n * @param context - Optional context to bind to.\n *\n */\nexport const bindCallback = function (\n  callback: (a: unknown) => void,\n  context?: object | null\n): (a: unknown) => void {\n  return context ? callback.bind(context) : callback;\n};\n\n/**\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\n * I made one modification at the end and removed the NaN / Infinity\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\n * @param v - A double\n *\n */\nexport const doubleToIEEE754String = function (v: number): string {\n  assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\n\n  const ebits = 11,\n    fbits = 52;\n  const bias = (1 << (ebits - 1)) - 1;\n  let s, e, f, ln, i;\n\n  // Compute sign, exponent, fraction\n  // Skip NaN / Infinity handling --MJL.\n  if (v === 0) {\n    e = 0;\n    f = 0;\n    s = 1 / v === -Infinity ? 1 : 0;\n  } else {\n    s = v < 0;\n    v = Math.abs(v);\n\n    if (v >= Math.pow(2, 1 - bias)) {\n      // Normalized\n      ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\n      e = ln + bias;\n      f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\n    } else {\n      // Denormalized\n      e = 0;\n      f = Math.round(v / Math.pow(2, 1 - bias - fbits));\n    }\n  }\n\n  // Pack sign, exponent, fraction\n  const bits = [];\n  for (i = fbits; i; i -= 1) {\n    bits.push(f % 2 ? 1 : 0);\n    f = Math.floor(f / 2);\n  }\n  for (i = ebits; i; i -= 1) {\n    bits.push(e % 2 ? 1 : 0);\n    e = Math.floor(e / 2);\n  }\n  bits.push(s ? 1 : 0);\n  bits.reverse();\n  const str = bits.join('');\n\n  // Return the data as a hex string. --MJL\n  let hexByteString = '';\n  for (i = 0; i < 64; i += 8) {\n    let hexByte = parseInt(str.substr(i, 8), 2).toString(16);\n    if (hexByte.length === 1) {\n      hexByte = '0' + hexByte;\n    }\n    hexByteString = hexByteString + hexByte;\n  }\n  return hexByteString.toLowerCase();\n};\n\n/**\n * Used to detect if we're in a Chrome content script (which executes in an\n * isolated environment where long-polling doesn't work).\n */\nexport const isChromeExtensionContentScript = function (): boolean {\n  return !!(\n    typeof window === 'object' &&\n    window['chrome'] &&\n    window['chrome']['extension'] &&\n    !/^chrome/.test(window.location.href)\n  );\n};\n\n/**\n * Used to detect if we're in a Windows 8 Store app.\n */\nexport const isWindowsStoreApp = function (): boolean {\n  // Check for the presence of a couple WinRT globals\n  return typeof Windows === 'object' && typeof Windows.UI === 'object';\n};\n\n/**\n * Converts a server error code to a Javascript Error\n */\nexport function errorForServerCode(code: string, query: QueryContext): Error {\n  let reason = 'Unknown Error';\n  if (code === 'too_big') {\n    reason =\n      'The data requested exceeds the maximum size ' +\n      'that can be accessed with a single request.';\n  } else if (code === 'permission_denied') {\n    reason = \"Client doesn't have permission to access the desired data.\";\n  } else if (code === 'unavailable') {\n    reason = 'The service is unavailable';\n  }\n\n  const error = new Error(\n    code + ' at ' + query._path.toString() + ': ' + reason\n  );\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (error as any).code = code.toUpperCase();\n  return error;\n}\n\n/**\n * Used to test for integer-looking strings\n */\nexport const INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\n\n/**\n * For use in keys, the minimum possible 32-bit integer.\n */\nexport const INTEGER_32_MIN = -2147483648;\n\n/**\n * For use in kyes, the maximum possible 32-bit integer.\n */\nexport const INTEGER_32_MAX = 2147483647;\n\n/**\n * If the string contains a 32-bit integer, return it.  Else return null.\n */\nexport const tryParseInt = function (str: string): number | null {\n  if (INTEGER_REGEXP_.test(str)) {\n    const intVal = Number(str);\n    if (intVal >= INTEGER_32_MIN && intVal <= INTEGER_32_MAX) {\n      return intVal;\n    }\n  }\n  return null;\n};\n\n/**\n * Helper to run some code but catch any exceptions and re-throw them later.\n * Useful for preventing user callbacks from breaking internal code.\n *\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\n * convenient (we don't have to try to figure out when is a safe point to\n * re-throw it), and the behavior seems reasonable:\n *\n * * If you aren't pausing on exceptions, you get an error in the console with\n *   the correct stack trace.\n * * If you're pausing on all exceptions, the debugger will pause on your\n *   exception and then again when we rethrow it.\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\n *   on us re-throwing it.\n *\n * @param fn - The code to guard.\n */\nexport const exceptionGuard = function (fn: () => void) {\n  try {\n    fn();\n  } catch (e) {\n    // Re-throw exception when it's safe.\n    setTimeout(() => {\n      // It used to be that \"throw e\" would result in a good console error with\n      // relevant context, but as of Chrome 39, you just get the firebase.js\n      // file/line number where we re-throw it, which is useless. So we log\n      // e.stack explicitly.\n      const stack = e.stack || '';\n      warn('Exception was thrown by user callback.', stack);\n      throw e;\n    }, Math.floor(0));\n  }\n};\n\n/**\n * Helper function to safely call opt_callback with the specified arguments.  It:\n * 1. Turns into a no-op if opt_callback is null or undefined.\n * 2. Wraps the call inside exceptionGuard to prevent exceptions from breaking our state.\n *\n * @param callback - Optional onComplete callback.\n * @param varArgs - Arbitrary args to be passed to opt_onComplete\n */\nexport const callUserCallback = function (\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  callback?: Function | null,\n  ...varArgs: unknown[]\n) {\n  if (typeof callback === 'function') {\n    exceptionGuard(() => {\n      callback(...varArgs);\n    });\n  }\n};\n\n/**\n * @returns {boolean} true if we think we're currently being crawled.\n */\nexport const beingCrawled = function (): boolean {\n  const userAgent =\n    (typeof window === 'object' &&\n      window['navigator'] &&\n      window['navigator']['userAgent']) ||\n    '';\n\n  // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\n  // believe to support JavaScript/AJAX rendering.\n  // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\n  // would have seen the page\" is flaky if we don't treat it as a crawler.\n  return (\n    userAgent.search(\n      /googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i\n    ) >= 0\n  );\n};\n\n/**\n * Export a property of an object using a getter function.\n */\nexport const exportPropGetter = function (\n  object: object,\n  name: string,\n  fnGet: () => unknown\n) {\n  Object.defineProperty(object, name, { get: fnGet });\n};\n\n/**\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\n *\n * It is removed with clearTimeout() as normal.\n *\n * @param fn - Function to run.\n * @param time - Milliseconds to wait before running.\n * @returns The setTimeout() return value.\n */\nexport const setTimeoutNonBlocking = function (\n  fn: () => void,\n  time: number\n): number | object {\n  const timeout: number | object = setTimeout(fn, time);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  if (typeof timeout === 'object' && (timeout as any)['unref']) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (timeout as any)['unref']();\n  }\n  return timeout;\n};\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AppCheckInternalComponentName,\n  AppCheckTokenListener,\n  AppCheckTokenResult,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { warn } from './util/util';\n\n/**\n * Abstraction around AppCheck's token fetching capabilities.\n */\nexport class AppCheckTokenProvider {\n  private appCheck?: FirebaseAppCheckInternal;\n  constructor(\n    private appName_: string,\n    private appCheckProvider?: Provider<AppCheckInternalComponentName>\n  ) {\n    this.appCheck = appCheckProvider?.getImmediate({ optional: true });\n    if (!this.appCheck) {\n      appCheckProvider?.get().then(appCheck => (this.appCheck = appCheck));\n    }\n  }\n\n  getToken(forceRefresh?: boolean): Promise<AppCheckTokenResult> {\n    if (!this.appCheck) {\n      return new Promise<AppCheckTokenResult>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAppCheck. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // AppCheck and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.appCheck) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n    return this.appCheck.getToken(forceRefresh);\n  }\n\n  addTokenChangeListener(listener: AppCheckTokenListener) {\n    this.appCheckProvider\n      ?.get()\n      .then(appCheck => appCheck.addTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    warn(\n      `Provided AppCheck credentials for the app named \"${this.appName_}\" ` +\n        'are invalid. This usually indicates your app was not initialized correctly.'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseAuthTokenData } from '@firebase/app-types/private';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\n\nimport { log, warn } from './util/util';\n\nexport interface AuthTokenProvider {\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData>;\n  addTokenChangeListener(listener: (token: string | null) => void): void;\n  removeTokenChangeListener(listener: (token: string | null) => void): void;\n  notifyForInvalidToken(): void;\n}\n\n/**\n * Abstraction around FirebaseApp's token fetching capabilities.\n */\nexport class FirebaseAuthTokenProvider implements AuthTokenProvider {\n  private auth_: FirebaseAuthInternal | null = null;\n\n  constructor(\n    private appName_: string,\n    private firebaseOptions_: object,\n    private authProvider_: Provider<FirebaseAuthInternalName>\n  ) {\n    this.auth_ = authProvider_.getImmediate({ optional: true });\n    if (!this.auth_) {\n      authProvider_.onInit(auth => (this.auth_ = auth));\n    }\n  }\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    if (!this.auth_) {\n      return new Promise<FirebaseAuthTokenData>((resolve, reject) => {\n        // Support delayed initialization of FirebaseAuth. This allows our\n        // customers to initialize the RTDB SDK before initializing Firebase\n        // Auth and ensures that all requests are authenticated if a token\n        // becomes available before the timoeout below expires.\n        setTimeout(() => {\n          if (this.auth_) {\n            this.getToken(forceRefresh).then(resolve, reject);\n          } else {\n            resolve(null);\n          }\n        }, 0);\n      });\n    }\n\n    return this.auth_.getToken(forceRefresh).catch(error => {\n      // TODO: Need to figure out all the cases this is raised and whether\n      // this makes sense.\n      if (error && error.code === 'auth/token-not-initialized') {\n        log('Got auth/token-not-initialized error.  Treating as null token.');\n        return null;\n      } else {\n        return Promise.reject(error);\n      }\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // TODO: We might want to wrap the listener and call it with no args to\n    // avoid a leaky abstraction, but that makes removing the listener harder.\n    if (this.auth_) {\n      this.auth_.addAuthTokenListener(listener);\n    } else {\n      this.authProvider_\n        .get()\n        .then(auth => auth.addAuthTokenListener(listener));\n    }\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {\n    this.authProvider_\n      .get()\n      .then(auth => auth.removeAuthTokenListener(listener));\n  }\n\n  notifyForInvalidToken(): void {\n    let errorMessage =\n      'Provided authentication credentials for the app named \"' +\n      this.appName_ +\n      '\" are invalid. This usually indicates your app was not ' +\n      'initialized correctly. ';\n    if ('credential' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"credential\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else if ('serviceAccount' in this.firebaseOptions_) {\n      errorMessage +=\n        'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\n        'is authorized to access the specified \"databaseURL\" and is from the correct ' +\n        'project.';\n    } else {\n      errorMessage +=\n        'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\n        'initializeApp() match the values provided for your app at ' +\n        'https://console.firebase.google.com/.';\n    }\n    warn(errorMessage);\n  }\n}\n\n/* AuthTokenProvider that supplies a constant token. Used by Admin SDK or mockUserToken with emulators. */\nexport class EmulatorTokenProvider implements AuthTokenProvider {\n  /** A string that is treated as an admin access token by the RTDB emulator. Used by Admin SDK. */\n  static OWNER = 'owner';\n\n  constructor(private accessToken: string) {}\n\n  getToken(forceRefresh: boolean): Promise<FirebaseAuthTokenData> {\n    return Promise.resolve({\n      accessToken: this.accessToken\n    });\n  }\n\n  addTokenChangeListener(listener: (token: string | null) => void): void {\n    // Invoke the listener immediately to match the behavior in Firebase Auth\n    // (see packages/auth/src/auth.js#L1807)\n    listener(this.accessToken);\n  }\n\n  removeTokenChangeListener(listener: (token: string | null) => void): void {}\n\n  notifyForInvalidToken(): void {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const PROTOCOL_VERSION = '5';\n\nexport const VERSION_PARAM = 'v';\n\nexport const TRANSPORT_SESSION_PARAM = 's';\n\nexport const REFERER_PARAM = 'r';\n\nexport const FORGE_REF = 'f';\n\n// Matches console.firebase.google.com, firebase-console-*.corp.google.com and\n// firebase.corp.google.com\nexport const FORGE_DOMAIN_RE =\n  /(console\\.firebase|firebase-console-\\w+\\.corp|firebase\\.corp)\\.google\\.com/;\n\nexport const LAST_SESSION_PARAM = 'ls';\n\nexport const APPLICATION_ID_PARAM = 'p';\n\nexport const APP_CHECK_TOKEN_PARAM = 'ac';\n\nexport const WEBSOCKET = 'websocket';\n\nexport const LONG_POLLING = 'long_polling';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { LONG_POLLING, WEBSOCKET } from '../realtime/Constants';\n\nimport { PersistentStorage } from './storage/storage';\nimport { each } from './util/util';\n\n/**\n * A class that holds metadata about a Repo object\n */\nexport class RepoInfo {\n  private _host: string;\n  private _domain: string;\n  internalHost: string;\n\n  /**\n   * @param host - Hostname portion of the url for the repo\n   * @param secure - Whether or not this repo is accessed over ssl\n   * @param namespace - The namespace represented by the repo\n   * @param webSocketOnly - Whether to prefer websockets over all other transports (used by Nest).\n   * @param nodeAdmin - Whether this instance uses Admin SDK credentials\n   * @param persistenceKey - Override the default session persistence storage key\n   */\n  constructor(\n    host: string,\n    public readonly secure: boolean,\n    public readonly namespace: string,\n    public readonly webSocketOnly: boolean,\n    public readonly nodeAdmin: boolean = false,\n    public readonly persistenceKey: string = '',\n    public readonly includeNamespaceInQueryParams: boolean = false\n  ) {\n    this._host = host.toLowerCase();\n    this._domain = this._host.substr(this._host.indexOf('.') + 1);\n    this.internalHost =\n      (PersistentStorage.get('host:' + host) as string) || this._host;\n  }\n\n  isCacheableHost(): boolean {\n    return this.internalHost.substr(0, 2) === 's-';\n  }\n\n  isCustomHost() {\n    return (\n      this._domain !== 'firebaseio.com' &&\n      this._domain !== 'firebaseio-demo.com'\n    );\n  }\n\n  get host() {\n    return this._host;\n  }\n\n  set host(newHost: string) {\n    if (newHost !== this.internalHost) {\n      this.internalHost = newHost;\n      if (this.isCacheableHost()) {\n        PersistentStorage.set('host:' + this._host, this.internalHost);\n      }\n    }\n  }\n\n  toString(): string {\n    let str = this.toURLString();\n    if (this.persistenceKey) {\n      str += '<' + this.persistenceKey + '>';\n    }\n    return str;\n  }\n\n  toURLString(): string {\n    const protocol = this.secure ? 'https://' : 'http://';\n    const query = this.includeNamespaceInQueryParams\n      ? `?ns=${this.namespace}`\n      : '';\n    return `${protocol}${this.host}/${query}`;\n  }\n}\n\nfunction repoInfoNeedsQueryParam(repoInfo: RepoInfo): boolean {\n  return (\n    repoInfo.host !== repoInfo.internalHost ||\n    repoInfo.isCustomHost() ||\n    repoInfo.includeNamespaceInQueryParams\n  );\n}\n\n/**\n * Returns the websocket URL for this repo\n * @param repoInfo - RepoInfo object\n * @param type - of connection\n * @param params - list\n * @returns The URL for this repo\n */\nexport function repoInfoConnectionURL(\n  repoInfo: RepoInfo,\n  type: string,\n  params: { [k: string]: string }\n): string {\n  assert(typeof type === 'string', 'typeof type must == string');\n  assert(typeof params === 'object', 'typeof params must == object');\n\n  let connURL: string;\n  if (type === WEBSOCKET) {\n    connURL =\n      (repoInfo.secure ? 'wss://' : 'ws://') + repoInfo.internalHost + '/.ws?';\n  } else if (type === LONG_POLLING) {\n    connURL =\n      (repoInfo.secure ? 'https://' : 'http://') +\n      repoInfo.internalHost +\n      '/.lp?';\n  } else {\n    throw new Error('Unknown connection type: ' + type);\n  }\n  if (repoInfoNeedsQueryParam(repoInfo)) {\n    params['ns'] = repoInfo.namespace;\n  }\n\n  const pairs: string[] = [];\n\n  each(params, (key: string, value: string) => {\n    pairs.push(key + '=' + value);\n  });\n\n  return connURL + pairs.join('&');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deepCopy, contains } from '@firebase/util';\n\n/**\n * Tracks a collection of stats.\n */\nexport class StatsCollection {\n  private counters_: { [k: string]: number } = {};\n\n  incrementCounter(name: string, amount: number = 1) {\n    if (!contains(this.counters_, name)) {\n      this.counters_[name] = 0;\n    }\n\n    this.counters_[name] += amount;\n  }\n\n  get() {\n    return deepCopy(this.counters_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport { StatsCollection } from './StatsCollection';\n\nconst collections: { [k: string]: StatsCollection } = {};\nconst reporters: { [k: string]: unknown } = {};\n\nexport function statsManagerGetCollection(repoInfo: RepoInfo): StatsCollection {\n  const hashString = repoInfo.toString();\n\n  if (!collections[hashString]) {\n    collections[hashString] = new StatsCollection();\n  }\n\n  return collections[hashString];\n}\n\nexport function statsManagerGetOrCreateReporter<T>(\n  repoInfo: RepoInfo,\n  creatorFunction: () => T\n): T {\n  const hashString = repoInfo.toString();\n\n  if (!reporters[hashString]) {\n    reporters[hashString] = creatorFunction();\n  }\n\n  return reporters[hashString] as T;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { exceptionGuard } from '../../core/util/util';\n\n/**\n * This class ensures the packets from the server arrive in order\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\n */\nexport class PacketReceiver {\n  pendingResponses: unknown[] = [];\n  currentResponseNum = 0;\n  closeAfterResponse = -1;\n  onClose: (() => void) | null = null;\n\n  /**\n   * @param onMessage_\n   */\n  constructor(private onMessage_: (a: {}) => void) {}\n\n  closeAfter(responseNum: number, callback: () => void) {\n    this.closeAfterResponse = responseNum;\n    this.onClose = callback;\n    if (this.closeAfterResponse < this.currentResponseNum) {\n      this.onClose();\n      this.onClose = null;\n    }\n  }\n\n  /**\n   * Each message from the server comes with a response number, and an array of data. The responseNumber\n   * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\n   * browsers will respond in the same order as the requests we sent\n   */\n  handleResponse(requestNum: number, data: unknown[]) {\n    this.pendingResponses[requestNum] = data;\n    while (this.pendingResponses[this.currentResponseNum]) {\n      const toProcess = this.pendingResponses[\n        this.currentResponseNum\n      ] as unknown[];\n      delete this.pendingResponses[this.currentResponseNum];\n      for (let i = 0; i < toProcess.length; ++i) {\n        if (toProcess[i]) {\n          exceptionGuard(() => {\n            this.onMessage_(toProcess[i]);\n          });\n        }\n      }\n      if (this.currentResponseNum === this.closeAfterResponse) {\n        if (this.onClose) {\n          this.onClose();\n          this.onClose = null;\n        }\n        break;\n      }\n      this.currentResponseNum++;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { base64Encode, isNodeSdk, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport {\n  executeWhenDOMReady,\n  isChromeExtensionContentScript,\n  isWindowsStoreApp,\n  log,\n  logWrapper,\n  LUIDGenerator,\n  splitStringBySize\n} from '../core/util/util';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  APPLICATION_ID_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  LONG_POLLING,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM\n} from './Constants';\nimport { PacketReceiver } from './polling/PacketReceiver';\nimport { Transport } from './Transport';\n\n// URL query parameters associated with longpolling\nexport const FIREBASE_LONGPOLL_START_PARAM = 'start';\nexport const FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\nexport const FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\nexport const FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\nexport const FIREBASE_LONGPOLL_ID_PARAM = 'id';\nexport const FIREBASE_LONGPOLL_PW_PARAM = 'pw';\nexport const FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\nexport const FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\nexport const FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\nexport const FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\nexport const FIREBASE_LONGPOLL_DATA_PARAM = 'd';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_PARAM = 'disconn';\nexport const FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\n\n//Data size constants.\n//TODO: Perf: the maximum length actually differs from browser to browser.\n// We should check what browser we're on and set accordingly.\nconst MAX_URL_DATA_SIZE = 1870;\nconst SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\nconst MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\n\n/**\n * Keepalive period\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\n * length of 30 seconds that we can't exceed.\n */\nconst KEEPALIVE_REQUEST_INTERVAL = 25000;\n\n/**\n * How long to wait before aborting a long-polling connection attempt.\n */\nconst LP_CONNECT_TIMEOUT = 30000;\n\n/**\n * This class manages a single long-polling connection.\n */\nexport class BrowserPollConnection implements Transport {\n  bytesSent = 0;\n  bytesReceived = 0;\n  urlFn: (params: object) => string;\n  scriptTagHolder: FirebaseIFrameScriptHolder;\n  myDisconnFrame: HTMLIFrameElement;\n  curSegmentNum: number;\n  myPacketOrderer: PacketReceiver;\n  id: string;\n  password: string;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_ = false;\n  private isClosed_: boolean;\n  private connectTimeoutTimer_: number | null;\n  private onDisconnect_: ((a?: boolean) => void) | null;\n\n  /**\n   * @param connId An identifier for this connection, used for logging\n   * @param repoInfo The info for the endpoint to send data to.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The AppCheck token for this client.\n   * @param authToken The AuthToken to use for this connection.\n   * @param transportSessionId Optional transportSessionid if we are\n   * reconnecting for an existing transport session\n   * @param lastSessionId Optional lastSessionId if the PersistentConnection has\n   * already created a connection previously\n   */\n  constructor(\n    public connId: string,\n    public repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    public transportSessionId?: string,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.urlFn = (params: { [k: string]: string }) => {\n      // Always add the token if we have one.\n      if (this.appCheckToken) {\n        params[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      return repoInfoConnectionURL(repoInfo, LONG_POLLING, params);\n    };\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.curSegmentNum = 0;\n    this.onDisconnect_ = onDisconnect;\n    this.myPacketOrderer = new PacketReceiver(onMessage);\n    this.isClosed_ = false;\n\n    this.connectTimeoutTimer_ = setTimeout(() => {\n      this.log_('Timed out trying to connect.');\n      // Make sure we clear the host cache\n      this.onClosed_();\n      this.connectTimeoutTimer_ = null;\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(LP_CONNECT_TIMEOUT)) as any;\n\n    // Ensure we delay the creation of the iframe until the DOM is loaded.\n    executeWhenDOMReady(() => {\n      if (this.isClosed_) {\n        return;\n      }\n\n      //Set up a callback that gets triggered once a connection is set up.\n      this.scriptTagHolder = new FirebaseIFrameScriptHolder(\n        (...args) => {\n          const [command, arg1, arg2, arg3, arg4] = args;\n          this.incrementIncomingBytes_(args);\n          if (!this.scriptTagHolder) {\n            return; // we closed the connection.\n          }\n\n          if (this.connectTimeoutTimer_) {\n            clearTimeout(this.connectTimeoutTimer_);\n            this.connectTimeoutTimer_ = null;\n          }\n          this.everConnected_ = true;\n          if (command === FIREBASE_LONGPOLL_START_PARAM) {\n            this.id = arg1 as string;\n            this.password = arg2 as string;\n          } else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\n            // Don't clear the host cache. We got a response from the server, so we know it's reachable\n            if (arg1) {\n              // We aren't expecting any more data (other than what the server's already in the process of sending us\n              // through our already open polls), so don't send any more.\n              this.scriptTagHolder.sendNewPolls = false;\n\n              // arg1 in this case is the last response number sent by the server. We should try to receive\n              // all of the responses up to this one before closing\n              this.myPacketOrderer.closeAfter(arg1 as number, () => {\n                this.onClosed_();\n              });\n            } else {\n              this.onClosed_();\n            }\n          } else {\n            throw new Error('Unrecognized command received: ' + command);\n          }\n        },\n        (...args) => {\n          const [pN, data] = args;\n          this.incrementIncomingBytes_(args);\n          this.myPacketOrderer.handleResponse(pN as number, data as unknown[]);\n        },\n        () => {\n          this.onClosed_();\n        },\n        this.urlFn\n      );\n\n      //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\n      //from cache.\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(\n        Math.random() * 100000000\n      );\n      if (this.scriptTagHolder.uniqueCallbackIdentifier) {\n        urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] =\n          this.scriptTagHolder.uniqueCallbackIdentifier;\n      }\n      urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n      if (this.transportSessionId) {\n        urlParams[TRANSPORT_SESSION_PARAM] = this.transportSessionId;\n      }\n      if (this.lastSessionId) {\n        urlParams[LAST_SESSION_PARAM] = this.lastSessionId;\n      }\n      if (this.applicationId) {\n        urlParams[APPLICATION_ID_PARAM] = this.applicationId;\n      }\n      if (this.appCheckToken) {\n        urlParams[APP_CHECK_TOKEN_PARAM] = this.appCheckToken;\n      }\n      if (\n        typeof location !== 'undefined' &&\n        location.hostname &&\n        FORGE_DOMAIN_RE.test(location.hostname)\n      ) {\n        urlParams[REFERER_PARAM] = FORGE_REF;\n      }\n      const connectURL = this.urlFn(urlParams);\n      this.log_('Connecting via long-poll to ' + connectURL);\n      this.scriptTagHolder.addTag(connectURL, () => {\n        /* do nothing */\n      });\n    });\n  }\n\n  /**\n   * Call this when a handshake has completed successfully and we want to consider the connection established\n   */\n  start() {\n    this.scriptTagHolder.startLongPoll(this.id, this.password);\n    this.addDisconnectPingFrame(this.id, this.password);\n  }\n\n  private static forceAllow_: boolean;\n\n  /**\n   * Forces long polling to be considered as a potential transport\n   */\n  static forceAllow() {\n    BrowserPollConnection.forceAllow_ = true;\n  }\n\n  private static forceDisallow_: boolean;\n\n  /**\n   * Forces longpolling to not be considered as a potential transport\n   */\n  static forceDisallow() {\n    BrowserPollConnection.forceDisallow_ = true;\n  }\n\n  // Static method, use string literal so it can be accessed in a generic way\n  static isAvailable() {\n    if (isNodeSdk()) {\n      return false;\n    } else if (BrowserPollConnection.forceAllow_) {\n      return true;\n    } else {\n      // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\n      // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\n      return (\n        !BrowserPollConnection.forceDisallow_ &&\n        typeof document !== 'undefined' &&\n        document.createElement != null &&\n        !isChromeExtensionContentScript() &&\n        !isWindowsStoreApp()\n      );\n    }\n  }\n\n  /**\n   * No-op for polling\n   */\n  markConnectionHealthy() {}\n\n  /**\n   * Stops polling and cleans up the iframe\n   */\n  private shutdown_() {\n    this.isClosed_ = true;\n\n    if (this.scriptTagHolder) {\n      this.scriptTagHolder.close();\n      this.scriptTagHolder = null;\n    }\n\n    //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\n    if (this.myDisconnFrame) {\n      document.body.removeChild(this.myDisconnFrame);\n      this.myDisconnFrame = null;\n    }\n\n    if (this.connectTimeoutTimer_) {\n      clearTimeout(this.connectTimeoutTimer_);\n      this.connectTimeoutTimer_ = null;\n    }\n  }\n\n  /**\n   * Triggered when this transport is closed\n   */\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is closing itself');\n      this.shutdown_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_(this.everConnected_);\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\n   * that we've left.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('Longpoll is being closed.');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\n   * broken into chunks (since URLs have a small maximum length).\n   * @param data - The JSON data to transmit.\n   */\n  send(data: {}) {\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //first, lets get the base64-encoded data\n    const base64data = base64Encode(dataStr);\n\n    //We can only fit a certain amount in each URL, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n    const dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\n\n    //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\n    //of segments so that we can reassemble the packet on the server.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.scriptTagHolder.enqueueSegment(\n        this.curSegmentNum,\n        dataSegs.length,\n        dataSegs[i]\n      );\n      this.curSegmentNum++;\n    }\n  }\n\n  /**\n   * This is how we notify the server that we're leaving.\n   * We aren't able to send requests with DHTML on a window close event, but we can\n   * trigger XHR requests in some browsers (everything but Opera basically).\n   */\n  addDisconnectPingFrame(id: string, pw: string) {\n    if (isNodeSdk()) {\n      return;\n    }\n    this.myDisconnFrame = document.createElement('iframe');\n    const urlParams: { [k: string]: string } = {};\n    urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\n    urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\n    urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\n    this.myDisconnFrame.src = this.urlFn(urlParams);\n    this.myDisconnFrame.style.display = 'none';\n\n    document.body.appendChild(this.myDisconnFrame);\n  }\n\n  /**\n   * Used to track the bytes received by this client\n   */\n  private incrementIncomingBytes_(args: unknown) {\n    // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\n    const bytesReceived = stringify(args).length;\n    this.bytesReceived += bytesReceived;\n    this.stats_.incrementCounter('bytes_received', bytesReceived);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface IFrameElement extends HTMLIFrameElement {\n  doc: Document;\n}\n\n/*********************************************************************************************\n * A wrapper around an iframe that is used as a long-polling script holder.\n *********************************************************************************************/\nexport class FirebaseIFrameScriptHolder {\n  //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\n  //problems in some browsers.\n  outstandingRequests = new Set<number>();\n\n  //A queue of the pending segments waiting for transmission to the server.\n  pendingSegs: Array<{ seg: number; ts: number; d: unknown }> = [];\n\n  //A serial number. We use this for two things:\n  // 1) A way to ensure the browser doesn't cache responses to polls\n  // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\n  //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\n  //    JSONP code in the order it was added to the iframe.\n  currentSerial = Math.floor(Math.random() * 100000000);\n\n  // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\n  // incoming data from the server that we're waiting for).\n  sendNewPolls = true;\n\n  uniqueCallbackIdentifier: number;\n  myIFrame: IFrameElement;\n  alive: boolean;\n  myID: string;\n  myPW: string;\n  commandCB: (command: string, ...args: unknown[]) => void;\n  onMessageCB: (...args: unknown[]) => void;\n\n  /**\n   * @param commandCB - The callback to be called when control commands are recevied from the server.\n   * @param onMessageCB - The callback to be triggered when responses arrive from the server.\n   * @param onDisconnect - The callback to be triggered when this tag holder is closed\n   * @param urlFn - A function that provides the URL of the endpoint to send data to.\n   */\n  constructor(\n    commandCB: (command: string, ...args: unknown[]) => void,\n    onMessageCB: (...args: unknown[]) => void,\n    public onDisconnect: () => void,\n    public urlFn: (a: object) => string\n  ) {\n    if (!isNodeSdk()) {\n      //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\n      //iframes where we put the long-polling script tags. We have two callbacks:\n      //   1) Command Callback - Triggered for control issues, like starting a connection.\n      //   2) Message Callback - Triggered when new data arrives.\n      this.uniqueCallbackIdentifier = LUIDGenerator();\n      window[\n        FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier\n      ] = commandCB;\n      window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] =\n        onMessageCB;\n\n      //Create an iframe for us to add script tags to.\n      this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\n\n      // Set the iframe's contents.\n      let script = '';\n      // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\n      // for ie9, but ie8 needs to do it again in the document itself.\n      if (\n        this.myIFrame.src &&\n        this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:'\n      ) {\n        const currentDomain = document.domain;\n        script = '<script>document.domain=\"' + currentDomain + '\";</script>';\n      }\n      const iframeContents = '<html><body>' + script + '</body></html>';\n      try {\n        this.myIFrame.doc.open();\n        this.myIFrame.doc.write(iframeContents);\n        this.myIFrame.doc.close();\n      } catch (e) {\n        log('frame writing exception');\n        if (e.stack) {\n          log(e.stack);\n        }\n        log(e);\n      }\n    } else {\n      this.commandCB = commandCB;\n      this.onMessageCB = onMessageCB;\n    }\n  }\n\n  /**\n   * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\n   * actually use.\n   */\n  private static createIFrame_(): IFrameElement {\n    const iframe = document.createElement('iframe') as IFrameElement;\n    iframe.style.display = 'none';\n\n    // This is necessary in order to initialize the document inside the iframe\n    if (document.body) {\n      document.body.appendChild(iframe);\n      try {\n        // If document.domain has been modified in IE, this will throw an error, and we need to set the\n        // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\n        // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\n        const a = iframe.contentWindow.document;\n        if (!a) {\n          // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\n          log('No IE domain setting required');\n        }\n      } catch (e) {\n        const domain = document.domain;\n        iframe.src =\n          \"javascript:void((function(){document.open();document.domain='\" +\n          domain +\n          \"';document.close();})())\";\n      }\n    } else {\n      // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\n      // never gets hit.\n      throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\n    }\n\n    // Get the document of the iframe in a browser-specific way.\n    if (iframe.contentDocument) {\n      iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\n    } else if (iframe.contentWindow) {\n      iframe.doc = iframe.contentWindow.document; // Internet Explorer\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } else if ((iframe as any).document) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      iframe.doc = (iframe as any).document; //others?\n    }\n\n    return iframe;\n  }\n\n  /**\n   * Cancel all outstanding queries and remove the frame.\n   */\n  close() {\n    //Mark this iframe as dead, so no new requests are sent.\n    this.alive = false;\n\n    if (this.myIFrame) {\n      //We have to actually remove all of the html inside this iframe before removing it from the\n      //window, or IE will continue loading and executing the script tags we've already added, which\n      //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\n      this.myIFrame.doc.body.innerHTML = '';\n      setTimeout(() => {\n        if (this.myIFrame !== null) {\n          document.body.removeChild(this.myIFrame);\n          this.myIFrame = null;\n        }\n      }, Math.floor(0));\n    }\n\n    // Protect from being called recursively.\n    const onDisconnect = this.onDisconnect;\n    if (onDisconnect) {\n      this.onDisconnect = null;\n      onDisconnect();\n    }\n  }\n\n  /**\n   * Actually start the long-polling session by adding the first script tag(s) to the iframe.\n   * @param id - The ID of this connection\n   * @param pw - The password for this connection\n   */\n  startLongPoll(id: string, pw: string) {\n    this.myID = id;\n    this.myPW = pw;\n    this.alive = true;\n\n    //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\n    while (this.newRequest_()) {}\n  }\n\n  /**\n   * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\n   * too many outstanding requests and we are still alive.\n   *\n   * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\n   * needed.\n   */\n  private newRequest_() {\n    // We keep one outstanding request open all the time to receive data, but if we need to send data\n    // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\n    // close the old request.\n    if (\n      this.alive &&\n      this.sendNewPolls &&\n      this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)\n    ) {\n      //construct our url\n      this.currentSerial++;\n      const urlParams: { [k: string]: string | number } = {};\n      urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\n      urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\n      urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\n      let theURL = this.urlFn(urlParams);\n      //Now add as much data as we can.\n      let curDataString = '';\n      let i = 0;\n\n      while (this.pendingSegs.length > 0) {\n        //first, lets see if the next segment will fit.\n        const nextSeg = this.pendingSegs[0];\n        if (\n          (nextSeg.d as unknown[]).length +\n            SEG_HEADER_SIZE +\n            curDataString.length <=\n          MAX_URL_DATA_SIZE\n        ) {\n          //great, the segment will fit. Lets append it.\n          const theSeg = this.pendingSegs.shift();\n          curDataString =\n            curDataString +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\n            i +\n            '=' +\n            theSeg.seg +\n            '&' +\n            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\n            i +\n            '=' +\n            theSeg.ts +\n            '&' +\n            FIREBASE_LONGPOLL_DATA_PARAM +\n            i +\n            '=' +\n            theSeg.d;\n          i++;\n        } else {\n          break;\n        }\n      }\n\n      theURL = theURL + curDataString;\n      this.addLongPollTag_(theURL, this.currentSerial);\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Queue a packet for transmission to the server.\n   * @param segnum - A sequential id for this packet segment used for reassembly\n   * @param totalsegs - The total number of segments in this packet\n   * @param data - The data for this segment.\n   */\n  enqueueSegment(segnum: number, totalsegs: number, data: unknown) {\n    //add this to the queue of segments to send.\n    this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\n\n    //send the data immediately if there isn't already data being transmitted, unless\n    //startLongPoll hasn't been called yet.\n    if (this.alive) {\n      this.newRequest_();\n    }\n  }\n\n  /**\n   * Add a script tag for a regular long-poll request.\n   * @param url - The URL of the script tag.\n   * @param serial - The serial number of the request.\n   */\n  private addLongPollTag_(url: string, serial: number) {\n    //remember that we sent this request.\n    this.outstandingRequests.add(serial);\n\n    const doNewRequest = () => {\n      this.outstandingRequests.delete(serial);\n      this.newRequest_();\n    };\n\n    // If this request doesn't return on its own accord (by the server sending us some data), we'll\n    // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\n    const keepaliveTimeout = setTimeout(\n      doNewRequest,\n      Math.floor(KEEPALIVE_REQUEST_INTERVAL)\n    );\n\n    const readyStateCB = () => {\n      // Request completed.  Cancel the keepalive.\n      clearTimeout(keepaliveTimeout);\n\n      // Trigger a new request so we can continue receiving data.\n      doNewRequest();\n    };\n\n    this.addTag(url, readyStateCB);\n  }\n\n  /**\n   * Add an arbitrary script tag to the iframe.\n   * @param url - The URL for the script tag source.\n   * @param loadCB - A callback to be triggered once the script has loaded.\n   */\n  addTag(url: string, loadCB: () => void) {\n    if (isNodeSdk()) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this as any).doNodeLongPoll(url, loadCB);\n    } else {\n      setTimeout(() => {\n        try {\n          // if we're already closed, don't add this poll\n          if (!this.sendNewPolls) {\n            return;\n          }\n          const newScript = this.myIFrame.doc.createElement('script');\n          newScript.type = 'text/javascript';\n          newScript.async = true;\n          newScript.src = url;\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          newScript.onload = (newScript as any).onreadystatechange =\n            function () {\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              const rstate = (newScript as any).readyState;\n              if (!rstate || rstate === 'loaded' || rstate === 'complete') {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                newScript.onload = (newScript as any).onreadystatechange = null;\n                if (newScript.parentNode) {\n                  newScript.parentNode.removeChild(newScript);\n                }\n                loadCB();\n              }\n            };\n          newScript.onerror = () => {\n            log('Long-poll script failed to load: ' + url);\n            this.sendNewPolls = false;\n            this.close();\n          };\n          this.myIFrame.doc.body.appendChild(newScript);\n        } catch (e) {\n          // TODO: we should make this error visible somehow\n        }\n      }, Math.floor(1));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isNodeSdk, jsonEval, stringify } from '@firebase/util';\n\nimport { RepoInfo, repoInfoConnectionURL } from '../core/RepoInfo';\nimport { StatsCollection } from '../core/stats/StatsCollection';\nimport { statsManagerGetCollection } from '../core/stats/StatsManager';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { logWrapper, splitStringBySize } from '../core/util/util';\nimport { SDK_VERSION } from '../core/version';\n\nimport {\n  APP_CHECK_TOKEN_PARAM,\n  FORGE_DOMAIN_RE,\n  FORGE_REF,\n  LAST_SESSION_PARAM,\n  PROTOCOL_VERSION,\n  REFERER_PARAM,\n  TRANSPORT_SESSION_PARAM,\n  VERSION_PARAM,\n  WEBSOCKET\n} from './Constants';\nimport { Transport } from './Transport';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const MozWebSocket: any;\n\nconst WEBSOCKET_MAX_FRAME_SIZE = 16384;\nconst WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\n\nlet WebSocketImpl = null;\nif (typeof MozWebSocket !== 'undefined') {\n  WebSocketImpl = MozWebSocket;\n} else if (typeof WebSocket !== 'undefined') {\n  WebSocketImpl = WebSocket;\n}\n\nexport function setWebSocketImpl(impl) {\n  WebSocketImpl = impl;\n}\n\n/**\n * Create a new websocket connection with the given callbacks.\n */\nexport class WebSocketConnection implements Transport {\n  keepaliveTimer: number | null = null;\n  frames: string[] | null = null;\n  totalFrames = 0;\n  bytesSent = 0;\n  bytesReceived = 0;\n  connURL: string;\n  onDisconnect: (a?: boolean) => void;\n  onMessage: (msg: {}) => void;\n  mySock: WebSocket | null;\n  private log_: (...a: unknown[]) => void;\n  private stats_: StatsCollection;\n  private everConnected_: boolean;\n  private isClosed_: boolean;\n  private nodeAdmin: boolean;\n\n  /**\n   * @param connId identifier for this transport\n   * @param repoInfo The info for the websocket endpoint.\n   * @param applicationId The Firebase App ID for this project.\n   * @param appCheckToken The App Check Token for this client.\n   * @param authToken The Auth Token for this client.\n   * @param transportSessionId Optional transportSessionId if this is connecting\n   * to an existing transport session\n   * @param lastSessionId Optional lastSessionId if there was a previous\n   * connection\n   */\n  constructor(\n    public connId: string,\n    repoInfo: RepoInfo,\n    private applicationId?: string,\n    private appCheckToken?: string,\n    private authToken?: string,\n    transportSessionId?: string,\n    lastSessionId?: string\n  ) {\n    this.log_ = logWrapper(this.connId);\n    this.stats_ = statsManagerGetCollection(repoInfo);\n    this.connURL = WebSocketConnection.connectionURL_(\n      repoInfo,\n      transportSessionId,\n      lastSessionId,\n      appCheckToken\n    );\n    this.nodeAdmin = repoInfo.nodeAdmin;\n  }\n\n  /**\n   * @param repoInfo - The info for the websocket endpoint.\n   * @param transportSessionId - Optional transportSessionId if this is connecting to an existing transport\n   *                                         session\n   * @param lastSessionId - Optional lastSessionId if there was a previous connection\n   * @returns connection url\n   */\n  private static connectionURL_(\n    repoInfo: RepoInfo,\n    transportSessionId?: string,\n    lastSessionId?: string,\n    appCheckToken?: string\n  ): string {\n    const urlParams: { [k: string]: string } = {};\n    urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\n\n    if (\n      !isNodeSdk() &&\n      typeof location !== 'undefined' &&\n      location.hostname &&\n      FORGE_DOMAIN_RE.test(location.hostname)\n    ) {\n      urlParams[REFERER_PARAM] = FORGE_REF;\n    }\n    if (transportSessionId) {\n      urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\n    }\n    if (lastSessionId) {\n      urlParams[LAST_SESSION_PARAM] = lastSessionId;\n    }\n    if (appCheckToken) {\n      urlParams[APP_CHECK_TOKEN_PARAM] = appCheckToken;\n    }\n\n    return repoInfoConnectionURL(repoInfo, WEBSOCKET, urlParams);\n  }\n\n  /**\n   * @param onMessage - Callback when messages arrive\n   * @param onDisconnect - Callback with connection lost.\n   */\n  open(onMessage: (msg: {}) => void, onDisconnect: (a?: boolean) => void) {\n    this.onDisconnect = onDisconnect;\n    this.onMessage = onMessage;\n\n    this.log_('Websocket connecting to ' + this.connURL);\n\n    this.everConnected_ = false;\n    // Assume failure until proven otherwise.\n    PersistentStorage.set('previous_websocket_failure', true);\n\n    try {\n      if (isNodeSdk()) {\n        const device = this.nodeAdmin ? 'AdminNode' : 'Node';\n        // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\n        const options: { [k: string]: object } = {\n          headers: {\n            'User-Agent': `Firebase/${PROTOCOL_VERSION}/${SDK_VERSION}/${process.platform}/${device}`,\n            'X-Firebase-GMPID': this.applicationId || ''\n          }\n        };\n\n        // If using Node with admin creds, AppCheck-related checks are unnecessary.\n        // Note that we send the credentials here even if they aren't admin credentials, which is\n        // not a problem.\n        // Note that this header is just used to bypass appcheck, and the token should still be sent\n        // through the websocket connection once it is established.\n        if (this.authToken) {\n          options.headers['Authorization'] = `Bearer ${this.authToken}`;\n        }\n        if (this.appCheckToken) {\n          options.headers['X-Firebase-AppCheck'] = this.appCheckToken;\n        }\n\n        // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\n        const env = process['env'];\n        const proxy =\n          this.connURL.indexOf('wss://') === 0\n            ? env['HTTPS_PROXY'] || env['https_proxy']\n            : env['HTTP_PROXY'] || env['http_proxy'];\n\n        if (proxy) {\n          options['proxy'] = { origin: proxy };\n        }\n\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      } else {\n        const options: { [k: string]: object } = {\n          headers: {\n            'X-Firebase-GMPID': this.applicationId || '',\n            'X-Firebase-AppCheck': this.appCheckToken || ''\n          }\n        };\n        this.mySock = new WebSocketImpl(this.connURL, [], options);\n      }\n    } catch (e) {\n      this.log_('Error instantiating WebSocket.');\n      const error = e.message || e.data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n      return;\n    }\n\n    this.mySock.onopen = () => {\n      this.log_('Websocket connected.');\n      this.everConnected_ = true;\n    };\n\n    this.mySock.onclose = () => {\n      this.log_('Websocket connection was disconnected.');\n      this.mySock = null;\n      this.onClosed_();\n    };\n\n    this.mySock.onmessage = m => {\n      this.handleIncomingFrame(m as {});\n    };\n\n    this.mySock.onerror = e => {\n      this.log_('WebSocket error.  Closing connection.');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const error = (e as any).message || (e as any).data;\n      if (error) {\n        this.log_(error);\n      }\n      this.onClosed_();\n    };\n  }\n\n  /**\n   * No-op for websockets, we don't need to do anything once the connection is confirmed as open\n   */\n  start() {}\n\n  static forceDisallow_: boolean;\n\n  static forceDisallow() {\n    WebSocketConnection.forceDisallow_ = true;\n  }\n\n  static isAvailable(): boolean {\n    let isOldAndroid = false;\n    if (typeof navigator !== 'undefined' && navigator.userAgent) {\n      const oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\n      const oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\n      if (oldAndroidMatch && oldAndroidMatch.length > 1) {\n        if (parseFloat(oldAndroidMatch[1]) < 4.4) {\n          isOldAndroid = true;\n        }\n      }\n    }\n\n    return (\n      !isOldAndroid &&\n      WebSocketImpl !== null &&\n      !WebSocketConnection.forceDisallow_\n    );\n  }\n\n  /**\n   * Number of response before we consider the connection \"healthy.\"\n   */\n  static responsesRequiredToBeHealthy = 2;\n\n  /**\n   * Time to wait for the connection te become healthy before giving up.\n   */\n  static healthyTimeout = 30000;\n\n  /**\n   * Returns true if we previously failed to connect with this transport.\n   */\n  static previouslyFailed(): boolean {\n    // If our persistent storage is actually only in-memory storage,\n    // we default to assuming that it previously failed to be safe.\n    return (\n      PersistentStorage.isInMemoryStorage ||\n      PersistentStorage.get('previous_websocket_failure') === true\n    );\n  }\n\n  markConnectionHealthy() {\n    PersistentStorage.remove('previous_websocket_failure');\n  }\n\n  private appendFrame_(data: string) {\n    this.frames.push(data);\n    if (this.frames.length === this.totalFrames) {\n      const fullMess = this.frames.join('');\n      this.frames = null;\n      const jsonMess = jsonEval(fullMess) as object;\n\n      //handle the message\n      this.onMessage(jsonMess);\n    }\n  }\n\n  /**\n   * @param frameCount - The number of frames we are expecting from the server\n   */\n  private handleNewFrameCount_(frameCount: number) {\n    this.totalFrames = frameCount;\n    this.frames = [];\n  }\n\n  /**\n   * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\n   * @returns Any remaining data to be process, or null if there is none\n   */\n  private extractFrameCount_(data: string): string | null {\n    assert(this.frames === null, 'We already have a frame buffer');\n    // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\n    // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\n    if (data.length <= 6) {\n      const frameCount = Number(data);\n      if (!isNaN(frameCount)) {\n        this.handleNewFrameCount_(frameCount);\n        return null;\n      }\n    }\n    this.handleNewFrameCount_(1);\n    return data;\n  }\n\n  /**\n   * Process a websocket frame that has arrived from the server.\n   * @param mess - The frame data\n   */\n  handleIncomingFrame(mess: { [k: string]: unknown }) {\n    if (this.mySock === null) {\n      return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\n    }\n    const data = mess['data'] as string;\n    this.bytesReceived += data.length;\n    this.stats_.incrementCounter('bytes_received', data.length);\n\n    this.resetKeepAlive();\n\n    if (this.frames !== null) {\n      // we're buffering\n      this.appendFrame_(data);\n    } else {\n      // try to parse out a frame count, otherwise, assume 1 and process it\n      const remainingData = this.extractFrameCount_(data);\n      if (remainingData !== null) {\n        this.appendFrame_(remainingData);\n      }\n    }\n  }\n\n  /**\n   * Send a message to the server\n   * @param data - The JSON object to transmit\n   */\n  send(data: {}) {\n    this.resetKeepAlive();\n\n    const dataStr = stringify(data);\n    this.bytesSent += dataStr.length;\n    this.stats_.incrementCounter('bytes_sent', dataStr.length);\n\n    //We can only fit a certain amount in each websocket frame, so we need to split this request\n    //up into multiple pieces if it doesn't fit in one request.\n\n    const dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\n\n    //Send the length header\n    if (dataSegs.length > 1) {\n      this.sendString_(String(dataSegs.length));\n    }\n\n    //Send the actual data in segments.\n    for (let i = 0; i < dataSegs.length; i++) {\n      this.sendString_(dataSegs[i]);\n    }\n  }\n\n  private shutdown_() {\n    this.isClosed_ = true;\n    if (this.keepaliveTimer) {\n      clearInterval(this.keepaliveTimer);\n      this.keepaliveTimer = null;\n    }\n\n    if (this.mySock) {\n      this.mySock.close();\n      this.mySock = null;\n    }\n  }\n\n  private onClosed_() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is closing itself');\n      this.shutdown_();\n\n      // since this is an internal close, trigger the close listener\n      if (this.onDisconnect) {\n        this.onDisconnect(this.everConnected_);\n        this.onDisconnect = null;\n      }\n    }\n  }\n\n  /**\n   * External-facing close handler.\n   * Close the websocket and kill the connection.\n   */\n  close() {\n    if (!this.isClosed_) {\n      this.log_('WebSocket is being closed');\n      this.shutdown_();\n    }\n  }\n\n  /**\n   * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\n   * the last activity.\n   */\n  resetKeepAlive() {\n    clearInterval(this.keepaliveTimer);\n    this.keepaliveTimer = setInterval(() => {\n      //If there has been no websocket activity for a while, send a no-op\n      if (this.mySock) {\n        this.sendString_('0');\n      }\n      this.resetKeepAlive();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL)) as any;\n  }\n\n  /**\n   * Send a string over the websocket.\n   *\n   * @param str - String to send.\n   */\n  private sendString_(str: string) {\n    // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\n    // calls for some unknown reason.  We treat these as an error and disconnect.\n    // See https://app.asana.com/0/58926111402292/68021340250410\n    try {\n      this.mySock.send(str);\n    } catch (e) {\n      this.log_(\n        'Exception thrown from WebSocket.send():',\n        e.message || e.data,\n        'Closing connection.'\n      );\n      setTimeout(this.onClosed_.bind(this), 0);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { warn } from '../core/util/util';\n\nimport { BrowserPollConnection } from './BrowserPollConnection';\nimport { TransportConstructor } from './Transport';\nimport { WebSocketConnection } from './WebSocketConnection';\n\n/**\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\n * lifecycle.\n *\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\n * they are available.\n */\nexport class TransportManager {\n  private transports_: TransportConstructor[];\n\n  static get ALL_TRANSPORTS() {\n    return [BrowserPollConnection, WebSocketConnection];\n  }\n\n  /**\n   * @param repoInfo - Metadata around the namespace we're connecting to\n   */\n  constructor(repoInfo: RepoInfo) {\n    this.initTransports_(repoInfo);\n  }\n\n  private initTransports_(repoInfo: RepoInfo) {\n    const isWebSocketsAvailable: boolean =\n      WebSocketConnection && WebSocketConnection['isAvailable']();\n    let isSkipPollConnection =\n      isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\n\n    if (repoInfo.webSocketOnly) {\n      if (!isWebSocketsAvailable) {\n        warn(\n          \"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\"\n        );\n      }\n\n      isSkipPollConnection = true;\n    }\n\n    if (isSkipPollConnection) {\n      this.transports_ = [WebSocketConnection];\n    } else {\n      const transports = (this.transports_ = [] as TransportConstructor[]);\n      for (const transport of TransportManager.ALL_TRANSPORTS) {\n        if (transport && transport['isAvailable']()) {\n          transports.push(transport);\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns The constructor for the initial transport to use\n   */\n  initialTransport(): TransportConstructor {\n    if (this.transports_.length > 0) {\n      return this.transports_[0];\n    } else {\n      throw new Error('No transports available');\n    }\n  }\n\n  /**\n   * @returns The constructor for the next transport, or null\n   */\n  upgradeTransport(): TransportConstructor | null {\n    if (this.transports_.length > 1) {\n      return this.transports_[1];\n    } else {\n      return null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../core/RepoInfo';\nimport { PersistentStorage } from '../core/storage/storage';\nimport { Indexable } from '../core/util/misc';\nimport {\n  error,\n  logWrapper,\n  requireKey,\n  setTimeoutNonBlocking,\n  warn\n} from '../core/util/util';\n\nimport { PROTOCOL_VERSION } from './Constants';\nimport { Transport, TransportConstructor } from './Transport';\nimport { TransportManager } from './TransportManager';\n\n// Abort upgrade attempt if it takes longer than 60s.\nconst UPGRADE_TIMEOUT = 60000;\n\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\nconst DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\n\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\n// but we've sent/received enough bytes, we don't cancel the connection.\nconst BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\nconst BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\n\nconst enum RealtimeState {\n  CONNECTING,\n  CONNECTED,\n  DISCONNECTED\n}\n\nconst MESSAGE_TYPE = 't';\nconst MESSAGE_DATA = 'd';\nconst CONTROL_SHUTDOWN = 's';\nconst CONTROL_RESET = 'r';\nconst CONTROL_ERROR = 'e';\nconst CONTROL_PONG = 'o';\nconst SWITCH_ACK = 'a';\nconst END_TRANSMISSION = 'n';\nconst PING = 'p';\n\nconst SERVER_HELLO = 'h';\n\n/**\n * Creates a new real-time connection to the server using whichever method works\n * best in the current browser.\n */\nexport class Connection {\n  connectionCount = 0;\n  pendingDataMessages: unknown[] = [];\n  sessionId: string;\n\n  private conn_: Transport;\n  private healthyTimeout_: number;\n  private isHealthy_: boolean;\n  private log_: (...args: unknown[]) => void;\n  private primaryResponsesRequired_: number;\n  private rx_: Transport;\n  private secondaryConn_: Transport;\n  private secondaryResponsesRequired_: number;\n  private state_ = RealtimeState.CONNECTING;\n  private transportManager_: TransportManager;\n  private tx_: Transport;\n\n  /**\n   * @param id - an id for this connection\n   * @param repoInfo_ - the info for the endpoint to connect to\n   * @param applicationId_ - the Firebase App ID for this project\n   * @param appCheckToken_ - The App Check Token for this device.\n   * @param authToken_ - The auth token for this session.\n   * @param onMessage_ - the callback to be triggered when a server-push message arrives\n   * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\n   * @param onDisconnect_ - the callback to be triggered when a connection was lost\n   * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\n   * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\n   */\n  constructor(\n    public id: string,\n    private repoInfo_: RepoInfo,\n    private applicationId_: string | undefined,\n    private appCheckToken_: string | undefined,\n    private authToken_: string | undefined,\n    private onMessage_: (a: {}) => void,\n    private onReady_: (a: number, b: string) => void,\n    private onDisconnect_: () => void,\n    private onKill_: (a: string) => void,\n    public lastSessionId?: string\n  ) {\n    this.log_ = logWrapper('c:' + this.id + ':');\n    this.transportManager_ = new TransportManager(repoInfo_);\n    this.log_('Connection created');\n    this.start_();\n  }\n\n  /**\n   * Starts a connection attempt\n   */\n  private start_(): void {\n    const conn = this.transportManager_.initialTransport();\n    this.conn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      null,\n      this.lastSessionId\n    );\n\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessageReceived = this.connReceiver_(this.conn_);\n    const onConnectionLost = this.disconnReceiver_(this.conn_);\n    this.tx_ = this.conn_;\n    this.rx_ = this.conn_;\n    this.secondaryConn_ = null;\n    this.isHealthy_ = false;\n\n    /*\n     * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\n     * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\n     * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\n     * still have the context of your originating frame.\n     */\n    setTimeout(() => {\n      // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\n      this.conn_ && this.conn_.open(onMessageReceived, onConnectionLost);\n    }, Math.floor(0));\n\n    const healthyTimeoutMS = conn['healthyTimeout'] || 0;\n    if (healthyTimeoutMS > 0) {\n      this.healthyTimeout_ = setTimeoutNonBlocking(() => {\n        this.healthyTimeout_ = null;\n        if (!this.isHealthy_) {\n          if (\n            this.conn_ &&\n            this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has received ' +\n                this.conn_.bytesReceived +\n                ' bytes.  Marking connection healthy.'\n            );\n            this.isHealthy_ = true;\n            this.conn_.markConnectionHealthy();\n          } else if (\n            this.conn_ &&\n            this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE\n          ) {\n            this.log_(\n              'Connection exceeded healthy timeout but has sent ' +\n                this.conn_.bytesSent +\n                ' bytes.  Leaving connection alive.'\n            );\n            // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\n            // the server.\n          } else {\n            this.log_('Closing unhealthy connection after timeout.');\n            this.close();\n          }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      }, Math.floor(healthyTimeoutMS)) as any;\n    }\n  }\n\n  private nextTransportId_(): string {\n    return 'c:' + this.id + ':' + this.connectionCount++;\n  }\n\n  private disconnReceiver_(conn) {\n    return everConnected => {\n      if (conn === this.conn_) {\n        this.onConnectionLost_(everConnected);\n      } else if (conn === this.secondaryConn_) {\n        this.log_('Secondary connection lost.');\n        this.onSecondaryConnectionLost_();\n      } else {\n        this.log_('closing an old connection');\n      }\n    };\n  }\n\n  private connReceiver_(conn: Transport) {\n    return (message: Indexable) => {\n      if (this.state_ !== RealtimeState.DISCONNECTED) {\n        if (conn === this.rx_) {\n          this.onPrimaryMessageReceived_(message);\n        } else if (conn === this.secondaryConn_) {\n          this.onSecondaryMessageReceived_(message);\n        } else {\n          this.log_('message on old connection');\n        }\n      }\n    };\n  }\n\n  /**\n   * @param dataMsg - An arbitrary data message to be sent to the server\n   */\n  sendRequest(dataMsg: object) {\n    // wrap in a data message envelope and send it on\n    const msg = { t: 'd', d: dataMsg };\n    this.sendData_(msg);\n  }\n\n  tryCleanupConnection() {\n    if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\n      this.log_(\n        'cleaning up and promoting a connection: ' + this.secondaryConn_.connId\n      );\n      this.conn_ = this.secondaryConn_;\n      this.secondaryConn_ = null;\n      // the server will shutdown the old connection\n    }\n  }\n\n  private onSecondaryControl_(controlData: { [k: string]: unknown }) {\n    if (MESSAGE_TYPE in controlData) {\n      const cmd = controlData[MESSAGE_TYPE] as string;\n      if (cmd === SWITCH_ACK) {\n        this.upgradeIfSecondaryHealthy_();\n      } else if (cmd === CONTROL_RESET) {\n        // Most likely the session wasn't valid. Abandon the switch attempt\n        this.log_('Got a reset on secondary, closing it');\n        this.secondaryConn_.close();\n        // If we were already using this connection for something, than we need to fully close\n        if (\n          this.tx_ === this.secondaryConn_ ||\n          this.rx_ === this.secondaryConn_\n        ) {\n          this.close();\n        }\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on secondary.');\n        this.secondaryResponsesRequired_--;\n        this.upgradeIfSecondaryHealthy_();\n      }\n    }\n  }\n\n  private onSecondaryMessageReceived_(parsedData: Indexable) {\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onSecondaryControl_(data as Indexable);\n    } else if (layer === 'd') {\n      // got a data message, but we're still second connection. Need to buffer it up\n      this.pendingDataMessages.push(data);\n    } else {\n      throw new Error('Unknown protocol layer: ' + layer);\n    }\n  }\n\n  private upgradeIfSecondaryHealthy_() {\n    if (this.secondaryResponsesRequired_ <= 0) {\n      this.log_('Secondary connection is healthy.');\n      this.isHealthy_ = true;\n      this.secondaryConn_.markConnectionHealthy();\n      this.proceedWithUpgrade_();\n    } else {\n      // Send a ping to make sure the connection is healthy.\n      this.log_('sending ping on secondary.');\n      this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private proceedWithUpgrade_() {\n    // tell this connection to consider itself open\n    this.secondaryConn_.start();\n    // send ack\n    this.log_('sending client ack on secondary');\n    this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\n\n    // send end packet on primary transport, switch to sending on this one\n    // can receive on this one, buffer responses until end received on primary transport\n    this.log_('Ending transmission on primary');\n    this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\n    this.tx_ = this.secondaryConn_;\n\n    this.tryCleanupConnection();\n  }\n\n  private onPrimaryMessageReceived_(parsedData: { [k: string]: unknown }) {\n    // Must refer to parsedData properties in quotes, so closure doesn't touch them.\n    const layer: string = requireKey('t', parsedData) as string;\n    const data: unknown = requireKey('d', parsedData);\n    if (layer === 'c') {\n      this.onControl_(data as { [k: string]: unknown });\n    } else if (layer === 'd') {\n      this.onDataMessage_(data);\n    }\n  }\n\n  private onDataMessage_(message: unknown) {\n    this.onPrimaryResponse_();\n\n    // We don't do anything with data messages, just kick them up a level\n    this.onMessage_(message);\n  }\n\n  private onPrimaryResponse_() {\n    if (!this.isHealthy_) {\n      this.primaryResponsesRequired_--;\n      if (this.primaryResponsesRequired_ <= 0) {\n        this.log_('Primary connection is healthy.');\n        this.isHealthy_ = true;\n        this.conn_.markConnectionHealthy();\n      }\n    }\n  }\n\n  private onControl_(controlData: { [k: string]: unknown }) {\n    const cmd: string = requireKey(MESSAGE_TYPE, controlData) as string;\n    if (MESSAGE_DATA in controlData) {\n      const payload = controlData[MESSAGE_DATA];\n      if (cmd === SERVER_HELLO) {\n        this.onHandshake_(\n          payload as {\n            ts: number;\n            v: string;\n            h: string;\n            s: string;\n          }\n        );\n      } else if (cmd === END_TRANSMISSION) {\n        this.log_('recvd end transmission on primary');\n        this.rx_ = this.secondaryConn_;\n        for (let i = 0; i < this.pendingDataMessages.length; ++i) {\n          this.onDataMessage_(this.pendingDataMessages[i]);\n        }\n        this.pendingDataMessages = [];\n        this.tryCleanupConnection();\n      } else if (cmd === CONTROL_SHUTDOWN) {\n        // This was previously the 'onKill' callback passed to the lower-level connection\n        // payload in this case is the reason for the shutdown. Generally a human-readable error\n        this.onConnectionShutdown_(payload as string);\n      } else if (cmd === CONTROL_RESET) {\n        // payload in this case is the host we should contact\n        this.onReset_(payload as string);\n      } else if (cmd === CONTROL_ERROR) {\n        error('Server Error: ' + payload);\n      } else if (cmd === CONTROL_PONG) {\n        this.log_('got pong on primary.');\n        this.onPrimaryResponse_();\n        this.sendPingOnPrimaryIfNecessary_();\n      } else {\n        error('Unknown control packet command: ' + cmd);\n      }\n    }\n  }\n\n  /**\n   * @param handshake - The handshake data returned from the server\n   */\n  private onHandshake_(handshake: {\n    ts: number;\n    v: string;\n    h: string;\n    s: string;\n  }): void {\n    const timestamp = handshake.ts;\n    const version = handshake.v;\n    const host = handshake.h;\n    this.sessionId = handshake.s;\n    this.repoInfo_.host = host;\n    // if we've already closed the connection, then don't bother trying to progress further\n    if (this.state_ === RealtimeState.CONNECTING) {\n      this.conn_.start();\n      this.onConnectionEstablished_(this.conn_, timestamp);\n      if (PROTOCOL_VERSION !== version) {\n        warn('Protocol version mismatch detected');\n      }\n      // TODO: do we want to upgrade? when? maybe a delay?\n      this.tryStartUpgrade_();\n    }\n  }\n\n  private tryStartUpgrade_() {\n    const conn = this.transportManager_.upgradeTransport();\n    if (conn) {\n      this.startUpgrade_(conn);\n    }\n  }\n\n  private startUpgrade_(conn: TransportConstructor) {\n    this.secondaryConn_ = new conn(\n      this.nextTransportId_(),\n      this.repoInfo_,\n      this.applicationId_,\n      this.appCheckToken_,\n      this.authToken_,\n      this.sessionId\n    );\n    // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\n    // can consider the transport healthy.\n    this.secondaryResponsesRequired_ =\n      conn['responsesRequiredToBeHealthy'] || 0;\n\n    const onMessage = this.connReceiver_(this.secondaryConn_);\n    const onDisconnect = this.disconnReceiver_(this.secondaryConn_);\n    this.secondaryConn_.open(onMessage, onDisconnect);\n\n    // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\n    setTimeoutNonBlocking(() => {\n      if (this.secondaryConn_) {\n        this.log_('Timed out trying to upgrade.');\n        this.secondaryConn_.close();\n      }\n    }, Math.floor(UPGRADE_TIMEOUT));\n  }\n\n  private onReset_(host: string) {\n    this.log_('Reset packet received.  New host: ' + host);\n    this.repoInfo_.host = host;\n    // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\n    // We don't currently support resets after the connection has already been established\n    if (this.state_ === RealtimeState.CONNECTED) {\n      this.close();\n    } else {\n      // Close whatever connections we have open and start again.\n      this.closeConnections_();\n      this.start_();\n    }\n  }\n\n  private onConnectionEstablished_(conn: Transport, timestamp: number) {\n    this.log_('Realtime connection established.');\n    this.conn_ = conn;\n    this.state_ = RealtimeState.CONNECTED;\n\n    if (this.onReady_) {\n      this.onReady_(timestamp, this.sessionId);\n      this.onReady_ = null;\n    }\n\n    // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\n    // send some pings.\n    if (this.primaryResponsesRequired_ === 0) {\n      this.log_('Primary connection is healthy.');\n      this.isHealthy_ = true;\n    } else {\n      setTimeoutNonBlocking(() => {\n        this.sendPingOnPrimaryIfNecessary_();\n      }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\n    }\n  }\n\n  private sendPingOnPrimaryIfNecessary_() {\n    // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\n    if (!this.isHealthy_ && this.state_ === RealtimeState.CONNECTED) {\n      this.log_('sending ping on primary.');\n      this.sendData_({ t: 'c', d: { t: PING, d: {} } });\n    }\n  }\n\n  private onSecondaryConnectionLost_() {\n    const conn = this.secondaryConn_;\n    this.secondaryConn_ = null;\n    if (this.tx_ === conn || this.rx_ === conn) {\n      // we are relying on this connection already in some capacity. Therefore, a failure is real\n      this.close();\n    }\n  }\n\n  /**\n   * @param everConnected - Whether or not the connection ever reached a server. Used to determine if\n   * we should flush the host cache\n   */\n  private onConnectionLost_(everConnected: boolean) {\n    this.conn_ = null;\n\n    // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\n    // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\n    if (!everConnected && this.state_ === RealtimeState.CONNECTING) {\n      this.log_('Realtime connection failed.');\n      // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\n      if (this.repoInfo_.isCacheableHost()) {\n        PersistentStorage.remove('host:' + this.repoInfo_.host);\n        // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\n        this.repoInfo_.internalHost = this.repoInfo_.host;\n      }\n    } else if (this.state_ === RealtimeState.CONNECTED) {\n      this.log_('Realtime connection lost.');\n    }\n\n    this.close();\n  }\n\n  private onConnectionShutdown_(reason: string) {\n    this.log_('Connection shutdown command received. Shutting down...');\n\n    if (this.onKill_) {\n      this.onKill_(reason);\n      this.onKill_ = null;\n    }\n\n    // We intentionally don't want to fire onDisconnect (kill is a different case),\n    // so clear the callback.\n    this.onDisconnect_ = null;\n\n    this.close();\n  }\n\n  private sendData_(data: object) {\n    if (this.state_ !== RealtimeState.CONNECTED) {\n      throw 'Connection is not connected';\n    } else {\n      this.tx_.send(data);\n    }\n  }\n\n  /**\n   * Cleans up this connection, calling the appropriate callbacks\n   */\n  close() {\n    if (this.state_ !== RealtimeState.DISCONNECTED) {\n      this.log_('Closing realtime connection.');\n      this.state_ = RealtimeState.DISCONNECTED;\n\n      this.closeConnections_();\n\n      if (this.onDisconnect_) {\n        this.onDisconnect_();\n        this.onDisconnect_ = null;\n      }\n    }\n  }\n\n  private closeConnections_() {\n    this.log_('Shutting down all connections');\n    if (this.conn_) {\n      this.conn_.close();\n      this.conn_ = null;\n    }\n\n    if (this.secondaryConn_) {\n      this.secondaryConn_.close();\n      this.secondaryConn_ = null;\n    }\n\n    if (this.healthyTimeout_) {\n      clearTimeout(this.healthyTimeout_);\n      this.healthyTimeout_ = null;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { QueryContext } from './view/EventRegistration';\n\n/**\n * Interface defining the set of actions that can be performed against the Firebase server\n * (basically corresponds to our wire protocol).\n *\n * @interface\n */\nexport abstract class ServerActions {\n  abstract listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ): void;\n\n  /**\n   * Remove a listen.\n   */\n  abstract unlisten(query: QueryContext, tag: number | null): void;\n\n  /**\n   * Get the server value satisfying this query.\n   */\n  abstract get(query: QueryContext): Promise<string>;\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {}\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {}\n\n  /**\n   * Refreshes the auth token for the current connection.\n   * @param token - The authentication token\n   */\n  refreshAuthToken(token: string) {}\n\n  /**\n   * Refreshes the app check token for the current connection.\n   * @param token The app check token\n   */\n  refreshAppCheckToken(token: string) {}\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {}\n\n  reportStats(stats: { [k: string]: unknown }) {}\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\n/**\n * Base class to be used if you want to emit events. Call the constructor with\n * the set of allowed event names.\n */\nexport abstract class EventEmitter {\n  private listeners_: {\n    [eventType: string]: Array<{\n      callback(...args: unknown[]): void;\n      context: unknown;\n    }>;\n  } = {};\n\n  constructor(private allowedEvents_: string[]) {\n    assert(\n      Array.isArray(allowedEvents_) && allowedEvents_.length > 0,\n      'Requires a non-empty array'\n    );\n  }\n\n  /**\n   * To be overridden by derived classes in order to fire an initial event when\n   * somebody subscribes for data.\n   *\n   * @returns {Array.<*>} Array of parameters to trigger initial event with.\n   */\n  abstract getInitialEvent(eventType: string): unknown[];\n\n  /**\n   * To be called by derived classes to trigger events.\n   */\n  protected trigger(eventType: string, ...varArgs: unknown[]) {\n    if (Array.isArray(this.listeners_[eventType])) {\n      // Clone the list, since callbacks could add/remove listeners.\n      const listeners = [...this.listeners_[eventType]];\n\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i].callback.apply(listeners[i].context, varArgs);\n      }\n    }\n  }\n\n  on(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    this.listeners_[eventType] = this.listeners_[eventType] || [];\n    this.listeners_[eventType].push({ callback, context });\n\n    const eventData = this.getInitialEvent(eventType);\n    if (eventData) {\n      callback.apply(context, eventData);\n    }\n  }\n\n  off(eventType: string, callback: (a: unknown) => void, context: unknown) {\n    this.validateEventType_(eventType);\n    const listeners = this.listeners_[eventType] || [];\n    for (let i = 0; i < listeners.length; i++) {\n      if (\n        listeners[i].callback === callback &&\n        (!context || context === listeners[i].context)\n      ) {\n        listeners.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  private validateEventType_(eventType: string) {\n    assert(\n      this.allowedEvents_.find(et => {\n        return et === eventType;\n      }),\n      'Unknown event: ' + eventType\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, isMobileCordova } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\n/**\n * Monitors online state (as reported by window.online/offline events).\n *\n * The expectation is that this could have many false positives (thinks we are online\n * when we're not), but no false negatives.  So we can safely use it to determine when\n * we definitely cannot reach the internet.\n */\nexport class OnlineMonitor extends EventEmitter {\n  private online_ = true;\n\n  static getInstance() {\n    return new OnlineMonitor();\n  }\n\n  constructor() {\n    super(['online']);\n\n    // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\n    // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\n    // It would seem that the 'online' event does not always fire consistently. So we disable it\n    // for Cordova.\n    if (\n      typeof window !== 'undefined' &&\n      typeof window.addEventListener !== 'undefined' &&\n      !isMobileCordova()\n    ) {\n      window.addEventListener(\n        'online',\n        () => {\n          if (!this.online_) {\n            this.online_ = true;\n            this.trigger('online', true);\n          }\n        },\n        false\n      );\n\n      window.addEventListener(\n        'offline',\n        () => {\n          if (this.online_) {\n            this.online_ = false;\n            this.trigger('online', false);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'online', 'Unknown event type: ' + eventType);\n    return [this.online_];\n  }\n\n  currentlyOnline(): boolean {\n    return this.online_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringLength } from '@firebase/util';\n\nimport { nameCompare } from './util';\n\n/** Maximum key depth. */\nconst MAX_PATH_DEPTH = 32;\n\n/** Maximum number of (UTF8) bytes in a Firebase path. */\nconst MAX_PATH_LENGTH_BYTES = 768;\n\n/**\n * An immutable object representing a parsed path.  It's immutable so that you\n * can pass them around to other functions without worrying about them changing\n * it.\n */\n\nexport class Path {\n  pieces_: string[];\n  pieceNum_: number;\n\n  /**\n   * @param pathOrString - Path string to parse, or another path, or the raw\n   * tokens array\n   */\n  constructor(pathOrString: string | string[], pieceNum?: number) {\n    if (pieceNum === void 0) {\n      this.pieces_ = (pathOrString as string).split('/');\n\n      // Remove empty pieces.\n      let copyTo = 0;\n      for (let i = 0; i < this.pieces_.length; i++) {\n        if (this.pieces_[i].length > 0) {\n          this.pieces_[copyTo] = this.pieces_[i];\n          copyTo++;\n        }\n      }\n      this.pieces_.length = copyTo;\n\n      this.pieceNum_ = 0;\n    } else {\n      this.pieces_ = pathOrString as string[];\n      this.pieceNum_ = pieceNum;\n    }\n  }\n\n  toString(): string {\n    let pathString = '';\n    for (let i = this.pieceNum_; i < this.pieces_.length; i++) {\n      if (this.pieces_[i] !== '') {\n        pathString += '/' + this.pieces_[i];\n      }\n    }\n\n    return pathString || '/';\n  }\n}\n\nexport function newEmptyPath(): Path {\n  return new Path('');\n}\n\nexport function pathGetFront(path: Path): string | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  return path.pieces_[path.pieceNum_];\n}\n\n/**\n * @returns The number of segments in this path\n */\nexport function pathGetLength(path: Path): number {\n  return path.pieces_.length - path.pieceNum_;\n}\n\nexport function pathPopFront(path: Path): Path {\n  let pieceNum = path.pieceNum_;\n  if (pieceNum < path.pieces_.length) {\n    pieceNum++;\n  }\n  return new Path(path.pieces_, pieceNum);\n}\n\nexport function pathGetBack(path: Path): string | null {\n  if (path.pieceNum_ < path.pieces_.length) {\n    return path.pieces_[path.pieces_.length - 1];\n  }\n\n  return null;\n}\n\nexport function pathToUrlEncodedString(path: Path): string {\n  let pathString = '';\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    if (path.pieces_[i] !== '') {\n      pathString += '/' + encodeURIComponent(String(path.pieces_[i]));\n    }\n  }\n\n  return pathString || '/';\n}\n\n/**\n * Shallow copy of the parts of the path.\n *\n */\nexport function pathSlice(path: Path, begin: number = 0): string[] {\n  return path.pieces_.slice(path.pieceNum_ + begin);\n}\n\nexport function pathParent(path: Path): Path | null {\n  if (path.pieceNum_ >= path.pieces_.length) {\n    return null;\n  }\n\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length - 1; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  return new Path(pieces, 0);\n}\n\nexport function pathChild(path: Path, childPathObj: string | Path): Path {\n  const pieces = [];\n  for (let i = path.pieceNum_; i < path.pieces_.length; i++) {\n    pieces.push(path.pieces_[i]);\n  }\n\n  if (childPathObj instanceof Path) {\n    for (let i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\n      pieces.push(childPathObj.pieces_[i]);\n    }\n  } else {\n    const childPieces = childPathObj.split('/');\n    for (let i = 0; i < childPieces.length; i++) {\n      if (childPieces[i].length > 0) {\n        pieces.push(childPieces[i]);\n      }\n    }\n  }\n\n  return new Path(pieces, 0);\n}\n\n/**\n * @returns True if there are no segments in this path\n */\nexport function pathIsEmpty(path: Path): boolean {\n  return path.pieceNum_ >= path.pieces_.length;\n}\n\n/**\n * @returns The path from outerPath to innerPath\n */\nexport function newRelativePath(outerPath: Path, innerPath: Path): Path {\n  const outer = pathGetFront(outerPath),\n    inner = pathGetFront(innerPath);\n  if (outer === null) {\n    return innerPath;\n  } else if (outer === inner) {\n    return newRelativePath(pathPopFront(outerPath), pathPopFront(innerPath));\n  } else {\n    throw new Error(\n      'INTERNAL ERROR: innerPath (' +\n        innerPath +\n        ') is not within ' +\n        'outerPath (' +\n        outerPath +\n        ')'\n    );\n  }\n}\n\n/**\n * @returns -1, 0, 1 if left is less, equal, or greater than the right.\n */\nexport function pathCompare(left: Path, right: Path): number {\n  const leftKeys = pathSlice(left, 0);\n  const rightKeys = pathSlice(right, 0);\n  for (let i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\n    const cmp = nameCompare(leftKeys[i], rightKeys[i]);\n    if (cmp !== 0) {\n      return cmp;\n    }\n  }\n  if (leftKeys.length === rightKeys.length) {\n    return 0;\n  }\n  return leftKeys.length < rightKeys.length ? -1 : 1;\n}\n\n/**\n * @returns true if paths are the same.\n */\nexport function pathEquals(path: Path, other: Path): boolean {\n  if (pathGetLength(path) !== pathGetLength(other)) {\n    return false;\n  }\n\n  for (\n    let i = path.pieceNum_, j = other.pieceNum_;\n    i <= path.pieces_.length;\n    i++, j++\n  ) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * @returns True if this path is a parent (or the same as) other\n */\nexport function pathContains(path: Path, other: Path): boolean {\n  let i = path.pieceNum_;\n  let j = other.pieceNum_;\n  if (pathGetLength(path) > pathGetLength(other)) {\n    return false;\n  }\n  while (i < path.pieces_.length) {\n    if (path.pieces_[i] !== other.pieces_[j]) {\n      return false;\n    }\n    ++i;\n    ++j;\n  }\n  return true;\n}\n\n/**\n * Dynamic (mutable) path used to count path lengths.\n *\n * This class is used to efficiently check paths for valid\n * length (in UTF8 bytes) and depth (used in path validation).\n *\n * Throws Error exception if path is ever invalid.\n *\n * The definition of a path always begins with '/'.\n */\nexport class ValidationPath {\n  parts_: string[];\n  /** Initialize to number of '/' chars needed in path. */\n  byteLength_: number;\n\n  /**\n   * @param path - Initial Path.\n   * @param errorPrefix_ - Prefix for any error messages.\n   */\n  constructor(path: Path, public errorPrefix_: string) {\n    this.parts_ = pathSlice(path, 0);\n    /** Initialize to number of '/' chars needed in path. */\n    this.byteLength_ = Math.max(1, this.parts_.length);\n\n    for (let i = 0; i < this.parts_.length; i++) {\n      this.byteLength_ += stringLength(this.parts_[i]);\n    }\n    validationPathCheckValid(this);\n  }\n}\n\nexport function validationPathPush(\n  validationPath: ValidationPath,\n  child: string\n): void {\n  // Count the needed '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ += 1;\n  }\n  validationPath.parts_.push(child);\n  validationPath.byteLength_ += stringLength(child);\n  validationPathCheckValid(validationPath);\n}\n\nexport function validationPathPop(validationPath: ValidationPath): void {\n  const last = validationPath.parts_.pop();\n  validationPath.byteLength_ -= stringLength(last);\n  // Un-count the previous '/'\n  if (validationPath.parts_.length > 0) {\n    validationPath.byteLength_ -= 1;\n  }\n}\n\nfunction validationPathCheckValid(validationPath: ValidationPath): void {\n  if (validationPath.byteLength_ > MAX_PATH_LENGTH_BYTES) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'has a key path longer than ' +\n        MAX_PATH_LENGTH_BYTES +\n        ' bytes (' +\n        validationPath.byteLength_ +\n        ').'\n    );\n  }\n  if (validationPath.parts_.length > MAX_PATH_DEPTH) {\n    throw new Error(\n      validationPath.errorPrefix_ +\n        'path specified exceeds the maximum depth that can be written (' +\n        MAX_PATH_DEPTH +\n        ') or object contains a cycle ' +\n        validationPathToErrorString(validationPath)\n    );\n  }\n}\n\n/**\n * String for use in error messages - uses '.' notation for path.\n */\nexport function validationPathToErrorString(\n  validationPath: ValidationPath\n): string {\n  if (validationPath.parts_.length === 0) {\n    return '';\n  }\n  return \"in property '\" + validationPath.parts_.join('.') + \"'\";\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { EventEmitter } from './EventEmitter';\n\ndeclare const document: Document;\n\nexport class VisibilityMonitor extends EventEmitter {\n  private visible_: boolean;\n\n  static getInstance() {\n    return new VisibilityMonitor();\n  }\n\n  constructor() {\n    super(['visible']);\n    let hidden: string;\n    let visibilityChange: string;\n    if (\n      typeof document !== 'undefined' &&\n      typeof document.addEventListener !== 'undefined'\n    ) {\n      if (typeof document['hidden'] !== 'undefined') {\n        // Opera 12.10 and Firefox 18 and later support\n        visibilityChange = 'visibilitychange';\n        hidden = 'hidden';\n      } else if (typeof document['mozHidden'] !== 'undefined') {\n        visibilityChange = 'mozvisibilitychange';\n        hidden = 'mozHidden';\n      } else if (typeof document['msHidden'] !== 'undefined') {\n        visibilityChange = 'msvisibilitychange';\n        hidden = 'msHidden';\n      } else if (typeof document['webkitHidden'] !== 'undefined') {\n        visibilityChange = 'webkitvisibilitychange';\n        hidden = 'webkitHidden';\n      }\n    }\n\n    // Initially, we always assume we are visible. This ensures that in browsers\n    // without page visibility support or in cases where we are never visible\n    // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\n    // reconnects\n    this.visible_ = true;\n\n    if (visibilityChange) {\n      document.addEventListener(\n        visibilityChange,\n        () => {\n          const visible = !document[hidden];\n          if (visible !== this.visible_) {\n            this.visible_ = visible;\n            this.trigger('visible', visible);\n          }\n        },\n        false\n      );\n    }\n  }\n\n  getInitialEvent(eventType: string): boolean[] {\n    assert(eventType === 'visible', 'Unknown event type: ' + eventType);\n    return [this.visible_];\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  Deferred,\n  isEmpty,\n  isMobileCordova,\n  isNodeSdk,\n  isReactNative,\n  isValidFormat,\n  safeGet,\n  stringify,\n  isAdmin\n} from '@firebase/util';\n\nimport { Connection } from '../realtime/Connection';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { OnlineMonitor } from './util/OnlineMonitor';\nimport { Path } from './util/Path';\nimport { error, log, logWrapper, warn, ObjectToUniqueKey } from './util/util';\nimport { VisibilityMonitor } from './util/VisibilityMonitor';\nimport { SDK_VERSION } from './version';\nimport { QueryContext } from './view/EventRegistration';\n\nconst RECONNECT_MIN_DELAY = 1000;\nconst RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\nconst GET_CONNECT_TIMEOUT = 3 * 1000;\nconst RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\nconst RECONNECT_DELAY_MULTIPLIER = 1.3;\nconst RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\nconst SERVER_KILL_INTERRUPT_REASON = 'server_kill';\n\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\nconst INVALID_TOKEN_THRESHOLD = 3;\n\ninterface ListenSpec {\n  onComplete(s: string, p?: unknown): void;\n\n  hashFn(): string;\n\n  query: QueryContext;\n  tag: number | null;\n}\n\ninterface OnDisconnectRequest {\n  pathString: string;\n  action: string;\n  data: unknown;\n  onComplete?: (a: string, b: string) => void;\n}\n\ninterface OutstandingPut {\n  action: string;\n  request: object;\n  queued?: boolean;\n  onComplete: (a: string, b?: string) => void;\n}\n\ninterface OutstandingGet {\n  request: object;\n  onComplete: (response: { [k: string]: unknown }) => void;\n}\n\n/**\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\n *\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\n * in quotes to make sure the closure compiler does not minify them.\n */\nexport class PersistentConnection extends ServerActions {\n  // Used for diagnostic logging.\n  id = PersistentConnection.nextPersistentConnectionId_++;\n  private log_ = logWrapper('p:' + this.id + ':');\n\n  private interruptReasons_: { [reason: string]: boolean } = {};\n  private readonly listens: Map<\n    /* path */ string,\n    Map</* queryId */ string, ListenSpec>\n  > = new Map();\n  private outstandingPuts_: OutstandingPut[] = [];\n  private outstandingGets_: OutstandingGet[] = [];\n  private outstandingPutCount_ = 0;\n  private outstandingGetCount_ = 0;\n  private onDisconnectRequestQueue_: OnDisconnectRequest[] = [];\n  private connected_ = false;\n  private reconnectDelay_ = RECONNECT_MIN_DELAY;\n  private maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\n  private securityDebugCallback_: ((a: object) => void) | null = null;\n  lastSessionId: string | null = null;\n\n  private establishConnectionTimer_: number | null = null;\n\n  private visible_: boolean = false;\n\n  // Before we get connected, we keep a queue of pending messages to send.\n  private requestCBHash_: { [k: number]: (a: unknown) => void } = {};\n  private requestNumber_ = 0;\n\n  private realtime_: {\n    sendRequest(a: object): void;\n    close(): void;\n  } | null = null;\n\n  private authToken_: string | null = null;\n  private appCheckToken_: string | null = null;\n  private forceTokenRefresh_ = false;\n  private invalidAuthTokenCount_ = 0;\n  private invalidAppCheckTokenCount_ = 0;\n\n  private firstConnection_ = true;\n  private lastConnectionAttemptTime_: number | null = null;\n  private lastConnectionEstablishedTime_: number | null = null;\n\n  private static nextPersistentConnectionId_ = 0;\n\n  /**\n   * Counter for number of connections created. Mainly used for tagging in the logs\n   */\n  private static nextConnectionId_ = 0;\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param applicationId_ - The Firebase App ID for this project\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private applicationId_: string,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private onConnectStatus_: (a: boolean) => void,\n    private onServerInfoUpdate_: (a: unknown) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider,\n    private authOverride_?: object | null\n  ) {\n    super();\n\n    if (authOverride_ && !isNodeSdk()) {\n      throw new Error(\n        'Auth override specified in options, but not supported on non Node.js platforms'\n      );\n    }\n\n    VisibilityMonitor.getInstance().on('visible', this.onVisible_, this);\n\n    if (repoInfo_.host.indexOf('fblocal') === -1) {\n      OnlineMonitor.getInstance().on('online', this.onOnline_, this);\n    }\n  }\n\n  protected sendRequest(\n    action: string,\n    body: unknown,\n    onResponse?: (a: unknown) => void\n  ) {\n    const curReqNum = ++this.requestNumber_;\n\n    const msg = { r: curReqNum, a: action, b: body };\n    this.log_(stringify(msg));\n    assert(\n      this.connected_,\n      \"sendRequest call when we're not connected not allowed.\"\n    );\n    this.realtime_.sendRequest(msg);\n    if (onResponse) {\n      this.requestCBHash_[curReqNum] = onResponse;\n    }\n  }\n\n  get(query: QueryContext): Promise<string> {\n    this.initConnection_();\n\n    const deferred = new Deferred<string>();\n    const request = {\n      p: query._path.toString(),\n      q: query._queryObject\n    };\n    const outstandingGet = {\n      action: 'g',\n      request,\n      onComplete: (message: { [k: string]: unknown }) => {\n        const payload = message['d'] as string;\n        if (message['s'] === 'ok') {\n          this.onDataUpdate_(\n            request['p'],\n            payload,\n            /*isMerge*/ false,\n            /*tag*/ null\n          );\n          deferred.resolve(payload);\n        } else {\n          deferred.reject(payload);\n        }\n      }\n    };\n    this.outstandingGets_.push(outstandingGet);\n    this.outstandingGetCount_++;\n    const index = this.outstandingGets_.length - 1;\n\n    if (!this.connected_) {\n      setTimeout(() => {\n        const get = this.outstandingGets_[index];\n        if (get === undefined || outstandingGet !== get) {\n          return;\n        }\n        delete this.outstandingGets_[index];\n        this.outstandingGetCount_--;\n        if (this.outstandingGetCount_ === 0) {\n          this.outstandingGets_ = [];\n        }\n        this.log_('get ' + index + ' timed out on connection');\n        deferred.reject(new Error('Client is offline.'));\n      }, GET_CONNECT_TIMEOUT);\n    }\n\n    if (this.connected_) {\n      this.sendGet_(index);\n    }\n\n    return deferred.promise;\n  }\n\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    this.initConnection_();\n\n    const queryId = query._queryIdentifier;\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + queryId);\n    if (!this.listens.has(pathString)) {\n      this.listens.set(pathString, new Map());\n    }\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'listen() called for non-default but complete query'\n    );\n    assert(\n      !this.listens.get(pathString)!.has(queryId),\n      'listen() called twice for same path/queryId.'\n    );\n    const listenSpec: ListenSpec = {\n      onComplete,\n      hashFn: currentHashFn,\n      query,\n      tag\n    };\n    this.listens.get(pathString)!.set(queryId, listenSpec);\n\n    if (this.connected_) {\n      this.sendListen_(listenSpec);\n    }\n  }\n\n  private sendGet_(index: number) {\n    const get = this.outstandingGets_[index];\n    this.sendRequest('g', get.request, (message: { [k: string]: unknown }) => {\n      delete this.outstandingGets_[index];\n      this.outstandingGetCount_--;\n      if (this.outstandingGetCount_ === 0) {\n        this.outstandingGets_ = [];\n      }\n      if (get.onComplete) {\n        get.onComplete(message);\n      }\n    });\n  }\n\n  private sendListen_(listenSpec: ListenSpec) {\n    const query = listenSpec.query;\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n    this.log_('Listen on ' + pathString + ' for ' + queryId);\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n\n    const action = 'q';\n\n    // Only bother to send query if it's non-default.\n    if (listenSpec.tag) {\n      req['q'] = query._queryObject;\n      req['t'] = listenSpec.tag;\n    }\n\n    req[/*hash*/ 'h'] = listenSpec.hashFn();\n\n    this.sendRequest(action, req, (message: { [k: string]: unknown }) => {\n      const payload: unknown = message[/*data*/ 'd'];\n      const status = message[/*status*/ 's'] as string;\n\n      // print warnings in any case...\n      PersistentConnection.warnOnListenWarnings_(payload, query);\n\n      const currentListenSpec =\n        this.listens.get(pathString) &&\n        this.listens.get(pathString)!.get(queryId);\n      // only trigger actions if the listen hasn't been removed and readded\n      if (currentListenSpec === listenSpec) {\n        this.log_('listen response', message);\n\n        if (status !== 'ok') {\n          this.removeListen_(pathString, queryId);\n        }\n\n        if (listenSpec.onComplete) {\n          listenSpec.onComplete(status, payload);\n        }\n      }\n    });\n  }\n\n  private static warnOnListenWarnings_(payload: unknown, query: QueryContext) {\n    if (payload && typeof payload === 'object' && contains(payload, 'w')) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const warnings = safeGet(payload as any, 'w');\n      if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\n        const indexSpec =\n          '\".indexOn\": \"' + query._queryParams.getIndex().toString() + '\"';\n        const indexPath = query._path.toString();\n        warn(\n          `Using an unspecified index. Your data will be downloaded and ` +\n            `filtered on the client. Consider adding ${indexSpec} at ` +\n            `${indexPath} to your security rules for better performance.`\n        );\n      }\n    }\n  }\n\n  refreshAuthToken(token: string) {\n    this.authToken_ = token;\n    this.log_('Auth token refreshed');\n    if (this.authToken_) {\n      this.tryAuth();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\n      //the credential so we dont become authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unauth', {}, () => {});\n      }\n    }\n\n    this.reduceReconnectDelayIfAdminCredential_(token);\n  }\n\n  private reduceReconnectDelayIfAdminCredential_(credential: string) {\n    // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\n    // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\n    const isFirebaseSecret = credential && credential.length === 40;\n    if (isFirebaseSecret || isAdmin(credential)) {\n      this.log_(\n        'Admin auth credential detected.  Reducing max reconnect time.'\n      );\n      this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n    }\n  }\n\n  refreshAppCheckToken(token: string | null) {\n    this.appCheckToken_ = token;\n    this.log_('App check token refreshed');\n    if (this.appCheckToken_) {\n      this.tryAppCheck();\n    } else {\n      //If we're connected we want to let the server know to unauthenticate us.\n      //If we're not connected, simply delete the credential so we dont become\n      // authenticated next time we connect.\n      if (this.connected_) {\n        this.sendRequest('unappeck', {}, () => {});\n      }\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\n   * a auth revoked (the connection is closed).\n   */\n  tryAuth() {\n    if (this.connected_ && this.authToken_) {\n      const token = this.authToken_;\n      const authMethod = isValidFormat(token) ? 'auth' : 'gauth';\n      const requestData: { [k: string]: unknown } = { cred: token };\n      if (this.authOverride_ === null) {\n        requestData['noauth'] = true;\n      } else if (typeof this.authOverride_ === 'object') {\n        requestData['authvar'] = this.authOverride_;\n      }\n      this.sendRequest(\n        authMethod,\n        requestData,\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n\n          if (this.authToken_ === token) {\n            if (status === 'ok') {\n              this.invalidAuthTokenCount_ = 0;\n            } else {\n              // Triggers reconnect and force refresh for auth token\n              this.onAuthRevoked_(status, data);\n            }\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Attempts to authenticate with the given token. If the authentication\n   * attempt fails, it's triggered like the token was revoked (the connection is\n   * closed).\n   */\n  tryAppCheck() {\n    if (this.connected_ && this.appCheckToken_) {\n      this.sendRequest(\n        'appcheck',\n        { 'token': this.appCheckToken_ },\n        (res: { [k: string]: unknown }) => {\n          const status = res[/*status*/ 's'] as string;\n          const data = (res[/*data*/ 'd'] as string) || 'error';\n          if (status === 'ok') {\n            this.invalidAppCheckTokenCount_ = 0;\n          } else {\n            this.onAppCheckRevoked_(status, data);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  unlisten(query: QueryContext, tag: number | null) {\n    const pathString = query._path.toString();\n    const queryId = query._queryIdentifier;\n\n    this.log_('Unlisten called for ' + pathString + ' ' + queryId);\n\n    assert(\n      query._queryParams.isDefault() || !query._queryParams.loadsAllData(),\n      'unlisten() called for non-default but complete query'\n    );\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && this.connected_) {\n      this.sendUnlisten_(pathString, queryId, query._queryObject, tag);\n    }\n  }\n\n  private sendUnlisten_(\n    pathString: string,\n    queryId: string,\n    queryObj: object,\n    tag: number | null\n  ) {\n    this.log_('Unlisten on ' + pathString + ' for ' + queryId);\n\n    const req: { [k: string]: unknown } = { /*path*/ p: pathString };\n    const action = 'n';\n    // Only bother sending queryId if it's non-default.\n    if (tag) {\n      req['q'] = queryObj;\n      req['t'] = tag;\n    }\n\n    this.sendRequest(action, req);\n  }\n\n  onDisconnectPut(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('o', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'o',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectMerge(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('om', pathString, data, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'om',\n        data,\n        onComplete\n      });\n    }\n  }\n\n  onDisconnectCancel(\n    pathString: string,\n    onComplete?: (a: string, b: string) => void\n  ) {\n    this.initConnection_();\n\n    if (this.connected_) {\n      this.sendOnDisconnect_('oc', pathString, null, onComplete);\n    } else {\n      this.onDisconnectRequestQueue_.push({\n        pathString,\n        action: 'oc',\n        data: null,\n        onComplete\n      });\n    }\n  }\n\n  private sendOnDisconnect_(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string) => void\n  ) {\n    const request = { /*path*/ p: pathString, /*data*/ d: data };\n    this.log_('onDisconnect ' + action, request);\n    this.sendRequest(action, request, (response: { [k: string]: unknown }) => {\n      if (onComplete) {\n        setTimeout(() => {\n          onComplete(\n            response[/*status*/ 's'] as string,\n            response[/* data */ 'd'] as string\n          );\n        }, Math.floor(0));\n      }\n    });\n  }\n\n  put(\n    pathString: string,\n    data: unknown,\n    onComplete?: (a: string, b: string) => void,\n    hash?: string\n  ) {\n    this.putInternal('p', pathString, data, onComplete, hash);\n  }\n\n  merge(\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.putInternal('m', pathString, data, onComplete, hash);\n  }\n\n  putInternal(\n    action: string,\n    pathString: string,\n    data: unknown,\n    onComplete: (a: string, b: string | null) => void,\n    hash?: string\n  ) {\n    this.initConnection_();\n\n    const request: { [k: string]: unknown } = {\n      /*path*/ p: pathString,\n      /*data*/ d: data\n    };\n\n    if (hash !== undefined) {\n      request[/*hash*/ 'h'] = hash;\n    }\n\n    // TODO: Only keep track of the most recent put for a given path?\n    this.outstandingPuts_.push({\n      action,\n      request,\n      onComplete\n    });\n\n    this.outstandingPutCount_++;\n    const index = this.outstandingPuts_.length - 1;\n\n    if (this.connected_) {\n      this.sendPut_(index);\n    } else {\n      this.log_('Buffering put: ' + pathString);\n    }\n  }\n\n  private sendPut_(index: number) {\n    const action = this.outstandingPuts_[index].action;\n    const request = this.outstandingPuts_[index].request;\n    const onComplete = this.outstandingPuts_[index].onComplete;\n    this.outstandingPuts_[index].queued = this.connected_;\n\n    this.sendRequest(action, request, (message: { [k: string]: unknown }) => {\n      this.log_(action + ' response', message);\n\n      delete this.outstandingPuts_[index];\n      this.outstandingPutCount_--;\n\n      // Clean up array occasionally.\n      if (this.outstandingPutCount_ === 0) {\n        this.outstandingPuts_ = [];\n      }\n\n      if (onComplete) {\n        onComplete(\n          message[/*status*/ 's'] as string,\n          message[/* data */ 'd'] as string\n        );\n      }\n    });\n  }\n\n  reportStats(stats: { [k: string]: unknown }) {\n    // If we're not connected, we just drop the stats.\n    if (this.connected_) {\n      const request = { /*counters*/ c: stats };\n      this.log_('reportStats', request);\n\n      this.sendRequest(/*stats*/ 's', request, result => {\n        const status = result[/*status*/ 's'];\n        if (status !== 'ok') {\n          const errorReason = result[/* data */ 'd'];\n          this.log_('reportStats', 'Error sending stats: ' + errorReason);\n        }\n      });\n    }\n  }\n\n  private onDataMessage_(message: { [k: string]: unknown }) {\n    if ('r' in message) {\n      // this is a response\n      this.log_('from server: ' + stringify(message));\n      const reqNum = message['r'] as string;\n      const onResponse = this.requestCBHash_[reqNum];\n      if (onResponse) {\n        delete this.requestCBHash_[reqNum];\n        onResponse(message[/*body*/ 'b']);\n      }\n    } else if ('error' in message) {\n      throw 'A server-side error has occurred: ' + message['error'];\n    } else if ('a' in message) {\n      // a and b are action and body, respectively\n      this.onDataPush_(message['a'] as string, message['b'] as {});\n    }\n  }\n\n  private onDataPush_(action: string, body: { [k: string]: unknown }) {\n    this.log_('handleServerMessage', action, body);\n    if (action === 'd') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge*/ false,\n        body['t'] as number\n      );\n    } else if (action === 'm') {\n      this.onDataUpdate_(\n        body[/*path*/ 'p'] as string,\n        body[/*data*/ 'd'],\n        /*isMerge=*/ true,\n        body['t'] as number\n      );\n    } else if (action === 'c') {\n      this.onListenRevoked_(\n        body[/*path*/ 'p'] as string,\n        body[/*query*/ 'q'] as unknown[]\n      );\n    } else if (action === 'ac') {\n      this.onAuthRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'apc') {\n      this.onAppCheckRevoked_(\n        body[/*status code*/ 's'] as string,\n        body[/* explanation */ 'd'] as string\n      );\n    } else if (action === 'sd') {\n      this.onSecurityDebugPacket_(body);\n    } else {\n      error(\n        'Unrecognized action received from server: ' +\n          stringify(action) +\n          '\\nAre you using the latest client?'\n      );\n    }\n  }\n\n  private onReady_(timestamp: number, sessionId: string) {\n    this.log_('connection ready');\n    this.connected_ = true;\n    this.lastConnectionEstablishedTime_ = new Date().getTime();\n    this.handleTimestamp_(timestamp);\n    this.lastSessionId = sessionId;\n    if (this.firstConnection_) {\n      this.sendConnectStats_();\n    }\n    this.restoreState_();\n    this.firstConnection_ = false;\n    this.onConnectStatus_(true);\n  }\n\n  private scheduleConnect_(timeout: number) {\n    assert(\n      !this.realtime_,\n      \"Scheduling a connect when we're already connected/ing?\"\n    );\n\n    if (this.establishConnectionTimer_) {\n      clearTimeout(this.establishConnectionTimer_);\n    }\n\n    // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\n    // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\n\n    this.establishConnectionTimer_ = setTimeout(() => {\n      this.establishConnectionTimer_ = null;\n      this.establishConnection_();\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }, Math.floor(timeout)) as any;\n  }\n\n  private initConnection_() {\n    if (!this.realtime_ && this.firstConnection_) {\n      this.scheduleConnect_(0);\n    }\n  }\n\n  private onVisible_(visible: boolean) {\n    // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\n    if (\n      visible &&\n      !this.visible_ &&\n      this.reconnectDelay_ === this.maxReconnectDelay_\n    ) {\n      this.log_('Window became visible.  Reducing delay.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n    this.visible_ = visible;\n  }\n\n  private onOnline_(online: boolean) {\n    if (online) {\n      this.log_('Browser went online.');\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    } else {\n      this.log_('Browser went offline.  Killing connection.');\n      if (this.realtime_) {\n        this.realtime_.close();\n      }\n    }\n  }\n\n  private onRealtimeDisconnect_() {\n    this.log_('data client disconnected');\n    this.connected_ = false;\n    this.realtime_ = null;\n\n    // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\n    this.cancelSentTransactions_();\n\n    // Clear out the pending requests.\n    this.requestCBHash_ = {};\n\n    if (this.shouldReconnect_()) {\n      if (!this.visible_) {\n        this.log_(\"Window isn't visible.  Delaying reconnect.\");\n        this.reconnectDelay_ = this.maxReconnectDelay_;\n        this.lastConnectionAttemptTime_ = new Date().getTime();\n      } else if (this.lastConnectionEstablishedTime_) {\n        // If we've been connected long enough, reset reconnect delay to minimum.\n        const timeSinceLastConnectSucceeded =\n          new Date().getTime() - this.lastConnectionEstablishedTime_;\n        if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\n          this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n        }\n        this.lastConnectionEstablishedTime_ = null;\n      }\n\n      const timeSinceLastConnectAttempt =\n        new Date().getTime() - this.lastConnectionAttemptTime_;\n      let reconnectDelay = Math.max(\n        0,\n        this.reconnectDelay_ - timeSinceLastConnectAttempt\n      );\n      reconnectDelay = Math.random() * reconnectDelay;\n\n      this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\n      this.scheduleConnect_(reconnectDelay);\n\n      // Adjust reconnect delay for next time.\n      this.reconnectDelay_ = Math.min(\n        this.maxReconnectDelay_,\n        this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER\n      );\n    }\n    this.onConnectStatus_(false);\n  }\n\n  private async establishConnection_() {\n    if (this.shouldReconnect_()) {\n      this.log_('Making a connection attempt');\n      this.lastConnectionAttemptTime_ = new Date().getTime();\n      this.lastConnectionEstablishedTime_ = null;\n      const onDataMessage = this.onDataMessage_.bind(this);\n      const onReady = this.onReady_.bind(this);\n      const onDisconnect = this.onRealtimeDisconnect_.bind(this);\n      const connId = this.id + ':' + PersistentConnection.nextConnectionId_++;\n      const lastSessionId = this.lastSessionId;\n      let canceled = false;\n      let connection: Connection | null = null;\n      const closeFn = function () {\n        if (connection) {\n          connection.close();\n        } else {\n          canceled = true;\n          onDisconnect();\n        }\n      };\n      const sendRequestFn = function (msg: object) {\n        assert(\n          connection,\n          \"sendRequest call when we're not connected not allowed.\"\n        );\n        connection.sendRequest(msg);\n      };\n\n      this.realtime_ = {\n        close: closeFn,\n        sendRequest: sendRequestFn\n      };\n\n      const forceRefresh = this.forceTokenRefresh_;\n      this.forceTokenRefresh_ = false;\n\n      try {\n        // First fetch auth and app check token, and establish connection after\n        // fetching the token was successful\n        const [authToken, appCheckToken] = await Promise.all([\n          this.authTokenProvider_.getToken(forceRefresh),\n          this.appCheckTokenProvider_.getToken(forceRefresh)\n        ]);\n\n        if (!canceled) {\n          log('getToken() completed. Creating connection.');\n          this.authToken_ = authToken && authToken.accessToken;\n          this.appCheckToken_ = appCheckToken && appCheckToken.token;\n          connection = new Connection(\n            connId,\n            this.repoInfo_,\n            this.applicationId_,\n            this.appCheckToken_,\n            this.authToken_,\n            onDataMessage,\n            onReady,\n            onDisconnect,\n            /* onKill= */ reason => {\n              warn(reason + ' (' + this.repoInfo_.toString() + ')');\n              this.interrupt(SERVER_KILL_INTERRUPT_REASON);\n            },\n            lastSessionId\n          );\n        } else {\n          log('getToken() completed but was canceled');\n        }\n      } catch (error) {\n        this.log_('Failed to get token: ' + error);\n        if (!canceled) {\n          if (this.repoInfo_.nodeAdmin) {\n            // This may be a critical error for the Admin Node.js SDK, so log a warning.\n            // But getToken() may also just have temporarily failed, so we still want to\n            // continue retrying.\n            warn(error);\n          }\n          closeFn();\n        }\n      }\n    }\n  }\n\n  interrupt(reason: string) {\n    log('Interrupting connection for reason: ' + reason);\n    this.interruptReasons_[reason] = true;\n    if (this.realtime_) {\n      this.realtime_.close();\n    } else {\n      if (this.establishConnectionTimer_) {\n        clearTimeout(this.establishConnectionTimer_);\n        this.establishConnectionTimer_ = null;\n      }\n      if (this.connected_) {\n        this.onRealtimeDisconnect_();\n      }\n    }\n  }\n\n  resume(reason: string) {\n    log('Resuming connection for reason: ' + reason);\n    delete this.interruptReasons_[reason];\n    if (isEmpty(this.interruptReasons_)) {\n      this.reconnectDelay_ = RECONNECT_MIN_DELAY;\n      if (!this.realtime_) {\n        this.scheduleConnect_(0);\n      }\n    }\n  }\n\n  private handleTimestamp_(timestamp: number) {\n    const delta = timestamp - new Date().getTime();\n    this.onServerInfoUpdate_({ serverTimeOffset: delta });\n  }\n\n  private cancelSentTransactions_() {\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      const put = this.outstandingPuts_[i];\n      if (put && /*hash*/ 'h' in put.request && put.queued) {\n        if (put.onComplete) {\n          put.onComplete('disconnect');\n        }\n\n        delete this.outstandingPuts_[i];\n        this.outstandingPutCount_--;\n      }\n    }\n\n    // Clean up array occasionally.\n    if (this.outstandingPutCount_ === 0) {\n      this.outstandingPuts_ = [];\n    }\n  }\n\n  private onListenRevoked_(pathString: string, query?: unknown[]) {\n    // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\n    let queryId;\n    if (!query) {\n      queryId = 'default';\n    } else {\n      queryId = query.map(q => ObjectToUniqueKey(q)).join('$');\n    }\n    const listen = this.removeListen_(pathString, queryId);\n    if (listen && listen.onComplete) {\n      listen.onComplete('permission_denied');\n    }\n  }\n\n  private removeListen_(pathString: string, queryId: string): ListenSpec {\n    const normalizedPathString = new Path(pathString).toString(); // normalize path.\n    let listen;\n    if (this.listens.has(normalizedPathString)) {\n      const map = this.listens.get(normalizedPathString)!;\n      listen = map.get(queryId);\n      map.delete(queryId);\n      if (map.size === 0) {\n        this.listens.delete(normalizedPathString);\n      }\n    } else {\n      // all listens for this path has already been removed\n      listen = undefined;\n    }\n    return listen;\n  }\n\n  private onAuthRevoked_(statusCode: string, explanation: string) {\n    log('Auth token revoked: ' + statusCode + '/' + explanation);\n    this.authToken_ = null;\n    this.forceTokenRefresh_ = true;\n    this.realtime_.close();\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAuthTokenCount_++;\n      if (this.invalidAuthTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        // Set a long reconnect delay because recovery is unlikely\n        this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\n\n        // Notify the auth token provider that the token is invalid, which will log\n        // a warning\n        this.authTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onAppCheckRevoked_(statusCode: string, explanation: string) {\n    log('App check token revoked: ' + statusCode + '/' + explanation);\n    this.appCheckToken_ = null;\n    this.forceTokenRefresh_ = true;\n    // Note: We don't close the connection as the developer may not have\n    // enforcement enabled. The backend closes connections with enforcements.\n    if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\n      // We'll wait a couple times before logging the warning / increasing the\n      // retry period since oauth tokens will report as \"invalid\" if they're\n      // just expired. Plus there may be transient issues that resolve themselves.\n      this.invalidAppCheckTokenCount_++;\n      if (this.invalidAppCheckTokenCount_ >= INVALID_TOKEN_THRESHOLD) {\n        this.appCheckTokenProvider_.notifyForInvalidToken();\n      }\n    }\n  }\n\n  private onSecurityDebugPacket_(body: { [k: string]: unknown }) {\n    if (this.securityDebugCallback_) {\n      this.securityDebugCallback_(body);\n    } else {\n      if ('msg' in body) {\n        console.log(\n          'FIREBASE: ' + (body['msg'] as string).replace('\\n', '\\nFIREBASE: ')\n        );\n      }\n    }\n  }\n\n  private restoreState_() {\n    //Re-authenticate ourselves if we have a credential stored.\n    this.tryAuth();\n    this.tryAppCheck();\n\n    // Puts depend on having received the corresponding data update from the server before they complete, so we must\n    // make sure to send listens before puts.\n    for (const queries of this.listens.values()) {\n      for (const listenSpec of queries.values()) {\n        this.sendListen_(listenSpec);\n      }\n    }\n\n    for (let i = 0; i < this.outstandingPuts_.length; i++) {\n      if (this.outstandingPuts_[i]) {\n        this.sendPut_(i);\n      }\n    }\n\n    while (this.onDisconnectRequestQueue_.length) {\n      const request = this.onDisconnectRequestQueue_.shift();\n      this.sendOnDisconnect_(\n        request.action,\n        request.pathString,\n        request.data,\n        request.onComplete\n      );\n    }\n\n    for (let i = 0; i < this.outstandingGets_.length; i++) {\n      if (this.outstandingGets_[i]) {\n        this.sendGet_(i);\n      }\n    }\n  }\n\n  /**\n   * Sends client stats for first connection\n   */\n  private sendConnectStats_() {\n    const stats: { [k: string]: number } = {};\n\n    let clientName = 'js';\n    if (isNodeSdk()) {\n      if (this.repoInfo_.nodeAdmin) {\n        clientName = 'admin_node';\n      } else {\n        clientName = 'node';\n      }\n    }\n\n    stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\n\n    if (isMobileCordova()) {\n      stats['framework.cordova'] = 1;\n    } else if (isReactNative()) {\n      stats['framework.reactnative'] = 1;\n    }\n    this.reportStats(stats);\n  }\n\n  private shouldReconnect_(): boolean {\n    const online = OnlineMonitor.getInstance().currentlyOnline();\n    return isEmpty(this.interruptReasons_) && online;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\nimport { Index } from './indexes/Index';\n\n/**\n * Node is an interface defining the common functionality for nodes in\n * a DataSnapshot.\n *\n * @interface\n */\nexport interface Node {\n  /**\n   * Whether this node is a leaf node.\n   * @returns Whether this is a leaf node.\n   */\n  isLeafNode(): boolean;\n\n  /**\n   * Gets the priority of the node.\n   * @returns The priority of the node.\n   */\n  getPriority(): Node;\n\n  /**\n   * Returns a duplicate node with the new priority.\n   * @param newPriorityNode - New priority to set for the node.\n   * @returns Node with new priority.\n   */\n  updatePriority(newPriorityNode: Node): Node;\n\n  /**\n   * Returns the specified immediate child, or null if it doesn't exist.\n   * @param childName - The name of the child to retrieve.\n   * @returns The retrieved child, or an empty node.\n   */\n  getImmediateChild(childName: string): Node;\n\n  /**\n   * Returns a child by path, or null if it doesn't exist.\n   * @param path - The path of the child to retrieve.\n   * @returns The retrieved child or an empty node.\n   */\n  getChild(path: Path): Node;\n\n  /**\n   * Returns the name of the child immediately prior to the specified childNode, or null.\n   * @param childName - The name of the child to find the predecessor of.\n   * @param childNode - The node to find the predecessor of.\n   * @param index - The index to use to determine the predecessor\n   * @returns The name of the predecessor child, or null if childNode is the first child.\n   */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string | null;\n\n  /**\n   * Returns a duplicate node, with the specified immediate child updated.\n   * Any value in the node will be removed.\n   * @param childName - The name of the child to update.\n   * @param newChildNode - The new child node\n   * @returns The updated node.\n   */\n  updateImmediateChild(childName: string, newChildNode: Node): Node;\n\n  /**\n   * Returns a duplicate node, with the specified child updated.  Any value will\n   * be removed.\n   * @param path - The path of the child to update.\n   * @param newChildNode - The new child node, which may be an empty node\n   * @returns The updated node.\n   */\n  updateChild(path: Path, newChildNode: Node): Node;\n\n  /**\n   * True if the immediate child specified exists\n   */\n  hasChild(childName: string): boolean;\n\n  /**\n   * @returns True if this node has no value or children.\n   */\n  isEmpty(): boolean;\n\n  /**\n   * @returns The number of children of this node.\n   */\n  numChildren(): number;\n\n  /**\n   * Calls action for each child.\n   * @param action - Action to be called for\n   * each child.  It's passed the child name and the child node.\n   * @returns The first truthy value return by action, or the last falsey one\n   */\n  forEachChild(index: Index, action: (a: string, b: Node) => void): unknown;\n\n  /**\n   * @param exportFormat - True for export format (also wire protocol format).\n   * @returns Value of this node as JSON.\n   */\n  val(exportFormat?: boolean): unknown;\n\n  /**\n   * @returns hash representing the node contents.\n   */\n  hash(): string;\n\n  /**\n   * @param other - Another node\n   * @returns -1 for less than, 0 for equal, 1 for greater than other\n   */\n  compareTo(other: Node): number;\n\n  /**\n   * @returns Whether or not this snapshot equals other\n   */\n  equals(other: Node): boolean;\n\n  /**\n   * @returns This node, with the specified index now available\n   */\n  withIndex(indexDefinition: Index): Node;\n\n  isIndexed(indexDefinition: Index): boolean;\n}\n\nexport class NamedNode {\n  constructor(public name: string, public node: Node) {}\n\n  static Wrap(name: string, node: Node) {\n    return new NamedNode(name, node);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Comparator } from '../../util/SortedMap';\nimport { MIN_NAME } from '../../util/util';\nimport { Node, NamedNode } from '../Node';\n\nexport abstract class Index {\n  abstract compare(a: NamedNode, b: NamedNode): number;\n\n  abstract isDefinedOn(node: Node): boolean;\n\n  /**\n   * @returns A standalone comparison function for\n   * this index\n   */\n  getCompare(): Comparator<NamedNode> {\n    return this.compare.bind(this);\n  }\n\n  /**\n   * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\n   * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\n   *\n   *\n   * @returns True if the portion of the snapshot being indexed changed between oldNode and newNode\n   */\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    const oldWrapped = new NamedNode(MIN_NAME, oldNode);\n    const newWrapped = new NamedNode(MIN_NAME, newNode);\n    return this.compare(oldWrapped, newWrapped) !== 0;\n  }\n\n  /**\n   * @returns a node wrapper that will sort equal to or less than\n   * any other node wrapper, using this index\n   */\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n\n  /**\n   * @returns a node wrapper that will sort greater than or equal to\n   * any other node wrapper, using this index\n   */\n  abstract maxPost(): NamedNode;\n\n  abstract makePost(indexValue: unknown, name: string): NamedNode;\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  abstract toString(): string;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { ChildrenNode } from '../ChildrenNode';\nimport { Node, NamedNode } from '../Node';\n\nimport { Index } from './Index';\n\nlet __EMPTY_NODE: ChildrenNode;\n\nexport class KeyIndex extends Index {\n  static get __EMPTY_NODE() {\n    return __EMPTY_NODE;\n  }\n\n  static set __EMPTY_NODE(val) {\n    __EMPTY_NODE = val;\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    return nameCompare(a.name, b.name);\n  }\n  isDefinedOn(node: Node): boolean {\n    // We could probably return true here (since every node has a key), but it's never called\n    // so just leaving unimplemented for now.\n    throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return false; // The key for a node never changes.\n  }\n  minPost() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // TODO: This should really be created once and cached in a static property, but\n    // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\n    return new NamedNode(MAX_NAME, __EMPTY_NODE);\n  }\n\n  makePost(indexValue: string, name: string): NamedNode {\n    assert(\n      typeof indexValue === 'string',\n      'KeyIndex indexValue must always be a string.'\n    );\n    // We just use empty node, but it'll never be compared, since our comparator only looks at name.\n    return new NamedNode(indexValue, __EMPTY_NODE);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.key';\n  }\n}\n\nexport const KEY_INDEX = new KeyIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Implementation of an immutable SortedMap using a Left-leaning\n * Red-Black Tree, adapted from the implementation in Mugs\n * (http://mads379.github.com/mugs/) by Mads Hartmann Jensen\n * (mads379\\@gmail.com).\n *\n * Original paper on Left-leaning Red-Black Trees:\n *   http://www.cs.princeton.edu/~rs/talks/LLRB/LLRB.pdf\n *\n * Invariant 1: No red node has a red child\n * Invariant 2: Every leaf path has the same number of black nodes\n * Invariant 3: Only the left child can be red (left leaning)\n */\n\n// TODO: There are some improvements I'd like to make to improve memory / perf:\n//  * Create two prototypes, LLRedNode and LLBlackNode, instead of storing a\n//    color property in every node.\n// TODO: It would also be good (and possibly necessary) to create a base\n// interface for LLRBNode and LLRBEmptyNode.\n\nexport type Comparator<K> = (key1: K, key2: K) => number;\n\n/**\n * An iterator over an LLRBNode.\n */\nexport class SortedMapIterator<K, V, T> {\n  private nodeStack_: Array<LLRBNode<K, V> | LLRBEmptyNode<K, V>> = [];\n\n  /**\n   * @param node - Node to iterate.\n   * @param isReverse_ - Whether or not to iterate in reverse\n   */\n  constructor(\n    node: LLRBNode<K, V> | LLRBEmptyNode<K, V>,\n    startKey: K | null,\n    comparator: Comparator<K>,\n    private isReverse_: boolean,\n    private resultGenerator_: ((k: K, v: V) => T) | null = null\n  ) {\n    let cmp = 1;\n    while (!node.isEmpty()) {\n      node = node as LLRBNode<K, V>;\n      cmp = startKey ? comparator(node.key, startKey) : 1;\n      // flip the comparison if we're going in reverse\n      if (isReverse_) {\n        cmp *= -1;\n      }\n\n      if (cmp < 0) {\n        // This node is less than our start key. ignore it\n        if (this.isReverse_) {\n          node = node.left;\n        } else {\n          node = node.right;\n        }\n      } else if (cmp === 0) {\n        // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\n        this.nodeStack_.push(node);\n        break;\n      } else {\n        // This node is greater than our start key, add it to the stack and move to the next one\n        this.nodeStack_.push(node);\n        if (this.isReverse_) {\n          node = node.right;\n        } else {\n          node = node.left;\n        }\n      }\n    }\n  }\n\n  getNext(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    let node = this.nodeStack_.pop();\n    let result: T;\n    if (this.resultGenerator_) {\n      result = this.resultGenerator_(node.key, node.value);\n    } else {\n      result = { key: node.key, value: node.value } as unknown as T;\n    }\n\n    if (this.isReverse_) {\n      node = node.left;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.right;\n      }\n    } else {\n      node = node.right;\n      while (!node.isEmpty()) {\n        this.nodeStack_.push(node);\n        node = node.left;\n      }\n    }\n\n    return result;\n  }\n\n  hasNext(): boolean {\n    return this.nodeStack_.length > 0;\n  }\n\n  peek(): T {\n    if (this.nodeStack_.length === 0) {\n      return null;\n    }\n\n    const node = this.nodeStack_[this.nodeStack_.length - 1];\n    if (this.resultGenerator_) {\n      return this.resultGenerator_(node.key, node.value);\n    } else {\n      return { key: node.key, value: node.value } as unknown as T;\n    }\n  }\n}\n\n/**\n * Represents a node in a Left-leaning Red-Black tree.\n */\nexport class LLRBNode<K, V> {\n  color: boolean;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n\n  /**\n   * @param key - Key associated with this node.\n   * @param value - Value associated with this node.\n   * @param color - Whether this node is red.\n   * @param left - Left child.\n   * @param right - Right child.\n   */\n  constructor(\n    public key: K,\n    public value: V,\n    color: boolean | null,\n    left?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right?: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ) {\n    this.color = color != null ? color : LLRBNode.RED;\n    this.left =\n      left != null ? left : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n    this.right =\n      right != null ? right : (SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>);\n  }\n\n  static RED = true;\n  static BLACK = false;\n\n  /**\n   * Returns a copy of the current node, optionally replacing pieces of it.\n   *\n   * @param key - New key for the node, or null.\n   * @param value - New value for the node, or null.\n   * @param color - New color for the node, or null.\n   * @param left - New left child for the node, or null.\n   * @param right - New right child for the node, or null.\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBNode<K, V> {\n    return new LLRBNode(\n      key != null ? key : this.key,\n      value != null ? value : this.value,\n      color != null ? color : this.color,\n      left != null ? left : this.left,\n      right != null ? right : this.right\n    );\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return this.left.count() + 1 + this.right.count();\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   *   node.  If it returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return (\n      this.left.inorderTraversal(action) ||\n      !!action(this.key, this.value) ||\n      this.right.inorderTraversal(action)\n    );\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return (\n      this.right.reverseTraversal(action) ||\n      action(this.key, this.value) ||\n      this.left.reverseTraversal(action)\n    );\n  }\n\n  /**\n   * @returns The minimum node in the tree.\n   */\n  private min_(): LLRBNode<K, V> {\n    if (this.left.isEmpty()) {\n      return this;\n    } else {\n      return (this.left as LLRBNode<K, V>).min_();\n    }\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  minKey(): K {\n    return this.min_().key;\n  }\n\n  /**\n   * @returns The maximum key in the tree.\n   */\n  maxKey(): K {\n    if (this.right.isEmpty()) {\n      return this.key;\n    } else {\n      return this.right.maxKey();\n    }\n  }\n\n  /**\n   * @param key - Key to insert.\n   * @param value - Value to insert.\n   * @param comparator - Comparator.\n   * @returns New tree, with the key/value added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    const cmp = comparator(key, n.key);\n    if (cmp < 0) {\n      n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\n    } else if (cmp === 0) {\n      n = n.copy(null, value, null, null, null);\n    } else {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        n.right.insert(key, value, comparator)\n      );\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns New tree, with the minimum key removed.\n   */\n  private removeMin_(): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    if (this.left.isEmpty()) {\n      return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n    }\n    let n: LLRBNode<K, V> = this;\n    if (!n.left.isRed_() && !n.left.left.isRed_()) {\n      n = n.moveRedLeft_();\n    }\n    n = n.copy(null, null, null, (n.left as LLRBNode<K, V>).removeMin_(), null);\n    return n.fixUp_();\n  }\n\n  /**\n   * @param key - The key of the item to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with the specified item removed.\n   */\n  remove(\n    key: K,\n    comparator: Comparator<K>\n  ): LLRBNode<K, V> | LLRBEmptyNode<K, V> {\n    let n, smallest;\n    n = this;\n    if (comparator(key, n.key) < 0) {\n      if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\n        n = n.moveRedLeft_();\n      }\n      n = n.copy(null, null, null, n.left.remove(key, comparator), null);\n    } else {\n      if (n.left.isRed_()) {\n        n = n.rotateRight_();\n      }\n      if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\n        n = n.moveRedRight_();\n      }\n      if (comparator(key, n.key) === 0) {\n        if (n.right.isEmpty()) {\n          return SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>;\n        } else {\n          smallest = (n.right as LLRBNode<K, V>).min_();\n          n = n.copy(\n            smallest.key,\n            smallest.value,\n            null,\n            null,\n            (n.right as LLRBNode<K, V>).removeMin_()\n          );\n        }\n      }\n      n = n.copy(null, null, null, null, n.right.remove(key, comparator));\n    }\n    return n.fixUp_();\n  }\n\n  /**\n   * @returns Whether this is a RED node.\n   */\n  isRed_(): boolean {\n    return this.color;\n  }\n\n  /**\n   * @returns New tree after performing any needed rotations.\n   */\n  private fixUp_(): LLRBNode<K, V> {\n    let n: LLRBNode<K, V> = this;\n    if (n.right.isRed_() && !n.left.isRed_()) {\n      n = n.rotateLeft_();\n    }\n    if (n.left.isRed_() && n.left.left.isRed_()) {\n      n = n.rotateRight_();\n    }\n    if (n.left.isRed_() && n.right.isRed_()) {\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedLeft.\n   */\n  private moveRedLeft_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.right.left.isRed_()) {\n      n = n.copy(\n        null,\n        null,\n        null,\n        null,\n        (n.right as LLRBNode<K, V>).rotateRight_()\n      );\n      n = n.rotateLeft_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after moveRedRight.\n   */\n  private moveRedRight_(): LLRBNode<K, V> {\n    let n = this.colorFlip_();\n    if (n.left.left.isRed_()) {\n      n = n.rotateRight_();\n      n = n.colorFlip_();\n    }\n    return n;\n  }\n\n  /**\n   * @returns New tree, after rotateLeft.\n   */\n  private rotateLeft_(): LLRBNode<K, V> {\n    const nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\n    return this.right.copy(null, null, this.color, nl, null) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns New tree, after rotateRight.\n   */\n  private rotateRight_(): LLRBNode<K, V> {\n    const nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\n    return this.left.copy(null, null, this.color, null, nr) as LLRBNode<K, V>;\n  }\n\n  /**\n   * @returns Newt ree, after colorFlip.\n   */\n  private colorFlip_(): LLRBNode<K, V> {\n    const left = this.left.copy(null, null, !this.left.color, null, null);\n    const right = this.right.copy(null, null, !this.right.color, null, null);\n    return this.copy(null, null, !this.color, left, right);\n  }\n\n  /**\n   * For testing.\n   *\n   * @returns True if all is well.\n   */\n  private checkMaxDepth_(): boolean {\n    const blackDepth = this.check_();\n    return Math.pow(2.0, blackDepth) <= this.count() + 1;\n  }\n\n  check_(): number {\n    if (this.isRed_() && this.left.isRed_()) {\n      throw new Error(\n        'Red node has red child(' + this.key + ',' + this.value + ')'\n      );\n    }\n    if (this.right.isRed_()) {\n      throw new Error(\n        'Right child of (' + this.key + ',' + this.value + ') is red'\n      );\n    }\n    const blackDepth = this.left.check_();\n    if (blackDepth !== this.right.check_()) {\n      throw new Error('Black depths differ');\n    } else {\n      return blackDepth + (this.isRed_() ? 0 : 1);\n    }\n  }\n}\n\n/**\n * Represents an empty node (a leaf node in the Red-Black Tree).\n */\nexport class LLRBEmptyNode<K, V> {\n  key: K;\n  value: V;\n  left: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  right: LLRBNode<K, V> | LLRBEmptyNode<K, V>;\n  color: boolean;\n\n  /**\n   * Returns a copy of the current node.\n   *\n   * @returns The node copy.\n   */\n  copy(\n    key: K | null,\n    value: V | null,\n    color: boolean | null,\n    left: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null,\n    right: LLRBNode<K, V> | LLRBEmptyNode<K, V> | null\n  ): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key/value added.\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @param comparator - Comparator.\n   * @returns New tree, with item added.\n   */\n  insert(key: K, value: V, comparator: Comparator<K>): LLRBNode<K, V> {\n    return new LLRBNode(key, value, null);\n  }\n\n  /**\n   * Returns a copy of the tree, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @param comparator - Comparator.\n   * @returns New tree, with item removed.\n   */\n  remove(key: K, comparator: Comparator<K>): LLRBEmptyNode<K, V> {\n    return this;\n  }\n\n  /**\n   * @returns The total number of nodes in the tree.\n   */\n  count(): number {\n    return 0;\n  }\n\n  /**\n   * @returns True if the tree is empty.\n   */\n  isEmpty(): boolean {\n    return true;\n  }\n\n  /**\n   * Traverses the tree in key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return false;\n  }\n\n  /**\n   * Traverses the tree in reverse key order and calls the specified action function\n   * for each node.\n   *\n   * @param action - Callback function to be called for each\n   * node.  If it returns true, traversal is aborted.\n   * @returns True if traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return false;\n  }\n\n  minKey(): null {\n    return null;\n  }\n\n  maxKey(): null {\n    return null;\n  }\n\n  check_(): number {\n    return 0;\n  }\n\n  /**\n   * @returns Whether this node is red.\n   */\n  isRed_() {\n    return false;\n  }\n}\n\n/**\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\n * tree.\n */\nexport class SortedMap<K, V> {\n  /**\n   * Always use the same empty node, to reduce memory.\n   */\n  static EMPTY_NODE = new LLRBEmptyNode();\n\n  /**\n   * @param comparator_ - Key comparator.\n   * @param root_ - Optional root node for the map.\n   */\n  constructor(\n    private comparator_: Comparator<K>,\n    private root_:\n      | LLRBNode<K, V>\n      | LLRBEmptyNode<K, V> = SortedMap.EMPTY_NODE as LLRBEmptyNode<K, V>\n  ) {}\n\n  /**\n   * Returns a copy of the map, with the specified key/value added or replaced.\n   * (TODO: We should perhaps rename this method to 'put')\n   *\n   * @param key - Key to be added.\n   * @param value - Value to be added.\n   * @returns New map, with item added.\n   */\n  insert(key: K, value: V): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .insert(key, value, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns a copy of the map, with the specified key removed.\n   *\n   * @param key - The key to remove.\n   * @returns New map, with item removed.\n   */\n  remove(key: K): SortedMap<K, V> {\n    return new SortedMap(\n      this.comparator_,\n      this.root_\n        .remove(key, this.comparator_)\n        .copy(null, null, LLRBNode.BLACK, null, null)\n    );\n  }\n\n  /**\n   * Returns the value of the node with the given key, or null.\n   *\n   * @param key - The key to look up.\n   * @returns The value of the node with the given key, or null if the\n   * key doesn't exist.\n   */\n  get(key: K): V | null {\n    let cmp;\n    let node = this.root_;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        return node.value;\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        node = node.right;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Returns the key of the item *before* the specified key, or null if key is the first item.\n   * @param key - The key to find the predecessor of\n   * @returns The predecessor key.\n   */\n  getPredecessorKey(key: K): K | null {\n    let cmp,\n      node = this.root_,\n      rightParent = null;\n    while (!node.isEmpty()) {\n      cmp = this.comparator_(key, node.key);\n      if (cmp === 0) {\n        if (!node.left.isEmpty()) {\n          node = node.left;\n          while (!node.right.isEmpty()) {\n            node = node.right;\n          }\n          return node.key;\n        } else if (rightParent) {\n          return rightParent.key;\n        } else {\n          return null; // first item.\n        }\n      } else if (cmp < 0) {\n        node = node.left;\n      } else if (cmp > 0) {\n        rightParent = node;\n        node = node.right;\n      }\n    }\n\n    throw new Error(\n      'Attempted to find predecessor key for a nonexistent key.  What gives?'\n    );\n  }\n\n  /**\n   * @returns True if the map is empty.\n   */\n  isEmpty(): boolean {\n    return this.root_.isEmpty();\n  }\n\n  /**\n   * @returns The total number of nodes in the map.\n   */\n  count(): number {\n    return this.root_.count();\n  }\n\n  /**\n   * @returns The minimum key in the map.\n   */\n  minKey(): K | null {\n    return this.root_.minKey();\n  }\n\n  /**\n   * @returns The maximum key in the map.\n   */\n  maxKey(): K | null {\n    return this.root_.maxKey();\n  }\n\n  /**\n   * Traverses the map in key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns The first truthy value returned by action, or the last falsey\n   *   value returned by action\n   */\n  inorderTraversal(action: (k: K, v: V) => unknown): boolean {\n    return this.root_.inorderTraversal(action);\n  }\n\n  /**\n   * Traverses the map in reverse key order and calls the specified action function\n   * for each key/value pair.\n   *\n   * @param action - Callback function to be called\n   * for each key/value pair.  If action returns true, traversal is aborted.\n   * @returns True if the traversal was aborted.\n   */\n  reverseTraversal(action: (k: K, v: V) => void): boolean {\n    return this.root_.reverseTraversal(action);\n  }\n\n  /**\n   * Returns an iterator over the SortedMap.\n   * @returns The iterator.\n   */\n  getIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      false,\n      resultGenerator\n    );\n  }\n\n  getReverseIteratorFrom<T>(\n    key: K,\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      key,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n\n  getReverseIterator<T>(\n    resultGenerator?: (k: K, v: V) => T\n  ): SortedMapIterator<K, V, T> {\n    return new SortedMapIterator(\n      this.root_,\n      null,\n      this.comparator_,\n      true,\n      resultGenerator\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../util/util';\n\nimport { NamedNode } from './Node';\n\nexport function NAME_ONLY_COMPARATOR(left: NamedNode, right: NamedNode) {\n  return nameCompare(left.name, right.name);\n}\n\nexport function NAME_COMPARATOR(left: string, right: string) {\n  return nameCompare(left, right);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { doubleToIEEE754String } from '../util/util';\n\nimport { Node } from './Node';\n\nlet MAX_NODE: Node;\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport const priorityHashText = function (priority: string | number): string {\n  if (typeof priority === 'number') {\n    return 'number:' + doubleToIEEE754String(priority);\n  } else {\n    return 'string:' + priority;\n  }\n};\n\n/**\n * Validates that a priority snapshot Node is valid.\n */\nexport const validatePriorityNode = function (priorityNode: Node) {\n  if (priorityNode.isLeafNode()) {\n    const val = priorityNode.val();\n    assert(\n      typeof val === 'string' ||\n        typeof val === 'number' ||\n        (typeof val === 'object' && contains(val as Indexable, '.sv')),\n      'Priority must be a string or number.'\n    );\n  } else {\n    assert(\n      priorityNode === MAX_NODE || priorityNode.isEmpty(),\n      'priority of unexpected type.'\n    );\n  }\n  // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\n  assert(\n    priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(),\n    \"Priority nodes can't have a priority of their own.\"\n  );\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport {\n  Path,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\nimport { doubleToIEEE754String, sha1 } from '../util/util';\n\nimport { ChildrenNodeConstructor } from './ChildrenNode';\nimport { Index } from './indexes/Index';\nimport { Node } from './Node';\nimport { priorityHashText, validatePriorityNode } from './snap';\n\nlet __childrenNodeConstructor: ChildrenNodeConstructor;\n\n/**\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\n * implements Node and stores the value of the node (a string,\n * number, or boolean) accessible via getValue().\n */\nexport class LeafNode implements Node {\n  static set __childrenNodeConstructor(val: ChildrenNodeConstructor) {\n    __childrenNodeConstructor = val;\n  }\n\n  static get __childrenNodeConstructor() {\n    return __childrenNodeConstructor;\n  }\n\n  /**\n   * The sort order for comparing leaf nodes of different types. If two leaf nodes have\n   * the same type, the comparison falls back to their value\n   */\n  static VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\n\n  private lazyHash_: string | null = null;\n\n  /**\n   * @param value_ - The value to store in this leaf node. The object type is\n   * possible in the event of a deferred value\n   * @param priorityNode_ - The priority of this node.\n   */\n  constructor(\n    private readonly value_: string | number | boolean | Indexable,\n    private priorityNode_: Node = LeafNode.__childrenNodeConstructor.EMPTY_NODE\n  ) {\n    assert(\n      this.value_ !== undefined && this.value_ !== null,\n      \"LeafNode shouldn't be created with null/undefined value.\"\n    );\n\n    validatePriorityNode(this.priorityNode_);\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return true;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    return new LeafNode(this.value_, newPriorityNode);\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    if (pathIsEmpty(path)) {\n      return this;\n    } else if (pathGetFront(path) === '.priority') {\n      return this.priorityNode_;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\n    }\n  }\n  hasChild(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(childName: string, childNode: Node): null {\n    return null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else if (newChildNode.isEmpty() && childName !== '.priority') {\n      return this;\n    } else {\n      return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(\n        childName,\n        newChildNode\n      ).updatePriority(this.priorityNode_);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else if (newChildNode.isEmpty() && front !== '.priority') {\n      return this;\n    } else {\n      assert(\n        front !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n\n      return this.updateImmediateChild(\n        front,\n        LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(\n          pathPopFront(path),\n          newChildNode\n        )\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return 0;\n  }\n\n  /** @inheritDoc */\n  forEachChild(index: Index, action: (s: string, n: Node) => void): boolean {\n    return false;\n  }\n  val(exportFormat?: boolean): {} {\n    if (exportFormat && !this.getPriority().isEmpty()) {\n      return {\n        '.value': this.getValue(),\n        '.priority': this.getPriority().val()\n      };\n    } else {\n      return this.getValue();\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.priorityNode_.isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.priorityNode_.val() as number | string) +\n          ':';\n      }\n\n      const type = typeof this.value_;\n      toHash += type + ':';\n      if (type === 'number') {\n        toHash += doubleToIEEE754String(this.value_ as number);\n      } else {\n        toHash += this.value_;\n      }\n      this.lazyHash_ = sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /**\n   * Returns the value of the leaf node.\n   * @returns The value of the node.\n   */\n  getValue(): Indexable | string | number | boolean {\n    return this.value_;\n  }\n  compareTo(other: Node): number {\n    if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\n      return 1;\n    } else if (other instanceof LeafNode.__childrenNodeConstructor) {\n      return -1;\n    } else {\n      assert(other.isLeafNode(), 'Unknown node type');\n      return this.compareToLeafNode_(other as LeafNode);\n    }\n  }\n\n  /**\n   * Comparison specifically for two leaf nodes\n   */\n  private compareToLeafNode_(otherLeaf: LeafNode): number {\n    const otherLeafType = typeof otherLeaf.value_;\n    const thisLeafType = typeof this.value_;\n    const otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\n    const thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\n    assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\n    assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\n    if (otherIndex === thisIndex) {\n      // Same type, compare values\n      if (thisLeafType === 'object') {\n        // Deferred value nodes are all equal, but we should also never get to this point...\n        return 0;\n      } else {\n        // Note that this works because true > false, all others are number or string comparisons\n        if (this.value_ < otherLeaf.value_) {\n          return -1;\n        } else if (this.value_ === otherLeaf.value_) {\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    } else {\n      return thisIndex - otherIndex;\n    }\n  }\n  withIndex(): Node {\n    return this;\n  }\n  isIndexed(): boolean {\n    return true;\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      const otherLeaf = other as LeafNode;\n      return (\n        this.value_ === otherLeaf.value_ &&\n        this.priorityNode_.equals(otherLeaf.priorityNode_)\n      );\n    } else {\n      return false;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare, MAX_NAME } from '../../util/util';\nimport { LeafNode } from '../LeafNode';\nimport { NamedNode, Node } from '../Node';\n\nimport { Index } from './Index';\n\nlet nodeFromJSON: (a: unknown) => Node;\nlet MAX_NODE: Node;\n\nexport function setNodeFromJSON(val: (a: unknown) => Node) {\n  nodeFromJSON = val;\n}\n\nexport function setMaxNode(val: Node) {\n  MAX_NODE = val;\n}\n\nexport class PriorityIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const aPriority = a.node.getPriority();\n    const bPriority = b.node.getPriority();\n    const indexCmp = aPriority.compareTo(bPriority);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getPriority().isEmpty();\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.getPriority().equals(newNode.getPriority());\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE));\n  }\n\n  makePost(indexValue: unknown, name: string): NamedNode {\n    const priorityNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.priority';\n  }\n}\n\nexport const PRIORITY_INDEX = new PriorityIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LLRBNode, SortedMap } from '../util/SortedMap';\n\nimport { NamedNode } from './Node';\n\nconst LOG_2 = Math.log(2);\n\nclass Base12Num {\n  count: number;\n  private current_: number;\n  private bits_: number;\n\n  constructor(length: number) {\n    const logBase2 = (num: number) =>\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      parseInt((Math.log(num) / LOG_2) as any, 10);\n    const bitMask = (bits: number) => parseInt(Array(bits + 1).join('1'), 2);\n    this.count = logBase2(length + 1);\n    this.current_ = this.count - 1;\n    const mask = bitMask(this.count);\n    this.bits_ = (length + 1) & mask;\n  }\n\n  nextBitIsOne(): boolean {\n    //noinspection JSBitwiseOperatorUsage\n    const result = !(this.bits_ & (0x1 << this.current_));\n    this.current_--;\n    return result;\n  }\n}\n\n/**\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\n * function\n *\n * Uses the algorithm described in the paper linked here:\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\n *\n * @param childList - Unsorted list of children\n * @param cmp - The comparison method to be used\n * @param keyFn - An optional function to extract K from a node wrapper, if K's\n * type is not NamedNode\n * @param mapSortFn - An optional override for comparator used by the generated sorted map\n */\nexport const buildChildSet = function <K, V>(\n  childList: NamedNode[],\n  cmp: (a: NamedNode, b: NamedNode) => number,\n  keyFn?: (a: NamedNode) => K,\n  mapSortFn?: (a: K, b: K) => number\n): SortedMap<K, V> {\n  childList.sort(cmp);\n\n  const buildBalancedTree = function (\n    low: number,\n    high: number\n  ): LLRBNode<K, V> | null {\n    const length = high - low;\n    let namedNode: NamedNode;\n    let key: K;\n    if (length === 0) {\n      return null;\n    } else if (length === 1) {\n      namedNode = childList[low];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        null,\n        null\n      );\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const middle = parseInt((length / 2) as any, 10) + low;\n      const left = buildBalancedTree(low, middle);\n      const right = buildBalancedTree(middle + 1, high);\n      namedNode = childList[middle];\n      key = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      return new LLRBNode(\n        key,\n        namedNode.node as unknown as V,\n        LLRBNode.BLACK,\n        left,\n        right\n      );\n    }\n  };\n\n  const buildFrom12Array = function (base12: Base12Num): LLRBNode<K, V> {\n    let node: LLRBNode<K, V> = null;\n    let root = null;\n    let index = childList.length;\n\n    const buildPennant = function (chunkSize: number, color: boolean) {\n      const low = index - chunkSize;\n      const high = index;\n      index -= chunkSize;\n      const childTree = buildBalancedTree(low + 1, high);\n      const namedNode = childList[low];\n      const key: K = keyFn ? keyFn(namedNode) : (namedNode as unknown as K);\n      attachPennant(\n        new LLRBNode(\n          key,\n          namedNode.node as unknown as V,\n          color,\n          null,\n          childTree\n        )\n      );\n    };\n\n    const attachPennant = function (pennant: LLRBNode<K, V>) {\n      if (node) {\n        node.left = pennant;\n        node = pennant;\n      } else {\n        root = pennant;\n        node = pennant;\n      }\n    };\n\n    for (let i = 0; i < base12.count; ++i) {\n      const isOne = base12.nextBitIsOne();\n      // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\n      const chunkSize = Math.pow(2, base12.count - (i + 1));\n      if (isOne) {\n        buildPennant(chunkSize, LLRBNode.BLACK);\n      } else {\n        // current == 2\n        buildPennant(chunkSize, LLRBNode.BLACK);\n        buildPennant(chunkSize, LLRBNode.RED);\n      }\n    }\n    return root;\n  };\n\n  const base12 = new Base12Num(childList.length);\n  const root = buildFrom12Array(base12);\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return new SortedMap<K, V>(mapSortFn || (cmp as any), root);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, contains, map, safeGet } from '@firebase/util';\n\nimport { SortedMap } from '../util/SortedMap';\n\nimport { buildChildSet } from './childSet';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX } from './indexes/KeyIndex';\nimport { PRIORITY_INDEX } from './indexes/PriorityIndex';\nimport { NamedNode, Node } from './Node';\n\nlet _defaultIndexMap: IndexMap;\n\nconst fallbackObject = {};\n\nexport class IndexMap {\n  /**\n   * The default IndexMap for nodes without a priority\n   */\n  static get Default(): IndexMap {\n    assert(\n      fallbackObject && PRIORITY_INDEX,\n      'ChildrenNode.ts has not been loaded'\n    );\n    _defaultIndexMap =\n      _defaultIndexMap ||\n      new IndexMap(\n        { '.priority': fallbackObject },\n        { '.priority': PRIORITY_INDEX }\n      );\n    return _defaultIndexMap;\n  }\n\n  constructor(\n    private indexes_: {\n      [k: string]: SortedMap<NamedNode, Node> | /*FallbackType*/ object;\n    },\n    private indexSet_: { [k: string]: Index }\n  ) {}\n\n  get(indexKey: string): SortedMap<NamedNode, Node> | null {\n    const sortedMap = safeGet(this.indexes_, indexKey);\n    if (!sortedMap) {\n      throw new Error('No index defined for ' + indexKey);\n    }\n\n    if (sortedMap instanceof SortedMap) {\n      return sortedMap;\n    } else {\n      // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\n      // regular child map\n      return null;\n    }\n  }\n\n  hasIndex(indexDefinition: Index): boolean {\n    return contains(this.indexSet_, indexDefinition.toString());\n  }\n\n  addIndex(\n    indexDefinition: Index,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    assert(\n      indexDefinition !== KEY_INDEX,\n      \"KeyIndex always exists and isn't meant to be added to the IndexMap.\"\n    );\n    const childList = [];\n    let sawIndexedValue = false;\n    const iter = existingChildren.getIterator(NamedNode.Wrap);\n    let next = iter.getNext();\n    while (next) {\n      sawIndexedValue =\n        sawIndexedValue || indexDefinition.isDefinedOn(next.node);\n      childList.push(next);\n      next = iter.getNext();\n    }\n    let newIndex;\n    if (sawIndexedValue) {\n      newIndex = buildChildSet(childList, indexDefinition.getCompare());\n    } else {\n      newIndex = fallbackObject;\n    }\n    const indexName = indexDefinition.toString();\n    const newIndexSet = { ...this.indexSet_ };\n    newIndexSet[indexName] = indexDefinition;\n    const newIndexes = { ...this.indexes_ };\n    newIndexes[indexName] = newIndex;\n    return new IndexMap(newIndexes, newIndexSet);\n  }\n\n  /**\n   * Ensure that this node is properly tracked in any indexes that we're maintaining\n   */\n  addToIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>, indexName: string) => {\n        const index = safeGet(this.indexSet_, indexName);\n        assert(index, 'Missing index implementation for ' + indexName);\n        if (indexedChildren === fallbackObject) {\n          // Check to see if we need to index everything\n          if (index.isDefinedOn(namedNode.node)) {\n            // We need to build this index\n            const childList = [];\n            const iter = existingChildren.getIterator(NamedNode.Wrap);\n            let next = iter.getNext();\n            while (next) {\n              if (next.name !== namedNode.name) {\n                childList.push(next);\n              }\n              next = iter.getNext();\n            }\n            childList.push(namedNode);\n            return buildChildSet(childList, index.getCompare());\n          } else {\n            // No change, this remains a fallback\n            return fallbackObject;\n          }\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          let newChildren = indexedChildren;\n          if (existingSnap) {\n            newChildren = newChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          }\n          return newChildren.insert(namedNode, namedNode.node);\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n\n  /**\n   * Create a new IndexMap instance with the given value removed\n   */\n  removeFromIndexes(\n    namedNode: NamedNode,\n    existingChildren: SortedMap<string, Node>\n  ): IndexMap {\n    const newIndexes = map(\n      this.indexes_,\n      (indexedChildren: SortedMap<NamedNode, Node>) => {\n        if (indexedChildren === fallbackObject) {\n          // This is the fallback. Just return it, nothing to do in this case\n          return indexedChildren;\n        } else {\n          const existingSnap = existingChildren.get(namedNode.name);\n          if (existingSnap) {\n            return indexedChildren.remove(\n              new NamedNode(namedNode.name, existingSnap)\n            );\n          } else {\n            // No record of this child\n            return indexedChildren;\n          }\n        }\n      }\n    );\n    return new IndexMap(newIndexes, this.indexSet_);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathGetLength, pathPopFront } from '../util/Path';\nimport { SortedMap, SortedMapIterator } from '../util/SortedMap';\nimport { MAX_NAME, MIN_NAME, sha1 } from '../util/util';\n\nimport { NAME_COMPARATOR } from './comparators';\nimport { Index } from './indexes/Index';\nimport { KEY_INDEX, KeyIndex } from './indexes/KeyIndex';\nimport {\n  PRIORITY_INDEX,\n  setMaxNode as setPriorityMaxNode\n} from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\nimport { priorityHashText, setMaxNode, validatePriorityNode } from './snap';\n\nexport interface ChildrenNodeConstructor {\n  new (\n    children_: SortedMap<string, Node>,\n    priorityNode_: Node | null,\n    indexMap_: IndexMap\n  ): ChildrenNode;\n  EMPTY_NODE: ChildrenNode;\n}\n\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\n\nlet EMPTY_NODE: ChildrenNode;\n\n/**\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\n * (i.e. nodes with children).  It implements Node and stores the\n * list of children in the children property, sorted by child name.\n */\nexport class ChildrenNode implements Node {\n  private lazyHash_: string | null = null;\n\n  static get EMPTY_NODE(): ChildrenNode {\n    return (\n      EMPTY_NODE ||\n      (EMPTY_NODE = new ChildrenNode(\n        new SortedMap<string, Node>(NAME_COMPARATOR),\n        null,\n        IndexMap.Default\n      ))\n    );\n  }\n\n  /**\n   * @param children_ - List of children of this node..\n   * @param priorityNode_ - The priority of this node (as a snapshot node).\n   */\n  constructor(\n    private readonly children_: SortedMap<string, Node>,\n    private readonly priorityNode_: Node | null,\n    private indexMap_: IndexMap\n  ) {\n    /**\n     * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\n     * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\n     * class instead of an empty ChildrenNode.\n     */\n    if (this.priorityNode_) {\n      validatePriorityNode(this.priorityNode_);\n    }\n\n    if (this.children_.isEmpty()) {\n      assert(\n        !this.priorityNode_ || this.priorityNode_.isEmpty(),\n        'An empty node cannot have a priority'\n      );\n    }\n  }\n\n  /** @inheritDoc */\n  isLeafNode(): boolean {\n    return false;\n  }\n\n  /** @inheritDoc */\n  getPriority(): Node {\n    return this.priorityNode_ || EMPTY_NODE;\n  }\n\n  /** @inheritDoc */\n  updatePriority(newPriorityNode: Node): Node {\n    if (this.children_.isEmpty()) {\n      // Don't allow priorities on empty nodes\n      return this;\n    } else {\n      return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\n    }\n  }\n\n  /** @inheritDoc */\n  getImmediateChild(childName: string): Node {\n    // Hack to treat priority as a regular child\n    if (childName === '.priority') {\n      return this.getPriority();\n    } else {\n      const child = this.children_.get(childName);\n      return child === null ? EMPTY_NODE : child;\n    }\n  }\n\n  /** @inheritDoc */\n  getChild(path: Path): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return this;\n    }\n\n    return this.getImmediateChild(front).getChild(pathPopFront(path));\n  }\n\n  /** @inheritDoc */\n  hasChild(childName: string): boolean {\n    return this.children_.get(childName) !== null;\n  }\n\n  /** @inheritDoc */\n  updateImmediateChild(childName: string, newChildNode: Node): Node {\n    assert(newChildNode, 'We should always be passing snapshot nodes');\n    if (childName === '.priority') {\n      return this.updatePriority(newChildNode);\n    } else {\n      const namedNode = new NamedNode(childName, newChildNode);\n      let newChildren, newIndexMap;\n      if (newChildNode.isEmpty()) {\n        newChildren = this.children_.remove(childName);\n        newIndexMap = this.indexMap_.removeFromIndexes(\n          namedNode,\n          this.children_\n        );\n      } else {\n        newChildren = this.children_.insert(childName, newChildNode);\n        newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\n      }\n\n      const newPriority = newChildren.isEmpty()\n        ? EMPTY_NODE\n        : this.priorityNode_;\n      return new ChildrenNode(newChildren, newPriority, newIndexMap);\n    }\n  }\n\n  /** @inheritDoc */\n  updateChild(path: Path, newChildNode: Node): Node {\n    const front = pathGetFront(path);\n    if (front === null) {\n      return newChildNode;\n    } else {\n      assert(\n        pathGetFront(path) !== '.priority' || pathGetLength(path) === 1,\n        '.priority must be the last token in a path'\n      );\n      const newImmediateChild = this.getImmediateChild(front).updateChild(\n        pathPopFront(path),\n        newChildNode\n      );\n      return this.updateImmediateChild(front, newImmediateChild);\n    }\n  }\n\n  /** @inheritDoc */\n  isEmpty(): boolean {\n    return this.children_.isEmpty();\n  }\n\n  /** @inheritDoc */\n  numChildren(): number {\n    return this.children_.count();\n  }\n\n  private static INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\n\n  /** @inheritDoc */\n  val(exportFormat?: boolean): object {\n    if (this.isEmpty()) {\n      return null;\n    }\n\n    const obj: { [k: string]: unknown } = {};\n    let numKeys = 0,\n      maxKey = 0,\n      allIntegerKeys = true;\n    this.forEachChild(PRIORITY_INDEX, (key: string, childNode: Node) => {\n      obj[key] = childNode.val(exportFormat);\n\n      numKeys++;\n      if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\n        maxKey = Math.max(maxKey, Number(key));\n      } else {\n        allIntegerKeys = false;\n      }\n    });\n\n    if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\n      // convert to array.\n      const array: unknown[] = [];\n      // eslint-disable-next-line guard-for-in\n      for (const key in obj) {\n        array[key as unknown as number] = obj[key];\n      }\n\n      return array;\n    } else {\n      if (exportFormat && !this.getPriority().isEmpty()) {\n        obj['.priority'] = this.getPriority().val();\n      }\n      return obj;\n    }\n  }\n\n  /** @inheritDoc */\n  hash(): string {\n    if (this.lazyHash_ === null) {\n      let toHash = '';\n      if (!this.getPriority().isEmpty()) {\n        toHash +=\n          'priority:' +\n          priorityHashText(this.getPriority().val() as string | number) +\n          ':';\n      }\n\n      this.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n        const childHash = childNode.hash();\n        if (childHash !== '') {\n          toHash += ':' + key + ':' + childHash;\n        }\n      });\n\n      this.lazyHash_ = toHash === '' ? '' : sha1(toHash);\n    }\n    return this.lazyHash_;\n  }\n\n  /** @inheritDoc */\n  getPredecessorChildName(\n    childName: string,\n    childNode: Node,\n    index: Index\n  ): string {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      const predecessor = idx.getPredecessorKey(\n        new NamedNode(childName, childNode)\n      );\n      return predecessor ? predecessor.name : null;\n    } else {\n      return this.children_.getPredecessorKey(childName);\n    }\n  }\n\n  getFirstChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const minKey = idx.minKey();\n      return minKey && minKey.name;\n    } else {\n      return this.children_.minKey();\n    }\n  }\n\n  getFirstChild(indexDefinition: Index): NamedNode | null {\n    const minKey = this.getFirstChildName(indexDefinition);\n    if (minKey) {\n      return new NamedNode(minKey, this.children_.get(minKey));\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Given an index, return the key name of the largest value we have, according to that index\n   */\n  getLastChildName(indexDefinition: Index): string | null {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      const maxKey = idx.maxKey();\n      return maxKey && maxKey.name;\n    } else {\n      return this.children_.maxKey();\n    }\n  }\n\n  getLastChild(indexDefinition: Index): NamedNode | null {\n    const maxKey = this.getLastChildName(indexDefinition);\n    if (maxKey) {\n      return new NamedNode(maxKey, this.children_.get(maxKey));\n    } else {\n      return null;\n    }\n  }\n  forEachChild(\n    index: Index,\n    action: (key: string, node: Node) => boolean | void\n  ): boolean {\n    const idx = this.resolveIndex_(index);\n    if (idx) {\n      return idx.inorderTraversal(wrappedNode => {\n        return action(wrappedNode.name, wrappedNode.node);\n      });\n    } else {\n      return this.children_.inorderTraversal(action);\n    }\n  }\n\n  getIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\n  }\n\n  getIteratorFrom(\n    startPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getIteratorFrom(startPost, key => key);\n    } else {\n      const iterator = this.children_.getIteratorFrom(\n        startPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, startPost) < 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n\n  getReverseIterator(\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    return this.getReverseIteratorFrom(\n      indexDefinition.maxPost(),\n      indexDefinition\n    );\n  }\n\n  getReverseIteratorFrom(\n    endPost: NamedNode,\n    indexDefinition: Index\n  ): SortedMapIterator<string | NamedNode, Node, NamedNode> {\n    const idx = this.resolveIndex_(indexDefinition);\n    if (idx) {\n      return idx.getReverseIteratorFrom(endPost, key => {\n        return key;\n      });\n    } else {\n      const iterator = this.children_.getReverseIteratorFrom(\n        endPost.name,\n        NamedNode.Wrap\n      );\n      let next = iterator.peek();\n      while (next != null && indexDefinition.compare(next, endPost) > 0) {\n        iterator.getNext();\n        next = iterator.peek();\n      }\n      return iterator;\n    }\n  }\n  compareTo(other: ChildrenNode): number {\n    if (this.isEmpty()) {\n      if (other.isEmpty()) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (other.isLeafNode() || other.isEmpty()) {\n      return 1;\n    } else if (other === MAX_NODE) {\n      return -1;\n    } else {\n      // Must be another node with children.\n      return 0;\n    }\n  }\n  withIndex(indexDefinition: Index): Node {\n    if (\n      indexDefinition === KEY_INDEX ||\n      this.indexMap_.hasIndex(indexDefinition)\n    ) {\n      return this;\n    } else {\n      const newIndexMap = this.indexMap_.addIndex(\n        indexDefinition,\n        this.children_\n      );\n      return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\n    }\n  }\n  isIndexed(index: Index): boolean {\n    return index === KEY_INDEX || this.indexMap_.hasIndex(index);\n  }\n  equals(other: Node): boolean {\n    if (other === this) {\n      return true;\n    } else if (other.isLeafNode()) {\n      return false;\n    } else {\n      const otherChildrenNode = other as ChildrenNode;\n      if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\n        return false;\n      } else if (\n        this.children_.count() === otherChildrenNode.children_.count()\n      ) {\n        const thisIter = this.getIterator(PRIORITY_INDEX);\n        const otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\n        let thisCurrent = thisIter.getNext();\n        let otherCurrent = otherIter.getNext();\n        while (thisCurrent && otherCurrent) {\n          if (\n            thisCurrent.name !== otherCurrent.name ||\n            !thisCurrent.node.equals(otherCurrent.node)\n          ) {\n            return false;\n          }\n          thisCurrent = thisIter.getNext();\n          otherCurrent = otherIter.getNext();\n        }\n        return thisCurrent === null && otherCurrent === null;\n      } else {\n        return false;\n      }\n    }\n  }\n\n  /**\n   * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\n   * instead.\n   *\n   */\n  private resolveIndex_(\n    indexDefinition: Index\n  ): SortedMap<NamedNode, Node> | null {\n    if (indexDefinition === KEY_INDEX) {\n      return null;\n    } else {\n      return this.indexMap_.get(indexDefinition.toString());\n    }\n  }\n}\n\nexport class MaxNode extends ChildrenNode {\n  constructor() {\n    super(\n      new SortedMap<string, Node>(NAME_COMPARATOR),\n      ChildrenNode.EMPTY_NODE,\n      IndexMap.Default\n    );\n  }\n\n  compareTo(other: Node): number {\n    if (other === this) {\n      return 0;\n    } else {\n      return 1;\n    }\n  }\n\n  equals(other: Node): boolean {\n    // Not that we every compare it, but MAX_NODE is only ever equal to itself\n    return other === this;\n  }\n\n  getPriority(): MaxNode {\n    return this;\n  }\n\n  getImmediateChild(childName: string): ChildrenNode {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  isEmpty(): boolean {\n    return false;\n  }\n}\n\n/**\n * Marker that will sort higher than any other snapshot.\n */\nexport const MAX_NODE = new MaxNode();\n\n/**\n * Document NamedNode extensions\n */\ndeclare module './Node' {\n  interface NamedNode {\n    MIN: NamedNode;\n    MAX: NamedNode;\n  }\n}\n\nObject.defineProperties(NamedNode, {\n  MIN: {\n    value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\n  },\n  MAX: {\n    value: new NamedNode(MAX_NAME, MAX_NODE)\n  }\n});\n\n/**\n * Reference Extensions\n */\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\nLeafNode.__childrenNodeConstructor = ChildrenNode;\nsetMaxNode(MAX_NODE);\nsetPriorityMaxNode(MAX_NODE);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, assert } from '@firebase/util';\n\nimport { Indexable } from '../util/misc';\nimport { SortedMap } from '../util/SortedMap';\nimport { each } from '../util/util';\n\nimport { ChildrenNode } from './ChildrenNode';\nimport { buildChildSet } from './childSet';\nimport { NAME_COMPARATOR, NAME_ONLY_COMPARATOR } from './comparators';\nimport { PRIORITY_INDEX, setNodeFromJSON } from './indexes/PriorityIndex';\nimport { IndexMap } from './IndexMap';\nimport { LeafNode } from './LeafNode';\nimport { NamedNode, Node } from './Node';\n\nconst USE_HINZE = true;\n\n/**\n * Constructs a snapshot node representing the passed JSON and returns it.\n * @param json - JSON to create a node for.\n * @param priority - Optional priority to use.  This will be ignored if the\n * passed JSON contains a .priority property.\n */\nexport function nodeFromJSON(\n  json: unknown | null,\n  priority: unknown = null\n): Node {\n  if (json === null) {\n    return ChildrenNode.EMPTY_NODE;\n  }\n\n  if (typeof json === 'object' && '.priority' in json) {\n    priority = json['.priority'];\n  }\n\n  assert(\n    priority === null ||\n      typeof priority === 'string' ||\n      typeof priority === 'number' ||\n      (typeof priority === 'object' && '.sv' in (priority as object)),\n    'Invalid priority type found: ' + typeof priority\n  );\n\n  if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\n    json = json['.value'];\n  }\n\n  // Valid leaf nodes include non-objects or server-value wrapper objects\n  if (typeof json !== 'object' || '.sv' in json) {\n    const jsonLeaf = json as string | number | boolean | Indexable;\n    return new LeafNode(jsonLeaf, nodeFromJSON(priority));\n  }\n\n  if (!(json instanceof Array) && USE_HINZE) {\n    const children: NamedNode[] = [];\n    let childrenHavePriority = false;\n    const hinzeJsonObj = json;\n    each(hinzeJsonObj, (key, child) => {\n      if (key.substring(0, 1) !== '.') {\n        // Ignore metadata nodes\n        const childNode = nodeFromJSON(child);\n        if (!childNode.isEmpty()) {\n          childrenHavePriority =\n            childrenHavePriority || !childNode.getPriority().isEmpty();\n          children.push(new NamedNode(key, childNode));\n        }\n      }\n    });\n\n    if (children.length === 0) {\n      return ChildrenNode.EMPTY_NODE;\n    }\n\n    const childSet = buildChildSet(\n      children,\n      NAME_ONLY_COMPARATOR,\n      namedNode => namedNode.name,\n      NAME_COMPARATOR\n    ) as SortedMap<string, Node>;\n    if (childrenHavePriority) {\n      const sortedChildSet = buildChildSet(\n        children,\n        PRIORITY_INDEX.getCompare()\n      );\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        new IndexMap(\n          { '.priority': sortedChildSet },\n          { '.priority': PRIORITY_INDEX }\n        )\n      );\n    } else {\n      return new ChildrenNode(\n        childSet,\n        nodeFromJSON(priority),\n        IndexMap.Default\n      );\n    }\n  } else {\n    let node: Node = ChildrenNode.EMPTY_NODE;\n    each(json, (key: string, childData: unknown) => {\n      if (contains(json as object, key)) {\n        if (key.substring(0, 1) !== '.') {\n          // ignore metadata nodes.\n          const childNode = nodeFromJSON(childData);\n          if (childNode.isLeafNode() || !childNode.isEmpty()) {\n            node = node.updateImmediateChild(key, childNode);\n          }\n        }\n      }\n    });\n\n    return node.updatePriority(nodeFromJSON(priority));\n  }\n}\n\nsetNodeFromJSON(nodeFromJSON);\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Path, pathGetFront, pathIsEmpty, pathSlice } from '../../util/Path';\nimport { MAX_NAME, nameCompare } from '../../util/util';\nimport { ChildrenNode, MAX_NODE } from '../ChildrenNode';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class PathIndex extends Index {\n  constructor(private indexPath_: Path) {\n    super();\n\n    assert(\n      !pathIsEmpty(indexPath_) && pathGetFront(indexPath_) !== '.priority',\n      \"Can't create PathIndex with empty path or .priority key\"\n    );\n  }\n\n  protected extractChild(snap: Node): Node {\n    return snap.getChild(this.indexPath_);\n  }\n  isDefinedOn(node: Node): boolean {\n    return !node.getChild(this.indexPath_).isEmpty();\n  }\n  compare(a: NamedNode, b: NamedNode): number {\n    const aChild = this.extractChild(a.node);\n    const bChild = this.extractChild(b.node);\n    const indexCmp = aChild.compareTo(bChild);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    const node = ChildrenNode.EMPTY_NODE.updateChild(\n      this.indexPath_,\n      valueNode\n    );\n    return new NamedNode(name, node);\n  }\n  maxPost(): NamedNode {\n    const node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE);\n    return new NamedNode(MAX_NAME, node);\n  }\n  toString(): string {\n    return pathSlice(this.indexPath_, 0).join('/');\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { nameCompare } from '../../util/util';\nimport { NamedNode, Node } from '../Node';\nimport { nodeFromJSON } from '../nodeFromJSON';\n\nimport { Index } from './Index';\n\nexport class ValueIndex extends Index {\n  compare(a: NamedNode, b: NamedNode): number {\n    const indexCmp = a.node.compareTo(b.node);\n    if (indexCmp === 0) {\n      return nameCompare(a.name, b.name);\n    } else {\n      return indexCmp;\n    }\n  }\n  isDefinedOn(node: Node): boolean {\n    return true;\n  }\n  indexedValueChanged(oldNode: Node, newNode: Node): boolean {\n    return !oldNode.equals(newNode);\n  }\n  minPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MIN;\n  }\n  maxPost(): NamedNode {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (NamedNode as any).MAX;\n  }\n\n  makePost(indexValue: object, name: string): NamedNode {\n    const valueNode = nodeFromJSON(indexValue);\n    return new NamedNode(name, valueNode);\n  }\n\n  /**\n   * @returns String representation for inclusion in a query spec\n   */\n  toString(): string {\n    return '.value';\n  }\n}\n\nexport const VALUE_INDEX = new ValueIndex();\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport {\n  tryParseInt,\n  MAX_NAME,\n  MIN_NAME,\n  INTEGER_32_MIN,\n  INTEGER_32_MAX\n} from '../util/util';\n\n// Modeled after base64 web-safe chars, but ordered by ASCII.\nconst PUSH_CHARS =\n  '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\n\nconst MIN_PUSH_CHAR = '-';\n\nconst MAX_PUSH_CHAR = 'z';\n\nconst MAX_KEY_LEN = 786;\n\n/**\n * Fancy ID generator that creates 20-character string identifiers with the\n * following properties:\n *\n * 1. They're based on timestamp so that they sort *after* any existing ids.\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\n *    collide with other clients' IDs.\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\n *    that will sort properly).\n * 4. They're monotonically increasing. Even if you generate more than one in\n *    the same timestamp, the latter ones will sort after the former ones. We do\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\n *    in the case of a timestamp collision).\n */\nexport const nextPushId = (function () {\n  // Timestamp of last push, used to prevent local collisions if you push twice\n  // in one ms.\n  let lastPushTime = 0;\n\n  // We generate 72-bits of randomness which get turned into 12 characters and\n  // appended to the timestamp to prevent collisions with other clients. We\n  // store the last characters we generated because in the event of a collision,\n  // we'll use those same characters except \"incremented\" by one.\n  const lastRandChars: number[] = [];\n\n  return function (now: number) {\n    const duplicateTime = now === lastPushTime;\n    lastPushTime = now;\n\n    let i;\n    const timeStampChars = new Array(8);\n    for (i = 7; i >= 0; i--) {\n      timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\n      // NOTE: Can't use << here because javascript will convert to int and lose\n      // the upper bits.\n      now = Math.floor(now / 64);\n    }\n    assert(now === 0, 'Cannot push at time == 0');\n\n    let id = timeStampChars.join('');\n\n    if (!duplicateTime) {\n      for (i = 0; i < 12; i++) {\n        lastRandChars[i] = Math.floor(Math.random() * 64);\n      }\n    } else {\n      // If the timestamp hasn't changed since last push, use the same random\n      // number, except incremented by 1.\n      for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\n        lastRandChars[i] = 0;\n      }\n      lastRandChars[i]++;\n    }\n    for (i = 0; i < 12; i++) {\n      id += PUSH_CHARS.charAt(lastRandChars[i]);\n    }\n    assert(id.length === 20, 'nextPushId: Length should be 20.');\n\n    return id;\n  };\n})();\n\nexport const successor = function (key: string) {\n  if (key === '' + INTEGER_32_MAX) {\n    // See https://firebase.google.com/docs/database/web/lists-of-data#data-order\n    return MIN_PUSH_CHAR;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt + 1);\n  }\n  const next = new Array(key.length);\n\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n\n  if (next.length < MAX_KEY_LEN) {\n    next.push(MIN_PUSH_CHAR);\n    return next.join('');\n  }\n\n  let i = next.length - 1;\n\n  while (i >= 0 && next[i] === MAX_PUSH_CHAR) {\n    i--;\n  }\n\n  // `successor` was called on the largest possible key, so return the\n  // MAX_NAME, which sorts larger than all keys.\n  if (i === -1) {\n    return MAX_NAME;\n  }\n\n  const source = next[i];\n  const sourcePlusOne = PUSH_CHARS.charAt(PUSH_CHARS.indexOf(source) + 1);\n  next[i] = sourcePlusOne;\n\n  return next.slice(0, i + 1).join('');\n};\n\n// `key` is assumed to be non-empty.\nexport const predecessor = function (key: string) {\n  if (key === '' + INTEGER_32_MIN) {\n    return MIN_NAME;\n  }\n  const keyAsInt: number = tryParseInt(key);\n  if (keyAsInt != null) {\n    return '' + (keyAsInt - 1);\n  }\n  const next = new Array(key.length);\n  for (let i = 0; i < next.length; i++) {\n    next[i] = key.charAt(i);\n  }\n  // If `key` ends in `MIN_PUSH_CHAR`, the largest key lexicographically\n  // smaller than `key`, is `key[0:key.length - 1]`. The next key smaller\n  // than that, `predecessor(predecessor(key))`, is\n  //\n  // `key[0:key.length - 2] + (key[key.length - 1] - 1) + \\\n  //   { MAX_PUSH_CHAR repeated MAX_KEY_LEN - (key.length - 1) times }\n  //\n  // analogous to increment/decrement for base-10 integers.\n  //\n  // This works because lexigographic comparison works character-by-character,\n  // using length as a tie-breaker if one key is a prefix of the other.\n  if (next[next.length - 1] === MIN_PUSH_CHAR) {\n    if (next.length === 1) {\n      // See https://firebase.google.com/docs/database/web/lists-of-data#orderbykey\n      return '' + INTEGER_32_MAX;\n    }\n    delete next[next.length - 1];\n    return next.join('');\n  }\n  // Replace the last character with it's immediate predecessor, and\n  // fill the suffix of the key with MAX_PUSH_CHAR. This is the\n  // lexicographically largest possible key smaller than `key`.\n  next[next.length - 1] = PUSH_CHARS.charAt(\n    PUSH_CHARS.indexOf(next[next.length - 1]) - 1\n  );\n  return next.join('') + MAX_PUSH_CHAR.repeat(MAX_KEY_LEN - next.length);\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nexport const enum ChangeType {\n  /** Event type for a child added */\n  CHILD_ADDED = 'child_added',\n  /** Event type for a child removed */\n  CHILD_REMOVED = 'child_removed',\n  /** Event type for a child changed */\n  CHILD_CHANGED = 'child_changed',\n  /** Event type for a child moved */\n  CHILD_MOVED = 'child_moved',\n  /** Event type for a value change */\n  VALUE = 'value'\n}\n\nexport interface Change {\n  /** @param type - The event type */\n  type: ChangeType;\n  /** @param snapshotNode - The data */\n  snapshotNode: Node;\n  /** @param childName - The name for this child, if it's a child even */\n  childName?: string;\n  /** @param oldSnap - Used for intermediate processing of child changed events */\n  oldSnap?: Node;\n  /**  * @param prevName - The name for the previous child, if applicable */\n  prevName?: string | null;\n}\n\nexport function changeValue(snapshotNode: Node): Change {\n  return { type: ChangeType.VALUE, snapshotNode };\n}\n\nexport function changeChildAdded(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_ADDED, snapshotNode, childName };\n}\n\nexport function changeChildRemoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_REMOVED, snapshotNode, childName };\n}\n\nexport function changeChildChanged(\n  childName: string,\n  snapshotNode: Node,\n  oldSnap: Node\n): Change {\n  return {\n    type: ChangeType.CHILD_CHANGED,\n    snapshotNode,\n    childName,\n    oldSnap\n  };\n}\n\nexport function changeChildMoved(\n  childName: string,\n  snapshotNode: Node\n): Change {\n  return { type: ChangeType.CHILD_MOVED, snapshotNode, childName };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\n\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\n */\nexport class IndexedFilter implements NodeFilter {\n  constructor(private readonly index_: Index) {}\n\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    assert(\n      snap.isIndexed(this.index_),\n      'A node must be indexed if only a child is updated'\n    );\n    const oldChild = snap.getImmediateChild(key);\n    // Check if anything actually changed.\n    if (\n      oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))\n    ) {\n      // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\n      // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\n      // to avoid treating these cases as \"nothing changed.\"\n      if (oldChild.isEmpty() === newChild.isEmpty()) {\n        // Nothing changed.\n\n        // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\n        //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\n        return snap;\n      }\n    }\n\n    if (optChangeAccumulator != null) {\n      if (newChild.isEmpty()) {\n        if (snap.hasChild(key)) {\n          optChangeAccumulator.trackChildChange(\n            changeChildRemoved(key, oldChild)\n          );\n        } else {\n          assert(\n            snap.isLeafNode(),\n            'A child remove without an old child only makes sense on a leaf node'\n          );\n        }\n      } else if (oldChild.isEmpty()) {\n        optChangeAccumulator.trackChildChange(changeChildAdded(key, newChild));\n      } else {\n        optChangeAccumulator.trackChildChange(\n          changeChildChanged(key, newChild, oldChild)\n        );\n      }\n    }\n    if (snap.isLeafNode() && newChild.isEmpty()) {\n      return snap;\n    } else {\n      // Make sure the node is indexed\n      return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (optChangeAccumulator != null) {\n      if (!oldSnap.isLeafNode()) {\n        oldSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (!newSnap.hasChild(key)) {\n            optChangeAccumulator.trackChildChange(\n              changeChildRemoved(key, childNode)\n            );\n          }\n        });\n      }\n      if (!newSnap.isLeafNode()) {\n        newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n          if (oldSnap.hasChild(key)) {\n            const oldChild = oldSnap.getImmediateChild(key);\n            if (!oldChild.equals(childNode)) {\n              optChangeAccumulator.trackChildChange(\n                changeChildChanged(key, childNode, oldChild)\n              );\n            }\n          } else {\n            optChangeAccumulator.trackChildChange(\n              changeChildAdded(key, childNode)\n            );\n          }\n        });\n      }\n    }\n    return newSnap.withIndex(this.index_);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    if (oldSnap.isEmpty()) {\n      return ChildrenNode.EMPTY_NODE;\n    } else {\n      return oldSnap.updatePriority(newPriority);\n    }\n  }\n  filtersNodes(): boolean {\n    return false;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { NamedNode, Node } from '../../../core/snap/Node';\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { PRIORITY_INDEX } from '../../snap/indexes/PriorityIndex';\nimport { Path } from '../../util/Path';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\n\n/**\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\n */\nexport class RangedFilter implements NodeFilter {\n  private indexedFilter_: IndexedFilter;\n\n  private index_: Index;\n\n  private startPost_: NamedNode;\n\n  private endPost_: NamedNode;\n\n  constructor(params: QueryParams) {\n    this.indexedFilter_ = new IndexedFilter(params.getIndex());\n    this.index_ = params.getIndex();\n    this.startPost_ = RangedFilter.getStartPost_(params);\n    this.endPost_ = RangedFilter.getEndPost_(params);\n  }\n\n  getStartPost(): NamedNode {\n    return this.startPost_;\n  }\n\n  getEndPost(): NamedNode {\n    return this.endPost_;\n  }\n\n  matches(node: NamedNode): boolean {\n    return (\n      this.index_.compare(this.getStartPost(), node) <= 0 &&\n      this.index_.compare(node, this.getEndPost()) <= 0\n    );\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    return this.indexedFilter_.updateChild(\n      snap,\n      key,\n      newChild,\n      affectedPath,\n      source,\n      optChangeAccumulator\n    );\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (newSnap.isLeafNode()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      newSnap = ChildrenNode.EMPTY_NODE;\n    }\n    let filtered = newSnap.withIndex(this.index_);\n    // Don't support priorities on queries\n    filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\n    const self = this;\n    newSnap.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      if (!self.matches(new NamedNode(key, childNode))) {\n        filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\n      }\n    });\n    return this.indexedFilter_.updateFullNode(\n      oldSnap,\n      filtered,\n      optChangeAccumulator\n    );\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.indexedFilter_;\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private static getStartPost_(params: QueryParams): NamedNode {\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      return params.getIndex().makePost(params.getIndexStartValue(), startName);\n    } else {\n      return params.getIndex().minPost();\n    }\n  }\n\n  private static getEndPost_(params: QueryParams): NamedNode {\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      return params.getIndex().makePost(params.getIndexEndValue(), endName);\n    } else {\n      return params.getIndex().maxPost();\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../../snap/ChildrenNode';\nimport { Index } from '../../snap/indexes/Index';\nimport { NamedNode, Node } from '../../snap/Node';\nimport { Path } from '../../util/Path';\nimport {\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from '../Change';\nimport { ChildChangeAccumulator } from '../ChildChangeAccumulator';\nimport { CompleteChildSource } from '../CompleteChildSource';\nimport { QueryParams } from '../QueryParams';\n\nimport { IndexedFilter } from './IndexedFilter';\nimport { NodeFilter } from './NodeFilter';\nimport { RangedFilter } from './RangedFilter';\n\n/**\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\n */\nexport class LimitedFilter implements NodeFilter {\n  private readonly rangedFilter_: RangedFilter;\n\n  private readonly index_: Index;\n\n  private readonly limit_: number;\n\n  private readonly reverse_: boolean;\n\n  constructor(params: QueryParams) {\n    this.rangedFilter_ = new RangedFilter(params);\n    this.index_ = params.getIndex();\n    this.limit_ = params.getLimit();\n    this.reverse_ = !params.isViewFromLeft();\n  }\n  updateChild(\n    snap: Node,\n    key: string,\n    newChild: Node,\n    affectedPath: Path,\n    source: CompleteChildSource,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\n      newChild = ChildrenNode.EMPTY_NODE;\n    }\n    if (snap.getImmediateChild(key).equals(newChild)) {\n      // No change\n      return snap;\n    } else if (snap.numChildren() < this.limit_) {\n      return this.rangedFilter_\n        .getIndexedFilter()\n        .updateChild(\n          snap,\n          key,\n          newChild,\n          affectedPath,\n          source,\n          optChangeAccumulator\n        );\n    } else {\n      return this.fullLimitUpdateChild_(\n        snap,\n        key,\n        newChild,\n        source,\n        optChangeAccumulator\n      );\n    }\n  }\n  updateFullNode(\n    oldSnap: Node,\n    newSnap: Node,\n    optChangeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    let filtered;\n    if (newSnap.isLeafNode() || newSnap.isEmpty()) {\n      // Make sure we have a children node with the correct index, not a leaf node;\n      filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n    } else {\n      if (\n        this.limit_ * 2 < newSnap.numChildren() &&\n        newSnap.isIndexed(this.index_)\n      ) {\n        // Easier to build up a snapshot, since what we're given has more than twice the elements we want\n        filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\n        // anchor to the startPost, endPost, or last element as appropriate\n        let iterator;\n        if (this.reverse_) {\n          iterator = (newSnap as ChildrenNode).getReverseIteratorFrom(\n            this.rangedFilter_.getEndPost(),\n            this.index_\n          );\n        } else {\n          iterator = (newSnap as ChildrenNode).getIteratorFrom(\n            this.rangedFilter_.getStartPost(),\n            this.index_\n          );\n        }\n        let count = 0;\n        while (iterator.hasNext() && count < this.limit_) {\n          const next = iterator.getNext();\n          let inRange;\n          if (this.reverse_) {\n            inRange =\n              this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\n          } else {\n            inRange =\n              this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\n          }\n          if (inRange) {\n            filtered = filtered.updateImmediateChild(next.name, next.node);\n            count++;\n          } else {\n            // if we have reached the end post, we cannot keep adding elemments\n            break;\n          }\n        }\n      } else {\n        // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\n        filtered = newSnap.withIndex(this.index_);\n        // Don't support priorities on queries\n        filtered = filtered.updatePriority(\n          ChildrenNode.EMPTY_NODE\n        ) as ChildrenNode;\n        let startPost;\n        let endPost;\n        let cmp;\n        let iterator;\n        if (this.reverse_) {\n          iterator = filtered.getReverseIterator(this.index_);\n          startPost = this.rangedFilter_.getEndPost();\n          endPost = this.rangedFilter_.getStartPost();\n          const indexCompare = this.index_.getCompare();\n          cmp = (a: NamedNode, b: NamedNode) => indexCompare(b, a);\n        } else {\n          iterator = filtered.getIterator(this.index_);\n          startPost = this.rangedFilter_.getStartPost();\n          endPost = this.rangedFilter_.getEndPost();\n          cmp = this.index_.getCompare();\n        }\n\n        let count = 0;\n        let foundStartPost = false;\n        while (iterator.hasNext()) {\n          const next = iterator.getNext();\n          if (!foundStartPost && cmp(startPost, next) <= 0) {\n            // start adding\n            foundStartPost = true;\n          }\n          const inRange =\n            foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\n          if (inRange) {\n            count++;\n          } else {\n            filtered = filtered.updateImmediateChild(\n              next.name,\n              ChildrenNode.EMPTY_NODE\n            );\n          }\n        }\n      }\n    }\n    return this.rangedFilter_\n      .getIndexedFilter()\n      .updateFullNode(oldSnap, filtered, optChangeAccumulator);\n  }\n  updatePriority(oldSnap: Node, newPriority: Node): Node {\n    // Don't support priorities on queries\n    return oldSnap;\n  }\n  filtersNodes(): boolean {\n    return true;\n  }\n  getIndexedFilter(): IndexedFilter {\n    return this.rangedFilter_.getIndexedFilter();\n  }\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  private fullLimitUpdateChild_(\n    snap: Node,\n    childKey: string,\n    childSnap: Node,\n    source: CompleteChildSource,\n    changeAccumulator: ChildChangeAccumulator | null\n  ): Node {\n    // TODO: rename all cache stuff etc to general snap terminology\n    let cmp;\n    if (this.reverse_) {\n      const indexCmp = this.index_.getCompare();\n      cmp = (a: NamedNode, b: NamedNode) => indexCmp(b, a);\n    } else {\n      cmp = this.index_.getCompare();\n    }\n    const oldEventCache = snap as ChildrenNode;\n    assert(oldEventCache.numChildren() === this.limit_, '');\n    const newChildNamedNode = new NamedNode(childKey, childSnap);\n    const windowBoundary = this.reverse_\n      ? oldEventCache.getFirstChild(this.index_)\n      : (oldEventCache.getLastChild(this.index_) as NamedNode);\n    const inRange = this.rangedFilter_.matches(newChildNamedNode);\n    if (oldEventCache.hasChild(childKey)) {\n      const oldChildSnap = oldEventCache.getImmediateChild(childKey);\n      let nextChild = source.getChildAfterChild(\n        this.index_,\n        windowBoundary,\n        this.reverse_\n      );\n      while (\n        nextChild != null &&\n        (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))\n      ) {\n        // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\n        // been applied to the limited filter yet. Ignore this next child which will be updated later in\n        // the limited filter...\n        nextChild = source.getChildAfterChild(\n          this.index_,\n          nextChild,\n          this.reverse_\n        );\n      }\n      const compareNext =\n        nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\n      const remainsInWindow =\n        inRange && !childSnap.isEmpty() && compareNext >= 0;\n      if (remainsInWindow) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildChanged(childKey, childSnap, oldChildSnap)\n          );\n        }\n        return oldEventCache.updateImmediateChild(childKey, childSnap);\n      } else {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(childKey, oldChildSnap)\n          );\n        }\n        const newEventCache = oldEventCache.updateImmediateChild(\n          childKey,\n          ChildrenNode.EMPTY_NODE\n        );\n        const nextChildInRange =\n          nextChild != null && this.rangedFilter_.matches(nextChild);\n        if (nextChildInRange) {\n          if (changeAccumulator != null) {\n            changeAccumulator.trackChildChange(\n              changeChildAdded(nextChild.name, nextChild.node)\n            );\n          }\n          return newEventCache.updateImmediateChild(\n            nextChild.name,\n            nextChild.node\n          );\n        } else {\n          return newEventCache;\n        }\n      }\n    } else if (childSnap.isEmpty()) {\n      // we're deleting a node, but it was not in the window, so ignore it\n      return snap;\n    } else if (inRange) {\n      if (cmp(windowBoundary, newChildNamedNode) >= 0) {\n        if (changeAccumulator != null) {\n          changeAccumulator.trackChildChange(\n            changeChildRemoved(windowBoundary.name, windowBoundary.node)\n          );\n          changeAccumulator.trackChildChange(\n            changeChildAdded(childKey, childSnap)\n          );\n        }\n        return oldEventCache\n          .updateImmediateChild(childKey, childSnap)\n          .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\n      } else {\n        return snap;\n      }\n    } else {\n      return snap;\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, stringify } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { PathIndex } from '../snap/indexes/PathIndex';\nimport { PRIORITY_INDEX, PriorityIndex } from '../snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../snap/indexes/ValueIndex';\nimport { predecessor, successor } from '../util/NextPushId';\nimport { MAX_NAME, MIN_NAME } from '../util/util';\n\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { LimitedFilter } from './filter/LimitedFilter';\nimport { NodeFilter } from './filter/NodeFilter';\nimport { RangedFilter } from './filter/RangedFilter';\n\n/**\n * Wire Protocol Constants\n */\nconst enum WIRE_PROTOCOL_CONSTANTS {\n  INDEX_START_VALUE = 'sp',\n  INDEX_START_NAME = 'sn',\n  INDEX_END_VALUE = 'ep',\n  INDEX_END_NAME = 'en',\n  LIMIT = 'l',\n  VIEW_FROM = 'vf',\n  VIEW_FROM_LEFT = 'l',\n  VIEW_FROM_RIGHT = 'r',\n  INDEX = 'i'\n}\n\n/**\n * REST Query Constants\n */\nconst enum REST_QUERY_CONSTANTS {\n  ORDER_BY = 'orderBy',\n  PRIORITY_INDEX = '$priority',\n  VALUE_INDEX = '$value',\n  KEY_INDEX = '$key',\n  START_AT = 'startAt',\n  END_AT = 'endAt',\n  LIMIT_TO_FIRST = 'limitToFirst',\n  LIMIT_TO_LAST = 'limitToLast'\n}\n\n/**\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\n * user-facing API level, so it is not done here.\n *\n * @internal\n */\nexport class QueryParams {\n  limitSet_ = false;\n  startSet_ = false;\n  startNameSet_ = false;\n  startAfterSet_ = false;\n  endSet_ = false;\n  endNameSet_ = false;\n  endBeforeSet_ = false;\n  limit_ = 0;\n  viewFrom_ = '';\n  indexStartValue_: unknown | null = null;\n  indexStartName_ = '';\n  indexEndValue_: unknown | null = null;\n  indexEndName_ = '';\n  index_: PriorityIndex = PRIORITY_INDEX;\n\n  hasStart(): boolean {\n    return this.startSet_;\n  }\n\n  hasStartAfter(): boolean {\n    return this.startAfterSet_;\n  }\n\n  hasEndBefore(): boolean {\n    return this.endBeforeSet_;\n  }\n\n  /**\n   * @returns True if it would return from left.\n   */\n  isViewFromLeft(): boolean {\n    if (this.viewFrom_ === '') {\n      // limit(), rather than limitToFirst or limitToLast was called.\n      // This means that only one of startSet_ and endSet_ is true. Use them\n      // to calculate which side of the view to anchor to. If neither is set,\n      // anchor to the end.\n      return this.startSet_;\n    } else {\n      return this.viewFrom_ === WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n    }\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true\n   */\n  getIndexStartValue(): unknown {\n    assert(this.startSet_, 'Only valid if start has been set');\n    return this.indexStartValue_;\n  }\n\n  /**\n   * Only valid to call if hasStart() returns true.\n   * Returns the starting key name for the range defined by these query parameters\n   */\n  getIndexStartName(): string {\n    assert(this.startSet_, 'Only valid if start has been set');\n    if (this.startNameSet_) {\n      return this.indexStartName_;\n    } else {\n      return MIN_NAME;\n    }\n  }\n\n  hasEnd(): boolean {\n    return this.endSet_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   */\n  getIndexEndValue(): unknown {\n    assert(this.endSet_, 'Only valid if end has been set');\n    return this.indexEndValue_;\n  }\n\n  /**\n   * Only valid to call if hasEnd() returns true.\n   * Returns the end key name for the range defined by these query parameters\n   */\n  getIndexEndName(): string {\n    assert(this.endSet_, 'Only valid if end has been set');\n    if (this.endNameSet_) {\n      return this.indexEndName_;\n    } else {\n      return MAX_NAME;\n    }\n  }\n\n  hasLimit(): boolean {\n    return this.limitSet_;\n  }\n\n  /**\n   * @returns True if a limit has been set and it has been explicitly anchored\n   */\n  hasAnchoredLimit(): boolean {\n    return this.limitSet_ && this.viewFrom_ !== '';\n  }\n\n  /**\n   * Only valid to call if hasLimit() returns true\n   */\n  getLimit(): number {\n    assert(this.limitSet_, 'Only valid if limit has been set');\n    return this.limit_;\n  }\n\n  getIndex(): Index {\n    return this.index_;\n  }\n\n  loadsAllData(): boolean {\n    return !(this.startSet_ || this.endSet_ || this.limitSet_);\n  }\n\n  isDefault(): boolean {\n    return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\n  }\n\n  copy(): QueryParams {\n    const copy = new QueryParams();\n    copy.limitSet_ = this.limitSet_;\n    copy.limit_ = this.limit_;\n    copy.startSet_ = this.startSet_;\n    copy.indexStartValue_ = this.indexStartValue_;\n    copy.startNameSet_ = this.startNameSet_;\n    copy.indexStartName_ = this.indexStartName_;\n    copy.endSet_ = this.endSet_;\n    copy.indexEndValue_ = this.indexEndValue_;\n    copy.endNameSet_ = this.endNameSet_;\n    copy.indexEndName_ = this.indexEndName_;\n    copy.index_ = this.index_;\n    copy.viewFrom_ = this.viewFrom_;\n    return copy;\n  }\n}\n\nexport function queryParamsGetNodeFilter(queryParams: QueryParams): NodeFilter {\n  if (queryParams.loadsAllData()) {\n    return new IndexedFilter(queryParams.getIndex());\n  } else if (queryParams.hasLimit()) {\n    return new LimitedFilter(queryParams);\n  } else {\n    return new RangedFilter(queryParams);\n  }\n}\n\nexport function queryParamsLimit(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = '';\n  return newParams;\n}\n\nexport function queryParamsLimitToFirst(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n  return newParams;\n}\n\nexport function queryParamsLimitToLast(\n  queryParams: QueryParams,\n  newLimit: number\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.limitSet_ = true;\n  newParams.limit_ = newLimit;\n  newParams.viewFrom_ = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n  return newParams;\n}\n\nexport function queryParamsStartAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.startSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexStartValue_ = indexValue;\n  if (key != null) {\n    newParams.startNameSet_ = true;\n    newParams.indexStartName_ = key;\n  } else {\n    newParams.startNameSet_ = false;\n    newParams.indexStartName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsStartAfter(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = successor(indexValue as string);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, key);\n  } else {\n    let childKey: string;\n    if (key == null) {\n      childKey = MAX_NAME;\n    } else {\n      childKey = successor(key);\n    }\n    params = queryParamsStartAt(queryParams, indexValue, childKey);\n  }\n  params.startAfterSet_ = true;\n  return params;\n}\n\nexport function queryParamsEndAt(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.endSet_ = true;\n  if (indexValue === undefined) {\n    indexValue = null;\n  }\n  newParams.indexEndValue_ = indexValue;\n  if (key !== undefined) {\n    newParams.endNameSet_ = true;\n    newParams.indexEndName_ = key;\n  } else {\n    newParams.endNameSet_ = false;\n    newParams.indexEndName_ = '';\n  }\n  return newParams;\n}\n\nexport function queryParamsEndBefore(\n  queryParams: QueryParams,\n  indexValue: unknown,\n  key?: string | null\n): QueryParams {\n  let childKey: string;\n  let params: QueryParams;\n  if (queryParams.index_ === KEY_INDEX) {\n    if (typeof indexValue === 'string') {\n      indexValue = predecessor(indexValue as string);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, key);\n  } else {\n    if (key == null) {\n      childKey = MIN_NAME;\n    } else {\n      childKey = predecessor(key);\n    }\n    params = queryParamsEndAt(queryParams, indexValue, childKey);\n  }\n  params.endBeforeSet_ = true;\n  return params;\n}\n\nexport function queryParamsOrderBy(\n  queryParams: QueryParams,\n  index: Index\n): QueryParams {\n  const newParams = queryParams.copy();\n  newParams.index_ = index;\n  return newParams;\n}\n\n/**\n * Returns a set of REST query string parameters representing this query.\n *\n * @returns query string parameters\n */\nexport function queryParamsToRestQueryStringParameters(\n  queryParams: QueryParams\n): Record<string, string | number> {\n  const qs: Record<string, string | number> = {};\n\n  if (queryParams.isDefault()) {\n    return qs;\n  }\n\n  let orderBy;\n  if (queryParams.index_ === PRIORITY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.PRIORITY_INDEX;\n  } else if (queryParams.index_ === VALUE_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.VALUE_INDEX;\n  } else if (queryParams.index_ === KEY_INDEX) {\n    orderBy = REST_QUERY_CONSTANTS.KEY_INDEX;\n  } else {\n    assert(queryParams.index_ instanceof PathIndex, 'Unrecognized index type!');\n    orderBy = queryParams.index_.toString();\n  }\n  qs[REST_QUERY_CONSTANTS.ORDER_BY] = stringify(orderBy);\n\n  if (queryParams.startSet_) {\n    qs[REST_QUERY_CONSTANTS.START_AT] = stringify(queryParams.indexStartValue_);\n    if (queryParams.startNameSet_) {\n      qs[REST_QUERY_CONSTANTS.START_AT] +=\n        ',' + stringify(queryParams.indexStartName_);\n    }\n  }\n\n  if (queryParams.endSet_) {\n    qs[REST_QUERY_CONSTANTS.END_AT] = stringify(queryParams.indexEndValue_);\n    if (queryParams.endNameSet_) {\n      qs[REST_QUERY_CONSTANTS.END_AT] +=\n        ',' + stringify(queryParams.indexEndName_);\n    }\n  }\n\n  if (queryParams.limitSet_) {\n    if (queryParams.isViewFromLeft()) {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_FIRST] = queryParams.limit_;\n    } else {\n      qs[REST_QUERY_CONSTANTS.LIMIT_TO_LAST] = queryParams.limit_;\n    }\n  }\n\n  return qs;\n}\n\nexport function queryParamsGetQueryObject(\n  queryParams: QueryParams\n): Record<string, unknown> {\n  const obj: Record<string, unknown> = {};\n  if (queryParams.startSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] =\n      queryParams.indexStartValue_;\n    if (queryParams.startNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] =\n        queryParams.indexStartName_;\n    }\n  }\n  if (queryParams.endSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = queryParams.indexEndValue_;\n    if (queryParams.endNameSet_) {\n      obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = queryParams.indexEndName_;\n    }\n  }\n  if (queryParams.limitSet_) {\n    obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = queryParams.limit_;\n    let viewFrom = queryParams.viewFrom_;\n    if (viewFrom === '') {\n      if (queryParams.isViewFromLeft()) {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\n      } else {\n        viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\n      }\n    }\n    obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\n  }\n  // For now, priority index is the default, so we only specify if it's some other index\n  if (queryParams.index_ !== PRIORITY_INDEX) {\n    obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = queryParams.index_.toString();\n  }\n  return obj;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  jsonEval,\n  safeGet,\n  querystring,\n  Deferred\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { logWrapper, warn } from './util/util';\nimport { QueryContext } from './view/EventRegistration';\nimport { queryParamsToRestQueryStringParameters } from './view/QueryParams';\n\n/**\n * An implementation of ServerActions that communicates with the server via REST requests.\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\n * persistent connection (using WebSockets or long-polling)\n */\nexport class ReadonlyRestClient extends ServerActions {\n  reportStats(stats: { [k: string]: unknown }): void {\n    throw new Error('Method not implemented.');\n  }\n\n  /** @private {function(...[*])} */\n  private log_: (...args: unknown[]) => void = logWrapper('p:rest:');\n\n  /**\n   * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\n   * that's been removed. :-/\n   */\n  private listens_: { [k: string]: object } = {};\n\n  static getListenId_(query: QueryContext, tag?: number | null): string {\n    if (tag !== undefined) {\n      return 'tag$' + tag;\n    } else {\n      assert(\n        query._queryParams.isDefault(),\n        \"should have a tag if it's not a default query.\"\n      );\n      return query._path.toString();\n    }\n  }\n\n  /**\n   * @param repoInfo_ - Data about the namespace we are connecting to\n   * @param onDataUpdate_ - A callback for new data from the server\n   */\n  constructor(\n    private repoInfo_: RepoInfo,\n    private onDataUpdate_: (\n      a: string,\n      b: unknown,\n      c: boolean,\n      d: number | null\n    ) => void,\n    private authTokenProvider_: AuthTokenProvider,\n    private appCheckTokenProvider_: AppCheckTokenProvider\n  ) {\n    super();\n  }\n\n  /** @inheritDoc */\n  listen(\n    query: QueryContext,\n    currentHashFn: () => string,\n    tag: number | null,\n    onComplete: (a: string, b: unknown) => void\n  ) {\n    const pathString = query._path.toString();\n    this.log_('Listen called for ' + pathString + ' ' + query._queryIdentifier);\n\n    // Mark this listener so we can tell if it's removed.\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    const thisListen = {};\n    this.listens_[listenId] = thisListen;\n\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\n        }\n\n        if (safeGet(this.listens_, listenId) === thisListen) {\n          let status;\n          if (!error) {\n            status = 'ok';\n          } else if (error === 401) {\n            status = 'permission_denied';\n          } else {\n            status = 'rest_error:' + error;\n          }\n\n          onComplete(status, null);\n        }\n      }\n    );\n  }\n\n  /** @inheritDoc */\n  unlisten(query: QueryContext, tag: number | null) {\n    const listenId = ReadonlyRestClient.getListenId_(query, tag);\n    delete this.listens_[listenId];\n  }\n\n  get(query: QueryContext): Promise<string> {\n    const queryStringParameters = queryParamsToRestQueryStringParameters(\n      query._queryParams\n    );\n\n    const pathString = query._path.toString();\n\n    const deferred = new Deferred<string>();\n\n    this.restRequest_(\n      pathString + '.json',\n      queryStringParameters,\n      (error, result) => {\n        let data = result;\n\n        if (error === 404) {\n          data = null;\n          error = null;\n        }\n\n        if (error === null) {\n          this.onDataUpdate_(\n            pathString,\n            data,\n            /*isMerge=*/ false,\n            /*tag=*/ null\n          );\n          deferred.resolve(data as string);\n        } else {\n          deferred.reject(new Error(data as string));\n        }\n      }\n    );\n    return deferred.promise;\n  }\n\n  /** @inheritDoc */\n  refreshAuthToken(token: string) {\n    // no-op since we just always call getToken.\n  }\n\n  /**\n   * Performs a REST request to the given path, with the provided query string parameters,\n   * and any auth credentials we have.\n   */\n  private restRequest_(\n    pathString: string,\n    queryStringParameters: { [k: string]: string | number } = {},\n    callback: ((a: number | null, b?: unknown) => void) | null\n  ) {\n    queryStringParameters['format'] = 'export';\n\n    return Promise.all([\n      this.authTokenProvider_.getToken(/*forceRefresh=*/ false),\n      this.appCheckTokenProvider_.getToken(/*forceRefresh=*/ false)\n    ]).then(([authToken, appCheckToken]) => {\n      if (authToken && authToken.accessToken) {\n        queryStringParameters['auth'] = authToken.accessToken;\n      }\n      if (appCheckToken && appCheckToken.token) {\n        queryStringParameters['ac'] = appCheckToken.token;\n      }\n\n      const url =\n        (this.repoInfo_.secure ? 'https://' : 'http://') +\n        this.repoInfo_.host +\n        pathString +\n        '?' +\n        'ns=' +\n        this.repoInfo_.namespace +\n        querystring(queryStringParameters);\n\n      this.log_('Sending REST request for ' + url);\n      const xhr = new XMLHttpRequest();\n      xhr.onreadystatechange = () => {\n        if (callback && xhr.readyState === 4) {\n          this.log_(\n            'REST Response for ' + url + ' received. status:',\n            xhr.status,\n            'response:',\n            xhr.responseText\n          );\n          let res = null;\n          if (xhr.status >= 200 && xhr.status < 300) {\n            try {\n              res = jsonEval(xhr.responseText);\n            } catch (e) {\n              warn(\n                'Failed to parse JSON response for ' +\n                  url +\n                  ': ' +\n                  xhr.responseText\n              );\n            }\n            callback(null, res);\n          } else {\n            // 401 and 404 are expected.\n            if (xhr.status !== 401 && xhr.status !== 404) {\n              warn(\n                'Got unsuccessful REST response for ' +\n                  url +\n                  ' Status: ' +\n                  xhr.status\n              );\n            }\n            callback(xhr.status);\n          }\n          callback = null;\n        }\n      };\n\n      xhr.open('GET', url, /*asynchronous=*/ true);\n      xhr.send();\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\n\n/**\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\n */\nexport class SnapshotHolder {\n  private rootNode_: Node = ChildrenNode.EMPTY_NODE;\n\n  getNode(path: Path): Node {\n    return this.rootNode_.getChild(path);\n  }\n\n  updateSnapshot(path: Path, newSnapshotNode: Node) {\n    this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { Node } from './snap/Node';\nimport { Path, pathGetFront, pathIsEmpty, pathPopFront } from './util/Path';\n\n/**\n * Helper class to store a sparse set of snapshots.\n */\nexport interface SparseSnapshotTree {\n  value: Node | null;\n  readonly children: Map<string, SparseSnapshotTree>;\n}\n\nexport function newSparseSnapshotTree(): SparseSnapshotTree {\n  return {\n    value: null,\n    children: new Map()\n  };\n}\n\n/**\n * Gets the node stored at the given path if one exists.\n * Only seems to be used in tests.\n *\n * @param path - Path to look up snapshot for.\n * @returns The retrieved node, or null.\n */\nexport function sparseSnapshotTreeFind(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): Node | null {\n  if (sparseSnapshotTree.value != null) {\n    return sparseSnapshotTree.value.getChild(path);\n  } else if (!pathIsEmpty(path) && sparseSnapshotTree.children.size > 0) {\n    const childKey = pathGetFront(path);\n    path = pathPopFront(path);\n    if (sparseSnapshotTree.children.has(childKey)) {\n      const childTree = sparseSnapshotTree.children.get(childKey);\n      return sparseSnapshotTreeFind(childTree, path);\n    } else {\n      return null;\n    }\n  } else {\n    return null;\n  }\n}\n\n/**\n * Stores the given node at the specified path. If there is already a node\n * at a shallower path, it merges the new data into that snapshot node.\n *\n * @param path - Path to look up snapshot for.\n * @param data - The new data, or null.\n */\nexport function sparseSnapshotTreeRemember(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path,\n  data: Node\n): void {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = data;\n    sparseSnapshotTree.children.clear();\n  } else if (sparseSnapshotTree.value !== null) {\n    sparseSnapshotTree.value = sparseSnapshotTree.value.updateChild(path, data);\n  } else {\n    const childKey = pathGetFront(path);\n    if (!sparseSnapshotTree.children.has(childKey)) {\n      sparseSnapshotTree.children.set(childKey, newSparseSnapshotTree());\n    }\n\n    const child = sparseSnapshotTree.children.get(childKey);\n    path = pathPopFront(path);\n    sparseSnapshotTreeRemember(child, path, data);\n  }\n}\n\n/**\n * Purge the data at path from the cache.\n *\n * @param path - Path to look up snapshot for.\n * @returns True if this node should now be removed.\n */\nexport function sparseSnapshotTreeForget(\n  sparseSnapshotTree: SparseSnapshotTree,\n  path: Path\n): boolean {\n  if (pathIsEmpty(path)) {\n    sparseSnapshotTree.value = null;\n    sparseSnapshotTree.children.clear();\n    return true;\n  } else {\n    if (sparseSnapshotTree.value !== null) {\n      if (sparseSnapshotTree.value.isLeafNode()) {\n        // We're trying to forget a node that doesn't exist\n        return false;\n      } else {\n        const value = sparseSnapshotTree.value;\n        sparseSnapshotTree.value = null;\n\n        value.forEachChild(PRIORITY_INDEX, (key, tree) => {\n          sparseSnapshotTreeRemember(sparseSnapshotTree, new Path(key), tree);\n        });\n\n        return sparseSnapshotTreeForget(sparseSnapshotTree, path);\n      }\n    } else if (sparseSnapshotTree.children.size > 0) {\n      const childKey = pathGetFront(path);\n      path = pathPopFront(path);\n      if (sparseSnapshotTree.children.has(childKey)) {\n        const safeToRemove = sparseSnapshotTreeForget(\n          sparseSnapshotTree.children.get(childKey),\n          path\n        );\n        if (safeToRemove) {\n          sparseSnapshotTree.children.delete(childKey);\n        }\n      }\n\n      return sparseSnapshotTree.children.size === 0;\n    } else {\n      return true;\n    }\n  }\n}\n\n/**\n * Recursively iterates through all of the stored tree and calls the\n * callback on each one.\n *\n * @param prefixPath - Path to look up node for.\n * @param func - The function to invoke for each tree.\n */\nexport function sparseSnapshotTreeForEachTree(\n  sparseSnapshotTree: SparseSnapshotTree,\n  prefixPath: Path,\n  func: (a: Path, b: Node) => unknown\n): void {\n  if (sparseSnapshotTree.value !== null) {\n    func(prefixPath, sparseSnapshotTree.value);\n  } else {\n    sparseSnapshotTreeForEachChild(sparseSnapshotTree, (key, tree) => {\n      const path = new Path(prefixPath.toString() + '/' + key);\n      sparseSnapshotTreeForEachTree(tree, path, func);\n    });\n  }\n}\n\n/**\n * Iterates through each immediate child and triggers the callback.\n * Only seems to be used in tests.\n *\n * @param func - The function to invoke for each child.\n */\nexport function sparseSnapshotTreeForEachChild(\n  sparseSnapshotTree: SparseSnapshotTree,\n  func: (a: string, b: SparseSnapshotTree) => void\n): void {\n  sparseSnapshotTree.children.forEach((tree, key) => {\n    func(key, tree);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\n\n/**\n * Returns the delta from the previous call to get stats.\n *\n * @param collection_ - The collection to \"listen\" to.\n */\nexport class StatsListener {\n  private last_: { [k: string]: number } | null = null;\n\n  constructor(private collection_: StatsCollection) {}\n\n  get(): { [k: string]: number } {\n    const newStats = this.collection_.get();\n\n    const delta = { ...newStats };\n    if (this.last_) {\n      each(this.last_, (stat: string, value: number) => {\n        delta[stat] = delta[stat] - value;\n      });\n    }\n    this.last_ = newStats;\n\n    return delta;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains } from '@firebase/util';\n\nimport { ServerActions } from '../ServerActions';\nimport { setTimeoutNonBlocking, each } from '../util/util';\n\nimport { StatsCollection } from './StatsCollection';\nimport { StatsListener } from './StatsListener';\n\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\n// seconds to try to ensure the Firebase connection is established / settled.\nconst FIRST_STATS_MIN_TIME = 10 * 1000;\nconst FIRST_STATS_MAX_TIME = 30 * 1000;\n\n// We'll continue to report stats on average every 5 minutes.\nconst REPORT_STATS_INTERVAL = 5 * 60 * 1000;\n\nexport class StatsReporter {\n  private statsListener_: StatsListener;\n  statsToReport_: { [k: string]: boolean } = {};\n\n  constructor(collection: StatsCollection, private server_: ServerActions) {\n    this.statsListener_ = new StatsListener(collection);\n\n    const timeout =\n      FIRST_STATS_MIN_TIME +\n      (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\n    setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\n  }\n\n  private reportStats_() {\n    const stats = this.statsListener_.get();\n    const reportedStats: typeof stats = {};\n    let haveStatsToReport = false;\n\n    each(stats, (stat: string, value: number) => {\n      if (value > 0 && contains(this.statsToReport_, stat)) {\n        reportedStats[stat] = value;\n        haveStatsToReport = true;\n      }\n    });\n\n    if (haveStatsToReport) {\n      this.server_.reportStats(reportedStats);\n    }\n\n    // queue our next run.\n    setTimeoutNonBlocking(\n      this.reportStats_.bind(this),\n      Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL)\n    );\n  }\n}\n\nexport function statsReporterIncludeStat(\n  reporter: StatsReporter,\n  stat: string\n) {\n  reporter.statsToReport_[stat] = true;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path } from '../util/Path';\n\n/**\n *\n * @enum\n */\nexport enum OperationType {\n  OVERWRITE,\n  MERGE,\n  ACK_USER_WRITE,\n  LISTEN_COMPLETE\n}\n\n/**\n * @interface\n */\nexport interface Operation {\n  source: OperationSource;\n\n  type: OperationType;\n\n  path: Path;\n\n  operationForChild(childName: string): Operation | null;\n}\n\nexport interface OperationSource {\n  fromUser: boolean;\n  fromServer: boolean;\n  queryId: string | null;\n  tagged: boolean;\n}\n\nexport function newOperationSourceUser(): OperationSource {\n  return {\n    fromUser: true,\n    fromServer: false,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServer(): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId: null,\n    tagged: false\n  };\n}\n\nexport function newOperationSourceServerTaggedQuery(\n  queryId: string\n): OperationSource {\n  return {\n    fromUser: false,\n    fromServer: true,\n    queryId,\n    tagged: true\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { newOperationSourceUser, Operation, OperationType } from './Operation';\n\nexport class AckUserWrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.ACK_USER_WRITE;\n\n  /** @inheritDoc */\n  source = newOperationSourceUser();\n\n  /**\n   * @param affectedTree - A tree containing true for each affected path. Affected paths can't overlap.\n   */\n  constructor(\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public affectedTree: ImmutableTree<boolean>,\n    /** @inheritDoc */ public revert: boolean\n  ) {}\n  operationForChild(childName: string): AckUserWrite {\n    if (!pathIsEmpty(this.path)) {\n      assert(\n        pathGetFront(this.path) === childName,\n        'operationForChild called for unrelated child.'\n      );\n      return new AckUserWrite(\n        pathPopFront(this.path),\n        this.affectedTree,\n        this.revert\n      );\n    } else if (this.affectedTree.value != null) {\n      assert(\n        this.affectedTree.children.isEmpty(),\n        'affectedTree should not have overlapping affected paths.'\n      );\n      // All child locations are affected as well; just return same operation.\n      return this;\n    } else {\n      const childTree = this.affectedTree.subtree(new Path(childName));\n      return new AckUserWrite(newEmptyPath(), childTree, this.revert);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class ListenComplete implements Operation {\n  /** @inheritDoc */\n  type = OperationType.LISTEN_COMPLETE;\n\n  constructor(public source: OperationSource, public path: Path) {}\n\n  operationForChild(childName: string): ListenComplete {\n    if (pathIsEmpty(this.path)) {\n      return new ListenComplete(this.source, newEmptyPath());\n    } else {\n      return new ListenComplete(this.source, pathPopFront(this.path));\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { newEmptyPath, Path, pathIsEmpty, pathPopFront } from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\n\nexport class Overwrite implements Operation {\n  /** @inheritDoc */\n  type = OperationType.OVERWRITE;\n\n  constructor(\n    public source: OperationSource,\n    public path: Path,\n    public snap: Node\n  ) {}\n\n  operationForChild(childName: string): Overwrite {\n    if (pathIsEmpty(this.path)) {\n      return new Overwrite(\n        this.source,\n        newEmptyPath(),\n        this.snap.getImmediateChild(childName)\n      );\n    } else {\n      return new Overwrite(this.source, pathPopFront(this.path), this.snap);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from '../util/Path';\n\nimport { Operation, OperationSource, OperationType } from './Operation';\nimport { Overwrite } from './Overwrite';\n\nexport class Merge implements Operation {\n  /** @inheritDoc */\n  type = OperationType.MERGE;\n\n  constructor(\n    /** @inheritDoc */ public source: OperationSource,\n    /** @inheritDoc */ public path: Path,\n    /** @inheritDoc */ public children: ImmutableTree<Node>\n  ) {}\n  operationForChild(childName: string): Operation {\n    if (pathIsEmpty(this.path)) {\n      const childTree = this.children.subtree(new Path(childName));\n      if (childTree.isEmpty()) {\n        // This child is unaffected\n        return null;\n      } else if (childTree.value) {\n        // We have a snapshot for the child in question.  This becomes an overwrite of the child.\n        return new Overwrite(this.source, newEmptyPath(), childTree.value);\n      } else {\n        // This is a merge at a deeper level\n        return new Merge(this.source, newEmptyPath(), childTree);\n      }\n    } else {\n      assert(\n        pathGetFront(this.path) === childName,\n        \"Can't get a merge for a child not on the path of the operation\"\n      );\n      return new Merge(this.source, pathPopFront(this.path), this.children);\n    }\n  }\n  toString(): string {\n    return (\n      'Operation(' +\n      this.path +\n      ': ' +\n      this.source.toString() +\n      ' merge: ' +\n      this.children.toString() +\n      ')'\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\n\n/**\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\n * whether a node potentially had children removed due to a filter.\n */\nexport class CacheNode {\n  constructor(\n    private node_: Node,\n    private fullyInitialized_: boolean,\n    private filtered_: boolean\n  ) {}\n\n  /**\n   * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\n   */\n  isFullyInitialized(): boolean {\n    return this.fullyInitialized_;\n  }\n\n  /**\n   * Returns whether this node is potentially missing children due to a filter applied to the node\n   */\n  isFiltered(): boolean {\n    return this.filtered_;\n  }\n\n  isCompleteForPath(path: Path): boolean {\n    if (pathIsEmpty(path)) {\n      return this.isFullyInitialized() && !this.filtered_;\n    }\n\n    const childKey = pathGetFront(path);\n    return this.isCompleteForChild(childKey);\n  }\n\n  isCompleteForChild(key: string): boolean {\n    return (\n      (this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key)\n    );\n  }\n\n  getNode(): Node {\n    return this.node_;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assertionError } from '@firebase/util';\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\n\nimport { Change, ChangeType, changeChildMoved } from './Change';\nimport { Event } from './Event';\nimport { EventRegistration, QueryContext } from './EventRegistration';\n\n/**\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\n * for details.\n *\n */\nexport class EventGenerator {\n  index_: Index;\n\n  constructor(public query_: QueryContext) {\n    this.index_ = this.query_._queryParams.getIndex();\n  }\n}\n\n/**\n * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\n * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\n *\n * Notes:\n *  - child_moved events will be synthesized at this time for any child_changed events that affect\n *    our index.\n *  - prevName will be calculated based on the index ordering.\n */\nexport function eventGeneratorGenerateEventsForChanges(\n  eventGenerator: EventGenerator,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistrations: EventRegistration[]\n): Event[] {\n  const events: Event[] = [];\n  const moves: Change[] = [];\n\n  changes.forEach(change => {\n    if (\n      change.type === ChangeType.CHILD_CHANGED &&\n      eventGenerator.index_.indexedValueChanged(\n        change.oldSnap as Node,\n        change.snapshotNode\n      )\n    ) {\n      moves.push(changeChildMoved(change.childName, change.snapshotNode));\n    }\n  });\n\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_REMOVED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_ADDED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_MOVED,\n    moves,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.CHILD_CHANGED,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n  eventGeneratorGenerateEventsForType(\n    eventGenerator,\n    events,\n    ChangeType.VALUE,\n    changes,\n    eventRegistrations,\n    eventCache\n  );\n\n  return events;\n}\n\n/**\n * Given changes of a single change type, generate the corresponding events.\n */\nfunction eventGeneratorGenerateEventsForType(\n  eventGenerator: EventGenerator,\n  events: Event[],\n  eventType: string,\n  changes: Change[],\n  registrations: EventRegistration[],\n  eventCache: Node\n) {\n  const filteredChanges = changes.filter(change => change.type === eventType);\n\n  filteredChanges.sort((a, b) =>\n    eventGeneratorCompareChanges(eventGenerator, a, b)\n  );\n  filteredChanges.forEach(change => {\n    const materializedChange = eventGeneratorMaterializeSingleChange(\n      eventGenerator,\n      change,\n      eventCache\n    );\n    registrations.forEach(registration => {\n      if (registration.respondsTo(change.type)) {\n        events.push(\n          registration.createEvent(materializedChange, eventGenerator.query_)\n        );\n      }\n    });\n  });\n}\n\nfunction eventGeneratorMaterializeSingleChange(\n  eventGenerator: EventGenerator,\n  change: Change,\n  eventCache: Node\n): Change {\n  if (change.type === 'value' || change.type === 'child_removed') {\n    return change;\n  } else {\n    change.prevName = eventCache.getPredecessorChildName(\n      change.childName,\n      change.snapshotNode,\n      eventGenerator.index_\n    );\n    return change;\n  }\n}\n\nfunction eventGeneratorCompareChanges(\n  eventGenerator: EventGenerator,\n  a: Change,\n  b: Change\n) {\n  if (a.childName == null || b.childName == null) {\n    throw assertionError('Should only compare child_ events.');\n  }\n  const aWrapped = new NamedNode(a.childName, a.snapshotNode);\n  const bWrapped = new NamedNode(b.childName, b.snapshotNode);\n  return eventGenerator.index_.compare(aWrapped, bWrapped);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Node } from '../snap/Node';\n\nimport { CacheNode } from './CacheNode';\n\n/**\n * Stores the data we have cached for a view.\n *\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\n */\nexport interface ViewCache {\n  readonly eventCache: CacheNode;\n  readonly serverCache: CacheNode;\n}\n\nexport function newViewCache(\n  eventCache: CacheNode,\n  serverCache: CacheNode\n): ViewCache {\n  return { eventCache, serverCache };\n}\n\nexport function viewCacheUpdateEventSnap(\n  viewCache: ViewCache,\n  eventSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    new CacheNode(eventSnap, complete, filtered),\n    viewCache.serverCache\n  );\n}\n\nexport function viewCacheUpdateServerSnap(\n  viewCache: ViewCache,\n  serverSnap: Node,\n  complete: boolean,\n  filtered: boolean\n): ViewCache {\n  return newViewCache(\n    viewCache.eventCache,\n    new CacheNode(serverSnap, complete, filtered)\n  );\n}\n\nexport function viewCacheGetCompleteEventSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.eventCache.isFullyInitialized()\n    ? viewCache.eventCache.getNode()\n    : null;\n}\n\nexport function viewCacheGetCompleteServerSnap(\n  viewCache: ViewCache\n): Node | null {\n  return viewCache.serverCache.isFullyInitialized()\n    ? viewCache.serverCache.getNode()\n    : null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './Path';\nimport { SortedMap } from './SortedMap';\nimport { each, stringCompare } from './util';\n\nlet emptyChildrenSingleton: SortedMap<string, ImmutableTree<null>>;\n\n/**\n * Singleton empty children collection.\n *\n */\nconst EmptyChildren = (): SortedMap<string, ImmutableTree<null>> => {\n  if (!emptyChildrenSingleton) {\n    emptyChildrenSingleton = new SortedMap<string, ImmutableTree<null>>(\n      stringCompare\n    );\n  }\n  return emptyChildrenSingleton;\n};\n\n/**\n * A tree with immutable elements.\n */\nexport class ImmutableTree<T> {\n  static fromObject<T>(obj: { [k: string]: T }): ImmutableTree<T> {\n    let tree: ImmutableTree<T> = new ImmutableTree<T>(null);\n    each(obj, (childPath: string, childSnap: T) => {\n      tree = tree.set(new Path(childPath), childSnap);\n    });\n    return tree;\n  }\n\n  constructor(\n    public readonly value: T | null,\n    public readonly children: SortedMap<\n      string,\n      ImmutableTree<T>\n    > = EmptyChildren()\n  ) {}\n\n  /**\n   * True if the value is empty and there are no children\n   */\n  isEmpty(): boolean {\n    return this.value === null && this.children.isEmpty();\n  }\n\n  /**\n   * Given a path and predicate, return the first node and the path to that node\n   * where the predicate returns true.\n   *\n   * TODO Do a perf test -- If we're creating a bunch of `{path: value:}`\n   * objects on the way back out, it may be better to pass down a pathSoFar obj.\n   *\n   * @param relativePath - The remainder of the path\n   * @param predicate - The predicate to satisfy to return a node\n   */\n  findRootMostMatchingPathAndValue(\n    relativePath: Path,\n    predicate: (a: T) => boolean\n  ): { path: Path; value: T } | null {\n    if (this.value != null && predicate(this.value)) {\n      return { path: newEmptyPath(), value: this.value };\n    } else {\n      if (pathIsEmpty(relativePath)) {\n        return null;\n      } else {\n        const front = pathGetFront(relativePath);\n        const child = this.children.get(front);\n        if (child !== null) {\n          const childExistingPathAndValue =\n            child.findRootMostMatchingPathAndValue(\n              pathPopFront(relativePath),\n              predicate\n            );\n          if (childExistingPathAndValue != null) {\n            const fullPath = pathChild(\n              new Path(front),\n              childExistingPathAndValue.path\n            );\n            return { path: fullPath, value: childExistingPathAndValue.value };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  /**\n   * Find, if it exists, the shortest subpath of the given path that points a defined\n   * value in the tree\n   */\n  findRootMostValueAndPath(\n    relativePath: Path\n  ): { path: Path; value: T } | null {\n    return this.findRootMostMatchingPathAndValue(relativePath, () => true);\n  }\n\n  /**\n   * @returns The subtree at the given path\n   */\n  subtree(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return this;\n    } else {\n      const front = pathGetFront(relativePath);\n      const childTree = this.children.get(front);\n      if (childTree !== null) {\n        return childTree.subtree(pathPopFront(relativePath));\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Sets a value at the specified path.\n   *\n   * @param relativePath - Path to set value at.\n   * @param toSet - Value to set.\n   * @returns Resulting tree.\n   */\n  set(relativePath: Path, toSet: T | null): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return new ImmutableTree(toSet, this.children);\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.set(pathPopFront(relativePath), toSet);\n      const newChildren = this.children.insert(front, newChild);\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Removes the value at the specified path.\n   *\n   * @param relativePath - Path to value to remove.\n   * @returns Resulting tree.\n   */\n  remove(relativePath: Path): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      if (this.children.isEmpty()) {\n        return new ImmutableTree<T>(null);\n      } else {\n        return new ImmutableTree(null, this.children);\n      }\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        const newChild = child.remove(pathPopFront(relativePath));\n        let newChildren;\n        if (newChild.isEmpty()) {\n          newChildren = this.children.remove(front);\n        } else {\n          newChildren = this.children.insert(front, newChild);\n        }\n        if (this.value === null && newChildren.isEmpty()) {\n          return new ImmutableTree<T>(null);\n        } else {\n          return new ImmutableTree(this.value, newChildren);\n        }\n      } else {\n        return this;\n      }\n    }\n  }\n\n  /**\n   * Gets a value from the tree.\n   *\n   * @param relativePath - Path to get value for.\n   * @returns Value at path, or null.\n   */\n  get(relativePath: Path): T | null {\n    if (pathIsEmpty(relativePath)) {\n      return this.value;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front);\n      if (child) {\n        return child.get(pathPopFront(relativePath));\n      } else {\n        return null;\n      }\n    }\n  }\n\n  /**\n   * Replace the subtree at the specified path with the given new tree.\n   *\n   * @param relativePath - Path to replace subtree for.\n   * @param newTree - New tree.\n   * @returns Resulting tree.\n   */\n  setTree(relativePath: Path, newTree: ImmutableTree<T>): ImmutableTree<T> {\n    if (pathIsEmpty(relativePath)) {\n      return newTree;\n    } else {\n      const front = pathGetFront(relativePath);\n      const child = this.children.get(front) || new ImmutableTree<T>(null);\n      const newChild = child.setTree(pathPopFront(relativePath), newTree);\n      let newChildren;\n      if (newChild.isEmpty()) {\n        newChildren = this.children.remove(front);\n      } else {\n        newChildren = this.children.insert(front, newChild);\n      }\n      return new ImmutableTree(this.value, newChildren);\n    }\n  }\n\n  /**\n   * Performs a depth first fold on this tree. Transforms a tree into a single\n   * value, given a function that operates on the path to a node, an optional\n   * current value, and a map of child names to folded subtrees\n   */\n  fold<V>(fn: (path: Path, value: T, children: { [k: string]: V }) => V): V {\n    return this.fold_(newEmptyPath(), fn);\n  }\n\n  /**\n   * Recursive helper for public-facing fold() method\n   */\n  private fold_<V>(\n    pathSoFar: Path,\n    fn: (path: Path, value: T | null, children: { [k: string]: V }) => V\n  ): V {\n    const accum: { [k: string]: V } = {};\n    this.children.inorderTraversal(\n      (childKey: string, childTree: ImmutableTree<T>) => {\n        accum[childKey] = childTree.fold_(pathChild(pathSoFar, childKey), fn);\n      }\n    );\n    return fn(pathSoFar, this.value, accum);\n  }\n\n  /**\n   * Find the first matching value on the given path. Return the result of applying f to it.\n   */\n  findOnPath<V>(path: Path, f: (path: Path, value: T) => V | null): V | null {\n    return this.findOnPath_(path, newEmptyPath(), f);\n  }\n\n  private findOnPath_<V>(\n    pathToFollow: Path,\n    pathSoFar: Path,\n    f: (path: Path, value: T) => V | null\n  ): V | null {\n    const result = this.value ? f(pathSoFar, this.value) : false;\n    if (result) {\n      return result;\n    } else {\n      if (pathIsEmpty(pathToFollow)) {\n        return null;\n      } else {\n        const front = pathGetFront(pathToFollow)!;\n        const nextChild = this.children.get(front);\n        if (nextChild) {\n          return nextChild.findOnPath_(\n            pathPopFront(pathToFollow),\n            pathChild(pathSoFar, front),\n            f\n          );\n        } else {\n          return null;\n        }\n      }\n    }\n  }\n\n  foreachOnPath(\n    path: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    return this.foreachOnPath_(path, newEmptyPath(), f);\n  }\n\n  private foreachOnPath_(\n    pathToFollow: Path,\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ): ImmutableTree<T> {\n    if (pathIsEmpty(pathToFollow)) {\n      return this;\n    } else {\n      if (this.value) {\n        f(currentRelativePath, this.value);\n      }\n      const front = pathGetFront(pathToFollow);\n      const nextChild = this.children.get(front);\n      if (nextChild) {\n        return nextChild.foreachOnPath_(\n          pathPopFront(pathToFollow),\n          pathChild(currentRelativePath, front),\n          f\n        );\n      } else {\n        return new ImmutableTree<T>(null);\n      }\n    }\n  }\n\n  /**\n   * Calls the given function for each node in the tree that has a value.\n   *\n   * @param f - A function to be called with the path from the root of the tree to\n   * a node, and the value at that node. Called in depth-first order.\n   */\n  foreach(f: (path: Path, value: T) => void) {\n    this.foreach_(newEmptyPath(), f);\n  }\n\n  private foreach_(\n    currentRelativePath: Path,\n    f: (path: Path, value: T) => void\n  ) {\n    this.children.inorderTraversal((childName, childTree) => {\n      childTree.foreach_(pathChild(currentRelativePath, childName), f);\n    });\n    if (this.value) {\n      f(currentRelativePath, this.value);\n    }\n  }\n\n  foreachChild(f: (name: string, value: T) => void) {\n    this.children.inorderTraversal(\n      (childName: string, childTree: ImmutableTree<T>) => {\n        if (childTree.value) {\n          f(childName, childTree.value);\n        }\n      }\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathIsEmpty\n} from './util/Path';\nimport { each } from './util/util';\n\n/**\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\n * to reflect the write added.\n */\nexport class CompoundWrite {\n  constructor(public writeTree_: ImmutableTree<Node>) {}\n\n  static empty(): CompoundWrite {\n    return new CompoundWrite(new ImmutableTree(null));\n  }\n}\n\nexport function compoundWriteAddWrite(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  node: Node\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return new CompoundWrite(new ImmutableTree(node));\n  } else {\n    const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n    if (rootmost != null) {\n      const rootMostPath = rootmost.path;\n      let value = rootmost.value;\n      const relativePath = newRelativePath(rootMostPath, path);\n      value = value.updateChild(relativePath, node);\n      return new CompoundWrite(\n        compoundWrite.writeTree_.set(rootMostPath, value)\n      );\n    } else {\n      const subtree = new ImmutableTree(node);\n      const newWriteTree = compoundWrite.writeTree_.setTree(path, subtree);\n      return new CompoundWrite(newWriteTree);\n    }\n  }\n}\n\nexport function compoundWriteAddWrites(\n  compoundWrite: CompoundWrite,\n  path: Path,\n  updates: { [name: string]: Node }\n): CompoundWrite {\n  let newWrite = compoundWrite;\n  each(updates, (childKey: string, node: Node) => {\n    newWrite = compoundWriteAddWrite(newWrite, pathChild(path, childKey), node);\n  });\n  return newWrite;\n}\n\n/**\n * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\n * location, which must be removed by calling this method with that path.\n *\n * @param compoundWrite - The CompoundWrite to remove.\n * @param path - The path at which a write and all deeper writes should be removed\n * @returns The new CompoundWrite with the removed path\n */\nexport function compoundWriteRemoveWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return CompoundWrite.empty();\n  } else {\n    const newWriteTree = compoundWrite.writeTree_.setTree(\n      path,\n      new ImmutableTree<Node>(null)\n    );\n    return new CompoundWrite(newWriteTree);\n  }\n}\n\n/**\n * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\n * considered \"complete\".\n *\n * @param compoundWrite - The CompoundWrite to check.\n * @param path - The path to check for\n * @returns Whether there is a complete write at that path\n */\nexport function compoundWriteHasCompleteWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): boolean {\n  return compoundWriteGetCompleteNode(compoundWrite, path) != null;\n}\n\n/**\n * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\n * writes from deeper paths, but will return child nodes from a more shallow path.\n *\n * @param compoundWrite - The CompoundWrite to get the node from.\n * @param path - The path to get a complete write\n * @returns The node if complete at that path, or null otherwise.\n */\nexport function compoundWriteGetCompleteNode(\n  compoundWrite: CompoundWrite,\n  path: Path\n): Node | null {\n  const rootmost = compoundWrite.writeTree_.findRootMostValueAndPath(path);\n  if (rootmost != null) {\n    return compoundWrite.writeTree_\n      .get(rootmost.path)\n      .getChild(newRelativePath(rootmost.path, path));\n  } else {\n    return null;\n  }\n}\n\n/**\n * Returns all children that are guaranteed to be a complete overwrite.\n *\n * @param compoundWrite - The CompoundWrite to get children from.\n * @returns A list of all complete children.\n */\nexport function compoundWriteGetCompleteChildren(\n  compoundWrite: CompoundWrite\n): NamedNode[] {\n  const children: NamedNode[] = [];\n  const node = compoundWrite.writeTree_.value;\n  if (node != null) {\n    // If it's a leaf node, it has no children; so nothing to do.\n    if (!node.isLeafNode()) {\n      (node as ChildrenNode).forEachChild(\n        PRIORITY_INDEX,\n        (childName, childNode) => {\n          children.push(new NamedNode(childName, childNode));\n        }\n      );\n    }\n  } else {\n    compoundWrite.writeTree_.children.inorderTraversal(\n      (childName, childTree) => {\n        if (childTree.value != null) {\n          children.push(new NamedNode(childName, childTree.value));\n        }\n      }\n    );\n  }\n  return children;\n}\n\nexport function compoundWriteChildCompoundWrite(\n  compoundWrite: CompoundWrite,\n  path: Path\n): CompoundWrite {\n  if (pathIsEmpty(path)) {\n    return compoundWrite;\n  } else {\n    const shadowingNode = compoundWriteGetCompleteNode(compoundWrite, path);\n    if (shadowingNode != null) {\n      return new CompoundWrite(new ImmutableTree(shadowingNode));\n    } else {\n      return new CompoundWrite(compoundWrite.writeTree_.subtree(path));\n    }\n  }\n}\n\n/**\n * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\n * @returns Whether this CompoundWrite is empty\n */\nexport function compoundWriteIsEmpty(compoundWrite: CompoundWrite): boolean {\n  return compoundWrite.writeTree_.isEmpty();\n}\n\n/**\n * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\n * node\n * @param node - The node to apply this CompoundWrite to\n * @returns The node with all writes applied\n */\nexport function compoundWriteApply(\n  compoundWrite: CompoundWrite,\n  node: Node\n): Node {\n  return applySubtreeWrite(newEmptyPath(), compoundWrite.writeTree_, node);\n}\n\nfunction applySubtreeWrite(\n  relativePath: Path,\n  writeTree: ImmutableTree<Node>,\n  node: Node\n): Node {\n  if (writeTree.value != null) {\n    // Since there a write is always a leaf, we're done here\n    return node.updateChild(relativePath, writeTree.value);\n  } else {\n    let priorityWrite = null;\n    writeTree.children.inorderTraversal((childKey, childTree) => {\n      if (childKey === '.priority') {\n        // Apply priorities at the end so we don't update priorities for either empty nodes or forget\n        // to apply priorities to empty nodes that are later filled\n        assert(\n          childTree.value !== null,\n          'Priority writes must always be leaf nodes'\n        );\n        priorityWrite = childTree.value;\n      } else {\n        node = applySubtreeWrite(\n          pathChild(relativePath, childKey),\n          childTree,\n          node\n        );\n      }\n    });\n    // If there was a priority write, we only apply it if the node is not empty\n    if (!node.getChild(relativePath).isEmpty() && priorityWrite !== null) {\n      node = node.updateChild(\n        pathChild(relativePath, '.priority'),\n        priorityWrite\n      );\n    }\n    return node;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError, safeGet } from '@firebase/util';\n\nimport {\n  CompoundWrite,\n  compoundWriteAddWrite,\n  compoundWriteAddWrites,\n  compoundWriteApply,\n  compoundWriteChildCompoundWrite,\n  compoundWriteGetCompleteChildren,\n  compoundWriteGetCompleteNode,\n  compoundWriteHasCompleteWrite,\n  compoundWriteIsEmpty,\n  compoundWriteRemoveWrite\n} from './CompoundWrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Index } from './snap/indexes/Index';\nimport { PRIORITY_INDEX } from './snap/indexes/PriorityIndex';\nimport { NamedNode, Node } from './snap/Node';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathContains,\n  pathGetFront,\n  pathIsEmpty,\n  pathPopFront\n} from './util/Path';\nimport { each } from './util/util';\nimport { CacheNode } from './view/CacheNode';\n\n/**\n * Defines a single user-initiated write operation. May be the result of a set(), transaction(), or update() call. In\n * the case of a set() or transaction, snap wil be non-null.  In the case of an update(), children will be non-null.\n */\nexport interface WriteRecord {\n  writeId: number;\n  path: Path;\n  snap?: Node | null;\n  children?: { [k: string]: Node } | null;\n  visible: boolean;\n}\n\n/**\n * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\n *\n */\nexport function writeTreeChildWrites(\n  writeTree: WriteTree,\n  path: Path\n): WriteTreeRef {\n  return newWriteTreeRef(path, writeTree);\n}\n\n/**\n * Record a new overwrite from user code.\n *\n * @param visible - This is set to false by some transactions. It should be excluded from event caches\n */\nexport function writeTreeAddOverwrite(\n  writeTree: WriteTree,\n  path: Path,\n  snap: Node,\n  writeId: number,\n  visible?: boolean\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older write on top of newer ones'\n  );\n  if (visible === undefined) {\n    visible = true;\n  }\n  writeTree.allWrites.push({\n    path,\n    snap,\n    writeId,\n    visible\n  });\n\n  if (visible) {\n    writeTree.visibleWrites = compoundWriteAddWrite(\n      writeTree.visibleWrites,\n      path,\n      snap\n    );\n  }\n  writeTree.lastWriteId = writeId;\n}\n\n/**\n * Record a new merge from user code.\n */\nexport function writeTreeAddMerge(\n  writeTree: WriteTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n) {\n  assert(\n    writeId > writeTree.lastWriteId,\n    'Stacking an older merge on top of newer ones'\n  );\n  writeTree.allWrites.push({\n    path,\n    children: changedChildren,\n    writeId,\n    visible: true\n  });\n\n  writeTree.visibleWrites = compoundWriteAddWrites(\n    writeTree.visibleWrites,\n    path,\n    changedChildren\n  );\n  writeTree.lastWriteId = writeId;\n}\n\nexport function writeTreeGetWrite(\n  writeTree: WriteTree,\n  writeId: number\n): WriteRecord | null {\n  for (let i = 0; i < writeTree.allWrites.length; i++) {\n    const record = writeTree.allWrites[i];\n    if (record.writeId === writeId) {\n      return record;\n    }\n  }\n  return null;\n}\n\n/**\n * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\n * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\n *\n * @returns true if the write may have been visible (meaning we'll need to reevaluate / raise\n * events as a result).\n */\nexport function writeTreeRemoveWrite(\n  writeTree: WriteTree,\n  writeId: number\n): boolean {\n  // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\n  // out of order.\n  //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\n  //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\n\n  const idx = writeTree.allWrites.findIndex(s => {\n    return s.writeId === writeId;\n  });\n  assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\n  const writeToRemove = writeTree.allWrites[idx];\n  writeTree.allWrites.splice(idx, 1);\n\n  let removedWriteWasVisible = writeToRemove.visible;\n  let removedWriteOverlapsWithOtherWrites = false;\n\n  let i = writeTree.allWrites.length - 1;\n\n  while (removedWriteWasVisible && i >= 0) {\n    const currentWrite = writeTree.allWrites[i];\n    if (currentWrite.visible) {\n      if (\n        i >= idx &&\n        writeTreeRecordContainsPath_(currentWrite, writeToRemove.path)\n      ) {\n        // The removed write was completely shadowed by a subsequent write.\n        removedWriteWasVisible = false;\n      } else if (pathContains(writeToRemove.path, currentWrite.path)) {\n        // Either we're covering some writes or they're covering part of us (depending on which came first).\n        removedWriteOverlapsWithOtherWrites = true;\n      }\n    }\n    i--;\n  }\n\n  if (!removedWriteWasVisible) {\n    return false;\n  } else if (removedWriteOverlapsWithOtherWrites) {\n    // There's some shadowing going on. Just rebuild the visible writes from scratch.\n    writeTreeResetTree_(writeTree);\n    return true;\n  } else {\n    // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\n    if (writeToRemove.snap) {\n      writeTree.visibleWrites = compoundWriteRemoveWrite(\n        writeTree.visibleWrites,\n        writeToRemove.path\n      );\n    } else {\n      const children = writeToRemove.children;\n      each(children, (childName: string) => {\n        writeTree.visibleWrites = compoundWriteRemoveWrite(\n          writeTree.visibleWrites,\n          pathChild(writeToRemove.path, childName)\n        );\n      });\n    }\n    return true;\n  }\n}\n\nfunction writeTreeRecordContainsPath_(\n  writeRecord: WriteRecord,\n  path: Path\n): boolean {\n  if (writeRecord.snap) {\n    return pathContains(writeRecord.path, path);\n  } else {\n    for (const childName in writeRecord.children) {\n      if (\n        writeRecord.children.hasOwnProperty(childName) &&\n        pathContains(pathChild(writeRecord.path, childName), path)\n      ) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\n/**\n * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\n */\nfunction writeTreeResetTree_(writeTree: WriteTree) {\n  writeTree.visibleWrites = writeTreeLayerTree_(\n    writeTree.allWrites,\n    writeTreeDefaultFilter_,\n    newEmptyPath()\n  );\n  if (writeTree.allWrites.length > 0) {\n    writeTree.lastWriteId =\n      writeTree.allWrites[writeTree.allWrites.length - 1].writeId;\n  } else {\n    writeTree.lastWriteId = -1;\n  }\n}\n\n/**\n * The default filter used when constructing the tree. Keep everything that's visible.\n */\nfunction writeTreeDefaultFilter_(write: WriteRecord) {\n  return write.visible;\n}\n\n/**\n * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\n * event data at that path.\n */\nfunction writeTreeLayerTree_(\n  writes: WriteRecord[],\n  filter: (w: WriteRecord) => boolean,\n  treeRoot: Path\n): CompoundWrite {\n  let compoundWrite = CompoundWrite.empty();\n  for (let i = 0; i < writes.length; ++i) {\n    const write = writes[i];\n    // Theory, a later set will either:\n    // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\n    // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\n    if (filter(write)) {\n      const writePath = write.path;\n      let relativePath: Path;\n      if (write.snap) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            relativePath,\n            write.snap\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          compoundWrite = compoundWriteAddWrite(\n            compoundWrite,\n            newEmptyPath(),\n            write.snap.getChild(relativePath)\n          );\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else if (write.children) {\n        if (pathContains(treeRoot, writePath)) {\n          relativePath = newRelativePath(treeRoot, writePath);\n          compoundWrite = compoundWriteAddWrites(\n            compoundWrite,\n            relativePath,\n            write.children\n          );\n        } else if (pathContains(writePath, treeRoot)) {\n          relativePath = newRelativePath(writePath, treeRoot);\n          if (pathIsEmpty(relativePath)) {\n            compoundWrite = compoundWriteAddWrites(\n              compoundWrite,\n              newEmptyPath(),\n              write.children\n            );\n          } else {\n            const child = safeGet(write.children, pathGetFront(relativePath));\n            if (child) {\n              // There exists a child in this node that matches the root path\n              const deepNode = child.getChild(pathPopFront(relativePath));\n              compoundWrite = compoundWriteAddWrite(\n                compoundWrite,\n                newEmptyPath(),\n                deepNode\n              );\n            }\n          }\n        } else {\n          // There is no overlap between root path and write path, ignore write\n        }\n      } else {\n        throw assertionError('WriteRecord should have .snap or .children');\n      }\n    }\n  }\n  return compoundWrite;\n}\n\n/**\n * Return a complete snapshot for the given path if there's visible write data at that path, else null.\n * No server data is considered.\n *\n */\nexport function writeTreeGetCompleteWriteData(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\n * writes), attempt to calculate a complete snapshot for the given path\n *\n * @param writeIdsToExclude - An optional set to be excluded\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeCalcCompleteEventCache(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  if (!writeIdsToExclude && !includeHiddenWrites) {\n    const shadowingNode = compoundWriteGetCompleteNode(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (shadowingNode != null) {\n      return shadowingNode;\n    } else {\n      const subMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        treePath\n      );\n      if (compoundWriteIsEmpty(subMerge)) {\n        return completeServerCache;\n      } else if (\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(subMerge, newEmptyPath())\n      ) {\n        // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\n        return null;\n      } else {\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(subMerge, layeredCache);\n      }\n    }\n  } else {\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    if (!includeHiddenWrites && compoundWriteIsEmpty(merge)) {\n      return completeServerCache;\n    } else {\n      // If the server cache is null, and we don't have a complete cache, we need to return null\n      if (\n        !includeHiddenWrites &&\n        completeServerCache == null &&\n        !compoundWriteHasCompleteWrite(merge, newEmptyPath())\n      ) {\n        return null;\n      } else {\n        const filter = function (write: WriteRecord) {\n          return (\n            (write.visible || includeHiddenWrites) &&\n            (!writeIdsToExclude ||\n              !~writeIdsToExclude.indexOf(write.writeId)) &&\n            (pathContains(write.path, treePath) ||\n              pathContains(treePath, write.path))\n          );\n        };\n        const mergeAtPath = writeTreeLayerTree_(\n          writeTree.allWrites,\n          filter,\n          treePath\n        );\n        const layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\n        return compoundWriteApply(mergeAtPath, layeredCache);\n      }\n    }\n  }\n}\n\n/**\n * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\n * Used when creating new views, to pre-fill their complete event children snapshot.\n */\nexport function writeTreeCalcCompleteEventChildren(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerChildren: ChildrenNode | null\n) {\n  let completeChildren = ChildrenNode.EMPTY_NODE as Node;\n  const topLevelSet = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    treePath\n  );\n  if (topLevelSet) {\n    if (!topLevelSet.isLeafNode()) {\n      // we're shadowing everything. Return the children.\n      topLevelSet.forEachChild(PRIORITY_INDEX, (childName, childSnap) => {\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          childSnap\n        );\n      });\n    }\n    return completeChildren;\n  } else if (completeServerChildren) {\n    // Layer any children we have on top of this\n    // We know we don't have a top-level set, so just enumerate existing children\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    completeServerChildren.forEachChild(\n      PRIORITY_INDEX,\n      (childName, childNode) => {\n        const node = compoundWriteApply(\n          compoundWriteChildCompoundWrite(merge, new Path(childName)),\n          childNode\n        );\n        completeChildren = completeChildren.updateImmediateChild(\n          childName,\n          node\n        );\n      }\n    );\n    // Add any complete children we have from the set\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  } else {\n    // We don't have anything to layer on top of. Layer on any children we have\n    // Note that we can return an empty snap if we have a defined delete\n    const merge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      treePath\n    );\n    compoundWriteGetCompleteChildren(merge).forEach(namedNode => {\n      completeChildren = completeChildren.updateImmediateChild(\n        namedNode.name,\n        namedNode.node\n      );\n    });\n    return completeChildren;\n  }\n}\n\n/**\n * Given that the underlying server data has updated, determine what, if anything, needs to be\n * applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events\n *\n * Either existingEventSnap or existingServerSnap must exist\n */\nexport function writeTreeCalcEventCacheAfterServerOverwrite(\n  writeTree: WriteTree,\n  treePath: Path,\n  childPath: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  assert(\n    existingEventSnap || existingServerSnap,\n    'Either existingEventSnap or existingServerSnap must exist'\n  );\n  const path = pathChild(treePath, childPath);\n  if (compoundWriteHasCompleteWrite(writeTree.visibleWrites, path)) {\n    // At this point we can probably guarantee that we're in case 2, meaning no events\n    // May need to check visibility while doing the findRootMostValueAndPath call\n    return null;\n  } else {\n    // No complete shadowing. We're either partially shadowing or not shadowing at all.\n    const childMerge = compoundWriteChildCompoundWrite(\n      writeTree.visibleWrites,\n      path\n    );\n    if (compoundWriteIsEmpty(childMerge)) {\n      // We're not shadowing at all. Case 1\n      return existingServerSnap.getChild(childPath);\n    } else {\n      // This could be more efficient if the serverNode + updates doesn't change the eventSnap\n      // However this is tricky to find out, since user updates don't necessary change the server\n      // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\n      // adds nodes, but doesn't change any existing writes. It is therefore not enough to\n      // only check if the updates change the serverNode.\n      // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getChild(childPath)\n      );\n    }\n  }\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeCalcCompleteChild(\n  writeTree: WriteTree,\n  treePath: Path,\n  childKey: string,\n  existingServerSnap: CacheNode\n): Node | null {\n  const path = pathChild(treePath, childKey);\n  const shadowingNode = compoundWriteGetCompleteNode(\n    writeTree.visibleWrites,\n    path\n  );\n  if (shadowingNode != null) {\n    return shadowingNode;\n  } else {\n    if (existingServerSnap.isCompleteForChild(childKey)) {\n      const childMerge = compoundWriteChildCompoundWrite(\n        writeTree.visibleWrites,\n        path\n      );\n      return compoundWriteApply(\n        childMerge,\n        existingServerSnap.getNode().getImmediateChild(childKey)\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n */\nexport function writeTreeShadowingWrite(\n  writeTree: WriteTree,\n  path: Path\n): Node | null {\n  return compoundWriteGetCompleteNode(writeTree.visibleWrites, path);\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window.\n */\nexport function writeTreeCalcIndexedSlice(\n  writeTree: WriteTree,\n  treePath: Path,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  let toIterate: Node;\n  const merge = compoundWriteChildCompoundWrite(\n    writeTree.visibleWrites,\n    treePath\n  );\n  const shadowingNode = compoundWriteGetCompleteNode(merge, newEmptyPath());\n  if (shadowingNode != null) {\n    toIterate = shadowingNode;\n  } else if (completeServerData != null) {\n    toIterate = compoundWriteApply(merge, completeServerData);\n  } else {\n    // no children to iterate on\n    return [];\n  }\n  toIterate = toIterate.withIndex(index);\n  if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\n    const nodes = [];\n    const cmp = index.getCompare();\n    const iter = reverse\n      ? (toIterate as ChildrenNode).getReverseIteratorFrom(startPost, index)\n      : (toIterate as ChildrenNode).getIteratorFrom(startPost, index);\n    let next = iter.getNext();\n    while (next && nodes.length < count) {\n      if (cmp(next, startPost) !== 0) {\n        nodes.push(next);\n      }\n      next = iter.getNext();\n    }\n    return nodes;\n  } else {\n    return [];\n  }\n}\n\nexport function newWriteTree(): WriteTree {\n  return {\n    visibleWrites: CompoundWrite.empty(),\n    allWrites: [],\n    lastWriteId: -1\n  };\n}\n\n/**\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\n * and addMerge(), and removed with removeWrite().\n */\nexport interface WriteTree {\n  /**\n   * A tree tracking the result of applying all visible writes.  This does not include transactions with\n   * applyLocally=false or writes that are completely shadowed by other writes.\n   */\n  visibleWrites: CompoundWrite;\n\n  /**\n   * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\n   * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\n   * used by transactions).\n   */\n  allWrites: WriteRecord[];\n\n  lastWriteId: number;\n}\n\n/**\n * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\n * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\n * can lead to a more expensive calculation.\n *\n * @param writeIdsToExclude - Optional writes to exclude.\n * @param includeHiddenWrites - Defaults to false, whether or not to layer on writes with visible set to false\n */\nexport function writeTreeRefCalcCompleteEventCache(\n  writeTreeRef: WriteTreeRef,\n  completeServerCache: Node | null,\n  writeIdsToExclude?: number[],\n  includeHiddenWrites?: boolean\n): Node | null {\n  return writeTreeCalcCompleteEventCache(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerCache,\n    writeIdsToExclude,\n    includeHiddenWrites\n  );\n}\n\n/**\n * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\n * mix of the given server data and write data.\n *\n */\nexport function writeTreeRefCalcCompleteEventChildren(\n  writeTreeRef: WriteTreeRef,\n  completeServerChildren: ChildrenNode | null\n): ChildrenNode {\n  return writeTreeCalcCompleteEventChildren(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerChildren\n  ) as ChildrenNode;\n}\n\n/**\n * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\n * if anything, needs to be applied to the event cache.\n *\n * Possibilities:\n *\n * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\n *\n * 2. Some write is completely shadowing. No events to be raised\n *\n * 3. Is partially shadowed. Events should be raised\n *\n * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\n *\n *\n */\nexport function writeTreeRefCalcEventCacheAfterServerOverwrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path,\n  existingEventSnap: Node | null,\n  existingServerSnap: Node | null\n): Node | null {\n  return writeTreeCalcEventCacheAfterServerOverwrite(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    path,\n    existingEventSnap,\n    existingServerSnap\n  );\n}\n\n/**\n * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\n * a higher path, this will return the child of that write relative to the write and this path.\n * Returns null if there is no write at this path.\n *\n */\nexport function writeTreeRefShadowingWrite(\n  writeTreeRef: WriteTreeRef,\n  path: Path\n): Node | null {\n  return writeTreeShadowingWrite(\n    writeTreeRef.writeTree,\n    pathChild(writeTreeRef.treePath, path)\n  );\n}\n\n/**\n * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\n * the window, but may now be in the window\n */\nexport function writeTreeRefCalcIndexedSlice(\n  writeTreeRef: WriteTreeRef,\n  completeServerData: Node | null,\n  startPost: NamedNode,\n  count: number,\n  reverse: boolean,\n  index: Index\n): NamedNode[] {\n  return writeTreeCalcIndexedSlice(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    completeServerData,\n    startPost,\n    count,\n    reverse,\n    index\n  );\n}\n\n/**\n * Returns a complete child for a given server snap after applying all user writes or null if there is no\n * complete child for this ChildKey.\n */\nexport function writeTreeRefCalcCompleteChild(\n  writeTreeRef: WriteTreeRef,\n  childKey: string,\n  existingServerCache: CacheNode\n): Node | null {\n  return writeTreeCalcCompleteChild(\n    writeTreeRef.writeTree,\n    writeTreeRef.treePath,\n    childKey,\n    existingServerCache\n  );\n}\n\n/**\n * Return a WriteTreeRef for a child.\n */\nexport function writeTreeRefChild(\n  writeTreeRef: WriteTreeRef,\n  childName: string\n): WriteTreeRef {\n  return newWriteTreeRef(\n    pathChild(writeTreeRef.treePath, childName),\n    writeTreeRef.writeTree\n  );\n}\n\nexport function newWriteTreeRef(\n  path: Path,\n  writeTree: WriteTree\n): WriteTreeRef {\n  return {\n    treePath: path,\n    writeTree\n  };\n}\n\n/**\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\n * just proxy to the underlying WriteTree.\n *\n */\nexport interface WriteTreeRef {\n  /**\n   * The path to this particular write tree ref. Used for calling methods on writeTree_ while exposing a simpler\n   * interface to callers.\n   */\n  readonly treePath: Path;\n\n  /**\n   * * A reference to the actual tree of write data. All methods are pass-through to the tree, but with the appropriate\n   * path prefixed.\n   *\n   * This lets us make cheap references to points in the tree for sync points without having to copy and maintain all of\n   * the data.\n   */\n  readonly writeTree: WriteTree;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport {\n  Change,\n  ChangeType,\n  changeChildAdded,\n  changeChildChanged,\n  changeChildRemoved\n} from './Change';\n\nexport class ChildChangeAccumulator {\n  private readonly changeMap: Map<string, Change> = new Map();\n\n  trackChildChange(change: Change) {\n    const type = change.type;\n    const childKey = change.childName!;\n    assert(\n      type === ChangeType.CHILD_ADDED ||\n        type === ChangeType.CHILD_CHANGED ||\n        type === ChangeType.CHILD_REMOVED,\n      'Only child changes supported for tracking'\n    );\n    assert(\n      childKey !== '.priority',\n      'Only non-priority child changes can be tracked.'\n    );\n    const oldChange = this.changeMap.get(childKey);\n    if (oldChange) {\n      const oldType = oldChange.type;\n      if (\n        type === ChangeType.CHILD_ADDED &&\n        oldType === ChangeType.CHILD_REMOVED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(\n            childKey,\n            change.snapshotNode,\n            oldChange.snapshotNode\n          )\n        );\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.delete(childKey);\n      } else if (\n        type === ChangeType.CHILD_REMOVED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildRemoved(childKey, oldChange.oldSnap)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_ADDED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildAdded(childKey, change.snapshotNode)\n        );\n      } else if (\n        type === ChangeType.CHILD_CHANGED &&\n        oldType === ChangeType.CHILD_CHANGED\n      ) {\n        this.changeMap.set(\n          childKey,\n          changeChildChanged(childKey, change.snapshotNode, oldChange.oldSnap)\n        );\n      } else {\n        throw assertionError(\n          'Illegal combination of changes: ' +\n            change +\n            ' occurred after ' +\n            oldChange\n        );\n      }\n    } else {\n      this.changeMap.set(childKey, change);\n    }\n  }\n\n  getChanges(): Change[] {\n    return Array.from(this.changeMap.values());\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Index } from '../snap/indexes/Index';\nimport { NamedNode, Node } from '../snap/Node';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcIndexedSlice\n} from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { ViewCache, viewCacheGetCompleteServerSnap } from './ViewCache';\n\n/**\n * Since updates to filtered nodes might require nodes to be pulled in from \"outside\" the node, this interface\n * can help to get complete children that can be pulled in.\n * A class implementing this interface takes potentially multiple sources (e.g. user writes, server data from\n * other views etc.) to try it's best to get a complete child that might be useful in pulling into the view.\n *\n * @interface\n */\nexport interface CompleteChildSource {\n  getCompleteChild(childKey: string): Node | null;\n\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null;\n}\n\n/**\n * An implementation of CompleteChildSource that never returns any additional children\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class NoCompleteChildSource_ implements CompleteChildSource {\n  getCompleteChild(childKey?: string): Node | null {\n    return null;\n  }\n  getChildAfterChild(\n    index?: Index,\n    child?: NamedNode,\n    reverse?: boolean\n  ): NamedNode | null {\n    return null;\n  }\n}\n\n/**\n * Singleton instance.\n */\nexport const NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\n\n/**\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\n * old event caches available to calculate complete children.\n */\nexport class WriteTreeCompleteChildSource implements CompleteChildSource {\n  constructor(\n    private writes_: WriteTreeRef,\n    private viewCache_: ViewCache,\n    private optCompleteServerCache_: Node | null = null\n  ) {}\n  getCompleteChild(childKey: string): Node | null {\n    const node = this.viewCache_.eventCache;\n    if (node.isCompleteForChild(childKey)) {\n      return node.getNode().getImmediateChild(childKey);\n    } else {\n      const serverNode =\n        this.optCompleteServerCache_ != null\n          ? new CacheNode(this.optCompleteServerCache_, true, false)\n          : this.viewCache_.serverCache;\n      return writeTreeRefCalcCompleteChild(this.writes_, childKey, serverNode);\n    }\n  }\n  getChildAfterChild(\n    index: Index,\n    child: NamedNode,\n    reverse: boolean\n  ): NamedNode | null {\n    const completeServerData =\n      this.optCompleteServerCache_ != null\n        ? this.optCompleteServerCache_\n        : viewCacheGetCompleteServerSnap(this.viewCache_);\n    const nodes = writeTreeRefCalcIndexedSlice(\n      this.writes_,\n      completeServerData,\n      child,\n      1,\n      reverse,\n      index\n    );\n    if (nodes.length === 0) {\n      return null;\n    } else {\n      return nodes[0];\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, assertionError } from '@firebase/util';\n\nimport { AckUserWrite } from '../operation/AckUserWrite';\nimport { Merge } from '../operation/Merge';\nimport { Operation, OperationType } from '../operation/Operation';\nimport { Overwrite } from '../operation/Overwrite';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { KEY_INDEX } from '../snap/indexes/KeyIndex';\nimport { Node } from '../snap/Node';\nimport { ImmutableTree } from '../util/ImmutableTree';\nimport {\n  newEmptyPath,\n  Path,\n  pathChild,\n  pathGetBack,\n  pathGetFront,\n  pathGetLength,\n  pathIsEmpty,\n  pathParent,\n  pathPopFront\n} from '../util/Path';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteChild,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren,\n  writeTreeRefCalcEventCacheAfterServerOverwrite,\n  writeTreeRefShadowingWrite\n} from '../WriteTree';\n\nimport { Change, changeValue } from './Change';\nimport { ChildChangeAccumulator } from './ChildChangeAccumulator';\nimport {\n  CompleteChildSource,\n  NO_COMPLETE_CHILD_SOURCE,\n  WriteTreeCompleteChildSource\n} from './CompleteChildSource';\nimport { NodeFilter } from './filter/NodeFilter';\nimport {\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap,\n  viewCacheUpdateEventSnap,\n  viewCacheUpdateServerSnap\n} from './ViewCache';\n\nexport interface ProcessorResult {\n  readonly viewCache: ViewCache;\n  readonly changes: Change[];\n}\n\nexport interface ViewProcessor {\n  readonly filter: NodeFilter;\n}\n\nexport function newViewProcessor(filter: NodeFilter): ViewProcessor {\n  return { filter };\n}\n\nexport function viewProcessorAssertIndexed(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache\n): void {\n  assert(\n    viewCache.eventCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Event snap not indexed'\n  );\n  assert(\n    viewCache.serverCache.getNode().isIndexed(viewProcessor.filter.getIndex()),\n    'Server snap not indexed'\n  );\n}\n\nexport function viewProcessorApplyOperation(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null\n): ProcessorResult {\n  const accumulator = new ChildChangeAccumulator();\n  let newViewCache, filterServerNode;\n  if (operation.type === OperationType.OVERWRITE) {\n    const overwrite = operation as Overwrite;\n    if (overwrite.source.fromUser) {\n      newViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(overwrite.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered  and the\n      // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\n      // again\n      filterServerNode =\n        overwrite.source.tagged ||\n        (oldViewCache.serverCache.isFiltered() && !pathIsEmpty(overwrite.path));\n      newViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        oldViewCache,\n        overwrite.path,\n        overwrite.snap,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.MERGE) {\n    const merge = operation as Merge;\n    if (merge.source.fromUser) {\n      newViewCache = viewProcessorApplyUserMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      assert(merge.source.fromServer, 'Unknown source.');\n      // We filter the node if it's a tagged update or the node has been previously filtered\n      filterServerNode =\n        merge.source.tagged || oldViewCache.serverCache.isFiltered();\n      newViewCache = viewProcessorApplyServerMerge(\n        viewProcessor,\n        oldViewCache,\n        merge.path,\n        merge.children,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.ACK_USER_WRITE) {\n    const ackUserWrite = operation as AckUserWrite;\n    if (!ackUserWrite.revert) {\n      newViewCache = viewProcessorAckUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        ackUserWrite.affectedTree,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    } else {\n      newViewCache = viewProcessorRevertUserWrite(\n        viewProcessor,\n        oldViewCache,\n        ackUserWrite.path,\n        writesCache,\n        completeCache,\n        accumulator\n      );\n    }\n  } else if (operation.type === OperationType.LISTEN_COMPLETE) {\n    newViewCache = viewProcessorListenComplete(\n      viewProcessor,\n      oldViewCache,\n      operation.path,\n      writesCache,\n      accumulator\n    );\n  } else {\n    throw assertionError('Unknown operation type: ' + operation.type);\n  }\n  const changes = accumulator.getChanges();\n  viewProcessorMaybeAddValueEvent(oldViewCache, newViewCache, changes);\n  return { viewCache: newViewCache, changes };\n}\n\nfunction viewProcessorMaybeAddValueEvent(\n  oldViewCache: ViewCache,\n  newViewCache: ViewCache,\n  accumulator: Change[]\n): void {\n  const eventSnap = newViewCache.eventCache;\n  if (eventSnap.isFullyInitialized()) {\n    const isLeafOrEmpty =\n      eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\n    const oldCompleteSnap = viewCacheGetCompleteEventSnap(oldViewCache);\n    if (\n      accumulator.length > 0 ||\n      !oldViewCache.eventCache.isFullyInitialized() ||\n      (isLeafOrEmpty && !eventSnap.getNode().equals(oldCompleteSnap)) ||\n      !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())\n    ) {\n      accumulator.push(\n        changeValue(viewCacheGetCompleteEventSnap(newViewCache))\n      );\n    }\n  }\n}\n\nfunction viewProcessorGenerateEventCacheAfterServerEvent(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  changePath: Path,\n  writesCache: WriteTreeRef,\n  source: CompleteChildSource,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = viewCache.eventCache;\n  if (writeTreeRefShadowingWrite(writesCache, changePath) != null) {\n    // we have a shadowing write, ignore changes\n    return viewCache;\n  } else {\n    let newEventCache, serverNode;\n    if (pathIsEmpty(changePath)) {\n      // TODO: figure out how this plays with \"sliding ack windows\"\n      assert(\n        viewCache.serverCache.isFullyInitialized(),\n        'If change path is empty, we must have complete server data'\n      );\n      if (viewCache.serverCache.isFiltered()) {\n        // We need to special case this, because we need to only apply writes to complete children, or\n        // we might end up raising events for incomplete children. If the server data is filtered deep\n        // writes cannot be guaranteed to be complete\n        const serverCache = viewCacheGetCompleteServerSnap(viewCache);\n        const completeChildren =\n          serverCache instanceof ChildrenNode\n            ? serverCache\n            : ChildrenNode.EMPTY_NODE;\n        const completeEventChildren = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          completeChildren\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeEventChildren,\n          accumulator\n        );\n      } else {\n        const completeNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        newEventCache = viewProcessor.filter.updateFullNode(\n          viewCache.eventCache.getNode(),\n          completeNode,\n          accumulator\n        );\n      }\n    } else {\n      const childKey = pathGetFront(changePath);\n      if (childKey === '.priority') {\n        assert(\n          pathGetLength(changePath) === 1,\n          \"Can't have a priority with additional path components\"\n        );\n        const oldEventNode = oldEventSnap.getNode();\n        serverNode = viewCache.serverCache.getNode();\n        // we might have overwrites for this priority\n        const updatedPriority = writeTreeRefCalcEventCacheAfterServerOverwrite(\n          writesCache,\n          changePath,\n          oldEventNode,\n          serverNode\n        );\n        if (updatedPriority != null) {\n          newEventCache = viewProcessor.filter.updatePriority(\n            oldEventNode,\n            updatedPriority\n          );\n        } else {\n          // priority didn't change, keep old node\n          newEventCache = oldEventSnap.getNode();\n        }\n      } else {\n        const childChangePath = pathPopFront(changePath);\n        // update child\n        let newEventChild;\n        if (oldEventSnap.isCompleteForChild(childKey)) {\n          serverNode = viewCache.serverCache.getNode();\n          const eventChildUpdate =\n            writeTreeRefCalcEventCacheAfterServerOverwrite(\n              writesCache,\n              changePath,\n              oldEventSnap.getNode(),\n              serverNode\n            );\n          if (eventChildUpdate != null) {\n            newEventChild = oldEventSnap\n              .getNode()\n              .getImmediateChild(childKey)\n              .updateChild(childChangePath, eventChildUpdate);\n          } else {\n            // Nothing changed, just keep the old child\n            newEventChild = oldEventSnap.getNode().getImmediateChild(childKey);\n          }\n        } else {\n          newEventChild = writeTreeRefCalcCompleteChild(\n            writesCache,\n            childKey,\n            viewCache.serverCache\n          );\n        }\n        if (newEventChild != null) {\n          newEventCache = viewProcessor.filter.updateChild(\n            oldEventSnap.getNode(),\n            childKey,\n            newEventChild,\n            childChangePath,\n            source,\n            accumulator\n          );\n        } else {\n          // no complete child available or no change\n          newEventCache = oldEventSnap.getNode();\n        }\n      }\n    }\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      oldEventSnap.isFullyInitialized() || pathIsEmpty(changePath),\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n\nfunction viewProcessorApplyServerOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerSnap = oldViewCache.serverCache;\n  let newServerCache;\n  const serverFilter = filterServerNode\n    ? viewProcessor.filter\n    : viewProcessor.filter.getIndexedFilter();\n  if (pathIsEmpty(changePath)) {\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      changedSnap,\n      null\n    );\n  } else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\n    // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\n    const newServerNode = oldServerSnap\n      .getNode()\n      .updateChild(changePath, changedSnap);\n    newServerCache = serverFilter.updateFullNode(\n      oldServerSnap.getNode(),\n      newServerNode,\n      null\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (\n      !oldServerSnap.isCompleteForPath(changePath) &&\n      pathGetLength(changePath) > 1\n    ) {\n      // We don't update incomplete nodes with updates intended for other listeners\n      return oldViewCache;\n    }\n    const childChangePath = pathPopFront(changePath);\n    const childNode = oldServerSnap.getNode().getImmediateChild(childKey);\n    const newChildNode = childNode.updateChild(childChangePath, changedSnap);\n    if (childKey === '.priority') {\n      newServerCache = serverFilter.updatePriority(\n        oldServerSnap.getNode(),\n        newChildNode\n      );\n    } else {\n      newServerCache = serverFilter.updateChild(\n        oldServerSnap.getNode(),\n        childKey,\n        newChildNode,\n        childChangePath,\n        NO_COMPLETE_CHILD_SOURCE,\n        null\n      );\n    }\n  }\n  const newViewCache = viewCacheUpdateServerSnap(\n    oldViewCache,\n    newServerCache,\n    oldServerSnap.isFullyInitialized() || pathIsEmpty(changePath),\n    serverFilter.filtersNodes()\n  );\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    newViewCache,\n    completeCache\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    changePath,\n    writesCache,\n    source,\n    accumulator\n  );\n}\n\nfunction viewProcessorApplyUserOverwrite(\n  viewProcessor: ViewProcessor,\n  oldViewCache: ViewCache,\n  changePath: Path,\n  changedSnap: Node,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldEventSnap = oldViewCache.eventCache;\n  let newViewCache, newEventCache;\n  const source = new WriteTreeCompleteChildSource(\n    writesCache,\n    oldViewCache,\n    completeCache\n  );\n  if (pathIsEmpty(changePath)) {\n    newEventCache = viewProcessor.filter.updateFullNode(\n      oldViewCache.eventCache.getNode(),\n      changedSnap,\n      accumulator\n    );\n    newViewCache = viewCacheUpdateEventSnap(\n      oldViewCache,\n      newEventCache,\n      true,\n      viewProcessor.filter.filtersNodes()\n    );\n  } else {\n    const childKey = pathGetFront(changePath);\n    if (childKey === '.priority') {\n      newEventCache = viewProcessor.filter.updatePriority(\n        oldViewCache.eventCache.getNode(),\n        changedSnap\n      );\n      newViewCache = viewCacheUpdateEventSnap(\n        oldViewCache,\n        newEventCache,\n        oldEventSnap.isFullyInitialized(),\n        oldEventSnap.isFiltered()\n      );\n    } else {\n      const childChangePath = pathPopFront(changePath);\n      const oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\n      let newChild;\n      if (pathIsEmpty(childChangePath)) {\n        // Child overwrite, we can replace the child\n        newChild = changedSnap;\n      } else {\n        const childNode = source.getCompleteChild(childKey);\n        if (childNode != null) {\n          if (\n            pathGetBack(childChangePath) === '.priority' &&\n            childNode.getChild(pathParent(childChangePath)).isEmpty()\n          ) {\n            // This is a priority update on an empty node. If this node exists on the server, the\n            // server will send down the priority in the update, so ignore for now\n            newChild = childNode;\n          } else {\n            newChild = childNode.updateChild(childChangePath, changedSnap);\n          }\n        } else {\n          // There is no complete child node available\n          newChild = ChildrenNode.EMPTY_NODE;\n        }\n      }\n      if (!oldChild.equals(newChild)) {\n        const newEventSnap = viewProcessor.filter.updateChild(\n          oldEventSnap.getNode(),\n          childKey,\n          newChild,\n          childChangePath,\n          source,\n          accumulator\n        );\n        newViewCache = viewCacheUpdateEventSnap(\n          oldViewCache,\n          newEventSnap,\n          oldEventSnap.isFullyInitialized(),\n          viewProcessor.filter.filtersNodes()\n        );\n      } else {\n        newViewCache = oldViewCache;\n      }\n    }\n  }\n  return newViewCache;\n}\n\nfunction viewProcessorCacheHasChild(\n  viewCache: ViewCache,\n  childKey: string\n): boolean {\n  return viewCache.eventCache.isCompleteForChild(childKey);\n}\n\nfunction viewProcessorApplyUserMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  changedChildren.foreach((relativePath, childNode) => {\n    const writePath = pathChild(path, relativePath);\n    if (!viewProcessorCacheHasChild(viewCache, pathGetFront(writePath))) {\n      curViewCache = viewProcessorApplyUserOverwrite(\n        viewProcessor,\n        curViewCache,\n        writePath,\n        childNode,\n        writesCache,\n        serverCache,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorApplyMerge(\n  viewProcessor: ViewProcessor,\n  node: Node,\n  merge: ImmutableTree<Node>\n): Node {\n  merge.foreach((relativePath, childNode) => {\n    node = node.updateChild(relativePath, childNode);\n  });\n  return node;\n}\n\nfunction viewProcessorApplyServerMerge(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  changedChildren: ImmutableTree<Node>,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  filterServerNode: boolean,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\n  // wait for the complete data update coming soon.\n  if (\n    viewCache.serverCache.getNode().isEmpty() &&\n    !viewCache.serverCache.isFullyInitialized()\n  ) {\n    return viewCache;\n  }\n\n  // HACK: In the case of a limit query, there may be some changes that bump things out of the\n  // window leaving room for new items.  It's important we process these changes first, so we\n  // iterate the changes twice, first processing any that affect items currently in view.\n  // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\n  // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\n  // not the other.\n  let curViewCache = viewCache;\n  let viewMergeTree;\n  if (pathIsEmpty(path)) {\n    viewMergeTree = changedChildren;\n  } else {\n    viewMergeTree = new ImmutableTree<Node>(null).setTree(\n      path,\n      changedChildren\n    );\n  }\n  const serverNode = viewCache.serverCache.getNode();\n  viewMergeTree.children.inorderTraversal((childKey, childTree) => {\n    if (serverNode.hasChild(childKey)) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n  viewMergeTree.children.inorderTraversal((childKey, childMergeTree) => {\n    const isUnknownDeepMerge =\n      !viewCache.serverCache.isCompleteForChild(childKey) &&\n      childMergeTree.value === undefined;\n    if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\n      const serverChild = viewCache.serverCache\n        .getNode()\n        .getImmediateChild(childKey);\n      const newChild = viewProcessorApplyMerge(\n        viewProcessor,\n        serverChild,\n        childMergeTree\n      );\n      curViewCache = viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        curViewCache,\n        new Path(childKey),\n        newChild,\n        writesCache,\n        serverCache,\n        filterServerNode,\n        accumulator\n      );\n    }\n  });\n\n  return curViewCache;\n}\n\nfunction viewProcessorAckUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  ackPath: Path,\n  affectedTree: ImmutableTree<boolean>,\n  writesCache: WriteTreeRef,\n  completeCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  if (writeTreeRefShadowingWrite(writesCache, ackPath) != null) {\n    return viewCache;\n  }\n\n  // Only filter server node if it is currently filtered\n  const filterServerNode = viewCache.serverCache.isFiltered();\n\n  // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\n  // now that it won't be shadowed.\n  const serverCache = viewCache.serverCache;\n  if (affectedTree.value != null) {\n    // This is an overwrite.\n    if (\n      (pathIsEmpty(ackPath) && serverCache.isFullyInitialized()) ||\n      serverCache.isCompleteForPath(ackPath)\n    ) {\n      return viewProcessorApplyServerOverwrite(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        serverCache.getNode().getChild(ackPath),\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else if (pathIsEmpty(ackPath)) {\n      // This is a goofy edge case where we are acking data at this location but don't have full data.  We\n      // should just re-apply whatever we have in our cache as a merge.\n      let changedChildren = new ImmutableTree<Node>(null);\n      serverCache.getNode().forEachChild(KEY_INDEX, (name, node) => {\n        changedChildren = changedChildren.set(new Path(name), node);\n      });\n      return viewProcessorApplyServerMerge(\n        viewProcessor,\n        viewCache,\n        ackPath,\n        changedChildren,\n        writesCache,\n        completeCache,\n        filterServerNode,\n        accumulator\n      );\n    } else {\n      return viewCache;\n    }\n  } else {\n    // This is a merge.\n    let changedChildren = new ImmutableTree<Node>(null);\n    affectedTree.foreach((mergePath, value) => {\n      const serverCachePath = pathChild(ackPath, mergePath);\n      if (serverCache.isCompleteForPath(serverCachePath)) {\n        changedChildren = changedChildren.set(\n          mergePath,\n          serverCache.getNode().getChild(serverCachePath)\n        );\n      }\n    });\n    return viewProcessorApplyServerMerge(\n      viewProcessor,\n      viewCache,\n      ackPath,\n      changedChildren,\n      writesCache,\n      completeCache,\n      filterServerNode,\n      accumulator\n    );\n  }\n}\n\nfunction viewProcessorListenComplete(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  const oldServerNode = viewCache.serverCache;\n  const newViewCache = viewCacheUpdateServerSnap(\n    viewCache,\n    oldServerNode.getNode(),\n    oldServerNode.isFullyInitialized() || pathIsEmpty(path),\n    oldServerNode.isFiltered()\n  );\n  return viewProcessorGenerateEventCacheAfterServerEvent(\n    viewProcessor,\n    newViewCache,\n    path,\n    writesCache,\n    NO_COMPLETE_CHILD_SOURCE,\n    accumulator\n  );\n}\n\nfunction viewProcessorRevertUserWrite(\n  viewProcessor: ViewProcessor,\n  viewCache: ViewCache,\n  path: Path,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null,\n  accumulator: ChildChangeAccumulator\n): ViewCache {\n  let complete;\n  if (writeTreeRefShadowingWrite(writesCache, path) != null) {\n    return viewCache;\n  } else {\n    const source = new WriteTreeCompleteChildSource(\n      writesCache,\n      viewCache,\n      completeServerCache\n    );\n    const oldEventCache = viewCache.eventCache.getNode();\n    let newEventCache;\n    if (pathIsEmpty(path) || pathGetFront(path) === '.priority') {\n      let newNode;\n      if (viewCache.serverCache.isFullyInitialized()) {\n        newNode = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n      } else {\n        const serverChildren = viewCache.serverCache.getNode();\n        assert(\n          serverChildren instanceof ChildrenNode,\n          'serverChildren would be complete if leaf node'\n        );\n        newNode = writeTreeRefCalcCompleteEventChildren(\n          writesCache,\n          serverChildren as ChildrenNode\n        );\n      }\n      newNode = newNode as Node;\n      newEventCache = viewProcessor.filter.updateFullNode(\n        oldEventCache,\n        newNode,\n        accumulator\n      );\n    } else {\n      const childKey = pathGetFront(path);\n      let newChild = writeTreeRefCalcCompleteChild(\n        writesCache,\n        childKey,\n        viewCache.serverCache\n      );\n      if (\n        newChild == null &&\n        viewCache.serverCache.isCompleteForChild(childKey)\n      ) {\n        newChild = oldEventCache.getImmediateChild(childKey);\n      }\n      if (newChild != null) {\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          newChild,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else if (viewCache.eventCache.getNode().hasChild(childKey)) {\n        // No complete child available, delete the existing one, if any\n        newEventCache = viewProcessor.filter.updateChild(\n          oldEventCache,\n          childKey,\n          ChildrenNode.EMPTY_NODE,\n          pathPopFront(path),\n          source,\n          accumulator\n        );\n      } else {\n        newEventCache = oldEventCache;\n      }\n      if (\n        newEventCache.isEmpty() &&\n        viewCache.serverCache.isFullyInitialized()\n      ) {\n        // We might have reverted all child writes. Maybe the old event was a leaf node\n        complete = writeTreeRefCalcCompleteEventCache(\n          writesCache,\n          viewCacheGetCompleteServerSnap(viewCache)\n        );\n        if (complete.isLeafNode()) {\n          newEventCache = viewProcessor.filter.updateFullNode(\n            newEventCache,\n            complete,\n            accumulator\n          );\n        }\n      }\n    }\n    complete =\n      viewCache.serverCache.isFullyInitialized() ||\n      writeTreeRefShadowingWrite(writesCache, newEmptyPath()) != null;\n    return viewCacheUpdateEventSnap(\n      viewCache,\n      newEventCache,\n      complete,\n      viewProcessor.filter.filtersNodes()\n    );\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { Operation, OperationType } from '../operation/Operation';\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { Node } from '../snap/Node';\nimport { Path, pathGetFront, pathIsEmpty } from '../util/Path';\nimport { WriteTreeRef } from '../WriteTree';\n\nimport { CacheNode } from './CacheNode';\nimport { Change, changeChildAdded, changeValue } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport {\n  EventGenerator,\n  eventGeneratorGenerateEventsForChanges\n} from './EventGenerator';\nimport { EventRegistration, QueryContext } from './EventRegistration';\nimport { IndexedFilter } from './filter/IndexedFilter';\nimport { queryParamsGetNodeFilter } from './QueryParams';\nimport {\n  newViewCache,\n  ViewCache,\n  viewCacheGetCompleteEventSnap,\n  viewCacheGetCompleteServerSnap\n} from './ViewCache';\nimport {\n  newViewProcessor,\n  ViewProcessor,\n  viewProcessorApplyOperation,\n  viewProcessorAssertIndexed\n} from './ViewProcessor';\n\n/**\n * A view represents a specific location and query that has 1 or more event registrations.\n *\n * It does several things:\n *  - Maintains the list of event registrations for this location/query.\n *  - Maintains a cache of the data visible for this location/query.\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\n *    registrations returns the set of events to be raised.\n */\nexport class View {\n  processor_: ViewProcessor;\n  viewCache_: ViewCache;\n  eventRegistrations_: EventRegistration[] = [];\n  eventGenerator_: EventGenerator;\n\n  constructor(private query_: QueryContext, initialViewCache: ViewCache) {\n    const params = this.query_._queryParams;\n\n    const indexFilter = new IndexedFilter(params.getIndex());\n    const filter = queryParamsGetNodeFilter(params);\n\n    this.processor_ = newViewProcessor(filter);\n\n    const initialServerCache = initialViewCache.serverCache;\n    const initialEventCache = initialViewCache.eventCache;\n\n    // Don't filter server node with other filter than index, wait for tagged listen\n    const serverSnap = indexFilter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialServerCache.getNode(),\n      null\n    );\n    const eventSnap = filter.updateFullNode(\n      ChildrenNode.EMPTY_NODE,\n      initialEventCache.getNode(),\n      null\n    );\n    const newServerCache = new CacheNode(\n      serverSnap,\n      initialServerCache.isFullyInitialized(),\n      indexFilter.filtersNodes()\n    );\n    const newEventCache = new CacheNode(\n      eventSnap,\n      initialEventCache.isFullyInitialized(),\n      filter.filtersNodes()\n    );\n\n    this.viewCache_ = newViewCache(newEventCache, newServerCache);\n    this.eventGenerator_ = new EventGenerator(this.query_);\n  }\n\n  get query(): QueryContext {\n    return this.query_;\n  }\n}\n\nexport function viewGetServerCache(view: View): Node | null {\n  return view.viewCache_.serverCache.getNode();\n}\n\nexport function viewGetCompleteNode(view: View): Node | null {\n  return viewCacheGetCompleteEventSnap(view.viewCache_);\n}\n\nexport function viewGetCompleteServerCache(\n  view: View,\n  path: Path\n): Node | null {\n  const cache = viewCacheGetCompleteServerSnap(view.viewCache_);\n  if (cache) {\n    // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\n    // we need to see if it contains the child we're interested in.\n    if (\n      view.query._queryParams.loadsAllData() ||\n      (!pathIsEmpty(path) &&\n        !cache.getImmediateChild(pathGetFront(path)).isEmpty())\n    ) {\n      return cache.getChild(path);\n    }\n  }\n  return null;\n}\n\nexport function viewIsEmpty(view: View): boolean {\n  return view.eventRegistrations_.length === 0;\n}\n\nexport function viewAddEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration\n) {\n  view.eventRegistrations_.push(eventRegistration);\n}\n\n/**\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function viewRemoveEventRegistration(\n  view: View,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  const cancelEvents: CancelEvent[] = [];\n  if (cancelError) {\n    assert(\n      eventRegistration == null,\n      'A cancel should cancel all event registrations.'\n    );\n    const path = view.query._path;\n    view.eventRegistrations_.forEach(registration => {\n      const maybeEvent = registration.createCancelEvent(cancelError, path);\n      if (maybeEvent) {\n        cancelEvents.push(maybeEvent);\n      }\n    });\n  }\n\n  if (eventRegistration) {\n    let remaining = [];\n    for (let i = 0; i < view.eventRegistrations_.length; ++i) {\n      const existing = view.eventRegistrations_[i];\n      if (!existing.matches(eventRegistration)) {\n        remaining.push(existing);\n      } else if (eventRegistration.hasAnyCallback()) {\n        // We're removing just this one\n        remaining = remaining.concat(view.eventRegistrations_.slice(i + 1));\n        break;\n      }\n    }\n    view.eventRegistrations_ = remaining;\n  } else {\n    view.eventRegistrations_ = [];\n  }\n  return cancelEvents;\n}\n\n/**\n * Applies the given Operation, updates our cache, and returns the appropriate events.\n */\nexport function viewApplyOperation(\n  view: View,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  completeServerCache: Node | null\n): Event[] {\n  if (\n    operation.type === OperationType.MERGE &&\n    operation.source.queryId !== null\n  ) {\n    assert(\n      viewCacheGetCompleteServerSnap(view.viewCache_),\n      'We should always have a full cache before handling merges'\n    );\n    assert(\n      viewCacheGetCompleteEventSnap(view.viewCache_),\n      'Missing event cache, even though we have a server cache'\n    );\n  }\n\n  const oldViewCache = view.viewCache_;\n  const result = viewProcessorApplyOperation(\n    view.processor_,\n    oldViewCache,\n    operation,\n    writesCache,\n    completeServerCache\n  );\n  viewProcessorAssertIndexed(view.processor_, result.viewCache);\n\n  assert(\n    result.viewCache.serverCache.isFullyInitialized() ||\n      !oldViewCache.serverCache.isFullyInitialized(),\n    'Once a server snap is complete, it should never go back'\n  );\n\n  view.viewCache_ = result.viewCache;\n\n  return viewGenerateEventsForChanges_(\n    view,\n    result.changes,\n    result.viewCache.eventCache.getNode(),\n    null\n  );\n}\n\nexport function viewGetInitialEvents(\n  view: View,\n  registration: EventRegistration\n): Event[] {\n  const eventSnap = view.viewCache_.eventCache;\n  const initialChanges: Change[] = [];\n  if (!eventSnap.getNode().isLeafNode()) {\n    const eventNode = eventSnap.getNode() as ChildrenNode;\n    eventNode.forEachChild(PRIORITY_INDEX, (key, childNode) => {\n      initialChanges.push(changeChildAdded(key, childNode));\n    });\n  }\n  if (eventSnap.isFullyInitialized()) {\n    initialChanges.push(changeValue(eventSnap.getNode()));\n  }\n  return viewGenerateEventsForChanges_(\n    view,\n    initialChanges,\n    eventSnap.getNode(),\n    registration\n  );\n}\n\nfunction viewGenerateEventsForChanges_(\n  view: View,\n  changes: Change[],\n  eventCache: Node,\n  eventRegistration?: EventRegistration\n): Event[] {\n  const registrations = eventRegistration\n    ? [eventRegistration]\n    : view.eventRegistrations_;\n  return eventGeneratorGenerateEventsForChanges(\n    view.eventGenerator_,\n    changes,\n    eventCache,\n    registrations\n  );\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { Operation } from './operation/Operation';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { Path } from './util/Path';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport {\n  View,\n  viewAddEventRegistration,\n  viewApplyOperation,\n  viewGetCompleteServerCache,\n  viewGetInitialEvents,\n  viewIsEmpty,\n  viewRemoveEventRegistration\n} from './view/View';\nimport { newViewCache } from './view/ViewCache';\nimport {\n  WriteTreeRef,\n  writeTreeRefCalcCompleteEventCache,\n  writeTreeRefCalcCompleteEventChildren\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\n/**\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\n * and user writes (set, transaction, update).\n *\n * It's responsible for:\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\n *    applyUserOverwrite, etc.)\n */\nexport class SyncPoint {\n  /**\n   * The Views being tracked at this location in the tree, stored as a map where the key is a\n   * queryId and the value is the View for that query.\n   *\n   * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\n   */\n  readonly views: Map<string, View> = new Map();\n}\n\nexport function syncPointSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncPointGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport function syncPointIsEmpty(syncPoint: SyncPoint): boolean {\n  return syncPoint.views.size === 0;\n}\n\nexport function syncPointApplyOperation(\n  syncPoint: SyncPoint,\n  operation: Operation,\n  writesCache: WriteTreeRef,\n  optCompleteServerCache: Node | null\n): Event[] {\n  const queryId = operation.source.queryId;\n  if (queryId !== null) {\n    const view = syncPoint.views.get(queryId);\n    assert(view != null, 'SyncTree gave us an op for an invalid query.');\n    return viewApplyOperation(\n      view,\n      operation,\n      writesCache,\n      optCompleteServerCache\n    );\n  } else {\n    let events: Event[] = [];\n\n    for (const view of syncPoint.views.values()) {\n      events = events.concat(\n        viewApplyOperation(view, operation, writesCache, optCompleteServerCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Get a view for the specified query.\n *\n * @param query - The query to return a view for\n * @param writesCache\n * @param serverCache\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointGetView(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): View {\n  const queryId = query._queryIdentifier;\n  const view = syncPoint.views.get(queryId);\n  if (!view) {\n    // TODO: make writesCache take flag for complete server node\n    let eventCache = writeTreeRefCalcCompleteEventCache(\n      writesCache,\n      serverCacheComplete ? serverCache : null\n    );\n    let eventCacheComplete = false;\n    if (eventCache) {\n      eventCacheComplete = true;\n    } else if (serverCache instanceof ChildrenNode) {\n      eventCache = writeTreeRefCalcCompleteEventChildren(\n        writesCache,\n        serverCache\n      );\n      eventCacheComplete = false;\n    } else {\n      eventCache = ChildrenNode.EMPTY_NODE;\n      eventCacheComplete = false;\n    }\n    const viewCache = newViewCache(\n      new CacheNode(eventCache, eventCacheComplete, false),\n      new CacheNode(serverCache, serverCacheComplete, false)\n    );\n    return new View(query, viewCache);\n  }\n  return view;\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @param query\n * @param eventRegistration\n * @param writesCache\n * @param serverCache - Complete server cache, if we have it.\n * @param serverCacheComplete\n * @returns Events to raise.\n */\nexport function syncPointAddEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration,\n  writesCache: WriteTreeRef,\n  serverCache: Node | null,\n  serverCacheComplete: boolean\n): Event[] {\n  const view = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!syncPoint.views.has(query._queryIdentifier)) {\n    syncPoint.views.set(query._queryIdentifier, view);\n  }\n  // This is guaranteed to exist now, we just created anything that was missing\n  viewAddEventRegistration(view, eventRegistration);\n  return viewGetInitialEvents(view, eventRegistration);\n}\n\n/**\n * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\n *\n * If query is the default query, we'll check all views for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\n *\n * @param eventRegistration - If null, remove all callbacks.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns removed queries and any cancel events\n */\nexport function syncPointRemoveEventRegistration(\n  syncPoint: SyncPoint,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): { removed: QueryContext[]; events: Event[] } {\n  const queryId = query._queryIdentifier;\n  const removed: QueryContext[] = [];\n  let cancelEvents: Event[] = [];\n  const hadCompleteView = syncPointHasCompleteView(syncPoint);\n  if (queryId === 'default') {\n    // When you do ref.off(...), we search all views for the registration to remove.\n    for (const [viewQueryId, view] of syncPoint.views.entries()) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(viewQueryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  } else {\n    // remove the callback from the specific view.\n    const view = syncPoint.views.get(queryId);\n    if (view) {\n      cancelEvents = cancelEvents.concat(\n        viewRemoveEventRegistration(view, eventRegistration, cancelError)\n      );\n      if (viewIsEmpty(view)) {\n        syncPoint.views.delete(queryId);\n\n        // We'll deal with complete views later.\n        if (!view.query._queryParams.loadsAllData()) {\n          removed.push(view.query);\n        }\n      }\n    }\n  }\n\n  if (hadCompleteView && !syncPointHasCompleteView(syncPoint)) {\n    // We removed our last complete view.\n    removed.push(\n      new (syncPointGetReferenceConstructor())(query._repo, query._path)\n    );\n  }\n\n  return { removed, events: cancelEvents };\n}\n\nexport function syncPointGetQueryViews(syncPoint: SyncPoint): View[] {\n  const result = [];\n  for (const view of syncPoint.views.values()) {\n    if (!view.query._queryParams.loadsAllData()) {\n      result.push(view);\n    }\n  }\n  return result;\n}\n\n/**\n * @param path - The path to the desired complete snapshot\n * @returns A complete cache, if it exists\n */\nexport function syncPointGetCompleteServerCache(\n  syncPoint: SyncPoint,\n  path: Path\n): Node | null {\n  let serverCache: Node | null = null;\n  for (const view of syncPoint.views.values()) {\n    serverCache = serverCache || viewGetCompleteServerCache(view, path);\n  }\n  return serverCache;\n}\n\nexport function syncPointViewForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): View | null {\n  const params = query._queryParams;\n  if (params.loadsAllData()) {\n    return syncPointGetCompleteView(syncPoint);\n  } else {\n    const queryId = query._queryIdentifier;\n    return syncPoint.views.get(queryId);\n  }\n}\n\nexport function syncPointViewExistsForQuery(\n  syncPoint: SyncPoint,\n  query: QueryContext\n): boolean {\n  return syncPointViewForQuery(syncPoint, query) != null;\n}\n\nexport function syncPointHasCompleteView(syncPoint: SyncPoint): boolean {\n  return syncPointGetCompleteView(syncPoint) != null;\n}\n\nexport function syncPointGetCompleteView(syncPoint: SyncPoint): View | null {\n  for (const view of syncPoint.views.values()) {\n    if (view.query._queryParams.loadsAllData()) {\n      return view;\n    }\n  }\n  return null;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ReferenceConstructor } from '../api/Reference';\n\nimport { AckUserWrite } from './operation/AckUserWrite';\nimport { ListenComplete } from './operation/ListenComplete';\nimport { Merge } from './operation/Merge';\nimport {\n  newOperationSourceServer,\n  newOperationSourceServerTaggedQuery,\n  newOperationSourceUser,\n  Operation\n} from './operation/Operation';\nimport { Overwrite } from './operation/Overwrite';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport {\n  SyncPoint,\n  syncPointAddEventRegistration,\n  syncPointApplyOperation,\n  syncPointGetCompleteServerCache,\n  syncPointGetCompleteView,\n  syncPointGetQueryViews,\n  syncPointGetView,\n  syncPointHasCompleteView,\n  syncPointIsEmpty,\n  syncPointRemoveEventRegistration,\n  syncPointViewExistsForQuery,\n  syncPointViewForQuery\n} from './SyncPoint';\nimport { ImmutableTree } from './util/ImmutableTree';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathGetFront,\n  pathIsEmpty\n} from './util/Path';\nimport { each, errorForServerCode } from './util/util';\nimport { CacheNode } from './view/CacheNode';\nimport { Event } from './view/Event';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\nimport { View, viewGetCompleteNode, viewGetServerCache } from './view/View';\nimport {\n  newWriteTree,\n  WriteTree,\n  writeTreeAddMerge,\n  writeTreeAddOverwrite,\n  writeTreeCalcCompleteEventCache,\n  writeTreeChildWrites,\n  writeTreeGetWrite,\n  WriteTreeRef,\n  writeTreeRefChild,\n  writeTreeRemoveWrite\n} from './WriteTree';\n\nlet referenceConstructor: ReferenceConstructor;\n\nexport function syncTreeSetReferenceConstructor(\n  val: ReferenceConstructor\n): void {\n  assert(\n    !referenceConstructor,\n    '__referenceConstructor has already been defined'\n  );\n  referenceConstructor = val;\n}\n\nfunction syncTreeGetReferenceConstructor(): ReferenceConstructor {\n  assert(referenceConstructor, 'Reference.ts has not been loaded');\n  return referenceConstructor;\n}\n\nexport interface ListenProvider {\n  startListening(\n    query: QueryContext,\n    tag: number | null,\n    hashFn: () => string,\n    onComplete: (a: string, b?: unknown) => Event[]\n  ): Event[];\n\n  stopListening(a: QueryContext, b: number | null): void;\n}\n\n/**\n * Static tracker for next query tag.\n */\nlet syncTreeNextQueryTag_ = 1;\n\n/**\n * SyncTree is the central class for managing event callback registration, data caching, views\n * (query processing), and event generation.  There are typically two SyncTree instances for\n * each Repo, one for the normal Firebase data, and one for the .info data.\n *\n * It has a number of responsibilities, including:\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\n *    (applyUserOverwrite(), applyUserMerge()).\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\n *    applyServerMerge()).\n *  - Generating user-facing events for server and user changes (all of the apply* methods\n *    return the set of events that need to be raised as a result).\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\n *    to the correct set of paths and queries to satisfy the current set of user event\n *    callbacks (listens are started/stopped using the provided listenProvider).\n *\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\n * events are returned to the caller rather than raised synchronously.\n *\n */\nexport class SyncTree {\n  /**\n   * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\n   */\n  syncPointTree_: ImmutableTree<SyncPoint> = new ImmutableTree<SyncPoint>(null);\n\n  /**\n   * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\n   */\n  pendingWriteTree_: WriteTree = newWriteTree();\n\n  readonly tagToQueryMap: Map<number, string> = new Map();\n  readonly queryToTagMap: Map<string, number> = new Map();\n\n  /**\n   * @param listenProvider_ - Used by SyncTree to start / stop listening\n   *   to server data.\n   */\n  constructor(public listenProvider_: ListenProvider) {}\n}\n\n/**\n * Apply the data changes for a user-generated set() or transaction() call.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node,\n  writeId: number,\n  visible?: boolean\n): Event[] {\n  // Record pending write.\n  writeTreeAddOverwrite(\n    syncTree.pendingWriteTree_,\n    path,\n    newData,\n    writeId,\n    visible\n  );\n\n  if (!visible) {\n    return [];\n  } else {\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new Overwrite(newOperationSourceUser(), path, newData)\n    );\n  }\n}\n\n/**\n * Apply the data from a user-generated update() call\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyUserMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  writeId: number\n): Event[] {\n  // Record pending merge.\n  writeTreeAddMerge(syncTree.pendingWriteTree_, path, changedChildren, writeId);\n\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceUser(), path, changeTree)\n  );\n}\n\n/**\n * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\n *\n * @param revert - True if the given write failed and needs to be reverted\n * @returns Events to raise.\n */\nexport function syncTreeAckUserWrite(\n  syncTree: SyncTree,\n  writeId: number,\n  revert: boolean = false\n) {\n  const write = writeTreeGetWrite(syncTree.pendingWriteTree_, writeId);\n  const needToReevaluate = writeTreeRemoveWrite(\n    syncTree.pendingWriteTree_,\n    writeId\n  );\n  if (!needToReevaluate) {\n    return [];\n  } else {\n    let affectedTree = new ImmutableTree<boolean>(null);\n    if (write.snap != null) {\n      // overwrite\n      affectedTree = affectedTree.set(newEmptyPath(), true);\n    } else {\n      each(write.children, (pathString: string) => {\n        affectedTree = affectedTree.set(new Path(pathString), true);\n      });\n    }\n    return syncTreeApplyOperationToSyncPoints_(\n      syncTree,\n      new AckUserWrite(write.path, affectedTree, revert)\n    );\n  }\n}\n\n/**\n * Apply new server data for the specified path..\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  newData: Node\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Overwrite(newOperationSourceServer(), path, newData)\n  );\n}\n\n/**\n * Apply new server data to be merged in at the specified path.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyServerMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node }\n): Event[] {\n  const changeTree = ImmutableTree.fromObject(changedChildren);\n\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new Merge(newOperationSourceServer(), path, changeTree)\n  );\n}\n\n/**\n * Apply a listen complete for a query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyListenComplete(\n  syncTree: SyncTree,\n  path: Path\n): Event[] {\n  return syncTreeApplyOperationToSyncPoints_(\n    syncTree,\n    new ListenComplete(newOperationSourceServer(), path)\n  );\n}\n\n/**\n * Apply a listen complete for a tagged query\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedListenComplete(\n  syncTree: SyncTree,\n  path: Path,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new ListenComplete(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Remove event callback(s).\n *\n * If query is the default query, we'll check all queries for the specified eventRegistration.\n * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\n *\n * @param eventRegistration - If null, all callbacks are removed.\n * @param cancelError - If a cancelError is provided, appropriate cancel events will be returned.\n * @returns Cancel events, if cancelError was provided.\n */\nexport function syncTreeRemoveEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration | null,\n  cancelError?: Error\n): Event[] {\n  // Find the syncPoint first. Then deal with whether or not it has matching listeners\n  const path = query._path;\n  const maybeSyncPoint = syncTree.syncPointTree_.get(path);\n  let cancelEvents: Event[] = [];\n  // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\n  // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\n  // not loadsAllData().\n  if (\n    maybeSyncPoint &&\n    (query._queryIdentifier === 'default' ||\n      syncPointViewExistsForQuery(maybeSyncPoint, query))\n  ) {\n    const removedAndEvents = syncPointRemoveEventRegistration(\n      maybeSyncPoint,\n      query,\n      eventRegistration,\n      cancelError\n    );\n    if (syncPointIsEmpty(maybeSyncPoint)) {\n      syncTree.syncPointTree_ = syncTree.syncPointTree_.remove(path);\n    }\n    const removed = removedAndEvents.removed;\n    cancelEvents = removedAndEvents.events;\n    // We may have just removed one of many listeners and can short-circuit this whole process\n    // We may also not have removed a default listener, in which case all of the descendant listeners should already be\n    // properly set up.\n    //\n    // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\n    // queryId === 'default'\n    const removingDefault =\n      -1 !==\n      removed.findIndex(query => {\n        return query._queryParams.loadsAllData();\n      });\n    const covered = syncTree.syncPointTree_.findOnPath(\n      path,\n      (relativePath, parentSyncPoint) =>\n        syncPointHasCompleteView(parentSyncPoint)\n    );\n\n    if (removingDefault && !covered) {\n      const subtree = syncTree.syncPointTree_.subtree(path);\n      // There are potentially child listeners. Determine what if any listens we need to send before executing the\n      // removal\n      if (!subtree.isEmpty()) {\n        // We need to fold over our subtree and collect the listeners to send\n        const newViews = syncTreeCollectDistinctViewsForSubTree_(subtree);\n\n        // Ok, we've collected all the listens we need. Set them up.\n        for (let i = 0; i < newViews.length; ++i) {\n          const view = newViews[i],\n            newQuery = view.query;\n          const listener = syncTreeCreateListenerForView_(syncTree, view);\n          syncTree.listenProvider_.startListening(\n            syncTreeQueryForListening_(newQuery),\n            syncTreeTagForQuery_(syncTree, newQuery),\n            listener.hashFn,\n            listener.onComplete\n          );\n        }\n      } else {\n        // There's nothing below us, so nothing we need to start listening on\n      }\n    }\n    // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\n    // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\n    // Also, note that if we have a cancelError, it's already been removed at the provider level.\n    if (!covered && removed.length > 0 && !cancelError) {\n      // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\n      // default. Otherwise, we need to iterate through and cancel each individual query\n      if (removingDefault) {\n        // We don't tag default listeners\n        const defaultTag: number | null = null;\n        syncTree.listenProvider_.stopListening(\n          syncTreeQueryForListening_(query),\n          defaultTag\n        );\n      } else {\n        removed.forEach((queryToRemove: QueryContext) => {\n          const tagToRemove = syncTree.queryToTagMap.get(\n            syncTreeMakeQueryKey_(queryToRemove)\n          );\n          syncTree.listenProvider_.stopListening(\n            syncTreeQueryForListening_(queryToRemove),\n            tagToRemove\n          );\n        });\n      }\n    }\n    // Now, clear all of the tags we're tracking for the removed listens\n    syncTreeRemoveTags_(syncTree, removed);\n  } else {\n    // No-op, this listener must've been already removed\n  }\n  return cancelEvents;\n}\n\n/**\n * Apply new server data for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryOverwrite(\n  syncTree: SyncTree,\n  path: Path,\n  snap: Node,\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey != null) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const op = new Overwrite(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      snap\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // Query must have been removed already\n    return [];\n  }\n}\n\n/**\n * Apply server data to be merged in for the specified tagged query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeApplyTaggedQueryMerge(\n  syncTree: SyncTree,\n  path: Path,\n  changedChildren: { [k: string]: Node },\n  tag: number\n): Event[] {\n  const queryKey = syncTreeQueryKeyForTag_(syncTree, tag);\n  if (queryKey) {\n    const r = syncTreeParseQueryKey_(queryKey);\n    const queryPath = r.path,\n      queryId = r.queryId;\n    const relativePath = newRelativePath(queryPath, path);\n    const changeTree = ImmutableTree.fromObject(changedChildren);\n    const op = new Merge(\n      newOperationSourceServerTaggedQuery(queryId),\n      relativePath,\n      changeTree\n    );\n    return syncTreeApplyTaggedOperation_(syncTree, queryPath, op);\n  } else {\n    // We've already removed the query. No big deal, ignore the update\n    return [];\n  }\n}\n\n/**\n * Add an event callback for the specified query.\n *\n * @returns Events to raise.\n */\nexport function syncTreeAddEventRegistration(\n  syncTree: SyncTree,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): Event[] {\n  const path = query._path;\n\n  let serverCache: Node | null = null;\n  let foundAncestorDefaultView = false;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(sp);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    foundAncestorDefaultView =\n      foundAncestorDefaultView || syncPointHasCompleteView(syncPoint);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let serverCacheComplete;\n  if (serverCache != null) {\n    serverCacheComplete = true;\n  } else {\n    serverCacheComplete = false;\n    serverCache = ChildrenNode.EMPTY_NODE;\n    const subtree = syncTree.syncPointTree_.subtree(path);\n    subtree.foreachChild((childName, childSyncPoint) => {\n      const completeCache = syncPointGetCompleteServerCache(\n        childSyncPoint,\n        newEmptyPath()\n      );\n      if (completeCache) {\n        serverCache = serverCache.updateImmediateChild(\n          childName,\n          completeCache\n        );\n      }\n    });\n  }\n\n  const viewAlreadyExists = syncPointViewExistsForQuery(syncPoint, query);\n  if (!viewAlreadyExists && !query._queryParams.loadsAllData()) {\n    // We need to track a tag for this query\n    const queryKey = syncTreeMakeQueryKey_(query);\n    assert(\n      !syncTree.queryToTagMap.has(queryKey),\n      'View does not exist, but we have a tag'\n    );\n    const tag = syncTreeGetNextQueryTag_();\n    syncTree.queryToTagMap.set(queryKey, tag);\n    syncTree.tagToQueryMap.set(tag, queryKey);\n  }\n  const writesCache = writeTreeChildWrites(syncTree.pendingWriteTree_, path);\n  let events = syncPointAddEventRegistration(\n    syncPoint,\n    query,\n    eventRegistration,\n    writesCache,\n    serverCache,\n    serverCacheComplete\n  );\n  if (!viewAlreadyExists && !foundAncestorDefaultView) {\n    const view = syncPointViewForQuery(syncPoint, query);\n    events = events.concat(syncTreeSetupListener_(syncTree, query, view));\n  }\n  return events;\n}\n\n/**\n * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\n * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\n * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\n *     <incremented total> as the write is applied locally and then acknowledged at the server.\n *\n * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\n *\n * @param path - The path to the data we want\n * @param writeIdsToExclude - A specific set to be excluded\n */\nexport function syncTreeCalcCompleteEventCache(\n  syncTree: SyncTree,\n  path: Path,\n  writeIdsToExclude?: number[]\n): Node {\n  const includeHiddenSets = true;\n  const writeTree = syncTree.pendingWriteTree_;\n  const serverCache = syncTree.syncPointTree_.findOnPath(\n    path,\n    (pathSoFar, syncPoint) => {\n      const relativePath = newRelativePath(pathSoFar, path);\n      const serverCache = syncPointGetCompleteServerCache(\n        syncPoint,\n        relativePath\n      );\n      if (serverCache) {\n        return serverCache;\n      }\n    }\n  );\n  return writeTreeCalcCompleteEventCache(\n    writeTree,\n    path,\n    serverCache,\n    writeIdsToExclude,\n    includeHiddenSets\n  );\n}\n\nexport function syncTreeGetServerValue(\n  syncTree: SyncTree,\n  query: QueryContext\n): Node | null {\n  const path = query._path;\n  let serverCache: Node | null = null;\n  // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\n  // Consider optimizing this once there's a better understanding of what actual behavior will be.\n  syncTree.syncPointTree_.foreachOnPath(path, (pathToSyncPoint, sp) => {\n    const relativePath = newRelativePath(pathToSyncPoint, path);\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(sp, relativePath);\n  });\n  let syncPoint = syncTree.syncPointTree_.get(path);\n  if (!syncPoint) {\n    syncPoint = new SyncPoint();\n    syncTree.syncPointTree_ = syncTree.syncPointTree_.set(path, syncPoint);\n  } else {\n    serverCache =\n      serverCache || syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n  const serverCacheComplete = serverCache != null;\n  const serverCacheNode: CacheNode | null = serverCacheComplete\n    ? new CacheNode(serverCache, true, false)\n    : null;\n  const writesCache: WriteTreeRef | null = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    query._path\n  );\n  const view: View = syncPointGetView(\n    syncPoint,\n    query,\n    writesCache,\n    serverCacheComplete ? serverCacheNode.getNode() : ChildrenNode.EMPTY_NODE,\n    serverCacheComplete\n  );\n  return viewGetCompleteNode(view);\n}\n\n/**\n * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\n *\n * NOTES:\n * - Descendant SyncPoints will be visited first (since we raise events depth-first).\n *\n * - We call applyOperation() on each SyncPoint passing three things:\n *   1. A version of the Operation that has been made relative to the SyncPoint location.\n *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\n *   3. A snapshot Node with cached server data, if we have it.\n *\n * - We concatenate all of the events returned by each SyncPoint and return the result.\n */\nfunction syncTreeApplyOperationToSyncPoints_(\n  syncTree: SyncTree,\n  operation: Operation\n): Event[] {\n  return syncTreeApplyOperationHelper_(\n    operation,\n    syncTree.syncPointTree_,\n    /*serverCache=*/ null,\n    writeTreeChildWrites(syncTree.pendingWriteTree_, newEmptyPath())\n  );\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  if (pathIsEmpty(operation.path)) {\n    return syncTreeApplyOperationDescendantsHelper_(\n      operation,\n      syncPointTree,\n      serverCache,\n      writesCache\n    );\n  } else {\n    const syncPoint = syncPointTree.get(newEmptyPath());\n\n    // If we don't have cached server data, see if we can get it from this SyncPoint.\n    if (serverCache == null && syncPoint != null) {\n      serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n    }\n\n    let events: Event[] = [];\n    const childName = pathGetFront(operation.path);\n    const childOperation = operation.operationForChild(childName);\n    const childTree = syncPointTree.children.get(childName);\n    if (childTree && childOperation) {\n      const childServerCache = serverCache\n        ? serverCache.getImmediateChild(childName)\n        : null;\n      const childWritesCache = writeTreeRefChild(writesCache, childName);\n      events = events.concat(\n        syncTreeApplyOperationHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n\n    if (syncPoint) {\n      events = events.concat(\n        syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n      );\n    }\n\n    return events;\n  }\n}\n\n/**\n * Recursive helper for applyOperationToSyncPoints_\n */\nfunction syncTreeApplyOperationDescendantsHelper_(\n  operation: Operation,\n  syncPointTree: ImmutableTree<SyncPoint>,\n  serverCache: Node | null,\n  writesCache: WriteTreeRef\n): Event[] {\n  const syncPoint = syncPointTree.get(newEmptyPath());\n\n  // If we don't have cached server data, see if we can get it from this SyncPoint.\n  if (serverCache == null && syncPoint != null) {\n    serverCache = syncPointGetCompleteServerCache(syncPoint, newEmptyPath());\n  }\n\n  let events: Event[] = [];\n  syncPointTree.children.inorderTraversal((childName, childTree) => {\n    const childServerCache = serverCache\n      ? serverCache.getImmediateChild(childName)\n      : null;\n    const childWritesCache = writeTreeRefChild(writesCache, childName);\n    const childOperation = operation.operationForChild(childName);\n    if (childOperation) {\n      events = events.concat(\n        syncTreeApplyOperationDescendantsHelper_(\n          childOperation,\n          childTree,\n          childServerCache,\n          childWritesCache\n        )\n      );\n    }\n  });\n\n  if (syncPoint) {\n    events = events.concat(\n      syncPointApplyOperation(syncPoint, operation, writesCache, serverCache)\n    );\n  }\n\n  return events;\n}\n\nfunction syncTreeCreateListenerForView_(\n  syncTree: SyncTree,\n  view: View\n): { hashFn(): string; onComplete(a: string, b?: unknown): Event[] } {\n  const query = view.query;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n\n  return {\n    hashFn: () => {\n      const cache = viewGetServerCache(view) || ChildrenNode.EMPTY_NODE;\n      return cache.hash();\n    },\n    onComplete: (status: string): Event[] => {\n      if (status === 'ok') {\n        if (tag) {\n          return syncTreeApplyTaggedListenComplete(syncTree, query._path, tag);\n        } else {\n          return syncTreeApplyListenComplete(syncTree, query._path);\n        }\n      } else {\n        // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\n        // Note that this may need to be scoped to just this listener if we change permissions on filtered children\n        const error = errorForServerCode(status, query);\n        return syncTreeRemoveEventRegistration(\n          syncTree,\n          query,\n          /*eventRegistration*/ null,\n          error\n        );\n      }\n    }\n  };\n}\n\n/**\n * Return the tag associated with the given query.\n */\nfunction syncTreeTagForQuery_(\n  syncTree: SyncTree,\n  query: QueryContext\n): number | null {\n  const queryKey = syncTreeMakeQueryKey_(query);\n  return syncTree.queryToTagMap.get(queryKey);\n}\n\n/**\n * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\n */\nfunction syncTreeMakeQueryKey_(query: QueryContext): string {\n  return query._path.toString() + '$' + query._queryIdentifier;\n}\n\n/**\n * Return the query associated with the given tag, if we have one\n */\nfunction syncTreeQueryKeyForTag_(\n  syncTree: SyncTree,\n  tag: number\n): string | null {\n  return syncTree.tagToQueryMap.get(tag);\n}\n\n/**\n * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\n */\nfunction syncTreeParseQueryKey_(queryKey: string): {\n  queryId: string;\n  path: Path;\n} {\n  const splitIndex = queryKey.indexOf('$');\n  assert(\n    splitIndex !== -1 && splitIndex < queryKey.length - 1,\n    'Bad queryKey.'\n  );\n  return {\n    queryId: queryKey.substr(splitIndex + 1),\n    path: new Path(queryKey.substr(0, splitIndex))\n  };\n}\n\n/**\n * A helper method to apply tagged operations\n */\nfunction syncTreeApplyTaggedOperation_(\n  syncTree: SyncTree,\n  queryPath: Path,\n  operation: Operation\n): Event[] {\n  const syncPoint = syncTree.syncPointTree_.get(queryPath);\n  assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\n  const writesCache = writeTreeChildWrites(\n    syncTree.pendingWriteTree_,\n    queryPath\n  );\n  return syncPointApplyOperation(syncPoint, operation, writesCache, null);\n}\n\n/**\n * This collapses multiple unfiltered views into a single view, since we only need a single\n * listener for them.\n */\nfunction syncTreeCollectDistinctViewsForSubTree_(\n  subtree: ImmutableTree<SyncPoint>\n): View[] {\n  return subtree.fold<View[]>((relativePath, maybeChildSyncPoint, childMap) => {\n    if (maybeChildSyncPoint && syncPointHasCompleteView(maybeChildSyncPoint)) {\n      const completeView = syncPointGetCompleteView(maybeChildSyncPoint);\n      return [completeView];\n    } else {\n      // No complete view here, flatten any deeper listens into an array\n      let views: View[] = [];\n      if (maybeChildSyncPoint) {\n        views = syncPointGetQueryViews(maybeChildSyncPoint);\n      }\n      each(childMap, (_key: string, childViews: View[]) => {\n        views = views.concat(childViews);\n      });\n      return views;\n    }\n  });\n}\n\n/**\n * Normalizes a query to a query we send the server for listening\n *\n * @returns The normalized query\n */\nfunction syncTreeQueryForListening_(query: QueryContext): QueryContext {\n  if (query._queryParams.loadsAllData() && !query._queryParams.isDefault()) {\n    // We treat queries that load all data as default queries\n    // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\n    // from Query\n    return new (syncTreeGetReferenceConstructor())(query._repo, query._path);\n  } else {\n    return query;\n  }\n}\n\nfunction syncTreeRemoveTags_(syncTree: SyncTree, queries: QueryContext[]) {\n  for (let j = 0; j < queries.length; ++j) {\n    const removedQuery = queries[j];\n    if (!removedQuery._queryParams.loadsAllData()) {\n      // We should have a tag for this\n      const removedQueryKey = syncTreeMakeQueryKey_(removedQuery);\n      const removedQueryTag = syncTree.queryToTagMap.get(removedQueryKey);\n      syncTree.queryToTagMap.delete(removedQueryKey);\n      syncTree.tagToQueryMap.delete(removedQueryTag);\n    }\n  }\n}\n\n/**\n * Static accessor for query tags.\n */\nfunction syncTreeGetNextQueryTag_(): number {\n  return syncTreeNextQueryTag_++;\n}\n\n/**\n * For a given new listen, manage the de-duplication of outstanding subscriptions.\n *\n * @returns This method can return events to support synchronous data sources\n */\nfunction syncTreeSetupListener_(\n  syncTree: SyncTree,\n  query: QueryContext,\n  view: View\n): Event[] {\n  const path = query._path;\n  const tag = syncTreeTagForQuery_(syncTree, query);\n  const listener = syncTreeCreateListenerForView_(syncTree, view);\n\n  const events = syncTree.listenProvider_.startListening(\n    syncTreeQueryForListening_(query),\n    tag,\n    listener.hashFn,\n    listener.onComplete\n  );\n\n  const subtree = syncTree.syncPointTree_.subtree(path);\n  // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\n  // may need to shadow other listens as well.\n  if (tag) {\n    assert(\n      !syncPointHasCompleteView(subtree.value),\n      \"If we're adding a query, it shouldn't be shadowed\"\n    );\n  } else {\n    // Shadow everything at or below this location, this is a default listener.\n    const queriesToStop = subtree.fold<QueryContext[]>(\n      (relativePath, maybeChildSyncPoint, childMap) => {\n        if (\n          !pathIsEmpty(relativePath) &&\n          maybeChildSyncPoint &&\n          syncPointHasCompleteView(maybeChildSyncPoint)\n        ) {\n          return [syncPointGetCompleteView(maybeChildSyncPoint).query];\n        } else {\n          // No default listener here, flatten any deeper queries into an array\n          let queries: QueryContext[] = [];\n          if (maybeChildSyncPoint) {\n            queries = queries.concat(\n              syncPointGetQueryViews(maybeChildSyncPoint).map(\n                view => view.query\n              )\n            );\n          }\n          each(childMap, (_key: string, childQueries: QueryContext[]) => {\n            queries = queries.concat(childQueries);\n          });\n          return queries;\n        }\n      }\n    );\n    for (let i = 0; i < queriesToStop.length; ++i) {\n      const queryToStop = queriesToStop[i];\n      syncTree.listenProvider_.stopListening(\n        syncTreeQueryForListening_(queryToStop),\n        syncTreeTagForQuery_(syncTree, queryToStop)\n      );\n    }\n  }\n  return events;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { ChildrenNode } from '../snap/ChildrenNode';\nimport { PRIORITY_INDEX } from '../snap/indexes/PriorityIndex';\nimport { LeafNode } from '../snap/LeafNode';\nimport { Node } from '../snap/Node';\nimport { nodeFromJSON } from '../snap/nodeFromJSON';\nimport { SyncTree, syncTreeCalcCompleteEventCache } from '../SyncTree';\n\nimport { Indexable } from './misc';\nimport { Path, pathChild } from './Path';\n\n/* It's critical for performance that we do not calculate actual values from a SyncTree\n * unless and until the value is needed. Because we expose both a SyncTree and Node\n * version of deferred value resolution, we ned a wrapper class that will let us share\n * code.\n *\n * @see https://github.com/firebase/firebase-js-sdk/issues/2487\n */\ninterface ValueProvider {\n  getImmediateChild(childName: string): ValueProvider;\n  node(): Node;\n}\n\nclass ExistingValueProvider implements ValueProvider {\n  constructor(readonly node_: Node) {}\n\n  getImmediateChild(childName: string): ValueProvider {\n    const child = this.node_.getImmediateChild(childName);\n    return new ExistingValueProvider(child);\n  }\n\n  node(): Node {\n    return this.node_;\n  }\n}\n\nclass DeferredValueProvider implements ValueProvider {\n  private syncTree_: SyncTree;\n  private path_: Path;\n\n  constructor(syncTree: SyncTree, path: Path) {\n    this.syncTree_ = syncTree;\n    this.path_ = path;\n  }\n\n  getImmediateChild(childName: string): ValueProvider {\n    const childPath = pathChild(this.path_, childName);\n    return new DeferredValueProvider(this.syncTree_, childPath);\n  }\n\n  node(): Node {\n    return syncTreeCalcCompleteEventCache(this.syncTree_, this.path_);\n  }\n}\n\n/**\n * Generate placeholders for deferred values.\n */\nexport const generateWithValues = function (\n  values: {\n    [k: string]: unknown;\n  } | null\n): { [k: string]: unknown } {\n  values = values || {};\n  values['timestamp'] = values['timestamp'] || new Date().getTime();\n  return values;\n};\n\n/**\n * Value to use when firing local events. When writing server values, fire\n * local events with an approximate value, otherwise return value as-is.\n */\nexport const resolveDeferredLeafValue = function (\n  value: { [k: string]: unknown } | string | number | boolean,\n  existingVal: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  if (!value || typeof value !== 'object') {\n    return value as string | number | boolean;\n  }\n  assert('.sv' in value, 'Unexpected leaf node or priority contents');\n\n  if (typeof value['.sv'] === 'string') {\n    return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\n  } else if (typeof value['.sv'] === 'object') {\n    return resolveComplexDeferredValue(value['.sv'], existingVal, serverValues);\n  } else {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\n  }\n};\n\nconst resolveScalarDeferredValue = function (\n  op: string,\n  existing: ValueProvider,\n  serverValues: { [k: string]: unknown }\n): string | number | boolean {\n  switch (op) {\n    case 'timestamp':\n      return serverValues['timestamp'] as string | number | boolean;\n    default:\n      assert(false, 'Unexpected server value: ' + op);\n  }\n};\n\nconst resolveComplexDeferredValue = function (\n  op: object,\n  existing: ValueProvider,\n  unused: { [k: string]: unknown }\n): string | number | boolean {\n  if (!op.hasOwnProperty('increment')) {\n    assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\n  }\n  const delta = op['increment'];\n  if (typeof delta !== 'number') {\n    assert(false, 'Unexpected increment value: ' + delta);\n  }\n\n  const existingNode = existing.node();\n  assert(\n    existingNode !== null && typeof existingNode !== 'undefined',\n    'Expected ChildrenNode.EMPTY_NODE for nulls'\n  );\n\n  // Incrementing a non-number sets the value to the incremented amount\n  if (!existingNode.isLeafNode()) {\n    return delta;\n  }\n\n  const leaf = existingNode as LeafNode;\n  const existingVal = leaf.getValue();\n  if (typeof existingVal !== 'number') {\n    return delta;\n  }\n\n  // No need to do over/underflow arithmetic here because JS only handles floats under the covers\n  return existingVal + delta;\n};\n\n/**\n * Recursively replace all deferred values and priorities in the tree with the\n * specified generated replacement values.\n * @param path - path to which write is relative\n * @param node - new data written at path\n * @param syncTree - current data\n */\nexport const resolveDeferredValueTree = function (\n  path: Path,\n  node: Node,\n  syncTree: SyncTree,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new DeferredValueProvider(syncTree, path),\n    serverValues\n  );\n};\n\n/**\n * Recursively replace all deferred values and priorities in the node with the\n * specified generated replacement values.  If there are no server values in the node,\n * it'll be returned as-is.\n */\nexport const resolveDeferredValueSnapshot = function (\n  node: Node,\n  existing: Node,\n  serverValues: Indexable\n): Node {\n  return resolveDeferredValue(\n    node,\n    new ExistingValueProvider(existing),\n    serverValues\n  );\n};\n\nfunction resolveDeferredValue(\n  node: Node,\n  existingVal: ValueProvider,\n  serverValues: Indexable\n): Node {\n  const rawPri = node.getPriority().val() as\n    | Indexable\n    | boolean\n    | null\n    | number\n    | string;\n  const priority = resolveDeferredLeafValue(\n    rawPri,\n    existingVal.getImmediateChild('.priority'),\n    serverValues\n  );\n  let newNode: Node;\n\n  if (node.isLeafNode()) {\n    const leafNode = node as LeafNode;\n    const value = resolveDeferredLeafValue(\n      leafNode.getValue(),\n      existingVal,\n      serverValues\n    );\n    if (\n      value !== leafNode.getValue() ||\n      priority !== leafNode.getPriority().val()\n    ) {\n      return new LeafNode(value, nodeFromJSON(priority));\n    } else {\n      return node;\n    }\n  } else {\n    const childrenNode = node as ChildrenNode;\n    newNode = childrenNode;\n    if (priority !== childrenNode.getPriority().val()) {\n      newNode = newNode.updatePriority(new LeafNode(priority));\n    }\n    childrenNode.forEachChild(PRIORITY_INDEX, (childName, childNode) => {\n      const newChildNode = resolveDeferredValue(\n        childNode,\n        existingVal.getImmediateChild(childName),\n        serverValues\n      );\n      if (newChildNode !== childNode) {\n        newNode = newNode.updateImmediateChild(childName, newChildNode);\n      }\n    });\n    return newNode;\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { contains, safeGet } from '@firebase/util';\n\nimport { Path, pathGetFront, pathPopFront } from './Path';\nimport { each } from './util';\n\n/**\n * Node in a Tree.\n */\nexport interface TreeNode<T> {\n  // TODO: Consider making accessors that create children and value lazily or\n  // separate Internal / Leaf 'types'.\n  children: Record<string, TreeNode<T>>;\n  childCount: number;\n  value?: T;\n}\n\n/**\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\n * children.\n */\nexport class Tree<T> {\n  /**\n   * @param name - Optional name of the node.\n   * @param parent - Optional parent node.\n   * @param node - Optional node to wrap.\n   */\n  constructor(\n    readonly name: string = '',\n    readonly parent: Tree<T> | null = null,\n    public node: TreeNode<T> = { children: {}, childCount: 0 }\n  ) {}\n}\n\n/**\n * Returns a sub-Tree for the given path.\n *\n * @param pathObj - Path to look up.\n * @returns Tree for path.\n */\nexport function treeSubTree<T>(tree: Tree<T>, pathObj: string | Path): Tree<T> {\n  // TODO: Require pathObj to be Path?\n  let path = pathObj instanceof Path ? pathObj : new Path(pathObj);\n  let child = tree,\n    next = pathGetFront(path);\n  while (next !== null) {\n    const childNode = safeGet(child.node.children, next) || {\n      children: {},\n      childCount: 0\n    };\n    child = new Tree<T>(next, child, childNode);\n    path = pathPopFront(path);\n    next = pathGetFront(path);\n  }\n\n  return child;\n}\n\n/**\n * Returns the data associated with this tree node.\n *\n * @returns The data or null if no data exists.\n */\nexport function treeGetValue<T>(tree: Tree<T>): T | undefined {\n  return tree.node.value;\n}\n\n/**\n * Sets data to this tree node.\n *\n * @param value - Value to set.\n */\nexport function treeSetValue<T>(tree: Tree<T>, value: T | undefined): void {\n  tree.node.value = value;\n  treeUpdateParents(tree);\n}\n\n/**\n * @returns Whether the tree has any children.\n */\nexport function treeHasChildren<T>(tree: Tree<T>): boolean {\n  return tree.node.childCount > 0;\n}\n\n/**\n * @returns Whethe rthe tree is empty (no value or children).\n */\nexport function treeIsEmpty<T>(tree: Tree<T>): boolean {\n  return treeGetValue(tree) === undefined && !treeHasChildren(tree);\n}\n\n/**\n * Calls action for each child of this tree node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachChild<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  each(tree.node.children, (child: string, childTree: TreeNode<T>) => {\n    action(new Tree<T>(child, tree, childTree));\n  });\n}\n\n/**\n * Does a depth-first traversal of this node's descendants, calling action for each one.\n *\n * @param action - Action to be called for each child.\n * @param includeSelf - Whether to call action on this node as well. Defaults to\n *   false.\n * @param childrenFirst - Whether to call action on children before calling it on\n *   parent.\n */\nexport function treeForEachDescendant<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void,\n  includeSelf?: boolean,\n  childrenFirst?: boolean\n): void {\n  if (includeSelf && !childrenFirst) {\n    action(tree);\n  }\n\n  treeForEachChild(tree, child => {\n    treeForEachDescendant(child, action, true, childrenFirst);\n  });\n\n  if (includeSelf && childrenFirst) {\n    action(tree);\n  }\n}\n\n/**\n * Calls action on each ancestor node.\n *\n * @param action - Action to be called on each parent; return\n *   true to abort.\n * @param includeSelf - Whether to call action on this node as well.\n * @returns true if the action callback returned true.\n */\nexport function treeForEachAncestor<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => unknown,\n  includeSelf?: boolean\n): boolean {\n  let node = includeSelf ? tree : tree.parent;\n  while (node !== null) {\n    if (action(node)) {\n      return true;\n    }\n    node = node.parent;\n  }\n  return false;\n}\n\n/**\n * Does a depth-first traversal of this node's descendants.  When a descendant with a value\n * is found, action is called on it and traversal does not continue inside the node.\n * Action is *not* called on this node.\n *\n * @param action - Action to be called for each child.\n */\nexport function treeForEachImmediateDescendantWithValue<T>(\n  tree: Tree<T>,\n  action: (tree: Tree<T>) => void\n): void {\n  treeForEachChild(tree, child => {\n    if (treeGetValue(child) !== undefined) {\n      action(child);\n    } else {\n      treeForEachImmediateDescendantWithValue(child, action);\n    }\n  });\n}\n\n/**\n * @returns The path of this tree node, as a Path.\n */\nexport function treeGetPath<T>(tree: Tree<T>) {\n  return new Path(\n    tree.parent === null\n      ? tree.name\n      : treeGetPath(tree.parent) + '/' + tree.name\n  );\n}\n\n/**\n * Adds or removes this child from its parent based on whether it's empty or not.\n */\nfunction treeUpdateParents<T>(tree: Tree<T>) {\n  if (tree.parent !== null) {\n    treeUpdateChild(tree.parent, tree.name, tree);\n  }\n}\n\n/**\n * Adds or removes the passed child to this tree node, depending on whether it's empty.\n *\n * @param childName - The name of the child to update.\n * @param child - The child to update.\n */\nfunction treeUpdateChild<T>(tree: Tree<T>, childName: string, child: Tree<T>) {\n  const childEmpty = treeIsEmpty(child);\n  const childExists = contains(tree.node.children, childName);\n  if (childEmpty && childExists) {\n    delete tree.node.children[childName];\n    tree.node.childCount--;\n    treeUpdateParents(tree);\n  } else if (!childEmpty && !childExists) {\n    tree.node.children[childName] = child.node;\n    tree.node.childCount++;\n    treeUpdateParents(tree);\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  contains,\n  errorPrefix as errorPrefixFxn,\n  safeGet,\n  stringLength\n} from '@firebase/util';\n\nimport { RepoInfo } from '../RepoInfo';\n\nimport {\n  Path,\n  pathChild,\n  pathCompare,\n  pathContains,\n  pathGetBack,\n  pathGetFront,\n  pathSlice,\n  ValidationPath,\n  validationPathPop,\n  validationPathPush,\n  validationPathToErrorString\n} from './Path';\nimport { each, isInvalidJSONNumber } from './util';\n\n/**\n * True for invalid Firebase keys\n */\nexport const INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\n\n/**\n * True for invalid Firebase paths.\n * Allows '/' in paths.\n */\nexport const INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\n\n/**\n * Maximum number of characters to allow in leaf value\n */\nexport const MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\n\nexport const isValidKey = function (key: unknown): boolean {\n  return (\n    typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key)\n  );\n};\n\nexport const isValidPathString = function (pathString: string): boolean {\n  return (\n    typeof pathString === 'string' &&\n    pathString.length !== 0 &&\n    !INVALID_PATH_REGEX_.test(pathString)\n  );\n};\n\nexport const isValidRootPathString = function (pathString: string): boolean {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  return isValidPathString(pathString);\n};\n\nexport const isValidPriority = function (priority: unknown): boolean {\n  return (\n    priority === null ||\n    typeof priority === 'string' ||\n    (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\n    (priority &&\n      typeof priority === 'object' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      contains(priority as any, '.sv'))\n  );\n};\n\n/**\n * Pre-validate a datum passed as an argument to Firebase function.\n */\nexport const validateFirebaseDataArg = function (\n  fnName: string,\n  value: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && value === undefined) {\n    return;\n  }\n\n  validateFirebaseData(errorPrefixFxn(fnName, 'value'), value, path);\n};\n\n/**\n * Validate a data object client-side before sending to server.\n */\nexport const validateFirebaseData = function (\n  errorPrefix: string,\n  data: unknown,\n  path_: Path | ValidationPath\n) {\n  const path =\n    path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\n\n  if (data === undefined) {\n    throw new Error(\n      errorPrefix + 'contains undefined ' + validationPathToErrorString(path)\n    );\n  }\n  if (typeof data === 'function') {\n    throw new Error(\n      errorPrefix +\n        'contains a function ' +\n        validationPathToErrorString(path) +\n        ' with contents = ' +\n        data.toString()\n    );\n  }\n  if (isInvalidJSONNumber(data)) {\n    throw new Error(\n      errorPrefix +\n        'contains ' +\n        data.toString() +\n        ' ' +\n        validationPathToErrorString(path)\n    );\n  }\n\n  // Check max leaf size, but try to avoid the utf8 conversion if we can.\n  if (\n    typeof data === 'string' &&\n    data.length > MAX_LEAF_SIZE_ / 3 &&\n    stringLength(data) > MAX_LEAF_SIZE_\n  ) {\n    throw new Error(\n      errorPrefix +\n        'contains a string greater than ' +\n        MAX_LEAF_SIZE_ +\n        ' utf8 bytes ' +\n        validationPathToErrorString(path) +\n        \" ('\" +\n        data.substring(0, 50) +\n        \"...')\"\n    );\n  }\n\n  // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\n  // to save extra walking of large objects.\n  if (data && typeof data === 'object') {\n    let hasDotValue = false;\n    let hasActualChild = false;\n    each(data, (key: string, value: unknown) => {\n      if (key === '.value') {\n        hasDotValue = true;\n      } else if (key !== '.priority' && key !== '.sv') {\n        hasActualChild = true;\n        if (!isValidKey(key)) {\n          throw new Error(\n            errorPrefix +\n              ' contains an invalid key (' +\n              key +\n              ') ' +\n              validationPathToErrorString(path) +\n              '.  Keys must be non-empty strings ' +\n              'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n          );\n        }\n      }\n\n      validationPathPush(path, key);\n      validateFirebaseData(errorPrefix, value, path);\n      validationPathPop(path);\n    });\n\n    if (hasDotValue && hasActualChild) {\n      throw new Error(\n        errorPrefix +\n          ' contains \".value\" child ' +\n          validationPathToErrorString(path) +\n          ' in addition to actual children.'\n      );\n    }\n  }\n};\n\n/**\n * Pre-validate paths passed in the firebase function.\n */\nexport const validateFirebaseMergePaths = function (\n  errorPrefix: string,\n  mergePaths: Path[]\n) {\n  let i, curPath: Path;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    const keys = pathSlice(curPath);\n    for (let j = 0; j < keys.length; j++) {\n      if (keys[j] === '.priority' && j === keys.length - 1) {\n        // .priority is OK\n      } else if (!isValidKey(keys[j])) {\n        throw new Error(\n          errorPrefix +\n            'contains an invalid key (' +\n            keys[j] +\n            ') in path ' +\n            curPath.toString() +\n            '. Keys must be non-empty strings ' +\n            'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"'\n        );\n      }\n    }\n  }\n\n  // Check that update keys are not descendants of each other.\n  // We rely on the property that sorting guarantees that ancestors come\n  // right before descendants.\n  mergePaths.sort(pathCompare);\n  let prevPath: Path | null = null;\n  for (i = 0; i < mergePaths.length; i++) {\n    curPath = mergePaths[i];\n    if (prevPath !== null && pathContains(prevPath, curPath)) {\n      throw new Error(\n        errorPrefix +\n          'contains a path ' +\n          prevPath.toString() +\n          ' that is ancestor of another path ' +\n          curPath.toString()\n      );\n    }\n    prevPath = curPath;\n  }\n};\n\n/**\n * pre-validate an object passed as an argument to firebase function (\n * must be an object - e.g. for firebase.update()).\n */\nexport const validateFirebaseMergeDataArg = function (\n  fnName: string,\n  data: unknown,\n  path: Path,\n  optional: boolean\n) {\n  if (optional && data === undefined) {\n    return;\n  }\n\n  const errorPrefix = errorPrefixFxn(fnName, 'values');\n\n  if (!(data && typeof data === 'object') || Array.isArray(data)) {\n    throw new Error(\n      errorPrefix + ' must be an object containing the children to replace.'\n    );\n  }\n\n  const mergePaths: Path[] = [];\n  each(data, (key: string, value: unknown) => {\n    const curPath = new Path(key);\n    validateFirebaseData(errorPrefix, value, pathChild(path, curPath));\n    if (pathGetBack(curPath) === '.priority') {\n      if (!isValidPriority(value)) {\n        throw new Error(\n          errorPrefix +\n            \"contains an invalid value for '\" +\n            curPath.toString() +\n            \"', which must be a valid \" +\n            'Firebase priority (a string, finite number, server value, or null).'\n        );\n      }\n    }\n    mergePaths.push(curPath);\n  });\n  validateFirebaseMergePaths(errorPrefix, mergePaths);\n};\n\nexport const validatePriority = function (\n  fnName: string,\n  priority: unknown,\n  optional: boolean\n) {\n  if (optional && priority === undefined) {\n    return;\n  }\n  if (isInvalidJSONNumber(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'is ' +\n        priority.toString() +\n        ', but must be a valid Firebase priority (a string, finite number, ' +\n        'server value, or null).'\n    );\n  }\n  // Special case to allow importing data with a .sv.\n  if (!isValidPriority(priority)) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'priority') +\n        'must be a valid Firebase priority ' +\n        '(a string, finite number, server value, or null).'\n    );\n  }\n};\n\nexport const validateKey = function (\n  fnName: string,\n  argumentName: string,\n  key: string,\n  optional: boolean\n) {\n  if (optional && key === undefined) {\n    return;\n  }\n  if (!isValidKey(key)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid key = \"' +\n        key +\n        '\".  Firebase keys must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").'\n    );\n  }\n};\n\n/**\n * @internal\n */\nexport const validatePathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (optional && pathString === undefined) {\n    return;\n  }\n\n  if (!isValidPathString(pathString)) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) +\n        'was an invalid path = \"' +\n        pathString +\n        '\". Paths must be non-empty strings and ' +\n        'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"'\n    );\n  }\n};\n\nexport const validateRootPathString = function (\n  fnName: string,\n  argumentName: string,\n  pathString: string,\n  optional: boolean\n) {\n  if (pathString) {\n    // Allow '/.info/' at the beginning.\n    pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\n  }\n\n  validatePathString(fnName, argumentName, pathString, optional);\n};\n\n/**\n * @internal\n */\nexport const validateWritablePath = function (fnName: string, path: Path) {\n  if (pathGetFront(path) === '.info') {\n    throw new Error(fnName + \" failed = Can't modify data under /.info/\");\n  }\n};\n\nexport const validateUrl = function (\n  fnName: string,\n  parsedUrl: { repoInfo: RepoInfo; path: Path }\n) {\n  // TODO = Validate server better.\n  const pathString = parsedUrl.path.toString();\n  if (\n    !(typeof parsedUrl.repoInfo.host === 'string') ||\n    parsedUrl.repoInfo.host.length === 0 ||\n    (!isValidKey(parsedUrl.repoInfo.namespace) &&\n      parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\n    (pathString.length !== 0 && !isValidRootPathString(pathString))\n  ) {\n    throw new Error(\n      errorPrefixFxn(fnName, 'url') +\n        'must be a valid firebase URL and ' +\n        'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".'\n    );\n  }\n};\n\nexport const validateString = function (\n  fnName: string,\n  argumentName: string,\n  string: unknown,\n  optional: boolean\n) {\n  if (optional && string === undefined) {\n    return;\n  }\n  if (!(typeof string === 'string')) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid string.'\n    );\n  }\n};\n\nexport const validateObject = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  optional: boolean\n) {\n  if (optional && obj === undefined) {\n    return;\n  }\n  if (!(obj && typeof obj === 'object') || obj === null) {\n    throw new Error(\n      errorPrefixFxn(fnName, argumentName) + 'must be a valid object.'\n    );\n  }\n};\n\nexport const validateObjectContainsKey = function (\n  fnName: string,\n  argumentName: string,\n  obj: unknown,\n  key: string,\n  optional: boolean,\n  optType?: string\n) {\n  const objectContainsKey =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    obj && typeof obj === 'object' && contains(obj as any, key);\n\n  if (!objectContainsKey) {\n    if (optional) {\n      return;\n    } else {\n      throw new Error(\n        errorPrefixFxn(fnName, argumentName) +\n          'must contain the key \"' +\n          key +\n          '\"'\n      );\n    }\n  }\n\n  if (optType) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const val = safeGet(obj as any, key);\n    if (\n      (optType === 'number' && !(typeof val === 'number')) ||\n      (optType === 'string' && !(typeof val === 'string')) ||\n      (optType === 'boolean' && !(typeof val === 'boolean')) ||\n      (optType === 'function' && !(typeof val === 'function')) ||\n      (optType === 'object' && !(typeof val === 'object') && val)\n    ) {\n      if (optional) {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'contains invalid value for key \"' +\n            key +\n            '\" (must be of type \"' +\n            optType +\n            '\")'\n        );\n      } else {\n        throw new Error(\n          errorPrefixFxn(fnName, argumentName) +\n            'must contain the key \"' +\n            key +\n            '\" with type \"' +\n            optType +\n            '\"'\n        );\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Path, pathContains, pathEquals } from '../util/Path';\nimport { exceptionGuard, log, logger } from '../util/util';\n\nimport { Event } from './Event';\n\n/**\n * The event queue serves a few purposes:\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\n *    events being queued.\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\n *    left off, ensuring that the events are still raised synchronously and in order.\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\n *    events are raised synchronously.\n *\n * NOTE: This can all go away if/when we move to async events.\n *\n */\nexport class EventQueue {\n  eventLists_: EventList[] = [];\n\n  /**\n   * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\n   */\n  recursionDepth_ = 0;\n}\n\n/**\n * @param eventDataList - The new events to queue.\n */\nexport function eventQueueQueueEvents(\n  eventQueue: EventQueue,\n  eventDataList: Event[]\n) {\n  // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\n  let currList: EventList | null = null;\n  for (let i = 0; i < eventDataList.length; i++) {\n    const data = eventDataList[i];\n    const path = data.getPath();\n    if (currList !== null && !pathEquals(path, currList.path)) {\n      eventQueue.eventLists_.push(currList);\n      currList = null;\n    }\n\n    if (currList === null) {\n      currList = { events: [], path };\n    }\n\n    currList.events.push(data);\n  }\n  if (currList) {\n    eventQueue.eventLists_.push(currList);\n  }\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones)\n * for the specified path.\n *\n * It is assumed that the new events are all for the specified path.\n *\n * @param path - The path to raise events for.\n * @param eventDataList - The new events to raise.\n */\nexport function eventQueueRaiseEventsAtPath(\n  eventQueue: EventQueue,\n  path: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(eventQueue, eventPath =>\n    pathEquals(eventPath, path)\n  );\n}\n\n/**\n * Queues the specified events and synchronously raises all events (including previously queued ones) for\n * locations related to the specified change path (i.e. all ancestors and descendants).\n *\n * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\n *\n * @param changedPath - The path to raise events for.\n * @param eventDataList - The events to raise\n */\nexport function eventQueueRaiseEventsForChangedPath(\n  eventQueue: EventQueue,\n  changedPath: Path,\n  eventDataList: Event[]\n) {\n  eventQueueQueueEvents(eventQueue, eventDataList);\n  eventQueueRaiseQueuedEventsMatchingPredicate(\n    eventQueue,\n    eventPath =>\n      pathContains(eventPath, changedPath) ||\n      pathContains(changedPath, eventPath)\n  );\n}\n\nfunction eventQueueRaiseQueuedEventsMatchingPredicate(\n  eventQueue: EventQueue,\n  predicate: (path: Path) => boolean\n) {\n  eventQueue.recursionDepth_++;\n\n  let sentAll = true;\n  for (let i = 0; i < eventQueue.eventLists_.length; i++) {\n    const eventList = eventQueue.eventLists_[i];\n    if (eventList) {\n      const eventPath = eventList.path;\n      if (predicate(eventPath)) {\n        eventListRaise(eventQueue.eventLists_[i]);\n        eventQueue.eventLists_[i] = null;\n      } else {\n        sentAll = false;\n      }\n    }\n  }\n\n  if (sentAll) {\n    eventQueue.eventLists_ = [];\n  }\n\n  eventQueue.recursionDepth_--;\n}\n\ninterface EventList {\n  events: Event[];\n  path: Path;\n}\n\n/**\n * Iterates through the list and raises each event\n */\nfunction eventListRaise(eventList: EventList) {\n  for (let i = 0; i < eventList.events.length; i++) {\n    const eventData = eventList.events[i];\n    if (eventData !== null) {\n      eventList.events[i] = null;\n      const eventFn = eventData.getEventRunner();\n      if (logger) {\n        log('event: ' + eventData.toString());\n      }\n      exceptionGuard(eventFn);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  contains,\n  isEmpty,\n  map,\n  safeGet,\n  stringify\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from './AppCheckTokenProvider';\nimport { AuthTokenProvider } from './AuthTokenProvider';\nimport { PersistentConnection } from './PersistentConnection';\nimport { ReadonlyRestClient } from './ReadonlyRestClient';\nimport { RepoInfo } from './RepoInfo';\nimport { ServerActions } from './ServerActions';\nimport { ChildrenNode } from './snap/ChildrenNode';\nimport { Node } from './snap/Node';\nimport { nodeFromJSON } from './snap/nodeFromJSON';\nimport { SnapshotHolder } from './SnapshotHolder';\nimport {\n  newSparseSnapshotTree,\n  SparseSnapshotTree,\n  sparseSnapshotTreeForEachTree,\n  sparseSnapshotTreeForget,\n  sparseSnapshotTreeRemember\n} from './SparseSnapshotTree';\nimport { StatsCollection } from './stats/StatsCollection';\nimport { StatsListener } from './stats/StatsListener';\nimport {\n  statsManagerGetCollection,\n  statsManagerGetOrCreateReporter\n} from './stats/StatsManager';\nimport { StatsReporter, statsReporterIncludeStat } from './stats/StatsReporter';\nimport {\n  SyncTree,\n  syncTreeAckUserWrite,\n  syncTreeAddEventRegistration,\n  syncTreeApplyServerMerge,\n  syncTreeApplyServerOverwrite,\n  syncTreeApplyTaggedQueryMerge,\n  syncTreeApplyTaggedQueryOverwrite,\n  syncTreeApplyUserMerge,\n  syncTreeApplyUserOverwrite,\n  syncTreeCalcCompleteEventCache,\n  syncTreeGetServerValue,\n  syncTreeRemoveEventRegistration\n} from './SyncTree';\nimport { Indexable } from './util/misc';\nimport {\n  newEmptyPath,\n  newRelativePath,\n  Path,\n  pathChild,\n  pathGetFront,\n  pathPopFront\n} from './util/Path';\nimport {\n  generateWithValues,\n  resolveDeferredValueSnapshot,\n  resolveDeferredValueTree\n} from './util/ServerValues';\nimport {\n  Tree,\n  treeForEachAncestor,\n  treeForEachChild,\n  treeForEachDescendant,\n  treeGetPath,\n  treeGetValue,\n  treeHasChildren,\n  treeSetValue,\n  treeSubTree\n} from './util/Tree';\nimport {\n  beingCrawled,\n  each,\n  exceptionGuard,\n  log,\n  LUIDGenerator,\n  warn\n} from './util/util';\nimport { isValidPriority, validateFirebaseData } from './util/validation';\nimport { Event } from './view/Event';\nimport {\n  EventQueue,\n  eventQueueQueueEvents,\n  eventQueueRaiseEventsAtPath,\n  eventQueueRaiseEventsForChangedPath\n} from './view/EventQueue';\nimport { EventRegistration, QueryContext } from './view/EventRegistration';\n\nconst INTERRUPT_REASON = 'repo_interrupt';\n\n/**\n * If a transaction does not succeed after 25 retries, we abort it. Among other\n * things this ensure that if there's ever a bug causing a mismatch between\n * client / server hashes for some data, we won't retry indefinitely.\n */\nconst MAX_TRANSACTION_RETRIES = 25;\n\nconst enum TransactionStatus {\n  // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\n  // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\n  // mismatched hash.\n  RUN,\n\n  // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\n  // or rejected yet).\n  SENT,\n\n  // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\n  // removed when we get a chance to prune completed ones.\n  COMPLETED,\n\n  // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\n  // If it comes back as unsuccessful, we'll abort it.\n  SENT_NEEDS_ABORT,\n\n  // Temporary state used to mark transactions that need to be aborted.\n  NEEDS_ABORT\n}\n\ninterface Transaction {\n  path: Path;\n  update: (a: unknown) => unknown;\n  onComplete: (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => void;\n  status: TransactionStatus;\n  order: number;\n  applyLocally: boolean;\n  retryCount: number;\n  unwatcher: () => void;\n  abortReason: string | null;\n  currentWriteId: number;\n  currentInputSnapshot: Node | null;\n  currentOutputSnapshotRaw: Node | null;\n  currentOutputSnapshotResolved: Node | null;\n}\n\n/**\n * A connection to a single data repository.\n */\nexport class Repo {\n  /** Key for uniquely identifying this repo, used in RepoManager */\n  readonly key: string;\n\n  dataUpdateCount = 0;\n  infoSyncTree_: SyncTree;\n  serverSyncTree_: SyncTree;\n\n  stats_: StatsCollection;\n  statsListener_: StatsListener | null = null;\n  eventQueue_ = new EventQueue();\n  nextWriteId_ = 1;\n  server_: ServerActions;\n  statsReporter_: StatsReporter;\n  infoData_: SnapshotHolder;\n  interceptServerDataCallback_: ((a: string, b: unknown) => void) | null = null;\n\n  /** A list of data pieces and paths to be set when this client disconnects. */\n  onDisconnect_: SparseSnapshotTree = newSparseSnapshotTree();\n\n  /** Stores queues of outstanding transactions for Firebase locations. */\n  transactionQueueTree_ = new Tree<Transaction[]>();\n\n  // TODO: This should be @private but it's used by test_access.js and internal.js\n  persistentConnection_: PersistentConnection | null = null;\n\n  constructor(\n    public repoInfo_: RepoInfo,\n    public forceRestClient_: boolean,\n    public authTokenProvider_: AuthTokenProvider,\n    public appCheckProvider_: AppCheckTokenProvider\n  ) {\n    // This key is intentionally not updated if RepoInfo is later changed or replaced\n    this.key = this.repoInfo_.toURLString();\n  }\n\n  /**\n   * @returns The URL corresponding to the root of this Firebase.\n   */\n  toString(): string {\n    return (\n      (this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host\n    );\n  }\n}\n\nexport function repoStart(\n  repo: Repo,\n  appId: string,\n  authOverride?: object\n): void {\n  repo.stats_ = statsManagerGetCollection(repo.repoInfo_);\n\n  if (repo.forceRestClient_ || beingCrawled()) {\n    repo.server_ = new ReadonlyRestClient(\n      repo.repoInfo_,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_\n    );\n\n    // Minor hack: Fire onConnect immediately, since there's no actual connection.\n    setTimeout(() => repoOnConnectStatus(repo, /* connectStatus= */ true), 0);\n  } else {\n    // Validate authOverride\n    if (typeof authOverride !== 'undefined' && authOverride !== null) {\n      if (typeof authOverride !== 'object') {\n        throw new Error(\n          'Only objects are supported for option databaseAuthVariableOverride'\n        );\n      }\n      try {\n        stringify(authOverride);\n      } catch (e) {\n        throw new Error('Invalid authOverride provided: ' + e);\n      }\n    }\n\n    repo.persistentConnection_ = new PersistentConnection(\n      repo.repoInfo_,\n      appId,\n      (\n        pathString: string,\n        data: unknown,\n        isMerge: boolean,\n        tag: number | null\n      ) => {\n        repoOnDataUpdate(repo, pathString, data, isMerge, tag);\n      },\n      (connectStatus: boolean) => {\n        repoOnConnectStatus(repo, connectStatus);\n      },\n      (updates: object) => {\n        repoOnServerInfoUpdate(repo, updates);\n      },\n      repo.authTokenProvider_,\n      repo.appCheckProvider_,\n      authOverride\n    );\n\n    repo.server_ = repo.persistentConnection_;\n  }\n\n  repo.authTokenProvider_.addTokenChangeListener(token => {\n    repo.server_.refreshAuthToken(token);\n  });\n\n  repo.appCheckProvider_.addTokenChangeListener(result => {\n    repo.server_.refreshAppCheckToken(result.token);\n  });\n\n  // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\n  // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\n  repo.statsReporter_ = statsManagerGetOrCreateReporter(\n    repo.repoInfo_,\n    () => new StatsReporter(repo.stats_, repo.server_)\n  );\n\n  // Used for .info.\n  repo.infoData_ = new SnapshotHolder();\n  repo.infoSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      let infoEvents: Event[] = [];\n      const node = repo.infoData_.getNode(query._path);\n      // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\n      // on initial data...\n      if (!node.isEmpty()) {\n        infoEvents = syncTreeApplyServerOverwrite(\n          repo.infoSyncTree_,\n          query._path,\n          node\n        );\n        setTimeout(() => {\n          onComplete('ok');\n        }, 0);\n      }\n      return infoEvents;\n    },\n    stopListening: () => {}\n  });\n  repoUpdateInfo(repo, 'connected', false);\n\n  repo.serverSyncTree_ = new SyncTree({\n    startListening: (query, tag, currentHashFn, onComplete) => {\n      repo.server_.listen(query, currentHashFn, tag, (status, data) => {\n        const events = onComplete(status, data);\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          query._path,\n          events\n        );\n      });\n      // No synchronous events for network-backed sync trees\n      return [];\n    },\n    stopListening: (query, tag) => {\n      repo.server_.unlisten(query, tag);\n    }\n  });\n}\n\n/**\n * @returns The time in milliseconds, taking the server offset into account if we have one.\n */\nexport function repoServerTime(repo: Repo): number {\n  const offsetNode = repo.infoData_.getNode(new Path('.info/serverTimeOffset'));\n  const offset = (offsetNode.val() as number) || 0;\n  return new Date().getTime() + offset;\n}\n\n/**\n * Generate ServerValues using some variables from the repo object.\n */\nexport function repoGenerateServerValues(repo: Repo): Indexable {\n  return generateWithValues({\n    timestamp: repoServerTime(repo)\n  });\n}\n\n/**\n * Called by realtime when we get new messages from the server.\n */\nfunction repoOnDataUpdate(\n  repo: Repo,\n  pathString: string,\n  data: unknown,\n  isMerge: boolean,\n  tag: number | null\n): void {\n  // For testing.\n  repo.dataUpdateCount++;\n  const path = new Path(pathString);\n  data = repo.interceptServerDataCallback_\n    ? repo.interceptServerDataCallback_(pathString, data)\n    : data;\n  let events = [];\n  if (tag) {\n    if (isMerge) {\n      const taggedChildren = map(\n        data as { [k: string]: unknown },\n        (raw: unknown) => nodeFromJSON(raw)\n      );\n      events = syncTreeApplyTaggedQueryMerge(\n        repo.serverSyncTree_,\n        path,\n        taggedChildren,\n        tag\n      );\n    } else {\n      const taggedSnap = nodeFromJSON(data);\n      events = syncTreeApplyTaggedQueryOverwrite(\n        repo.serverSyncTree_,\n        path,\n        taggedSnap,\n        tag\n      );\n    }\n  } else if (isMerge) {\n    const changedChildren = map(\n      data as { [k: string]: unknown },\n      (raw: unknown) => nodeFromJSON(raw)\n    );\n    events = syncTreeApplyServerMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren\n    );\n  } else {\n    const snap = nodeFromJSON(data);\n    events = syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap);\n  }\n  let affectedPath = path;\n  if (events.length > 0) {\n    // Since we have a listener outstanding for each transaction, receiving any events\n    // is a proxy for some change having occurred.\n    affectedPath = repoRerunTransactions(repo, path);\n  }\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, events);\n}\n\n// TODO: This should be @private but it's used by test_access.js and internal.js\nexport function repoInterceptServerData(\n  repo: Repo,\n  callback: ((a: string, b: unknown) => unknown) | null\n): void {\n  repo.interceptServerDataCallback_ = callback;\n}\n\nfunction repoOnConnectStatus(repo: Repo, connectStatus: boolean): void {\n  repoUpdateInfo(repo, 'connected', connectStatus);\n  if (connectStatus === false) {\n    repoRunOnDisconnectEvents(repo);\n  }\n}\n\nfunction repoOnServerInfoUpdate(repo: Repo, updates: object): void {\n  each(updates, (key: string, value: unknown) => {\n    repoUpdateInfo(repo, key, value);\n  });\n}\n\nfunction repoUpdateInfo(repo: Repo, pathString: string, value: unknown): void {\n  const path = new Path('/.info/' + pathString);\n  const newNode = nodeFromJSON(value);\n  repo.infoData_.updateSnapshot(path, newNode);\n  const events = syncTreeApplyServerOverwrite(\n    repo.infoSyncTree_,\n    path,\n    newNode\n  );\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n}\n\nfunction repoGetNextWriteId(repo: Repo): number {\n  return repo.nextWriteId_++;\n}\n\n/**\n * The purpose of `getValue` is to return the latest known value\n * satisfying `query`.\n *\n * This method will first check for in-memory cached values\n * belonging to active listeners. If they are found, such values\n * are considered to be the most up-to-date.\n *\n * If the client is not connected, this method will try to\n * establish a connection and request the value for `query`. If\n * the client is not able to retrieve the query result, it reports\n * an error.\n *\n * @param query - The query to surface a value for.\n */\nexport function repoGetValue(repo: Repo, query: QueryContext): Promise<Node> {\n  // Only active queries are cached. There is no persisted cache.\n  const cached = syncTreeGetServerValue(repo.serverSyncTree_, query);\n  if (cached != null) {\n    return Promise.resolve(cached);\n  }\n  return repo.server_.get(query).then(\n    payload => {\n      const node = nodeFromJSON(payload as string).withIndex(\n        query._queryParams.getIndex()\n      );\n      const events = syncTreeApplyServerOverwrite(\n        repo.serverSyncTree_,\n        query._path,\n        node\n      );\n      eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n      return Promise.resolve(node);\n    },\n    err => {\n      repoLog(repo, 'get for query ' + stringify(query) + ' failed: ' + err);\n      return Promise.reject(new Error(err as string));\n    }\n  );\n}\n\nexport function repoSetWithPriority(\n  repo: Repo,\n  path: Path,\n  newVal: unknown,\n  newPriority: number | string | null,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'set', {\n    path: path.toString(),\n    value: newVal,\n    priority: newPriority\n  });\n\n  // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\n  // (b) store unresolved paths on JSON parse\n  const serverValues = repoGenerateServerValues(repo);\n  const newNodeUnresolved = nodeFromJSON(newVal, newPriority);\n  const existing = syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path);\n  const newNode = resolveDeferredValueSnapshot(\n    newNodeUnresolved,\n    existing,\n    serverValues\n  );\n\n  const writeId = repoGetNextWriteId(repo);\n  const events = syncTreeApplyUserOverwrite(\n    repo.serverSyncTree_,\n    path,\n    newNode,\n    writeId,\n    true\n  );\n  eventQueueQueueEvents(repo.eventQueue_, events);\n  repo.server_.put(\n    path.toString(),\n    newNodeUnresolved.val(/*export=*/ true),\n    (status, errorReason) => {\n      const success = status === 'ok';\n      if (!success) {\n        warn('set at ' + path + ' failed: ' + status);\n      }\n\n      const clearEvents = syncTreeAckUserWrite(\n        repo.serverSyncTree_,\n        writeId,\n        !success\n      );\n      eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, clearEvents);\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n  const affectedPath = repoAbortTransactions(repo, path);\n  repoRerunTransactions(repo, affectedPath);\n  // We queued the events above, so just flush the queue here\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, affectedPath, []);\n}\n\nexport function repoUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repoLog(repo, 'update', { path: path.toString(), value: childrenToMerge });\n\n  // Start with our existing data and merge each child into it.\n  let empty = true;\n  const serverValues = repoGenerateServerValues(repo);\n  const changedChildren: { [k: string]: Node } = {};\n  each(childrenToMerge, (changedKey: string, changedValue: unknown) => {\n    empty = false;\n    changedChildren[changedKey] = resolveDeferredValueTree(\n      pathChild(path, changedKey),\n      nodeFromJSON(changedValue),\n      repo.serverSyncTree_,\n      serverValues\n    );\n  });\n\n  if (!empty) {\n    const writeId = repoGetNextWriteId(repo);\n    const events = syncTreeApplyUserMerge(\n      repo.serverSyncTree_,\n      path,\n      changedChildren,\n      writeId\n    );\n    eventQueueQueueEvents(repo.eventQueue_, events);\n    repo.server_.merge(\n      path.toString(),\n      childrenToMerge,\n      (status, errorReason) => {\n        const success = status === 'ok';\n        if (!success) {\n          warn('update at ' + path + ' failed: ' + status);\n        }\n\n        const clearEvents = syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          writeId,\n          !success\n        );\n        const affectedPath =\n          clearEvents.length > 0 ? repoRerunTransactions(repo, path) : path;\n        eventQueueRaiseEventsForChangedPath(\n          repo.eventQueue_,\n          affectedPath,\n          clearEvents\n        );\n        repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n      }\n    );\n\n    each(childrenToMerge, (changedPath: string) => {\n      const affectedPath = repoAbortTransactions(\n        repo,\n        pathChild(path, changedPath)\n      );\n      repoRerunTransactions(repo, affectedPath);\n    });\n\n    // We queued the events above, so just flush the queue here\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, []);\n  } else {\n    log(\"update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n  }\n}\n\n/**\n * Applies all of the changes stored up in the onDisconnect_ tree.\n */\nfunction repoRunOnDisconnectEvents(repo: Repo): void {\n  repoLog(repo, 'onDisconnectEvents');\n\n  const serverValues = repoGenerateServerValues(repo);\n  const resolvedOnDisconnectTree = newSparseSnapshotTree();\n  sparseSnapshotTreeForEachTree(\n    repo.onDisconnect_,\n    newEmptyPath(),\n    (path, node) => {\n      const resolved = resolveDeferredValueTree(\n        path,\n        node,\n        repo.serverSyncTree_,\n        serverValues\n      );\n      sparseSnapshotTreeRemember(resolvedOnDisconnectTree, path, resolved);\n    }\n  );\n  let events: Event[] = [];\n\n  sparseSnapshotTreeForEachTree(\n    resolvedOnDisconnectTree,\n    newEmptyPath(),\n    (path, snap) => {\n      events = events.concat(\n        syncTreeApplyServerOverwrite(repo.serverSyncTree_, path, snap)\n      );\n      const affectedPath = repoAbortTransactions(repo, path);\n      repoRerunTransactions(repo, affectedPath);\n    }\n  );\n\n  repo.onDisconnect_ = newSparseSnapshotTree();\n  eventQueueRaiseEventsForChangedPath(repo.eventQueue_, newEmptyPath(), events);\n}\n\nexport function repoOnDisconnectCancel(\n  repo: Repo,\n  path: Path,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  repo.server_.onDisconnectCancel(path.toString(), (status, errorReason) => {\n    if (status === 'ok') {\n      sparseSnapshotTreeForget(repo.onDisconnect_, path);\n    }\n    repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n  });\n}\n\nexport function repoOnDisconnectSet(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectSetWithPriority(\n  repo: Repo,\n  path: Path,\n  value: unknown,\n  priority: unknown,\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  const newNode = nodeFromJSON(value, priority);\n  repo.server_.onDisconnectPut(\n    path.toString(),\n    newNode.val(/*export=*/ true),\n    (status, errorReason) => {\n      if (status === 'ok') {\n        sparseSnapshotTreeRemember(repo.onDisconnect_, path, newNode);\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoOnDisconnectUpdate(\n  repo: Repo,\n  path: Path,\n  childrenToMerge: { [k: string]: unknown },\n  onComplete: ((status: Error | null, errorReason?: string) => void) | null\n): void {\n  if (isEmpty(childrenToMerge)) {\n    log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\n    repoCallOnCompleteCallback(repo, onComplete, 'ok', undefined);\n    return;\n  }\n\n  repo.server_.onDisconnectMerge(\n    path.toString(),\n    childrenToMerge,\n    (status, errorReason) => {\n      if (status === 'ok') {\n        each(childrenToMerge, (childName: string, childNode: unknown) => {\n          const newChildNode = nodeFromJSON(childNode);\n          sparseSnapshotTreeRemember(\n            repo.onDisconnect_,\n            pathChild(path, childName),\n            newChildNode\n          );\n        });\n      }\n      repoCallOnCompleteCallback(repo, onComplete, status, errorReason);\n    }\n  );\n}\n\nexport function repoAddEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeAddEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeAddEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoRemoveEventCallbackForQuery(\n  repo: Repo,\n  query: QueryContext,\n  eventRegistration: EventRegistration\n): void {\n  // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\n  // a little bit by handling the return values anyways.\n  let events;\n  if (pathGetFront(query._path) === '.info') {\n    events = syncTreeRemoveEventRegistration(\n      repo.infoSyncTree_,\n      query,\n      eventRegistration\n    );\n  } else {\n    events = syncTreeRemoveEventRegistration(\n      repo.serverSyncTree_,\n      query,\n      eventRegistration\n    );\n  }\n  eventQueueRaiseEventsAtPath(repo.eventQueue_, query._path, events);\n}\n\nexport function repoInterrupt(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.interrupt(INTERRUPT_REASON);\n  }\n}\n\nexport function repoResume(repo: Repo): void {\n  if (repo.persistentConnection_) {\n    repo.persistentConnection_.resume(INTERRUPT_REASON);\n  }\n}\n\nexport function repoStats(repo: Repo, showDelta: boolean = false): void {\n  if (typeof console === 'undefined') {\n    return;\n  }\n\n  let stats: { [k: string]: unknown };\n  if (showDelta) {\n    if (!repo.statsListener_) {\n      repo.statsListener_ = new StatsListener(repo.stats_);\n    }\n    stats = repo.statsListener_.get();\n  } else {\n    stats = repo.stats_.get();\n  }\n\n  const longestName = Object.keys(stats).reduce(\n    (previousValue, currentValue) =>\n      Math.max(currentValue.length, previousValue),\n    0\n  );\n\n  each(stats, (stat: string, value: unknown) => {\n    let paddedStat = stat;\n    // pad stat names to be the same length (plus 2 extra spaces).\n    for (let i = stat.length; i < longestName + 2; i++) {\n      paddedStat += ' ';\n    }\n    console.log(paddedStat + value);\n  });\n}\n\nexport function repoStatsIncrementCounter(repo: Repo, metric: string): void {\n  repo.stats_.incrementCounter(metric);\n  statsReporterIncludeStat(repo.statsReporter_, metric);\n}\n\nfunction repoLog(repo: Repo, ...varArgs: unknown[]): void {\n  let prefix = '';\n  if (repo.persistentConnection_) {\n    prefix = repo.persistentConnection_.id + ':';\n  }\n  log(prefix, ...varArgs);\n}\n\nexport function repoCallOnCompleteCallback(\n  repo: Repo,\n  callback: ((status: Error | null, errorReason?: string) => void) | null,\n  status: string,\n  errorReason?: string | null\n): void {\n  if (callback) {\n    exceptionGuard(() => {\n      if (status === 'ok') {\n        callback(null);\n      } else {\n        const code = (status || 'error').toUpperCase();\n        let message = code;\n        if (errorReason) {\n          message += ': ' + errorReason;\n        }\n\n        const error = new Error(message);\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (error as any).code = code;\n        callback(error);\n      }\n    });\n  }\n}\n\n/**\n * Creates a new transaction, adds it to the transactions we're tracking, and\n * sends it to the server if possible.\n *\n * @param path - Path at which to do transaction.\n * @param transactionUpdate - Update callback.\n * @param onComplete - Completion callback.\n * @param unwatcher - Function that will be called when the transaction no longer\n * need data updates for `path`.\n * @param applyLocally - Whether or not to make intermediate results visible\n */\nexport function repoStartTransaction(\n  repo: Repo,\n  path: Path,\n  transactionUpdate: (a: unknown) => unknown,\n  onComplete: ((error: Error, committed: boolean, node: Node) => void) | null,\n  unwatcher: () => void,\n  applyLocally: boolean\n): void {\n  repoLog(repo, 'transaction on ' + path);\n\n  // Initialize transaction.\n  const transaction: Transaction = {\n    path,\n    update: transactionUpdate,\n    onComplete,\n    // One of TransactionStatus enums.\n    status: null,\n    // Used when combining transactions at different locations to figure out\n    // which one goes first.\n    order: LUIDGenerator(),\n    // Whether to raise local events for this transaction.\n    applyLocally,\n    // Count of how many times we've retried the transaction.\n    retryCount: 0,\n    // Function to call to clean up our .on() listener.\n    unwatcher,\n    // Stores why a transaction was aborted.\n    abortReason: null,\n    currentWriteId: null,\n    currentInputSnapshot: null,\n    currentOutputSnapshotRaw: null,\n    currentOutputSnapshotResolved: null\n  };\n\n  // Run transaction initially.\n  const currentState = repoGetLatestState(repo, path, undefined);\n  transaction.currentInputSnapshot = currentState;\n  const newVal = transaction.update(currentState.val());\n  if (newVal === undefined) {\n    // Abort transaction.\n    transaction.unwatcher();\n    transaction.currentOutputSnapshotRaw = null;\n    transaction.currentOutputSnapshotResolved = null;\n    if (transaction.onComplete) {\n      transaction.onComplete(null, false, transaction.currentInputSnapshot);\n    }\n  } else {\n    validateFirebaseData(\n      'transaction failed: Data returned ',\n      newVal,\n      transaction.path\n    );\n\n    // Mark as run and add to our queue.\n    transaction.status = TransactionStatus.RUN;\n    const queueNode = treeSubTree(repo.transactionQueueTree_, path);\n    const nodeQueue = treeGetValue(queueNode) || [];\n    nodeQueue.push(transaction);\n\n    treeSetValue(queueNode, nodeQueue);\n\n    // Update visibleData and raise events\n    // Note: We intentionally raise events after updating all of our\n    // transaction state, since the user could start new transactions from the\n    // event callbacks.\n    let priorityForNode;\n    if (\n      typeof newVal === 'object' &&\n      newVal !== null &&\n      contains(newVal, '.priority')\n    ) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      priorityForNode = safeGet(newVal as any, '.priority');\n      assert(\n        isValidPriority(priorityForNode),\n        'Invalid priority returned by transaction. ' +\n          'Priority must be a valid string, finite number, server value, or null.'\n      );\n    } else {\n      const currentNode =\n        syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path) ||\n        ChildrenNode.EMPTY_NODE;\n      priorityForNode = currentNode.getPriority().val();\n    }\n\n    const serverValues = repoGenerateServerValues(repo);\n    const newNodeUnresolved = nodeFromJSON(newVal, priorityForNode);\n    const newNode = resolveDeferredValueSnapshot(\n      newNodeUnresolved,\n      currentState,\n      serverValues\n    );\n    transaction.currentOutputSnapshotRaw = newNodeUnresolved;\n    transaction.currentOutputSnapshotResolved = newNode;\n    transaction.currentWriteId = repoGetNextWriteId(repo);\n\n    const events = syncTreeApplyUserOverwrite(\n      repo.serverSyncTree_,\n      path,\n      newNode,\n      transaction.currentWriteId,\n      transaction.applyLocally\n    );\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n    repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n  }\n}\n\n/**\n * @param excludeSets - A specific set to exclude\n */\nfunction repoGetLatestState(\n  repo: Repo,\n  path: Path,\n  excludeSets?: number[]\n): Node {\n  return (\n    syncTreeCalcCompleteEventCache(repo.serverSyncTree_, path, excludeSets) ||\n    ChildrenNode.EMPTY_NODE\n  );\n}\n\n/**\n * Sends any already-run transactions that aren't waiting for outstanding\n * transactions to complete.\n *\n * Externally it's called with no arguments, but it calls itself recursively\n * with a particular transactionQueueTree node to recurse through the tree.\n *\n * @param node - transactionQueueTree node to start at.\n */\nfunction repoSendReadyTransactions(\n  repo: Repo,\n  node: Tree<Transaction[]> = repo.transactionQueueTree_\n): void {\n  // Before recursing, make sure any completed transactions are removed.\n  if (!node) {\n    repoPruneCompletedTransactionsBelowNode(repo, node);\n  }\n\n  if (treeGetValue(node)) {\n    const queue = repoBuildTransactionQueue(repo, node);\n    assert(queue.length > 0, 'Sending zero length transaction queue');\n\n    const allRun = queue.every(\n      (transaction: Transaction) => transaction.status === TransactionStatus.RUN\n    );\n\n    // If they're all run (and not sent), we can send them.  Else, we must wait.\n    if (allRun) {\n      repoSendTransactionQueue(repo, treeGetPath(node), queue);\n    }\n  } else if (treeHasChildren(node)) {\n    treeForEachChild(node, childNode => {\n      repoSendReadyTransactions(repo, childNode);\n    });\n  }\n}\n\n/**\n * Given a list of run transactions, send them to the server and then handle\n * the result (success or failure).\n *\n * @param path - The location of the queue.\n * @param queue - Queue of transactions under the specified location.\n */\nfunction repoSendTransactionQueue(\n  repo: Repo,\n  path: Path,\n  queue: Transaction[]\n): void {\n  // Mark transactions as sent and increment retry count!\n  const setsToIgnore = queue.map(txn => {\n    return txn.currentWriteId;\n  });\n  const latestState = repoGetLatestState(repo, path, setsToIgnore);\n  let snapToSend = latestState;\n  const latestHash = latestState.hash();\n  for (let i = 0; i < queue.length; i++) {\n    const txn = queue[i];\n    assert(\n      txn.status === TransactionStatus.RUN,\n      'tryToSendTransactionQueue_: items in queue should all be run.'\n    );\n    txn.status = TransactionStatus.SENT;\n    txn.retryCount++;\n    const relativePath = newRelativePath(path, txn.path);\n    // If we've gotten to this point, the output snapshot must be defined.\n    snapToSend = snapToSend.updateChild(\n      relativePath /** @type {!Node} */,\n      txn.currentOutputSnapshotRaw\n    );\n  }\n\n  const dataToSend = snapToSend.val(true);\n  const pathToSend = path;\n\n  // Send the put.\n  repo.server_.put(\n    pathToSend.toString(),\n    dataToSend,\n    (status: string) => {\n      repoLog(repo, 'transaction put response', {\n        path: pathToSend.toString(),\n        status\n      });\n\n      let events: Event[] = [];\n      if (status === 'ok') {\n        // Queue up the callbacks and fire them after cleaning up all of our\n        // transaction state, since the callback could trigger more\n        // transactions or sets.\n        const callbacks = [];\n        for (let i = 0; i < queue.length; i++) {\n          queue[i].status = TransactionStatus.COMPLETED;\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, queue[i].currentWriteId)\n          );\n          if (queue[i].onComplete) {\n            // We never unset the output snapshot, and given that this\n            // transaction is complete, it should be set\n            callbacks.push(() =>\n              queue[i].onComplete(\n                null,\n                true,\n                queue[i].currentOutputSnapshotResolved\n              )\n            );\n          }\n          queue[i].unwatcher();\n        }\n\n        // Now remove the completed transactions.\n        repoPruneCompletedTransactionsBelowNode(\n          repo,\n          treeSubTree(repo.transactionQueueTree_, path)\n        );\n        // There may be pending transactions that we can now send.\n        repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n\n        eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n\n        // Finally, trigger onComplete callbacks.\n        for (let i = 0; i < callbacks.length; i++) {\n          exceptionGuard(callbacks[i]);\n        }\n      } else {\n        // transactions are no longer sent.  Update their status appropriately.\n        if (status === 'datastale') {\n          for (let i = 0; i < queue.length; i++) {\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n              queue[i].status = TransactionStatus.NEEDS_ABORT;\n            } else {\n              queue[i].status = TransactionStatus.RUN;\n            }\n          }\n        } else {\n          warn(\n            'transaction at ' + pathToSend.toString() + ' failed: ' + status\n          );\n          for (let i = 0; i < queue.length; i++) {\n            queue[i].status = TransactionStatus.NEEDS_ABORT;\n            queue[i].abortReason = status;\n          }\n        }\n\n        repoRerunTransactions(repo, path);\n      }\n    },\n    latestHash\n  );\n}\n\n/**\n * Finds all transactions dependent on the data at changedPath and reruns them.\n *\n * Should be called any time cached data changes.\n *\n * Return the highest path that was affected by rerunning transactions. This\n * is the path at which events need to be raised for.\n *\n * @param changedPath - The path in mergedData that changed.\n * @returns The rootmost path that was affected by rerunning transactions.\n */\nfunction repoRerunTransactions(repo: Repo, changedPath: Path): Path {\n  const rootMostTransactionNode = repoGetAncestorTransactionNode(\n    repo,\n    changedPath\n  );\n  const path = treeGetPath(rootMostTransactionNode);\n\n  const queue = repoBuildTransactionQueue(repo, rootMostTransactionNode);\n  repoRerunTransactionQueue(repo, queue, path);\n\n  return path;\n}\n\n/**\n * Does all the work of rerunning transactions (as well as cleans up aborted\n * transactions and whatnot).\n *\n * @param queue - The queue of transactions to run.\n * @param path - The path the queue is for.\n */\nfunction repoRerunTransactionQueue(\n  repo: Repo,\n  queue: Transaction[],\n  path: Path\n): void {\n  if (queue.length === 0) {\n    return; // Nothing to do!\n  }\n\n  // Queue up the callbacks and fire them after cleaning up all of our\n  // transaction state, since the callback could trigger more transactions or\n  // sets.\n  const callbacks = [];\n  let events: Event[] = [];\n  // Ignore all of the sets we're going to re-run.\n  const txnsToRerun = queue.filter(q => {\n    return q.status === TransactionStatus.RUN;\n  });\n  const setsToIgnore = txnsToRerun.map(q => {\n    return q.currentWriteId;\n  });\n  for (let i = 0; i < queue.length; i++) {\n    const transaction = queue[i];\n    const relativePath = newRelativePath(path, transaction.path);\n    let abortTransaction = false,\n      abortReason;\n    assert(\n      relativePath !== null,\n      'rerunTransactionsUnderNode_: relativePath should not be null.'\n    );\n\n    if (transaction.status === TransactionStatus.NEEDS_ABORT) {\n      abortTransaction = true;\n      abortReason = transaction.abortReason;\n      events = events.concat(\n        syncTreeAckUserWrite(\n          repo.serverSyncTree_,\n          transaction.currentWriteId,\n          true\n        )\n      );\n    } else if (transaction.status === TransactionStatus.RUN) {\n      if (transaction.retryCount >= MAX_TRANSACTION_RETRIES) {\n        abortTransaction = true;\n        abortReason = 'maxretry';\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            transaction.currentWriteId,\n            true\n          )\n        );\n      } else {\n        // This code reruns a transaction\n        const currentNode = repoGetLatestState(\n          repo,\n          transaction.path,\n          setsToIgnore\n        );\n        transaction.currentInputSnapshot = currentNode;\n        const newData = queue[i].update(currentNode.val());\n        if (newData !== undefined) {\n          validateFirebaseData(\n            'transaction failed: Data returned ',\n            newData,\n            transaction.path\n          );\n          let newDataNode = nodeFromJSON(newData);\n          const hasExplicitPriority =\n            typeof newData === 'object' &&\n            newData != null &&\n            contains(newData, '.priority');\n          if (!hasExplicitPriority) {\n            // Keep the old priority if there wasn't a priority explicitly specified.\n            newDataNode = newDataNode.updatePriority(currentNode.getPriority());\n          }\n\n          const oldWriteId = transaction.currentWriteId;\n          const serverValues = repoGenerateServerValues(repo);\n          const newNodeResolved = resolveDeferredValueSnapshot(\n            newDataNode,\n            currentNode,\n            serverValues\n          );\n\n          transaction.currentOutputSnapshotRaw = newDataNode;\n          transaction.currentOutputSnapshotResolved = newNodeResolved;\n          transaction.currentWriteId = repoGetNextWriteId(repo);\n          // Mutates setsToIgnore in place\n          setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\n          events = events.concat(\n            syncTreeApplyUserOverwrite(\n              repo.serverSyncTree_,\n              transaction.path,\n              newNodeResolved,\n              transaction.currentWriteId,\n              transaction.applyLocally\n            )\n          );\n          events = events.concat(\n            syncTreeAckUserWrite(repo.serverSyncTree_, oldWriteId, true)\n          );\n        } else {\n          abortTransaction = true;\n          abortReason = 'nodata';\n          events = events.concat(\n            syncTreeAckUserWrite(\n              repo.serverSyncTree_,\n              transaction.currentWriteId,\n              true\n            )\n          );\n        }\n      }\n    }\n    eventQueueRaiseEventsForChangedPath(repo.eventQueue_, path, events);\n    events = [];\n    if (abortTransaction) {\n      // Abort.\n      queue[i].status = TransactionStatus.COMPLETED;\n\n      // Removing a listener can trigger pruning which can muck with\n      // mergedData/visibleData (as it prunes data). So defer the unwatcher\n      // until we're done.\n      (function (unwatcher) {\n        setTimeout(unwatcher, Math.floor(0));\n      })(queue[i].unwatcher);\n\n      if (queue[i].onComplete) {\n        if (abortReason === 'nodata') {\n          callbacks.push(() =>\n            queue[i].onComplete(null, false, queue[i].currentInputSnapshot)\n          );\n        } else {\n          callbacks.push(() =>\n            queue[i].onComplete(new Error(abortReason), false, null)\n          );\n        }\n      }\n    }\n  }\n\n  // Clean up completed transactions.\n  repoPruneCompletedTransactionsBelowNode(repo, repo.transactionQueueTree_);\n\n  // Now fire callbacks, now that we're in a good, known state.\n  for (let i = 0; i < callbacks.length; i++) {\n    exceptionGuard(callbacks[i]);\n  }\n\n  // Try to send the transaction result to the server.\n  repoSendReadyTransactions(repo, repo.transactionQueueTree_);\n}\n\n/**\n * Returns the rootmost ancestor node of the specified path that has a pending\n * transaction on it, or just returns the node for the given path if there are\n * no pending transactions on any ancestor.\n *\n * @param path - The location to start at.\n * @returns The rootmost node with a transaction.\n */\nfunction repoGetAncestorTransactionNode(\n  repo: Repo,\n  path: Path\n): Tree<Transaction[]> {\n  let front;\n\n  // Start at the root and walk deeper into the tree towards path until we\n  // find a node with pending transactions.\n  let transactionNode = repo.transactionQueueTree_;\n  front = pathGetFront(path);\n  while (front !== null && treeGetValue(transactionNode) === undefined) {\n    transactionNode = treeSubTree(transactionNode, front);\n    path = pathPopFront(path);\n    front = pathGetFront(path);\n  }\n\n  return transactionNode;\n}\n\n/**\n * Builds the queue of all transactions at or below the specified\n * transactionNode.\n *\n * @param transactionNode\n * @returns The generated queue.\n */\nfunction repoBuildTransactionQueue(\n  repo: Repo,\n  transactionNode: Tree<Transaction[]>\n): Transaction[] {\n  // Walk any child transaction queues and aggregate them into a single queue.\n  const transactionQueue: Transaction[] = [];\n  repoAggregateTransactionQueuesForNode(\n    repo,\n    transactionNode,\n    transactionQueue\n  );\n\n  // Sort them by the order the transactions were created.\n  transactionQueue.sort((a, b) => a.order - b.order);\n\n  return transactionQueue;\n}\n\nfunction repoAggregateTransactionQueuesForNode(\n  repo: Repo,\n  node: Tree<Transaction[]>,\n  queue: Transaction[]\n): void {\n  const nodeQueue = treeGetValue(node);\n  if (nodeQueue) {\n    for (let i = 0; i < nodeQueue.length; i++) {\n      queue.push(nodeQueue[i]);\n    }\n  }\n\n  treeForEachChild(node, child => {\n    repoAggregateTransactionQueuesForNode(repo, child, queue);\n  });\n}\n\n/**\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\n */\nfunction repoPruneCompletedTransactionsBelowNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    let to = 0;\n    for (let from = 0; from < queue.length; from++) {\n      if (queue[from].status !== TransactionStatus.COMPLETED) {\n        queue[to] = queue[from];\n        to++;\n      }\n    }\n    queue.length = to;\n    treeSetValue(node, queue.length > 0 ? queue : undefined);\n  }\n\n  treeForEachChild(node, childNode => {\n    repoPruneCompletedTransactionsBelowNode(repo, childNode);\n  });\n}\n\n/**\n * Aborts all transactions on ancestors or descendants of the specified path.\n * Called when doing a set() or update() since we consider them incompatible\n * with transactions.\n *\n * @param path - Path for which we want to abort related transactions.\n */\nfunction repoAbortTransactions(repo: Repo, path: Path): Path {\n  const affectedPath = treeGetPath(repoGetAncestorTransactionNode(repo, path));\n\n  const transactionNode = treeSubTree(repo.transactionQueueTree_, path);\n\n  treeForEachAncestor(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  repoAbortTransactionsOnNode(repo, transactionNode);\n\n  treeForEachDescendant(transactionNode, (node: Tree<Transaction[]>) => {\n    repoAbortTransactionsOnNode(repo, node);\n  });\n\n  return affectedPath;\n}\n\n/**\n * Abort transactions stored in this transaction queue node.\n *\n * @param node - Node to abort transactions for.\n */\nfunction repoAbortTransactionsOnNode(\n  repo: Repo,\n  node: Tree<Transaction[]>\n): void {\n  const queue = treeGetValue(node);\n  if (queue) {\n    // Queue up the callbacks and fire them after cleaning up all of our\n    // transaction state, since the callback could trigger more transactions\n    // or sets.\n    const callbacks = [];\n\n    // Go through queue.  Any already-sent transactions must be marked for\n    // abort, while the unsent ones can be immediately aborted and removed.\n    let events: Event[] = [];\n    let lastSent = -1;\n    for (let i = 0; i < queue.length; i++) {\n      if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\n        // Already marked.  No action needed.\n      } else if (queue[i].status === TransactionStatus.SENT) {\n        assert(\n          lastSent === i - 1,\n          'All SENT items should be at beginning of queue.'\n        );\n        lastSent = i;\n        // Mark transaction for abort when it comes back.\n        queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\n        queue[i].abortReason = 'set';\n      } else {\n        assert(\n          queue[i].status === TransactionStatus.RUN,\n          'Unexpected transaction status in abort'\n        );\n        // We can abort it immediately.\n        queue[i].unwatcher();\n        events = events.concat(\n          syncTreeAckUserWrite(\n            repo.serverSyncTree_,\n            queue[i].currentWriteId,\n            true\n          )\n        );\n        if (queue[i].onComplete) {\n          callbacks.push(\n            queue[i].onComplete.bind(null, new Error('set'), false, null)\n          );\n        }\n      }\n    }\n    if (lastSent === -1) {\n      // We're not waiting for any sent transactions.  We can clear the queue.\n      treeSetValue(node, undefined);\n    } else {\n      // Remove the transactions we aborted.\n      queue.length = lastSent + 1;\n    }\n\n    // Now fire the callbacks.\n    eventQueueRaiseEventsForChangedPath(\n      repo.eventQueue_,\n      treeGetPath(node),\n      events\n    );\n    for (let i = 0; i < callbacks.length; i++) {\n      exceptionGuard(callbacks[i]);\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { RepoInfo } from '../../RepoInfo';\nimport { Path } from '../Path';\nimport { warnIfPageIsSecure, warn, fatal } from '../util';\n\nfunction decodePath(pathString: string): string {\n  let pathStringDecoded = '';\n  const pieces = pathString.split('/');\n  for (let i = 0; i < pieces.length; i++) {\n    if (pieces[i].length > 0) {\n      let piece = pieces[i];\n      try {\n        piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\n      } catch (e) {}\n      pathStringDecoded += '/' + piece;\n    }\n  }\n  return pathStringDecoded;\n}\n\n/**\n * @returns key value hash\n */\nfunction decodeQuery(queryString: string): { [key: string]: string } {\n  const results = {};\n  if (queryString.charAt(0) === '?') {\n    queryString = queryString.substring(1);\n  }\n  for (const segment of queryString.split('&')) {\n    if (segment.length === 0) {\n      continue;\n    }\n    const kv = segment.split('=');\n    if (kv.length === 2) {\n      results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\n    } else {\n      warn(`Invalid query segment '${segment}' in query '${queryString}'`);\n    }\n  }\n  return results;\n}\n\nexport const parseRepoInfo = function (\n  dataURL: string,\n  nodeAdmin: boolean\n): { repoInfo: RepoInfo; path: Path } {\n  const parsedUrl = parseDatabaseURL(dataURL),\n    namespace = parsedUrl.namespace;\n\n  if (parsedUrl.domain === 'firebase.com') {\n    fatal(\n      parsedUrl.host +\n        ' is no longer supported. ' +\n        'Please use <YOUR FIREBASE>.firebaseio.com instead'\n    );\n  }\n\n  // Catch common error of uninitialized namespace value.\n  if (\n    (!namespace || namespace === 'undefined') &&\n    parsedUrl.domain !== 'localhost'\n  ) {\n    fatal(\n      'Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com'\n    );\n  }\n\n  if (!parsedUrl.secure) {\n    warnIfPageIsSecure();\n  }\n\n  const webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\n\n  return {\n    repoInfo: new RepoInfo(\n      parsedUrl.host,\n      parsedUrl.secure,\n      namespace,\n      webSocketOnly,\n      nodeAdmin,\n      /*persistenceKey=*/ '',\n      /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain\n    ),\n    path: new Path(parsedUrl.pathString)\n  };\n};\n\nexport const parseDatabaseURL = function (dataURL: string): {\n  host: string;\n  port: number;\n  domain: string;\n  subdomain: string;\n  secure: boolean;\n  scheme: string;\n  pathString: string;\n  namespace: string;\n} {\n  // Default to empty strings in the event of a malformed string.\n  let host = '',\n    domain = '',\n    subdomain = '',\n    pathString = '',\n    namespace = '';\n\n  // Always default to SSL, unless otherwise specified.\n  let secure = true,\n    scheme = 'https',\n    port = 443;\n\n  // Don't do any validation here. The caller is responsible for validating the result of parsing.\n  if (typeof dataURL === 'string') {\n    // Parse scheme.\n    let colonInd = dataURL.indexOf('//');\n    if (colonInd >= 0) {\n      scheme = dataURL.substring(0, colonInd - 1);\n      dataURL = dataURL.substring(colonInd + 2);\n    }\n\n    // Parse host, path, and query string.\n    let slashInd = dataURL.indexOf('/');\n    if (slashInd === -1) {\n      slashInd = dataURL.length;\n    }\n    let questionMarkInd = dataURL.indexOf('?');\n    if (questionMarkInd === -1) {\n      questionMarkInd = dataURL.length;\n    }\n    host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\n    if (slashInd < questionMarkInd) {\n      // For pathString, questionMarkInd will always come after slashInd\n      pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\n    }\n    const queryParams = decodeQuery(\n      dataURL.substring(Math.min(dataURL.length, questionMarkInd))\n    );\n\n    // If we have a port, use scheme for determining if it's secure.\n    colonInd = host.indexOf(':');\n    if (colonInd >= 0) {\n      secure = scheme === 'https' || scheme === 'wss';\n      port = parseInt(host.substring(colonInd + 1), 10);\n    } else {\n      colonInd = host.length;\n    }\n\n    const hostWithoutPort = host.slice(0, colonInd);\n    if (hostWithoutPort.toLowerCase() === 'localhost') {\n      domain = 'localhost';\n    } else if (hostWithoutPort.split('.').length <= 2) {\n      domain = hostWithoutPort;\n    } else {\n      // Interpret the subdomain of a 3 or more component URL as the namespace name.\n      const dotInd = host.indexOf('.');\n      subdomain = host.substring(0, dotInd).toLowerCase();\n      domain = host.substring(dotInd + 1);\n      // Normalize namespaces to lowercase to share storage / connection.\n      namespace = subdomain;\n    }\n    // Always treat the value of the `ns` as the namespace name if it is present.\n    if ('ns' in queryParams) {\n      namespace = queryParams['ns'];\n    }\n  }\n\n  return {\n    host,\n    port,\n    domain,\n    subdomain,\n    secure,\n    scheme,\n    pathString,\n    namespace\n  };\n};\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { stringify } from '@firebase/util';\n\nimport { DataSnapshot as ExpDataSnapshot } from '../../api/Reference_impl';\nimport { Path } from '../util/Path';\n\nimport { EventRegistration } from './EventRegistration';\n\n/**\n * Encapsulates the data needed to raise an event\n * @interface\n */\nexport interface Event {\n  getPath(): Path;\n\n  getEventType(): string;\n\n  getEventRunner(): () => void;\n\n  toString(): string;\n}\n\n/**\n * One of the following strings: \"value\", \"child_added\", \"child_changed\",\n * \"child_removed\", or \"child_moved.\"\n */\nexport type EventType =\n  | 'value'\n  | 'child_added'\n  | 'child_changed'\n  | 'child_moved'\n  | 'child_removed';\n\n/**\n * Encapsulates the data needed to raise an event\n */\nexport class DataEvent implements Event {\n  /**\n   * @param eventType - One of: value, child_added, child_changed, child_moved, child_removed\n   * @param eventRegistration - The function to call to with the event data. User provided\n   * @param snapshot - The data backing the event\n   * @param prevName - Optional, the name of the previous child for child_* events.\n   */\n  constructor(\n    public eventType: EventType,\n    public eventRegistration: EventRegistration,\n    public snapshot: ExpDataSnapshot,\n    public prevName?: string | null\n  ) {}\n  getPath(): Path {\n    const ref = this.snapshot.ref;\n    if (this.eventType === 'value') {\n      return ref._path;\n    } else {\n      return ref.parent._path;\n    }\n  }\n  getEventType(): string {\n    return this.eventType;\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return (\n      this.getPath().toString() +\n      ':' +\n      this.eventType +\n      ':' +\n      stringify(this.snapshot.exportVal())\n    );\n  }\n}\n\nexport class CancelEvent implements Event {\n  constructor(\n    public eventRegistration: EventRegistration,\n    public error: Error,\n    public path: Path\n  ) {}\n  getPath(): Path {\n    return this.path;\n  }\n  getEventType(): string {\n    return 'cancel';\n  }\n  getEventRunner(): () => void {\n    return this.eventRegistration.getEventRunner(this);\n  }\n  toString(): string {\n    return this.path.toString() + ':cancel';\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from '@firebase/util';\n\nimport { DataSnapshot } from '../../api/Reference_impl';\nimport { Repo } from '../Repo';\nimport { Path } from '../util/Path';\n\nimport { Change } from './Change';\nimport { CancelEvent, Event } from './Event';\nimport { QueryParams } from './QueryParams';\n\n/**\n * A user callback. Callbacks issues from the Legacy SDK maintain references\n * to the original user-issued callbacks, which allows equality\n * comparison by reference even though this callbacks are wrapped before\n * they can be passed to the firebase@exp SDK.\n *\n * @internal\n */\nexport interface UserCallback {\n  (dataSnapshot: DataSnapshot, previousChildName?: string | null): unknown;\n  userCallback?: unknown;\n  context?: object | null;\n}\n\n/**\n * A wrapper class that converts events from the database@exp SDK to the legacy\n * Database SDK. Events are not converted directly as event registration relies\n * on reference comparison of the original user callback (see `matches()`) and\n * relies on equality of the legacy SDK's `context` object.\n */\nexport class CallbackContext {\n  constructor(\n    private readonly snapshotCallback: UserCallback,\n    private readonly cancelCallback?: (error: Error) => unknown\n  ) {}\n\n  onValue(\n    expDataSnapshot: DataSnapshot,\n    previousChildName?: string | null\n  ): void {\n    this.snapshotCallback.call(null, expDataSnapshot, previousChildName);\n  }\n\n  onCancel(error: Error): void {\n    assert(\n      this.hasCancelCallback,\n      'Raising a cancel event on a listener with no cancel callback'\n    );\n    return this.cancelCallback.call(null, error);\n  }\n\n  get hasCancelCallback(): boolean {\n    return !!this.cancelCallback;\n  }\n\n  matches(other: CallbackContext): boolean {\n    return (\n      this.snapshotCallback === other.snapshotCallback ||\n      (this.snapshotCallback.userCallback !== undefined &&\n        this.snapshotCallback.userCallback ===\n          other.snapshotCallback.userCallback &&\n        this.snapshotCallback.context === other.snapshotCallback.context)\n    );\n  }\n}\n\nexport interface QueryContext {\n  readonly _queryIdentifier: string;\n  readonly _queryObject: object;\n  readonly _repo: Repo;\n  readonly _path: Path;\n  readonly _queryParams: QueryParams;\n}\n\n/**\n * An EventRegistration is basically an event type ('value', 'child_added', etc.) and a callback\n * to be notified of that type of event.\n *\n * That said, it can also contain a cancel callback to be notified if the event is canceled.  And\n * currently, this code is organized around the idea that you would register multiple child_ callbacks\n * together, as a single EventRegistration.  Though currently we don't do that.\n */\nexport interface EventRegistration {\n  /**\n   * True if this container has a callback to trigger for this event type\n   */\n  respondsTo(eventType: string): boolean;\n\n  createEvent(change: Change, query: QueryContext): Event;\n\n  /**\n   * Given event data, return a function to trigger the user's callback\n   */\n  getEventRunner(eventData: Event): () => void;\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null;\n\n  matches(other: EventRegistration): boolean;\n\n  /**\n   * False basically means this is a \"dummy\" callback container being used as a sentinel\n   * to remove all callback containers of a particular type.  (e.g. if the user does\n   * ref.off('value') without specifying a specific callback).\n   *\n   * (TODO: Rework this, since it's hacky)\n   *\n   */\n  hasAnyCallback(): boolean;\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoOnDisconnectCancel,\n  repoOnDisconnectSet,\n  repoOnDisconnectSetWithPriority,\n  repoOnDisconnectUpdate\n} from '../core/Repo';\nimport { Path } from '../core/util/Path';\nimport {\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validatePriority,\n  validateWritablePath\n} from '../core/util/validation';\n\n/**\n * The `onDisconnect` class allows you to write or clear data when your client\n * disconnects from the Database server. These updates occur whether your\n * client disconnects cleanly or not, so you can rely on them to clean up data\n * even if a connection is dropped or a client crashes.\n *\n * The `onDisconnect` class is most commonly used to manage presence in\n * applications where it is useful to detect how many clients are connected and\n * when other clients disconnect. See\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information.\n *\n * To avoid problems when a connection is dropped before the requests can be\n * transferred to the Database server, these functions should be called before\n * writing any data.\n *\n * Note that `onDisconnect` operations are only triggered once. If you want an\n * operation to occur each time a disconnect occurs, you'll need to re-establish\n * the `onDisconnect` operations each time you reconnect.\n */\nexport class OnDisconnect {\n  /** @hideconstructor */\n  constructor(private _repo: Repo, private _path: Path) {}\n\n  /**\n   * Cancels all previously queued `onDisconnect()` set or update events for this\n   * location and all children.\n   *\n   * If a write has been queued for this location via a `set()` or `update()` at a\n   * parent location, the write at this location will be canceled, though writes\n   * to sibling locations will still occur.\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  cancel(): Promise<void> {\n    const deferred = new Deferred<void>();\n    repoOnDisconnectCancel(\n      this._repo,\n      this._path,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is deleted when the client is disconnected\n   * (due to closing the browser, navigating to a new page, or network issues).\n   *\n   * @returns Resolves when synchronization to the server is complete.\n   */\n  remove(): Promise<void> {\n    validateWritablePath('OnDisconnect.remove', this._path);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      null,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value when the\n   * client is disconnected (due to closing the browser, navigating to a new page,\n   * or network issues).\n   *\n   * `set()` is especially useful for implementing \"presence\" systems, where a\n   * value should be changed or cleared when a user disconnects so that they\n   * appear \"offline\" to other users. See\n   * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n   * for more information.\n   *\n   * Note that `onDisconnect` operations are only triggered once. If you want an\n   * operation to occur each time a disconnect occurs, you'll need to re-establish\n   * the `onDisconnect` operations each time.\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  set(value: unknown): Promise<void> {\n    validateWritablePath('OnDisconnect.set', this._path);\n    validateFirebaseDataArg('OnDisconnect.set', value, this._path, false);\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSet(\n      this._repo,\n      this._path,\n      value,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Ensures the data at this location is set to the specified value and priority\n   * when the client is disconnected (due to closing the browser, navigating to a\n   * new page, or network issues).\n   *\n   * @param value - The value to be written to this location on disconnect (can\n   * be an object, array, string, number, boolean, or null).\n   * @param priority - The priority to be written (string, number, or null).\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  setWithPriority(\n    value: unknown,\n    priority: number | string | null\n  ): Promise<void> {\n    validateWritablePath('OnDisconnect.setWithPriority', this._path);\n    validateFirebaseDataArg(\n      'OnDisconnect.setWithPriority',\n      value,\n      this._path,\n      false\n    );\n    validatePriority('OnDisconnect.setWithPriority', priority, false);\n\n    const deferred = new Deferred<void>();\n    repoOnDisconnectSetWithPriority(\n      this._repo,\n      this._path,\n      value,\n      priority,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n\n  /**\n   * Writes multiple values at this location when the client is disconnected (due\n   * to closing the browser, navigating to a new page, or network issues).\n   *\n   * The `values` argument contains multiple property-value pairs that will be\n   * written to the Database together. Each child property can either be a simple\n   * property (for example, \"name\") or a relative path (for example, \"name/first\")\n   * from the current location to the data to update.\n   *\n   * As opposed to the `set()` method, `update()` can be use to selectively update\n   * only the referenced properties at the current location (instead of replacing\n   * all the child properties at the current location).\n   *\n   * @param values - Object containing multiple values.\n   * @returns Resolves when synchronization to the Database is complete.\n   */\n  update(values: object): Promise<void> {\n    validateWritablePath('OnDisconnect.update', this._path);\n    validateFirebaseMergeDataArg(\n      'OnDisconnect.update',\n      values,\n      this._path,\n      false\n    );\n    const deferred = new Deferred<void>();\n    repoOnDisconnectUpdate(\n      this._repo,\n      this._path,\n      values as Record<string, unknown>,\n      deferred.wrapCallback(() => {})\n    );\n    return deferred.promise;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert, getModularInstance, Deferred } from '@firebase/util';\n\nimport {\n  Repo,\n  repoAddEventCallbackForQuery,\n  repoGetValue,\n  repoRemoveEventCallbackForQuery,\n  repoServerTime,\n  repoSetWithPriority,\n  repoUpdate\n} from '../core/Repo';\nimport { ChildrenNode } from '../core/snap/ChildrenNode';\nimport { Index } from '../core/snap/indexes/Index';\nimport { KEY_INDEX } from '../core/snap/indexes/KeyIndex';\nimport { PathIndex } from '../core/snap/indexes/PathIndex';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { VALUE_INDEX } from '../core/snap/indexes/ValueIndex';\nimport { Node } from '../core/snap/Node';\nimport { syncPointSetReferenceConstructor } from '../core/SyncPoint';\nimport { syncTreeSetReferenceConstructor } from '../core/SyncTree';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { nextPushId } from '../core/util/NextPushId';\nimport {\n  Path,\n  pathChild,\n  pathEquals,\n  pathGetBack,\n  pathGetFront,\n  pathIsEmpty,\n  pathParent,\n  pathToUrlEncodedString\n} from '../core/util/Path';\nimport {\n  fatal,\n  MAX_NAME,\n  MIN_NAME,\n  ObjectToUniqueKey\n} from '../core/util/util';\nimport {\n  isValidPriority,\n  validateFirebaseDataArg,\n  validateFirebaseMergeDataArg,\n  validateKey,\n  validatePathString,\n  validatePriority,\n  validateRootPathString,\n  validateUrl,\n  validateWritablePath\n} from '../core/util/validation';\nimport { Change } from '../core/view/Change';\nimport { CancelEvent, DataEvent, EventType } from '../core/view/Event';\nimport {\n  CallbackContext,\n  EventRegistration,\n  QueryContext,\n  UserCallback\n} from '../core/view/EventRegistration';\nimport {\n  QueryParams,\n  queryParamsEndAt,\n  queryParamsEndBefore,\n  queryParamsGetQueryObject,\n  queryParamsLimitToFirst,\n  queryParamsLimitToLast,\n  queryParamsOrderBy,\n  queryParamsStartAfter,\n  queryParamsStartAt\n} from '../core/view/QueryParams';\n\nimport { Database } from './Database';\nimport { OnDisconnect } from './OnDisconnect';\nimport {\n  ListenOptions,\n  Query as Query,\n  DatabaseReference,\n  Unsubscribe,\n  ThenableReference\n} from './Reference';\n\n/**\n * @internal\n */\nexport class QueryImpl implements Query, QueryContext {\n  /**\n   * @hideconstructor\n   */\n  constructor(\n    readonly _repo: Repo,\n    readonly _path: Path,\n    readonly _queryParams: QueryParams,\n    readonly _orderByCalled: boolean\n  ) {}\n\n  get key(): string | null {\n    if (pathIsEmpty(this._path)) {\n      return null;\n    } else {\n      return pathGetBack(this._path);\n    }\n  }\n\n  get ref(): DatabaseReference {\n    return new ReferenceImpl(this._repo, this._path);\n  }\n\n  get _queryIdentifier(): string {\n    const obj = queryParamsGetQueryObject(this._queryParams);\n    const id = ObjectToUniqueKey(obj);\n    return id === '{}' ? 'default' : id;\n  }\n\n  /**\n   * An object representation of the query parameters used by this Query.\n   */\n  get _queryObject(): object {\n    return queryParamsGetQueryObject(this._queryParams);\n  }\n\n  isEqual(other: QueryImpl | null): boolean {\n    other = getModularInstance(other);\n    if (!(other instanceof QueryImpl)) {\n      return false;\n    }\n\n    const sameRepo = this._repo === other._repo;\n    const samePath = pathEquals(this._path, other._path);\n    const sameQueryIdentifier =\n      this._queryIdentifier === other._queryIdentifier;\n\n    return sameRepo && samePath && sameQueryIdentifier;\n  }\n\n  toJSON(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return this._repo.toString() + pathToUrlEncodedString(this._path);\n  }\n}\n\n/**\n * Validates that no other order by call has been made\n */\nfunction validateNoPreviousOrderByCall(query: QueryImpl, fnName: string) {\n  if (query._orderByCalled === true) {\n    throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\n  }\n}\n\n/**\n * Validates start/end values for queries.\n */\nfunction validateQueryEndpoints(params: QueryParams) {\n  let startNode = null;\n  let endNode = null;\n  if (params.hasStart()) {\n    startNode = params.getIndexStartValue();\n  }\n  if (params.hasEnd()) {\n    endNode = params.getIndexEndValue();\n  }\n\n  if (params.getIndex() === KEY_INDEX) {\n    const tooManyArgsError =\n      'Query: When ordering by key, you may only pass one argument to ' +\n      'startAt(), endAt(), or equalTo().';\n    const wrongArgTypeError =\n      'Query: When ordering by key, the argument passed to startAt(), startAfter(), ' +\n      'endAt(), endBefore(), or equalTo() must be a string.';\n    if (params.hasStart()) {\n      const startName = params.getIndexStartName();\n      if (startName !== MIN_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof startNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n    if (params.hasEnd()) {\n      const endName = params.getIndexEndName();\n      if (endName !== MAX_NAME) {\n        throw new Error(tooManyArgsError);\n      } else if (typeof endNode !== 'string') {\n        throw new Error(wrongArgTypeError);\n      }\n    }\n  } else if (params.getIndex() === PRIORITY_INDEX) {\n    if (\n      (startNode != null && !isValidPriority(startNode)) ||\n      (endNode != null && !isValidPriority(endNode))\n    ) {\n      throw new Error(\n        'Query: When ordering by priority, the first argument passed to startAt(), ' +\n          'startAfter() endAt(), endBefore(), or equalTo() must be a valid priority value ' +\n          '(null, a number, or a string).'\n      );\n    }\n  } else {\n    assert(\n      params.getIndex() instanceof PathIndex ||\n        params.getIndex() === VALUE_INDEX,\n      'unknown index type.'\n    );\n    if (\n      (startNode != null && typeof startNode === 'object') ||\n      (endNode != null && typeof endNode === 'object')\n    ) {\n      throw new Error(\n        'Query: First argument passed to startAt(), startAfter(), endAt(), endBefore(), or ' +\n          'equalTo() cannot be an object.'\n      );\n    }\n  }\n}\n\n/**\n * Validates that limit* has been called with the correct combination of parameters\n */\nfunction validateLimit(params: QueryParams) {\n  if (\n    params.hasStart() &&\n    params.hasEnd() &&\n    params.hasLimit() &&\n    !params.hasAnchoredLimit()\n  ) {\n    throw new Error(\n      \"Query: Can't combine startAt(), startAfter(), endAt(), endBefore(), and limit(). Use \" +\n        'limitToFirst() or limitToLast() instead.'\n    );\n  }\n}\n\n/**\n * @internal\n */\nexport class ReferenceImpl extends QueryImpl implements DatabaseReference {\n  /** @hideconstructor */\n  constructor(repo: Repo, path: Path) {\n    super(repo, path, new QueryParams(), false);\n  }\n\n  get parent(): ReferenceImpl | null {\n    const parentPath = pathParent(this._path);\n    return parentPath === null\n      ? null\n      : new ReferenceImpl(this._repo, parentPath);\n  }\n\n  get root(): ReferenceImpl {\n    let ref: ReferenceImpl = this;\n    while (ref.parent !== null) {\n      ref = ref.parent;\n    }\n    return ref;\n  }\n}\n\n/**\n * A `DataSnapshot` contains data from a Database location.\n *\n * Any time you read data from the Database, you receive the data as a\n * `DataSnapshot`. A `DataSnapshot` is passed to the event callbacks you attach\n * with `on()` or `once()`. You can extract the contents of the snapshot as a\n * JavaScript object by calling the `val()` method. Alternatively, you can\n * traverse into the snapshot by calling `child()` to return child snapshots\n * (which you could then call `val()` on).\n *\n * A `DataSnapshot` is an efficiently generated, immutable copy of the data at\n * a Database location. It cannot be modified and will never change (to modify\n * data, you always call the `set()` method on a `Reference` directly).\n */\nexport class DataSnapshot {\n  /**\n   * @param _node - A SnapshotNode to wrap.\n   * @param ref - The location this snapshot came from.\n   * @param _index - The iteration order for this snapshot\n   * @hideconstructor\n   */\n  constructor(\n    readonly _node: Node,\n    /**\n     * The location of this DataSnapshot.\n     */\n    readonly ref: DatabaseReference,\n    readonly _index: Index\n  ) {}\n\n  /**\n   * Gets the priority value of the data in this `DataSnapshot`.\n   *\n   * Applications need not use priority but can order collections by\n   * ordinary properties (see\n   * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data |Sorting and filtering data}\n   * ).\n   */\n  get priority(): string | number | null {\n    // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\n    return this._node.getPriority().val() as string | number | null;\n  }\n\n  /**\n   * The key (last part of the path) of the location of this `DataSnapshot`.\n   *\n   * The last token in a Database location is considered its key. For example,\n   * \"ada\" is the key for the /users/ada/ node. Accessing the key on any\n   * `DataSnapshot` will return the key for the location that generated it.\n   * However, accessing the key on the root URL of a Database will return\n   * `null`.\n   */\n  get key(): string | null {\n    return this.ref.key;\n  }\n\n  /** Returns the number of child properties of this `DataSnapshot`. */\n  get size(): number {\n    return this._node.numChildren();\n  }\n\n  /**\n   * Gets another `DataSnapshot` for the location at the specified relative path.\n   *\n   * Passing a relative path to the `child()` method of a DataSnapshot returns\n   * another `DataSnapshot` for the location at the specified relative path. The\n   * relative path can either be a simple child name (for example, \"ada\") or a\n   * deeper, slash-separated path (for example, \"ada/name/first\"). If the child\n   * location has no data, an empty `DataSnapshot` (that is, a `DataSnapshot`\n   * whose value is `null`) is returned.\n   *\n   * @param path - A relative path to the location of child data.\n   */\n  child(path: string): DataSnapshot {\n    const childPath = new Path(path);\n    const childRef = child(this.ref, path);\n    return new DataSnapshot(\n      this._node.getChild(childPath),\n      childRef,\n      PRIORITY_INDEX\n    );\n  }\n  /**\n   * Returns true if this `DataSnapshot` contains any data. It is slightly more\n   * efficient than using `snapshot.val() !== null`.\n   */\n  exists(): boolean {\n    return !this._node.isEmpty();\n  }\n\n  /**\n   * Exports the entire contents of the DataSnapshot as a JavaScript object.\n   *\n   * The `exportVal()` method is similar to `val()`, except priority information\n   * is included (if available), making it suitable for backing up your data.\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  exportVal(): any {\n    return this._node.val(true);\n  }\n\n  /**\n   * Enumerates the top-level children in the `DataSnapshot`.\n   *\n   * Because of the way JavaScript objects work, the ordering of data in the\n   * JavaScript object returned by `val()` is not guaranteed to match the\n   * ordering on the server nor the ordering of `onChildAdded()` events. That is\n   * where `forEach()` comes in handy. It guarantees the children of a\n   * `DataSnapshot` will be iterated in their query order.\n   *\n   * If no explicit `orderBy*()` method is used, results are returned\n   * ordered by key (unless priorities are used, in which case, results are\n   * returned by priority).\n   *\n   * @param action - A function that will be called for each child DataSnapshot.\n   * The callback can return true to cancel further enumeration.\n   * @returns true if enumeration was canceled due to your callback returning\n   * true.\n   */\n  forEach(action: (child: DataSnapshot) => boolean | void): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    }\n\n    const childrenNode = this._node as ChildrenNode;\n    // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\n    return !!childrenNode.forEachChild(this._index, (key, node) => {\n      return action(\n        new DataSnapshot(node, child(this.ref, key), PRIORITY_INDEX)\n      );\n    });\n  }\n\n  /**\n   * Returns true if the specified child path has (non-null) data.\n   *\n   * @param path - A relative path to the location of a potential child.\n   * @returns `true` if data exists at the specified child path; else\n   *  `false`.\n   */\n  hasChild(path: string): boolean {\n    const childPath = new Path(path);\n    return !this._node.getChild(childPath).isEmpty();\n  }\n\n  /**\n   * Returns whether or not the `DataSnapshot` has any non-`null` child\n   * properties.\n   *\n   * You can use `hasChildren()` to determine if a `DataSnapshot` has any\n   * children. If it does, you can enumerate them using `forEach()`. If it\n   * doesn't, then either this snapshot contains a primitive value (which can be\n   * retrieved with `val()`) or it is empty (in which case, `val()` will return\n   * `null`).\n   *\n   * @returns true if this snapshot has any children; else false.\n   */\n  hasChildren(): boolean {\n    if (this._node.isLeafNode()) {\n      return false;\n    } else {\n      return !this._node.isEmpty();\n    }\n  }\n\n  /**\n   * Returns a JSON-serializable representation of this object.\n   */\n  toJSON(): object | null {\n    return this.exportVal();\n  }\n\n  /**\n   * Extracts a JavaScript value from a `DataSnapshot`.\n   *\n   * Depending on the data in a `DataSnapshot`, the `val()` method may return a\n   * scalar type (string, number, or boolean), an array, or an object. It may\n   * also return null, indicating that the `DataSnapshot` is empty (contains no\n   * data).\n   *\n   * @returns The DataSnapshot's contents as a JavaScript value (Object,\n   *   Array, string, number, boolean, or `null`).\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  val(): any {\n    return this._node.val();\n  }\n}\n/**\n *\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided path. If no path is provided, the `Reference`\n * will point to the root of the Database.\n *\n * @param db - The database instance to obtain a reference for.\n * @param path - Optional path representing the location the returned\n *   `Reference` will point. If not provided, the returned `Reference` will\n *   point to the root of the Database.\n * @returns If a path is provided, a `Reference`\n *   pointing to the provided path. Otherwise, a `Reference` pointing to the\n *   root of the Database.\n */\nexport function ref(db: Database, path?: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('ref');\n  return path !== undefined ? child(db._root, path) : db._root;\n}\n\n/**\n * Returns a `Reference` representing the location in the Database\n * corresponding to the provided Firebase URL.\n *\n * An exception is thrown if the URL is not a valid Firebase Database URL or it\n * has a different domain than the current `Database` instance.\n *\n * Note that all query parameters (`orderBy`, `limitToLast`, etc.) are ignored\n * and are not applied to the returned `Reference`.\n *\n * @param db - The database instance to obtain a reference for.\n * @param url - The Firebase URL at which the returned `Reference` will\n *   point.\n * @returns A `Reference` pointing to the provided\n *   Firebase URL.\n */\nexport function refFromURL(db: Database, url: string): DatabaseReference {\n  db = getModularInstance(db);\n  db._checkNotDeleted('refFromURL');\n  const parsedURL = parseRepoInfo(url, db._repo.repoInfo_.nodeAdmin);\n  validateUrl('refFromURL', parsedURL);\n\n  const repoInfo = parsedURL.repoInfo;\n  if (\n    !db._repo.repoInfo_.isCustomHost() &&\n    repoInfo.host !== db._repo.repoInfo_.host\n  ) {\n    fatal(\n      'refFromURL' +\n        ': Host name does not match the current database: ' +\n        '(found ' +\n        repoInfo.host +\n        ' but expected ' +\n        db._repo.repoInfo_.host +\n        ')'\n    );\n  }\n\n  return ref(db, parsedURL.path.toString());\n}\n\n/**\n * Gets a `Reference` for the location at the specified relative path.\n *\n * The relative path can either be a simple child name (for example, \"ada\") or\n * a deeper slash-separated path (for example, \"ada/name/first\").\n *\n * @param parent - The parent location.\n * @param path - A relative path from this location to the desired child\n *   location.\n * @returns The specified child location.\n */\nexport function child(\n  parent: DatabaseReference,\n  path: string\n): DatabaseReference {\n  parent = getModularInstance(parent);\n  if (pathGetFront(parent._path) === null) {\n    validateRootPathString('child', 'path', path, false);\n  } else {\n    validatePathString('child', 'path', path, false);\n  }\n  return new ReferenceImpl(parent._repo, pathChild(parent._path, path));\n}\n\n/**\n * Returns an `OnDisconnect` object - see\n * {@link https://firebase.google.com/docs/database/web/offline-capabilities | Enabling Offline Capabilities in JavaScript}\n * for more information on how to use it.\n *\n * @param ref - The reference to add OnDisconnect triggers for.\n */\nexport function onDisconnect(ref: DatabaseReference): OnDisconnect {\n  ref = getModularInstance(ref) as ReferenceImpl;\n  return new OnDisconnect(ref._repo, ref._path);\n}\n\nexport interface ThenableReferenceImpl\n  extends ReferenceImpl,\n    Pick<Promise<ReferenceImpl>, 'then' | 'catch'> {}\n\n/**\n * Generates a new child location using a unique key and returns its\n * `Reference`.\n *\n * This is the most common pattern for adding data to a collection of items.\n *\n * If you provide a value to `push()`, the value is written to the\n * generated location. If you don't pass a value, nothing is written to the\n * database and the child remains empty (but you can use the `Reference`\n * elsewhere).\n *\n * The unique keys generated by `push()` are ordered by the current time, so the\n * resulting list of items is chronologically sorted. The keys are also\n * designed to be unguessable (they contain 72 random bits of entropy).\n *\n * See {@link https://firebase.google.com/docs/database/web/lists-of-data#append_to_a_list_of_data | Append to a list of data}\n * </br>See {@link ttps://firebase.googleblog.com/2015/02/the-2120-ways-to-ensure-unique_68.html | The 2^120 Ways to Ensure Unique Identifiers}\n *\n * @param parent - The parent location.\n * @param value - Optional value to be written at the generated location.\n * @returns Combined `Promise` and `Reference`; resolves when write is complete,\n * but can be used immediately as the `Reference` to the child location.\n */\nexport function push(\n  parent: DatabaseReference,\n  value?: unknown\n): ThenableReference {\n  parent = getModularInstance(parent);\n  validateWritablePath('push', parent._path);\n  validateFirebaseDataArg('push', value, parent._path, true);\n  const now = repoServerTime(parent._repo);\n  const name = nextPushId(now);\n\n  // push() returns a ThennableReference whose promise is fulfilled with a\n  // regular Reference. We use child() to create handles to two different\n  // references. The first is turned into a ThennableReference below by adding\n  // then() and catch() methods and is used as the return value of push(). The\n  // second remains a regular Reference and is used as the fulfilled value of\n  // the first ThennableReference.\n  const thennablePushRef: Partial<ThenableReferenceImpl> = child(\n    parent,\n    name\n  ) as ReferenceImpl;\n  const pushRef = child(parent, name) as ReferenceImpl;\n\n  let promise: Promise<ReferenceImpl>;\n  if (value != null) {\n    promise = set(pushRef, value).then(() => pushRef);\n  } else {\n    promise = Promise.resolve(pushRef);\n  }\n\n  thennablePushRef.then = promise.then.bind(promise);\n  thennablePushRef.catch = promise.then.bind(promise, undefined);\n  return thennablePushRef as ThenableReferenceImpl;\n}\n\n/**\n * Removes the data at this Database location.\n *\n * Any data at child locations will also be deleted.\n *\n * The effect of the remove will be visible immediately and the corresponding\n * event 'value' will be triggered. Synchronization of the remove to the\n * Firebase servers will also be started, and the returned Promise will resolve\n * when complete. If provided, the onComplete callback will be called\n * asynchronously after synchronization has finished.\n *\n * @param ref - The location to remove.\n * @returns Resolves when remove on server is complete.\n */\nexport function remove(ref: DatabaseReference): Promise<void> {\n  validateWritablePath('remove', ref._path);\n  return set(ref, null);\n}\n\n/**\n * Writes data to this Database location.\n *\n * This will overwrite any data at this location and all child locations.\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events (\"value\", \"child_added\", etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * Passing `null` for the new value is equivalent to calling `remove()`; namely,\n * all data at this location and all child locations will be deleted.\n *\n * `set()` will remove any priority stored at this location, so if priority is\n * meant to be preserved, you need to use `setWithPriority()` instead.\n *\n * Note that modifying data with `set()` will cancel any pending transactions\n * at that location, so extreme care should be taken if mixing `set()` and\n * `transaction()` to modify the same data.\n *\n * A single `set()` will generate a single \"value\" event at the location where\n * the `set()` was performed.\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function set(ref: DatabaseReference, value: unknown): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('set', ref._path);\n  validateFirebaseDataArg('set', value, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    /*priority=*/ null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Sets a priority for the data at this Database location.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setPriority(\n  ref: DatabaseReference,\n  priority: string | number | null\n): Promise<void> {\n  ref = getModularInstance(ref);\n  validateWritablePath('setPriority', ref._path);\n  validatePriority('setPriority', priority, false);\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    pathChild(ref._path, '.priority'),\n    priority,\n    null,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes data the Database location. Like `set()` but also specifies the\n * priority for that data.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sorting_and_filtering_data | Sorting and filtering data}\n * ).\n *\n * @param ref - The location to write to.\n * @param value - The value to be written (string, number, boolean, object,\n *   array, or null).\n * @param priority - The priority to be written (string, number, or null).\n * @returns Resolves when write to server is complete.\n */\nexport function setWithPriority(\n  ref: DatabaseReference,\n  value: unknown,\n  priority: string | number | null\n): Promise<void> {\n  validateWritablePath('setWithPriority', ref._path);\n  validateFirebaseDataArg('setWithPriority', value, ref._path, false);\n  validatePriority('setWithPriority', priority, false);\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw 'setWithPriority failed: ' + ref.key + ' is a read-only object.';\n  }\n\n  const deferred = new Deferred<void>();\n  repoSetWithPriority(\n    ref._repo,\n    ref._path,\n    value,\n    priority,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Writes multiple values to the Database at once.\n *\n * The `values` argument contains multiple property-value pairs that will be\n * written to the Database together. Each child property can either be a simple\n * property (for example, \"name\") or a relative path (for example,\n * \"name/first\") from the current location to the data to update.\n *\n * As opposed to the `set()` method, `update()` can be use to selectively update\n * only the referenced properties at the current location (instead of replacing\n * all the child properties at the current location).\n *\n * The effect of the write will be visible immediately, and the corresponding\n * events ('value', 'child_added', etc.) will be triggered. Synchronization of\n * the data to the Firebase servers will also be started, and the returned\n * Promise will resolve when complete. If provided, the `onComplete` callback\n * will be called asynchronously after synchronization has finished.\n *\n * A single `update()` will generate a single \"value\" event at the location\n * where the `update()` was performed, regardless of how many children were\n * modified.\n *\n * Note that modifying data with `update()` will cancel any pending\n * transactions at that location, so extreme care should be taken if mixing\n * `update()` and `transaction()` to modify the same data.\n *\n * Passing `null` to `update()` will remove the data at this location.\n *\n * See\n * {@link https://firebase.googleblog.com/2015/09/introducing-multi-location-updates-and_86.html | Introducing multi-location updates and more}.\n *\n * @param ref - The location to write to.\n * @param values - Object containing multiple values.\n * @returns Resolves when update on server is complete.\n */\nexport function update(ref: DatabaseReference, values: object): Promise<void> {\n  validateFirebaseMergeDataArg('update', values, ref._path, false);\n  const deferred = new Deferred<void>();\n  repoUpdate(\n    ref._repo,\n    ref._path,\n    values as Record<string, unknown>,\n    deferred.wrapCallback(() => {})\n  );\n  return deferred.promise;\n}\n\n/**\n * Gets the most up-to-date result for this query.\n *\n * @param query - The query to run.\n * @returns A `Promise` which resolves to the resulting DataSnapshot if a value is\n * available, or rejects if the client is unable to return a value (e.g., if the\n * server is unreachable and there is nothing cached).\n */\nexport function get(query: Query): Promise<DataSnapshot> {\n  query = getModularInstance(query) as QueryImpl;\n  return repoGetValue(query._repo, query).then(node => {\n    return new DataSnapshot(\n      node,\n      new ReferenceImpl(query._repo, query._path),\n      query._queryParams.getIndex()\n    );\n  });\n}\n\n/**\n * Represents registration for 'value' events.\n */\nexport class ValueEventRegistration implements EventRegistration {\n  constructor(private callbackContext: CallbackContext) {}\n\n  respondsTo(eventType: string): boolean {\n    return eventType === 'value';\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      'value',\n      this,\n      new DataSnapshot(\n        change.snapshotNode,\n        new ReferenceImpl(query._repo, query._path),\n        index\n      )\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue((eventData as DataEvent).snapshot, null);\n    }\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (!(other instanceof ValueEventRegistration)) {\n      return false;\n    } else if (!other.callbackContext || !this.callbackContext) {\n      // If no callback specified, we consider it to match any callback.\n      return true;\n    } else {\n      return other.callbackContext.matches(this.callbackContext);\n    }\n  }\n\n  hasAnyCallback(): boolean {\n    return this.callbackContext !== null;\n  }\n}\n\n/**\n * Represents the registration of a child_x event.\n */\nexport class ChildEventRegistration implements EventRegistration {\n  constructor(\n    private eventType: string,\n    private callbackContext: CallbackContext | null\n  ) {}\n\n  respondsTo(eventType: string): boolean {\n    let eventToCheck =\n      eventType === 'children_added' ? 'child_added' : eventType;\n    eventToCheck =\n      eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\n    return this.eventType === eventToCheck;\n  }\n\n  createCancelEvent(error: Error, path: Path): CancelEvent | null {\n    if (this.callbackContext.hasCancelCallback) {\n      return new CancelEvent(this, error, path);\n    } else {\n      return null;\n    }\n  }\n\n  createEvent(change: Change, query: QueryContext): DataEvent {\n    assert(change.childName != null, 'Child events should have a childName.');\n    const childRef = child(\n      new ReferenceImpl(query._repo, query._path),\n      change.childName\n    );\n    const index = query._queryParams.getIndex();\n    return new DataEvent(\n      change.type as EventType,\n      this,\n      new DataSnapshot(change.snapshotNode, childRef, index),\n      change.prevName\n    );\n  }\n\n  getEventRunner(eventData: CancelEvent | DataEvent): () => void {\n    if (eventData.getEventType() === 'cancel') {\n      return () =>\n        this.callbackContext.onCancel((eventData as CancelEvent).error);\n    } else {\n      return () =>\n        this.callbackContext.onValue(\n          (eventData as DataEvent).snapshot,\n          (eventData as DataEvent).prevName\n        );\n    }\n  }\n\n  matches(other: EventRegistration): boolean {\n    if (other instanceof ChildEventRegistration) {\n      return (\n        this.eventType === other.eventType &&\n        (!this.callbackContext ||\n          !other.callbackContext ||\n          this.callbackContext.matches(other.callbackContext))\n      );\n    }\n\n    return false;\n  }\n\n  hasAnyCallback(): boolean {\n    return !!this.callbackContext;\n  }\n}\n\nfunction addEventListener(\n  query: Query,\n  eventType: EventType,\n  callback: UserCallback,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n) {\n  let cancelCallback: ((error: Error) => unknown) | undefined;\n  if (typeof cancelCallbackOrListenOptions === 'object') {\n    cancelCallback = undefined;\n    options = cancelCallbackOrListenOptions;\n  }\n  if (typeof cancelCallbackOrListenOptions === 'function') {\n    cancelCallback = cancelCallbackOrListenOptions;\n  }\n\n  if (options && options.onlyOnce) {\n    const userCallback = callback;\n    const onceCallback: UserCallback = (dataSnapshot, previousChildName) => {\n      repoRemoveEventCallbackForQuery(query._repo, query, container);\n      userCallback(dataSnapshot, previousChildName);\n    };\n    onceCallback.userCallback = callback.userCallback;\n    onceCallback.context = callback.context;\n    callback = onceCallback;\n  }\n\n  const callbackContext = new CallbackContext(\n    callback,\n    cancelCallback || undefined\n  );\n  const container =\n    eventType === 'value'\n      ? new ValueEventRegistration(callbackContext)\n      : new ChildEventRegistration(eventType, callbackContext);\n  repoAddEventCallbackForQuery(query._repo, query, container);\n  return () => repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onValue` event will trigger once with the initial data stored at this\n * location, and then trigger again each time the data changes. The\n * `DataSnapshot` passed to the callback will be for the location at which\n * `on()` was called. It won't trigger until the entire contents has been\n * synchronized. If the location has no data, it will be triggered with an empty\n * `DataSnapshot` (`val()` will return `null`).\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs. The\n * callback will be passed a DataSnapshot.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onValue(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'value',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildAdded` event will be triggered once for each initial child at this\n * location, and it will be triggered again every time a new child is added. The\n * `DataSnapshot` passed into the callback will reflect the data for the\n * relevant child. For ordering purposes, it is passed a second argument which\n * is a string containing the key of the previous sibling child by sort order,\n * or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildAdded(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_added',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildChanged` event will be triggered when the data stored in a child\n * (or any of its descendants) changes. Note that a single `child_changed` event\n * may represent multiple changes to the child. The `DataSnapshot` passed to the\n * callback will contain the new child contents. For ordering purposes, the\n * callback is also passed a second argument which is a string containing the\n * key of the previous sibling child by sort order, or `null` if it is the first\n * child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildChanged(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_changed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildMoved` event will be triggered when a child's sort order changes\n * such that its position relative to its siblings changes. The `DataSnapshot`\n * passed to the callback will be for the data of the child that has moved. It\n * is also passed a second argument which is a string containing the key of the\n * previous sibling child by sort order, or `null` if it is the first child.\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildMoved(\n  query: Query,\n  callback: (\n    snapshot: DataSnapshot,\n    previousChildName: string | null\n  ) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_moved',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback?: (error: Error) => unknown\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\n/**\n * Listens for data changes at a particular location.\n *\n * This is the primary way to read data from a Database. Your callback\n * will be triggered for the initial data and again whenever the data changes.\n * Invoke the returned unsubscribe callback to stop receiving updates. See\n * {@link https://firebase.google.com/docs/database/web/retrieve-data | Retrieve Data on the Web}\n * for more details.\n *\n * An `onChildRemoved` event will be triggered once every time a child is\n * removed. The `DataSnapshot` passed into the callback will be the old data for\n * the child that was removed. A child will get removed when either:\n *\n * - a client explicitly calls `remove()` on that child or one of its ancestors\n * - a client calls `set(null)` on that child or one of its ancestors\n * - that child has all of its children removed\n * - there is a query in effect which now filters out the child (because it's\n *   sort order changed or the max limit was hit)\n *\n * @param query - The query to run.\n * @param callback - A callback that fires when the specified event occurs.\n * The callback will be passed a DataSnapshot and a string containing the key of\n * the previous child, by sort order, or `null` if it is the first child.\n * @param cancelCallback - An optional callback that will be notified if your\n * event subscription is ever canceled because your client does not have\n * permission to read this data (or it had permission but has now lost it).\n * This callback will be passed an `Error` object indicating why the failure\n * occurred.\n * @param options - An object that can be used to configure `onlyOnce`, which\n * then removes the listener after its first invocation.\n * @returns A function that can be invoked to remove the listener.\n */\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallback: (error: Error) => unknown,\n  options: ListenOptions\n): Unsubscribe;\n\nexport function onChildRemoved(\n  query: Query,\n  callback: (snapshot: DataSnapshot) => unknown,\n  cancelCallbackOrListenOptions?: ((error: Error) => unknown) | ListenOptions,\n  options?: ListenOptions\n): Unsubscribe {\n  return addEventListener(\n    query,\n    'child_removed',\n    callback,\n    cancelCallbackOrListenOptions,\n    options\n  );\n}\n\nexport { EventType };\n\n/**\n * Detaches a callback previously attached with `on()`.\n *\n * Detach a callback previously attached with `on()`. Note that if `on()` was\n * called multiple times with the same eventType and callback, the callback\n * will be called multiple times for each event, and `off()` must be called\n * multiple times to remove the callback. Calling `off()` on a parent listener\n * will not automatically remove listeners registered on child nodes, `off()`\n * must also be called on any child listeners to remove the callback.\n *\n * If a callback is not specified, all callbacks for the specified eventType\n * will be removed. Similarly, if no eventType is specified, all callbacks\n * for the `Reference` will be removed.\n *\n * Individual listeners can also be removed by invoking their unsubscribe\n * callbacks.\n *\n * @param query - The query that the listener was registered with.\n * @param eventType - One of the following strings: \"value\", \"child_added\",\n * \"child_changed\", \"child_removed\", or \"child_moved.\" If omitted, all callbacks\n * for the `Reference` will be removed.\n * @param callback - The callback function that was passed to `on()` or\n * `undefined` to remove all callbacks.\n */\nexport function off(\n  query: Query,\n  eventType?: EventType,\n  callback?: (\n    snapshot: DataSnapshot,\n    previousChildName?: string | null\n  ) => unknown\n): void {\n  let container: EventRegistration | null = null;\n  const expCallback = callback ? new CallbackContext(callback) : null;\n  if (eventType === 'value') {\n    container = new ValueEventRegistration(expCallback);\n  } else if (eventType) {\n    container = new ChildEventRegistration(eventType, expCallback);\n  }\n  repoRemoveEventCallbackForQuery(query._repo, query, container);\n}\n\n/** Describes the different query constraints available in this SDK. */\nexport type QueryConstraintType =\n  | 'endAt'\n  | 'endBefore'\n  | 'startAt'\n  | 'startAfter'\n  | 'limitToFirst'\n  | 'limitToLast'\n  | 'orderByChild'\n  | 'orderByKey'\n  | 'orderByPriority'\n  | 'orderByValue'\n  | 'equalTo';\n\n/**\n * A `QueryConstraint` is used to narrow the set of documents returned by a\n * Database query. `QueryConstraint`s are created by invoking {@link endAt},\n * {@link endBefore}, {@link startAt}, {@link startAfter}, {@link\n * limitToFirst}, {@link limitToLast}, {@link orderByChild},\n * {@link orderByChild}, {@link orderByKey} , {@link orderByPriority} ,\n * {@link orderByValue}  or {@link equalTo} and\n * can then be passed to {@link query} to create a new query instance that\n * also contains this `QueryConstraint`.\n */\nexport abstract class QueryConstraint {\n  /** The type of this query constraints */\n  abstract readonly type: QueryConstraintType;\n\n  /**\n   * Takes the provided `Query` and returns a copy of the `Query` with this\n   * `QueryConstraint` applied.\n   */\n  abstract _apply<T>(query: QueryImpl): QueryImpl;\n}\n\nclass QueryEndAtConstraint extends QueryConstraint {\n  readonly type: 'endAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endAt', this._value, query._path, true);\n    const newParams = queryParamsEndAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endAt: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name less than or equal\n * to the specified key.\n *\n * You can read more about `endAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to end at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end at, among the children with the previously\n * specified priority. This argument is only allowed if ordering by child,\n * value, or priority.\n */\nexport function endAt(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endAt', 'key', key, true);\n  return new QueryEndAtConstraint(value, key);\n}\n\nclass QueryEndBeforeConstraint extends QueryConstraint {\n  readonly type: 'endBefore';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('endBefore', this._value, query._path, false);\n    const newParams = queryParamsEndBefore(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'endBefore: Starting point was already set (by another call to endAt, ' +\n          'endBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified ending point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The ending point is exclusive. If only a value is provided, children\n * with a value less than the specified value will be included in the query.\n * If a key is specified, then children must have a value lesss than or equal\n * to the specified value and a a key name less than the specified key.\n *\n * @param value - The value to end before. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to end before, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function endBefore(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('endBefore', 'key', key, true);\n  return new QueryEndBeforeConstraint(value, key);\n}\n\nclass QueryStartAtConstraint extends QueryConstraint {\n  readonly type: 'startAt';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAt', this._value, query._path, true);\n    const newParams = queryParamsStartAt(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAt: Starting point was already set (by another call to startAt, ' +\n          'startBefore or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is inclusive, so children with exactly the specified value\n * will be included in the query. The optional key argument can be used to\n * further limit the range of the query. If it is specified, then children that\n * have exactly the specified value must also have a key name greater than or\n * equal to the specified key.\n *\n * You can read more about `startAt()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to start at. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAt(\n  value: number | string | boolean | null = null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAt', 'key', key, true);\n  return new QueryStartAtConstraint(value, key);\n}\n\nclass QueryStartAfterConstraint extends QueryConstraint {\n  readonly type: 'startAfter';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('startAfter', this._value, query._path, false);\n    const newParams = queryParamsStartAfter(\n      query._queryParams,\n      this._value,\n      this._key\n    );\n    validateLimit(newParams);\n    validateQueryEndpoints(newParams);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'startAfter: Starting point was already set (by another call to startAt, ' +\n          'startAfter, or equalTo).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` with the specified starting point (exclusive).\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The starting point is exclusive. If only a value is provided, children\n * with a value greater than the specified value will be included in the query.\n * If a key is specified, then children must have a value greater than or equal\n * to the specified value and a a key name greater than the specified key.\n *\n * @param value - The value to start after. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start after. This argument is only allowed if\n * ordering by child, value, or priority.\n */\nexport function startAfter(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('startAfter', 'key', key, true);\n  return new QueryStartAfterConstraint(value, key);\n}\n\nclass QueryLimitToFirstConstraint extends QueryConstraint {\n  readonly type: 'limitToFirst';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToFirst: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToFirst(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that if limited to the first specific number\n * of children.\n *\n * The `limitToFirst()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the first 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToFirst()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToFirst(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToFirst: First argument must be a positive integer.');\n  }\n  return new QueryLimitToFirstConstraint(limit);\n}\n\nclass QueryLimitToLastConstraint extends QueryConstraint {\n  readonly type: 'limitToLast';\n\n  constructor(private readonly _limit: number) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    if (query._queryParams.hasLimit()) {\n      throw new Error(\n        'limitToLast: Limit was already set (by another call to limitToFirst ' +\n          'or limitToLast).'\n      );\n    }\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      queryParamsLimitToLast(query._queryParams, this._limit),\n      query._orderByCalled\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that is limited to return only the last\n * specified number of children.\n *\n * The `limitToLast()` method is used to set a maximum number of children to be\n * synced for a given callback. If we set a limit of 100, we will initially only\n * receive up to 100 `child_added` events. If we have fewer than 100 messages\n * stored in our Database, a `child_added` event will fire for each message.\n * However, if we have over 100 messages, we will only receive a `child_added`\n * event for the last 100 ordered messages. As items change, we will receive\n * `child_removed` events for each item that drops out of the active list so\n * that the total number stays at 100.\n *\n * You can read more about `limitToLast()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param limit - The maximum number of nodes to include in this query.\n */\nexport function limitToLast(limit: number): QueryConstraint {\n  if (typeof limit !== 'number' || Math.floor(limit) !== limit || limit <= 0) {\n    throw new Error('limitToLast: First argument must be a positive integer.');\n  }\n\n  return new QueryLimitToLastConstraint(limit);\n}\n\nclass QueryOrderByChildConstraint extends QueryConstraint {\n  readonly type: 'orderByChild';\n\n  constructor(private readonly _path: string) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByChild');\n    const parsedPath = new Path(this._path);\n    if (pathIsEmpty(parsedPath)) {\n      throw new Error(\n        'orderByChild: cannot pass in empty path. Use orderByValue() instead.'\n      );\n    }\n    const index = new PathIndex(parsedPath);\n    const newParams = queryParamsOrderBy(query._queryParams, index);\n    validateQueryEndpoints(newParams);\n\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the specified child key.\n *\n * Queries can only order by one key at a time. Calling `orderByChild()`\n * multiple times on the same query is an error.\n *\n * Firebase queries allow you to order your data by any child key on the fly.\n * However, if you know in advance what your indexes will be, you can define\n * them via the .indexOn rule in your Security Rules for better performance. See\n * the{@link https://firebase.google.com/docs/database/security/indexing-data}\n * rule for more information.\n *\n * You can read more about `orderByChild()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n *\n * @param path - The path to order by.\n */\nexport function orderByChild(path: string): QueryConstraint {\n  if (path === '$key') {\n    throw new Error(\n      'orderByChild: \"$key\" is invalid.  Use orderByKey() instead.'\n    );\n  } else if (path === '$priority') {\n    throw new Error(\n      'orderByChild: \"$priority\" is invalid.  Use orderByPriority() instead.'\n    );\n  } else if (path === '$value') {\n    throw new Error(\n      'orderByChild: \"$value\" is invalid.  Use orderByValue() instead.'\n    );\n  }\n  validatePathString('orderByChild', 'path', path, false);\n  return new QueryOrderByChildConstraint(path);\n}\n\nclass QueryOrderByKeyConstraint extends QueryConstraint {\n  readonly type: 'orderByKey';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByKey');\n    const newParams = queryParamsOrderBy(query._queryParams, KEY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by the key.\n *\n * Sorts the results of a query by their (ascending) key values.\n *\n * You can read more about `orderByKey()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByKey(): QueryConstraint {\n  return new QueryOrderByKeyConstraint();\n}\n\nclass QueryOrderByPriorityConstraint extends QueryConstraint {\n  readonly type: 'orderByPriority';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByPriority');\n    const newParams = queryParamsOrderBy(query._queryParams, PRIORITY_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by priority.\n *\n * Applications need not use priority but can order collections by\n * ordinary properties (see\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}\n * for alternatives to priority.\n */\nexport function orderByPriority(): QueryConstraint {\n  return new QueryOrderByPriorityConstraint();\n}\n\nclass QueryOrderByValueConstraint extends QueryConstraint {\n  readonly type: 'orderByValue';\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateNoPreviousOrderByCall(query, 'orderByValue');\n    const newParams = queryParamsOrderBy(query._queryParams, VALUE_INDEX);\n    validateQueryEndpoints(newParams);\n    return new QueryImpl(\n      query._repo,\n      query._path,\n      newParams,\n      /*orderByCalled=*/ true\n    );\n  }\n}\n\n/**\n * Creates a new `QueryConstraint` that orders by value.\n *\n * If the children of a query are all scalar values (string, number, or\n * boolean), you can order the results by their (ascending) values.\n *\n * You can read more about `orderByValue()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#sort_data | Sort data}.\n */\nexport function orderByValue(): QueryConstraint {\n  return new QueryOrderByValueConstraint();\n}\n\nclass QueryEqualToValueConstraint extends QueryConstraint {\n  readonly type: 'equalTo';\n\n  constructor(\n    private readonly _value: number | string | boolean | null,\n    private readonly _key?: string\n  ) {\n    super();\n  }\n\n  _apply<T>(query: QueryImpl): QueryImpl {\n    validateFirebaseDataArg('equalTo', this._value, query._path, false);\n    if (query._queryParams.hasStart()) {\n      throw new Error(\n        'equalTo: Starting point was already set (by another call to startAt/startAfter or ' +\n          'equalTo).'\n      );\n    }\n    if (query._queryParams.hasEnd()) {\n      throw new Error(\n        'equalTo: Ending point was already set (by another call to endAt/endBefore or ' +\n          'equalTo).'\n      );\n    }\n    return new QueryEndAtConstraint(this._value, this._key)._apply(\n      new QueryStartAtConstraint(this._value, this._key)._apply(query)\n    );\n  }\n}\n\n/**\n * Creates a `QueryConstraint` that includes children that match the specified\n * value.\n *\n * Using `startAt()`, `startAfter()`, `endBefore()`, `endAt()` and `equalTo()`\n * allows you to choose arbitrary starting and ending points for your queries.\n *\n * The optional key argument can be used to further limit the range of the\n * query. If it is specified, then children that have exactly the specified\n * value must also have exactly the specified key as their key name. This can be\n * used to filter result sets with many matches for the same value.\n *\n * You can read more about `equalTo()` in\n * {@link https://firebase.google.com/docs/database/web/lists-of-data#filtering_data | Filtering data}.\n *\n * @param value - The value to match for. The argument type depends on which\n * `orderBy*()` function was used in this query. Specify a value that matches\n * the `orderBy*()` type. When used in combination with `orderByKey()`, the\n * value must be a string.\n * @param key - The child key to start at, among the children with the\n * previously specified priority. This argument is only allowed if ordering by\n * child, value, or priority.\n */\nexport function equalTo(\n  value: number | string | boolean | null,\n  key?: string\n): QueryConstraint {\n  validateKey('equalTo', 'key', key, true);\n  return new QueryEqualToValueConstraint(value, key);\n}\n\n/**\n * Creates a new immutable instance of `Query` that is extended to also include\n * additional query constraints.\n *\n * @param query - The Query instance to use as a base for the new constraints.\n * @param queryConstraints - The list of `QueryConstraint`s to apply.\n * @throws if any of the provided query constraints cannot be combined with the\n * existing or new constraints.\n */\nexport function query(\n  query: Query,\n  ...queryConstraints: QueryConstraint[]\n): Query {\n  let queryImpl = getModularInstance(query) as QueryImpl;\n  for (const constraint of queryConstraints) {\n    queryImpl = constraint._apply(queryImpl);\n  }\n  return queryImpl;\n}\n\n/**\n * Define reference constructor in various modules\n *\n * We are doing this here to avoid several circular\n * dependency issues\n */\nsyncPointSetReferenceConstructor(ReferenceImpl);\nsyncTreeSetReferenceConstructor(ReferenceImpl);\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _FirebaseService,\n  _getProvider,\n  FirebaseApp,\n  getApp\n} from '@firebase/app';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { Provider } from '@firebase/component';\nimport {\n  getModularInstance,\n  createMockUserToken,\n  EmulatorMockTokenOptions\n} from '@firebase/util';\n\nimport { AppCheckTokenProvider } from '../core/AppCheckTokenProvider';\nimport {\n  AuthTokenProvider,\n  EmulatorTokenProvider,\n  FirebaseAuthTokenProvider\n} from '../core/AuthTokenProvider';\nimport { Repo, repoInterrupt, repoResume, repoStart } from '../core/Repo';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { parseRepoInfo } from '../core/util/libs/parser';\nimport { newEmptyPath, pathIsEmpty } from '../core/util/Path';\nimport {\n  fatal,\n  log,\n  enableLogging as enableLoggingImpl\n} from '../core/util/util';\nimport { validateUrl } from '../core/util/validation';\n\nimport { ReferenceImpl } from './Reference_impl';\n\nexport { EmulatorMockTokenOptions } from '@firebase/util';\n/**\n * This variable is also defined in the firebase Node.js Admin SDK. Before\n * modifying this definition, consult the definition in:\n *\n * https://github.com/firebase/firebase-admin-node\n *\n * and make sure the two are consistent.\n */\nconst FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\n\n/**\n * Creates and caches `Repo` instances.\n */\nconst repos: {\n  [appName: string]: {\n    [dbUrl: string]: Repo;\n  };\n} = {};\n\n/**\n * If true, any new `Repo` will be created to use `ReadonlyRestClient` (for testing purposes).\n */\nlet useRestClient = false;\n\n/**\n * Update an existing `Repo` in place to point to a new host/port.\n */\nfunction repoManagerApplyEmulatorSettings(\n  repo: Repo,\n  host: string,\n  port: number,\n  tokenProvider?: AuthTokenProvider\n): void {\n  repo.repoInfo_ = new RepoInfo(\n    `${host}:${port}`,\n    /* secure= */ false,\n    repo.repoInfo_.namespace,\n    repo.repoInfo_.webSocketOnly,\n    repo.repoInfo_.nodeAdmin,\n    repo.repoInfo_.persistenceKey,\n    repo.repoInfo_.includeNamespaceInQueryParams\n  );\n\n  if (tokenProvider) {\n    repo.authTokenProvider_ = tokenProvider;\n  }\n}\n\n/**\n * This function should only ever be called to CREATE a new database instance.\n * @internal\n */\nexport function repoManagerDatabaseFromApp(\n  app: FirebaseApp,\n  authProvider: Provider<FirebaseAuthInternalName>,\n  appCheckProvider?: Provider<AppCheckInternalComponentName>,\n  url?: string,\n  nodeAdmin?: boolean\n): Database {\n  let dbUrl: string | undefined = url || app.options.databaseURL;\n  if (dbUrl === undefined) {\n    if (!app.options.projectId) {\n      fatal(\n        \"Can't determine Firebase Database URL. Be sure to include \" +\n          ' a Project ID when calling firebase.initializeApp().'\n      );\n    }\n\n    log('Using default host for project ', app.options.projectId);\n    dbUrl = `${app.options.projectId}-default-rtdb.firebaseio.com`;\n  }\n\n  let parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n  let repoInfo = parsedUrl.repoInfo;\n\n  let isEmulator: boolean;\n\n  let dbEmulatorHost: string | undefined = undefined;\n  if (typeof process !== 'undefined' && process.env) {\n    dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\n  }\n\n  if (dbEmulatorHost) {\n    isEmulator = true;\n    dbUrl = `http://${dbEmulatorHost}?ns=${repoInfo.namespace}`;\n    parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\n    repoInfo = parsedUrl.repoInfo;\n  } else {\n    isEmulator = !parsedUrl.repoInfo.secure;\n  }\n\n  const authTokenProvider =\n    nodeAdmin && isEmulator\n      ? new EmulatorTokenProvider(EmulatorTokenProvider.OWNER)\n      : new FirebaseAuthTokenProvider(app.name, app.options, authProvider);\n\n  validateUrl('Invalid Firebase Database URL', parsedUrl);\n  if (!pathIsEmpty(parsedUrl.path)) {\n    fatal(\n      'Database URL must point to the root of a Firebase Database ' +\n        '(not including a child path).'\n    );\n  }\n\n  const repo = repoManagerCreateRepo(\n    repoInfo,\n    app,\n    authTokenProvider,\n    new AppCheckTokenProvider(app.name, appCheckProvider)\n  );\n  return new Database(repo, app);\n}\n\n/**\n * Remove the repo and make sure it is disconnected.\n *\n */\nfunction repoManagerDeleteRepo(repo: Repo, appName: string): void {\n  const appRepos = repos[appName];\n  // This should never happen...\n  if (!appRepos || appRepos[repo.key] !== repo) {\n    fatal(`Database ${appName}(${repo.repoInfo_}) has already been deleted.`);\n  }\n  repoInterrupt(repo);\n  delete appRepos[repo.key];\n}\n\n/**\n * Ensures a repo doesn't already exist and then creates one using the\n * provided app.\n *\n * @param repoInfo - The metadata about the Repo\n * @returns The Repo object for the specified server / repoName.\n */\nfunction repoManagerCreateRepo(\n  repoInfo: RepoInfo,\n  app: FirebaseApp,\n  authTokenProvider: AuthTokenProvider,\n  appCheckProvider: AppCheckTokenProvider\n): Repo {\n  let appRepos = repos[app.name];\n\n  if (!appRepos) {\n    appRepos = {};\n    repos[app.name] = appRepos;\n  }\n\n  let repo = appRepos[repoInfo.toURLString()];\n  if (repo) {\n    fatal(\n      'Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.'\n    );\n  }\n  repo = new Repo(repoInfo, useRestClient, authTokenProvider, appCheckProvider);\n  appRepos[repoInfo.toURLString()] = repo;\n\n  return repo;\n}\n\n/**\n * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\n */\nexport function repoManagerForceRestClient(forceRestClient: boolean): void {\n  useRestClient = forceRestClient;\n}\n\n/**\n * Class representing a Firebase Realtime Database.\n */\nexport class Database implements _FirebaseService {\n  /** Represents a `Database` instance. */\n  readonly 'type' = 'database';\n\n  /** Track if the instance has been used (root or repo accessed) */\n  _instanceStarted: boolean = false;\n\n  /** Backing state for root_ */\n  private _rootInternal?: ReferenceImpl;\n\n  /** @hideconstructor */\n  constructor(\n    public _repoInternal: Repo,\n    /** The {@link @firebase/app#FirebaseApp} associated with this Realtime Database instance. */\n    readonly app: FirebaseApp\n  ) {}\n\n  get _repo(): Repo {\n    if (!this._instanceStarted) {\n      repoStart(\n        this._repoInternal,\n        this.app.options.appId,\n        this.app.options['databaseAuthVariableOverride']\n      );\n      this._instanceStarted = true;\n    }\n    return this._repoInternal;\n  }\n\n  get _root(): ReferenceImpl {\n    if (!this._rootInternal) {\n      this._rootInternal = new ReferenceImpl(this._repo, newEmptyPath());\n    }\n    return this._rootInternal;\n  }\n\n  _delete(): Promise<void> {\n    if (this._rootInternal !== null) {\n      repoManagerDeleteRepo(this._repo, this.app.name);\n      this._repoInternal = null;\n      this._rootInternal = null;\n    }\n    return Promise.resolve();\n  }\n\n  _checkNotDeleted(apiName: string) {\n    if (this._rootInternal === null) {\n      fatal('Cannot call ' + apiName + ' on a deleted database.');\n    }\n  }\n}\n\n/**\n * Returns the instance of the Realtime Database SDK that is associated\n * with the provided {@link @firebase/app#FirebaseApp}. Initializes a new instance with\n * with default settings if no instance exists or if the existing instance uses\n * a custom database URL.\n *\n * @param app - The {@link @firebase/app#FirebaseApp} instance that the returned Realtime\n * Database instance is associated with.\n * @param url - The URL of the Realtime Database instance to connect to. If not\n * provided, the SDK connects to the default instance of the Firebase App.\n * @returns The `Database` instance of the provided app.\n */\nexport function getDatabase(\n  app: FirebaseApp = getApp(),\n  url?: string\n): Database {\n  return _getProvider(app, 'database').getImmediate({\n    identifier: url\n  }) as Database;\n}\n\n/**\n * Modify the provided instance to communicate with the Realtime Database\n * emulator.\n *\n * <p>Note: This method must be called before performing any other operation.\n *\n * @param db - The instance to modify.\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 8080)\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules\n */\nexport function connectDatabaseEmulator(\n  db: Database,\n  host: string,\n  port: number,\n  options: {\n    mockUserToken?: EmulatorMockTokenOptions | string;\n  } = {}\n): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('useEmulator');\n  if (db._instanceStarted) {\n    fatal(\n      'Cannot call useEmulator() after instance has already been initialized.'\n    );\n  }\n\n  const repo = db._repoInternal;\n  let tokenProvider: EmulatorTokenProvider | undefined = undefined;\n  if (repo.repoInfo_.nodeAdmin) {\n    if (options.mockUserToken) {\n      fatal(\n        'mockUserToken is not supported by the Admin SDK. For client access with mock users, please use the \"firebase\" package instead of \"firebase-admin\".'\n      );\n    }\n    tokenProvider = new EmulatorTokenProvider(EmulatorTokenProvider.OWNER);\n  } else if (options.mockUserToken) {\n    const token =\n      typeof options.mockUserToken === 'string'\n        ? options.mockUserToken\n        : createMockUserToken(options.mockUserToken, db.app.options.projectId);\n    tokenProvider = new EmulatorTokenProvider(token);\n  }\n\n  // Modify the repo to apply emulator settings\n  repoManagerApplyEmulatorSettings(repo, host, port, tokenProvider);\n}\n\n/**\n * Disconnects from the server (all Database operations will be completed\n * offline).\n *\n * The client automatically maintains a persistent connection to the Database\n * server, which will remain active indefinitely and reconnect when\n * disconnected. However, the `goOffline()` and `goOnline()` methods may be used\n * to control the client connection in cases where a persistent connection is\n * undesirable.\n *\n * While offline, the client will no longer receive data updates from the\n * Database. However, all Database operations performed locally will continue to\n * immediately fire events, allowing your application to continue behaving\n * normally. Additionally, each operation performed locally will automatically\n * be queued and retried upon reconnection to the Database server.\n *\n * To reconnect to the Database and begin receiving remote events, see\n * `goOnline()`.\n *\n * @param db - The instance to disconnect.\n */\nexport function goOffline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOffline');\n  repoInterrupt(db._repo);\n}\n\n/**\n * Reconnects to the server and synchronizes the offline Database state\n * with the server state.\n *\n * This method should be used after disabling the active connection with\n * `goOffline()`. Once reconnected, the client will transmit the proper data\n * and fire the appropriate events so that your client \"catches up\"\n * automatically.\n *\n * @param db - The instance to reconnect.\n */\nexport function goOnline(db: Database): void {\n  db = getModularInstance(db);\n  db._checkNotDeleted('goOnline');\n  repoResume(db._repo);\n}\n\n/**\n * Logs debugging information to the console.\n *\n * @param enabled - Enables logging if `true`, disables logging if `false`.\n * @param persistent - Remembers the logging state between page refreshes if\n * `true`.\n */\nexport function enableLogging(enabled: boolean, persistent?: boolean);\n\n/**\n * Logs debugging information to the console.\n *\n * @param logger - A custom logger function to control how things get logged.\n */\nexport function enableLogging(logger: (message: string) => unknown);\n\nexport function enableLogging(\n  logger: boolean | ((message: string) => unknown),\n  persistent?: boolean\n): void {\n  enableLoggingImpl(logger, persistent);\n}\n","/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport {\n  _registerComponent,\n  registerVersion,\n  SDK_VERSION\n} from '@firebase/app';\nimport { Component, ComponentType } from '@firebase/component';\n\nimport { name, version } from '../package.json';\nimport { setSDKVersion } from '../src/core/version';\n\nimport { repoManagerDatabaseFromApp } from './api/Database';\n\nexport function registerDatabase(variant?: string): void {\n  setSDKVersion(SDK_VERSION);\n  _registerComponent(\n    new Component(\n      'database',\n      (container, { instanceIdentifier: url }) => {\n        const app = container.getProvider('app').getImmediate()!;\n        const authProvider = container.getProvider('auth-internal');\n        const appCheckProvider = container.getProvider('app-check-internal');\n        return repoManagerDatabaseFromApp(\n          app,\n          authProvider,\n          appCheckProvider,\n          url\n        );\n      },\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst SERVER_TIMESTAMP = {\n  '.sv': 'timestamp'\n};\n\n/**\n * Returns a placeholder value for auto-populating the current timestamp (time\n * since the Unix epoch, in milliseconds) as determined by the Firebase\n * servers.\n */\nexport function serverTimestamp(): object {\n  return SERVER_TIMESTAMP;\n}\n\n/**\n * Returns a placeholder value that can be used to atomically increment the\n * current database value by the provided delta.\n *\n * @param delta - the amount to modify the current value atomically.\n * @returns A placeholder value for modifying data atomically server-side.\n */\nexport function increment(delta: number): object {\n  return {\n    '.sv': {\n      'increment': delta\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getModularInstance, Deferred } from '@firebase/util';\n\nimport { repoStartTransaction } from '../core/Repo';\nimport { PRIORITY_INDEX } from '../core/snap/indexes/PriorityIndex';\nimport { Node } from '../core/snap/Node';\nimport { validateWritablePath } from '../core/util/validation';\n\nimport { DatabaseReference } from './Reference';\nimport { DataSnapshot, onValue, ReferenceImpl } from './Reference_impl';\n\n/** An options object to configure transactions. */\nexport interface TransactionOptions {\n  /**\n   * By default, events are raised each time the transaction update function\n   * runs. So if it is run multiple times, you may see intermediate states. You\n   * can set this to false to suppress these intermediate states and instead\n   * wait until the transaction has completed before events are raised.\n   */\n  readonly applyLocally?: boolean;\n}\n\n/**\n * A type for the resolve value of {@link runTransaction}.\n */\nexport class TransactionResult {\n  /** @hideconstructor */\n  constructor(\n    /** Whether the transaction was successfully committed. */\n    readonly committed: boolean,\n    /** The resulting data snapshot. */\n    readonly snapshot: DataSnapshot\n  ) {}\n\n  /** Returns a JSON-serializable representation of this object. */\n  toJSON(): object {\n    return { committed: this.committed, snapshot: this.snapshot.toJSON() };\n  }\n}\n\n/**\n * Atomically modifies the data at this location.\n *\n * Atomically modify the data at this location. Unlike a normal `set()`, which\n * just overwrites the data regardless of its previous value, `runTransaction()` is\n * used to modify the existing value to a new value, ensuring there are no\n * conflicts with other clients writing to the same location at the same time.\n *\n * To accomplish this, you pass `runTransaction()` an update function which is\n * used to transform the current value into a new value. If another client\n * writes to the location before your new value is successfully written, your\n * update function will be called again with the new current value, and the\n * write will be retried. This will happen repeatedly until your write succeeds\n * without conflict or you abort the transaction by not returning a value from\n * your update function.\n *\n * Note: Modifying data with `set()` will cancel any pending transactions at\n * that location, so extreme care should be taken if mixing `set()` and\n * `runTransaction()` to update the same data.\n *\n * Note: When using transactions with Security and Firebase Rules in place, be\n * aware that a client needs `.read` access in addition to `.write` access in\n * order to perform a transaction. This is because the client-side nature of\n * transactions requires the client to read the data in order to transactionally\n * update it.\n *\n * @param ref - The location to atomically modify.\n * @param transactionUpdate - A developer-supplied function which will be passed\n * the current data stored at this location (as a JavaScript object). The\n * function should return the new value it would like written (as a JavaScript\n * object). If `undefined` is returned (i.e. you return with no arguments) the\n * transaction will be aborted and the data at this location will not be\n * modified.\n * @param options - An options object to configure transactions.\n * @returns A `Promise` that can optionally be used instead of the `onComplete`\n * callback to handle success and failure.\n */\nexport function runTransaction(\n  ref: DatabaseReference,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  transactionUpdate: (currentData: any) => unknown,\n  options?: TransactionOptions\n): Promise<TransactionResult> {\n  ref = getModularInstance(ref);\n\n  validateWritablePath('Reference.transaction', ref._path);\n\n  if (ref.key === '.length' || ref.key === '.keys') {\n    throw (\n      'Reference.transaction failed: ' + ref.key + ' is a read-only object.'\n    );\n  }\n\n  const applyLocally = options?.applyLocally ?? true;\n  const deferred = new Deferred<TransactionResult>();\n\n  const promiseComplete = (\n    error: Error | null,\n    committed: boolean,\n    node: Node | null\n  ) => {\n    let dataSnapshot: DataSnapshot | null = null;\n    if (error) {\n      deferred.reject(error);\n    } else {\n      dataSnapshot = new DataSnapshot(\n        node,\n        new ReferenceImpl(ref._repo, ref._path),\n        PRIORITY_INDEX\n      );\n      deferred.resolve(new TransactionResult(committed, dataSnapshot));\n    }\n  };\n\n  // Add a watch to make sure we get server updates.\n  const unwatcher = onValue(ref, () => {});\n\n  repoStartTransaction(\n    ref._repo,\n    ref._path,\n    transactionUpdate,\n    promiseComplete,\n    unwatcher,\n    applyLocally\n  );\n\n  return deferred.promise;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { PersistentConnection } from '../core/PersistentConnection';\nimport { RepoInfo } from '../core/RepoInfo';\nimport { Connection } from '../realtime/Connection';\n\nimport { repoManagerForceRestClient } from './Database';\n\nexport const DataConnection = PersistentConnection;\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).simpleListen = function (\n  pathString: string,\n  onComplete: (a: unknown) => void\n) {\n  this.sendRequest('q', { p: pathString }, onComplete);\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n(PersistentConnection.prototype as any).echo = function (\n  data: unknown,\n  onEcho: (a: unknown) => void\n) {\n  this.sendRequest('echo', { d: data }, onEcho);\n};\n\n// RealTimeConnection properties that we use in tests.\nexport const RealTimeConnection = Connection;\n\n/**\n * @internal\n */\nexport const hijackHash = function (newHash: () => string) {\n  const oldPut = PersistentConnection.prototype.put;\n  PersistentConnection.prototype.put = function (\n    pathString,\n    data,\n    onComplete,\n    hash\n  ) {\n    if (hash !== undefined) {\n      hash = newHash();\n    }\n    oldPut.call(this, pathString, data, onComplete, hash);\n  };\n  return function () {\n    PersistentConnection.prototype.put = oldPut;\n  };\n};\n\nexport const ConnectionTarget = RepoInfo;\n\n/**\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\n * @internal\n */\nexport const forceRestClient = function (forceRestClient: boolean) {\n  repoManagerForceRestClient(forceRestClient);\n};\n","/**\n * Firebase Realtime Database\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Database } from './api/Database';\nimport { registerDatabase } from './register';\n\nexport * from './api';\n\nregisterDatabase();\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'database': Database;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}