{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.fill.js\";\nvar Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane'\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    }\n  }\n};\nvar InteractiveLayer = {\n  props: {\n    interactive: {\n      type: Boolean,\n      default: true\n    },\n    bubblingMouseEvents: {\n      type: Boolean,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    this.interactiveLayerOptions = {\n      interactive: this.interactive,\n      bubblingMouseEvents: this.bubblingMouseEvents\n    };\n  }\n};\nvar Path = {\n  mixins: [Layer, InteractiveLayer],\n  props: {\n    lStyle: {\n      type: Object,\n      custom: true,\n      default: null\n    },\n    stroke: {\n      type: Boolean,\n      custom: true,\n      default: true\n    },\n    color: {\n      type: String,\n      custom: true,\n      default: '#3388ff'\n    },\n    weight: {\n      type: Number,\n      custom: true,\n      default: 3\n    },\n    opacity: {\n      type: Number,\n      custom: true,\n      default: 1.0\n    },\n    lineCap: {\n      type: String,\n      custom: true,\n      default: 'round'\n    },\n    lineJoin: {\n      type: String,\n      custom: true,\n      default: 'round'\n    },\n    dashArray: {\n      type: String,\n      custom: true,\n      default: null\n    },\n    dashOffset: {\n      type: String,\n      custom: true,\n      default: null\n    },\n    fill: {\n      type: Boolean,\n      custom: true,\n      default: false\n    },\n    fillColor: {\n      type: String,\n      custom: true,\n      default: '#3388ff'\n    },\n    fillOpacity: {\n      type: Number,\n      custom: true,\n      default: 0.2\n    },\n    fillRule: {\n      type: String,\n      custom: true,\n      default: 'evenodd'\n    },\n    className: {\n      type: String,\n      custom: true,\n      default: null\n    }\n  },\n  mounted: function mounted() {\n    this.pathOptions = Object.assign({}, this.layerOptions, this.interactiveLayerOptions, {\n      stroke: this.stroke,\n      color: this.color,\n      weight: this.weight,\n      opacity: this.opacity,\n      lineCap: this.lineCap,\n      lineJoin: this.lineJoin,\n      dashArray: this.dashArray,\n      dashOffset: this.dashOffset,\n      fill: this.fill,\n      fillColor: this.fillColor,\n      fillOpacity: this.fillOpacity,\n      fillRule: this.fillRule,\n      className: this.className\n    });\n\n    if (this.lStyle) {\n      console.warn('lStyle is deprecated and is going to be removed in the next major version');\n\n      for (var style in this.lStyle) {\n        this.pathOptions[style] = this.lStyle[style];\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.parentContainer) {\n      this.parentContainer.removeLayer(this);\n    } else {\n      console.error('Missing parent container');\n    }\n  },\n  methods: {\n    setLStyle: function setLStyle(newVal) {\n      this.mapObject.setStyle(newVal);\n    },\n    setStroke: function setStroke(newVal) {\n      this.mapObject.setStyle({\n        stroke: newVal\n      });\n    },\n    setColor: function setColor(newVal) {\n      this.mapObject.setStyle({\n        color: newVal\n      });\n    },\n    setWeight: function setWeight(newVal) {\n      this.mapObject.setStyle({\n        weight: newVal\n      });\n    },\n    setOpacity: function setOpacity(newVal) {\n      this.mapObject.setStyle({\n        opacity: newVal\n      });\n    },\n    setLineCap: function setLineCap(newVal) {\n      this.mapObject.setStyle({\n        lineCap: newVal\n      });\n    },\n    setLineJoin: function setLineJoin(newVal) {\n      this.mapObject.setStyle({\n        lineJoin: newVal\n      });\n    },\n    setDashArray: function setDashArray(newVal) {\n      this.mapObject.setStyle({\n        dashArray: newVal\n      });\n    },\n    setDashOffset: function setDashOffset(newVal) {\n      this.mapObject.setStyle({\n        dashOffset: newVal\n      });\n    },\n    setFill: function setFill(newVal) {\n      this.mapObject.setStyle({\n        fill: newVal\n      });\n    },\n    setFillColor: function setFillColor(newVal) {\n      this.mapObject.setStyle({\n        fillColor: newVal\n      });\n    },\n    setFillOpacity: function setFillOpacity(newVal) {\n      this.mapObject.setStyle({\n        fillOpacity: newVal\n      });\n    },\n    setFillRule: function setFillRule(newVal) {\n      this.mapObject.setStyle({\n        fillRule: newVal\n      });\n    },\n    setClassName: function setClassName(newVal) {\n      this.mapObject.setStyle({\n        className: newVal\n      });\n    }\n  }\n};\nvar Polyline = {\n  mixins: [Path],\n  props: {\n    smoothFactor: {\n      type: Number,\n      custom: true,\n      default: 1.0\n    },\n    noClip: {\n      type: Boolean,\n      custom: true,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      ready: false\n    };\n  },\n  mounted: function mounted() {\n    this.polyLineOptions = Object.assign({}, this.pathOptions, {\n      smoothFactor: this.smoothFactor,\n      noClip: this.noClip\n    });\n  },\n  methods: {\n    setSmoothFactor: function setSmoothFactor(newVal) {\n      this.mapObject.setStyle({\n        smoothFactor: newVal\n      });\n    },\n    setNoClip: function setNoClip(newVal) {\n      this.mapObject.setStyle({\n        noClip: newVal\n      });\n    },\n    addLatLng: function addLatLng(value) {\n      this.mapObject.addLatLng(value);\n    }\n  }\n};\nexport default Polyline;","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/vue2-leaflet/dist/mixins/Polyline.js"],"names":["Layer","props","pane","type","String","default","attribution","custom","name","undefined","layerType","visible","Boolean","mounted","layerOptions","beforeDestroy","unbindPopup","unbindTooltip","parentContainer","removeLayer","methods","setAttribution","val","old","attributionControl","$parent","mapObject","removeAttribution","addAttribution","setName","addLayer","setLayerType","setVisible","isVisible","hideLayer","tooltip","getTooltip","popup","getPopup","updateVisibleProp","value","$emit","InteractiveLayer","interactive","bubblingMouseEvents","interactiveLayerOptions","Path","mixins","lStyle","Object","stroke","color","weight","Number","opacity","lineCap","lineJoin","dashArray","dashOffset","fill","fillColor","fillOpacity","fillRule","className","pathOptions","assign","console","warn","style","error","setLStyle","newVal","setStyle","setStroke","setColor","setWeight","setOpacity","setLineCap","setLineJoin","setDashArray","setDashOffset","setFill","setFillColor","setFillOpacity","setFillRule","setClassName","Polyline","smoothFactor","noClip","data","ready","polyLineOptions","setSmoothFactor","setNoClip","addLatLng"],"mappings":"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","sourcesContent":["var Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane',\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true,\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true,\n    },\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane,\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    },\n  },\n};\n\nvar InteractiveLayer = {\n  props: {\n    interactive: {\n      type: Boolean,\n      default: true\n    },\n    bubblingMouseEvents: {\n      type: Boolean,\n      default: true\n    }\n  },\n  mounted: function mounted () {\n    this.interactiveLayerOptions = {\n      interactive: this.interactive,\n      bubblingMouseEvents: this.bubblingMouseEvents\n    };\n  }\n};\n\nvar Path = {\n  mixins: [Layer, InteractiveLayer],\n  props: {\n    lStyle: {\n      type: Object,\n      custom: true,\n      default: null\n    },\n    stroke: {\n      type: Boolean,\n      custom: true,\n      default: true\n    },\n    color: {\n      type: String,\n      custom: true,\n      default: '#3388ff'\n    },\n    weight: {\n      type: Number,\n      custom: true,\n      default: 3\n    },\n    opacity: {\n      type: Number,\n      custom: true,\n      default: 1.0\n    },\n    lineCap: {\n      type: String,\n      custom: true,\n      default: 'round'\n    },\n    lineJoin: {\n      type: String,\n      custom: true,\n      default: 'round'\n    },\n    dashArray: {\n      type: String,\n      custom: true,\n      default: null\n    },\n    dashOffset: {\n      type: String,\n      custom: true,\n      default: null\n    },\n    fill: {\n      type: Boolean,\n      custom: true,\n      default: false\n    },\n    fillColor: {\n      type: String,\n      custom: true,\n      default: '#3388ff'\n    },\n    fillOpacity: {\n      type: Number,\n      custom: true,\n      default: 0.2\n    },\n    fillRule: {\n      type: String,\n      custom: true,\n      default: 'evenodd'\n    },\n    className: {\n      type: String,\n      custom: true,\n      default: null\n    }\n  },\n  mounted: function mounted () {\n    this.pathOptions = Object.assign({}, this.layerOptions,\n      this.interactiveLayerOptions,\n      {stroke: this.stroke,\n      color: this.color,\n      weight: this.weight,\n      opacity: this.opacity,\n      lineCap: this.lineCap,\n      lineJoin: this.lineJoin,\n      dashArray: this.dashArray,\n      dashOffset: this.dashOffset,\n      fill: this.fill,\n      fillColor: this.fillColor,\n      fillOpacity: this.fillOpacity,\n      fillRule: this.fillRule,\n      className: this.className});\n\n    if (this.lStyle) {\n      console.warn('lStyle is deprecated and is going to be removed in the next major version');\n      for (var style in this.lStyle) {\n        this.pathOptions[style] = this.lStyle[style];\n      }\n    }\n  },\n  beforeDestroy: function beforeDestroy () {\n    if (this.parentContainer) {\n      this.parentContainer.removeLayer(this);\n    } else {\n      console.error('Missing parent container');\n    }\n  },\n  methods: {\n    setLStyle: function setLStyle (newVal) {\n      this.mapObject.setStyle(newVal);\n    },\n    setStroke: function setStroke (newVal) {\n      this.mapObject.setStyle({ stroke: newVal });\n    },\n    setColor: function setColor (newVal) {\n      this.mapObject.setStyle({ color: newVal });\n    },\n    setWeight: function setWeight (newVal) {\n      this.mapObject.setStyle({ weight: newVal });\n    },\n    setOpacity: function setOpacity (newVal) {\n      this.mapObject.setStyle({ opacity: newVal });\n    },\n    setLineCap: function setLineCap (newVal) {\n      this.mapObject.setStyle({ lineCap: newVal });\n    },\n    setLineJoin: function setLineJoin (newVal) {\n      this.mapObject.setStyle({ lineJoin: newVal });\n    },\n    setDashArray: function setDashArray (newVal) {\n      this.mapObject.setStyle({ dashArray: newVal });\n    },\n    setDashOffset: function setDashOffset (newVal) {\n      this.mapObject.setStyle({ dashOffset: newVal });\n    },\n    setFill: function setFill (newVal) {\n      this.mapObject.setStyle({ fill: newVal });\n    },\n    setFillColor: function setFillColor (newVal) {\n      this.mapObject.setStyle({ fillColor: newVal });\n    },\n    setFillOpacity: function setFillOpacity (newVal) {\n      this.mapObject.setStyle({ fillOpacity: newVal });\n    },\n    setFillRule: function setFillRule (newVal) {\n      this.mapObject.setStyle({ fillRule: newVal });\n    },\n    setClassName: function setClassName (newVal) {\n      this.mapObject.setStyle({ className: newVal });\n    }\n  }\n};\n\nvar Polyline = {\n  mixins: [Path],\n  props: {\n    smoothFactor: {\n      type: Number,\n      custom: true,\n      default: 1.0\n    },\n    noClip: {\n      type: Boolean,\n      custom: true,\n      default: false\n    }\n  },\n  data: function data () {\n    return {\n      ready: false\n    };\n  },\n  mounted: function mounted () {\n    this.polyLineOptions = Object.assign({}, this.pathOptions,\n      {smoothFactor: this.smoothFactor,\n      noClip: this.noClip});\n  },\n  methods: {\n    setSmoothFactor: function setSmoothFactor (newVal) {\n      this.mapObject.setStyle({ smoothFactor: newVal });\n    },\n    setNoClip: function setNoClip (newVal) {\n      this.mapObject.setStyle({ noClip: newVal });\n    },\n    addLatLng: function addLatLng (value) {\n      this.mapObject.addLatLng(value);\n    }\n  }\n};\n\nexport default Polyline;\n"]},"metadata":{},"sourceType":"module"}