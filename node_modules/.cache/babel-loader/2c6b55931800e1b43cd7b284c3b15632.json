{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Krystian/Desktop/projekt/ecommercevuefirestore/ecommercevuefirestore/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createClass from \"C:/Users/Krystian/Desktop/projekt/ecommercevuefirestore/ecommercevuefirestore/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Krystian/Desktop/projekt/ecommercevuefirestore/ecommercevuefirestore/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/Krystian/Desktop/projekt/ecommercevuefirestore/ecommercevuefirestore/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Krystian/Desktop/projekt/ecommercevuefirestore/ecommercevuefirestore/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _typeof from \"C:/Users/Krystian/Desktop/projekt/ecommercevuefirestore/ecommercevuefirestore/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport { _registerComponent, registerVersion, getApp, _getProvider } from '@firebase/app';\nimport { FirebaseError, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues( // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no, f) {\n  var result = {};\n\n  for (var key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n\n  return result;\n}\n/**\r\n * Takes data and encodes it in a JSON-friendly way, such that types such as\r\n * Date are preserved.\r\n * @internal\r\n * @param data - Data to encode.\r\n */\n\n\nfunction encode(data) {\n  if (data == null) {\n    return null;\n  }\n\n  if (data instanceof Number) {\n    data = data.valueOf();\n  }\n\n  if (typeof data === 'number' && isFinite(data)) {\n    // Any number in JS is safe to put directly in JSON and parse as a double\n    // without any loss of precision.\n    return data;\n  }\n\n  if (data === true || data === false) {\n    return data;\n  }\n\n  if (Object.prototype.toString.call(data) === '[object String]') {\n    return data;\n  }\n\n  if (data instanceof Date) {\n    return data.toISOString();\n  }\n\n  if (Array.isArray(data)) {\n    return data.map(function (x) {\n      return encode(x);\n    });\n  }\n\n  if (typeof data === 'function' || _typeof(data) === 'object') {\n    return mapValues(data, function (x) {\n      return encode(x);\n    });\n  } // If we got this far, the data is not encodable.\n\n\n  throw new Error('Data cannot be encoded in JSON: ' + data);\n}\n/**\r\n * Takes data that's been encoded in a JSON-friendly form and returns a form\r\n * with richer datatypes, such as Dates, etc.\r\n * @internal\r\n * @param json - JSON to convert.\r\n */\n\n\nfunction decode(json) {\n  if (json == null) {\n    return json;\n  }\n\n  if (json['@type']) {\n    switch (json['@type']) {\n      case LONG_TYPE: // Fall through and handle this the same as unsigned.\n\n      case UNSIGNED_LONG_TYPE:\n        {\n          // Technically, this could work return a valid number for malformed\n          // data if there was a number followed by garbage. But it's just not\n          // worth all the extra code to detect that case.\n          var value = Number(json['value']);\n\n          if (isNaN(value)) {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n\n          return value;\n        }\n\n      default:\n        {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n    }\n  }\n\n  if (Array.isArray(json)) {\n    return json.map(function (x) {\n      return decode(x);\n    });\n  }\n\n  if (typeof json === 'function' || _typeof(json) === 'object') {\n    return mapValues(json, function (x) {\n      return decode(x);\n    });\n  } // Anything else is safe to return.\n\n\n  return json;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Type constant for Firebase Functions.\r\n */\n\n\nvar FUNCTIONS_TYPE = 'functions';\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\n\nvar errorCodeMap = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\n\nvar FunctionsError = /*#__PURE__*/function (_FirebaseError) {\n  _inherits(FunctionsError, _FirebaseError);\n\n  var _super = _createSuper(FunctionsError);\n\n  function FunctionsError(\n  /**\r\n   * A standard error code that will be returned to the client. This also\r\n   * determines the HTTP status code of the response, as defined in code.proto.\r\n   */\n  code, message,\n  /**\r\n   * Extra data to be converted to JSON and included in the error response.\r\n   */\n  details) {\n    var _this;\n\n    _classCallCheck(this, FunctionsError);\n\n    _this = _super.call(this, \"\".concat(FUNCTIONS_TYPE, \"/\").concat(code), message || '');\n    _this.details = details;\n    return _this;\n  }\n\n  return _createClass(FunctionsError);\n}(FirebaseError);\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\n\n\nfunction codeForHTTPStatus(status) {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n\n    case 400:\n      return 'invalid-argument';\n\n    case 401:\n      return 'unauthenticated';\n\n    case 403:\n      return 'permission-denied';\n\n    case 404:\n      return 'not-found';\n\n    case 409:\n      return 'aborted';\n\n    case 429:\n      return 'resource-exhausted';\n\n    case 499:\n      return 'cancelled';\n\n    case 500:\n      return 'internal';\n\n    case 501:\n      return 'unimplemented';\n\n    case 503:\n      return 'unavailable';\n\n    case 504:\n      return 'deadline-exceeded';\n  }\n\n  return 'unknown';\n}\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\n\n\nfunction _errorForResponse(status, bodyJSON) {\n  var code = codeForHTTPStatus(status); // Start with reasonable defaults from the status code.\n\n  var description = code;\n  var details = undefined; // Then look through the body for explicit details.\n\n  try {\n    var errorJSON = bodyJSON && bodyJSON.error;\n\n    if (errorJSON) {\n      var _status = errorJSON.status;\n\n      if (typeof _status === 'string') {\n        if (!errorCodeMap[_status]) {\n          // They must've included an unknown error code in the body.\n          return new FunctionsError('internal', 'internal');\n        }\n\n        code = errorCodeMap[_status]; // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n\n        description = _status;\n      }\n\n      var message = errorJSON.message;\n\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n\n      if (details !== undefined) {\n        details = decode(details);\n      }\n    }\n  } catch (e) {// If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new FunctionsError(code, description, details);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n * @internal\r\n */\n\n\nvar ContextProvider = /*#__PURE__*/function () {\n  function ContextProvider(authProvider, messagingProvider, appCheckProvider) {\n    var _this2 = this;\n\n    _classCallCheck(this, ContextProvider);\n\n    this.auth = null;\n    this.messaging = null;\n    this.appCheck = null;\n    this.auth = authProvider.getImmediate({\n      optional: true\n    });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(function (auth) {\n        return _this2.auth = auth;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(function (messaging) {\n        return _this2.messaging = messaging;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n\n    if (!this.appCheck) {\n      appCheckProvider.get().then(function (appCheck) {\n        return _this2.appCheck = appCheck;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n  }\n\n  _createClass(ContextProvider, [{\n    key: \"getAuthToken\",\n    value: function () {\n      var _getAuthToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var token;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.auth) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", undefined);\n\n              case 2:\n                _context.prev = 2;\n                _context.next = 5;\n                return this.auth.getToken();\n\n              case 5:\n                token = _context.sent;\n                return _context.abrupt(\"return\", token === null || token === void 0 ? void 0 : token.accessToken);\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n                return _context.abrupt(\"return\", undefined);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      function getAuthToken() {\n        return _getAuthToken.apply(this, arguments);\n      }\n\n      return getAuthToken;\n    }()\n  }, {\n    key: \"getMessagingToken\",\n    value: function () {\n      var _getMessagingToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!this.messaging || !('Notification' in self) || Notification.permission !== 'granted')) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", undefined);\n\n              case 2:\n                _context2.prev = 2;\n                _context2.next = 5;\n                return this.messaging.getToken();\n\n              case 5:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](2);\n                return _context2.abrupt(\"return\", undefined);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 8]]);\n      }));\n\n      function getMessagingToken() {\n        return _getMessagingToken.apply(this, arguments);\n      }\n\n      return getMessagingToken;\n    }()\n  }, {\n    key: \"getAppCheckToken\",\n    value: function () {\n      var _getAppCheckToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!this.appCheck) {\n                  _context3.next = 7;\n                  break;\n                }\n\n                _context3.next = 3;\n                return this.appCheck.getToken();\n\n              case 3:\n                result = _context3.sent;\n\n                if (!result.error) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", null);\n\n              case 6:\n                return _context3.abrupt(\"return\", result.token);\n\n              case 7:\n                return _context3.abrupt(\"return\", null);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getAppCheckToken() {\n        return _getAppCheckToken.apply(this, arguments);\n      }\n\n      return getAppCheckToken;\n    }()\n  }, {\n    key: \"getContext\",\n    value: function () {\n      var _getContext = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var authToken, messagingToken, appCheckToken;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.getAuthToken();\n\n              case 2:\n                authToken = _context4.sent;\n                _context4.next = 5;\n                return this.getMessagingToken();\n\n              case 5:\n                messagingToken = _context4.sent;\n                _context4.next = 8;\n                return this.getAppCheckToken();\n\n              case 8:\n                appCheckToken = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  authToken: authToken,\n                  messagingToken: messagingToken,\n                  appCheckToken: appCheckToken\n                });\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getContext() {\n        return _getContext.apply(this, arguments);\n      }\n\n      return getContext;\n    }()\n  }]);\n\n  return ContextProvider;\n}();\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_REGION = 'us-central1';\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type FunctionsError.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\n\nfunction failAfter(millis) {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var timer = null;\n  return {\n    promise: new Promise(function (_, reject) {\n      timer = setTimeout(function () {\n        reject(new FunctionsError('deadline-exceeded', 'deadline-exceeded'));\n      }, millis);\n    }),\n    cancel: function cancel() {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    }\n  };\n}\n/**\r\n * The main class for the Firebase Functions SDK.\r\n * @internal\r\n */\n\n\nvar FunctionsService = /*#__PURE__*/function () {\n  /**\r\n   * Creates a new Functions service for the given app.\r\n   * @param app - The FirebaseApp to use.\r\n   */\n  function FunctionsService(app, authProvider, messagingProvider, appCheckProvider) {\n    var _this3 = this;\n\n    var regionOrCustomDomain = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : DEFAULT_REGION;\n    var fetchImpl = arguments.length > 5 ? arguments[5] : undefined;\n\n    _classCallCheck(this, FunctionsService);\n\n    this.app = app;\n    this.fetchImpl = fetchImpl;\n    this.emulatorOrigin = null;\n    this.contextProvider = new ContextProvider(authProvider, messagingProvider, appCheckProvider); // Cancels all ongoing requests when resolved.\n\n    this.cancelAllRequests = new Promise(function (resolve) {\n      _this3.deleteService = function () {\n        return Promise.resolve(resolve());\n      };\n    }); // Resolve the region or custom domain overload by attempting to parse it.\n\n    try {\n      var url = new URL(regionOrCustomDomain);\n      this.customDomain = url.origin;\n      this.region = DEFAULT_REGION;\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain;\n    }\n  }\n\n  _createClass(FunctionsService, [{\n    key: \"_delete\",\n    value: function _delete() {\n      return this.deleteService();\n    }\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name - The name of the callable.\r\n     * @internal\r\n     */\n\n  }, {\n    key: \"_url\",\n    value: function _url(name) {\n      var projectId = this.app.options.projectId;\n\n      if (this.emulatorOrigin !== null) {\n        var origin = this.emulatorOrigin;\n        return \"\".concat(origin, \"/\").concat(projectId, \"/\").concat(this.region, \"/\").concat(name);\n      }\n\n      if (this.customDomain !== null) {\n        return \"\".concat(this.customDomain, \"/\").concat(name);\n      }\n\n      return \"https://\".concat(this.region, \"-\").concat(projectId, \".cloudfunctions.net/\").concat(name);\n    }\n  }]);\n\n  return FunctionsService;\n}();\n/**\r\n * Modify this instance to communicate with the Cloud Functions emulator.\r\n *\r\n * Note: this must be called before this instance has been used to do any operations.\r\n *\r\n * @param host The emulator host (ex: localhost)\r\n * @param port The emulator port (ex: 5001)\r\n * @public\r\n */\n\n\nfunction connectFunctionsEmulator$1(functionsInstance, host, port) {\n  functionsInstance.emulatorOrigin = \"http://\".concat(host, \":\").concat(port);\n}\n/**\r\n * Returns a reference to the callable https trigger with the given name.\r\n * @param name - The name of the trigger.\r\n * @public\r\n */\n\n\nfunction httpsCallable$1(functionsInstance, name, options) {\n  return function (data) {\n    return call(functionsInstance, name, data, options || {});\n  };\n}\n/**\r\n * Does an HTTP POST and returns the completed response.\r\n * @param url The url to post to.\r\n * @param body The JSON body of the post.\r\n * @param headers The HTTP headers to include in the request.\r\n * @return A Promise that will succeed when the request finishes.\r\n */\n\n\nfunction postJSON(_x, _x2, _x3, _x4) {\n  return _postJSON.apply(this, arguments);\n}\n/**\r\n * Calls a callable function asynchronously and returns the result.\r\n * @param name The name of the callable trigger.\r\n * @param data The data to pass as params to the function.s\r\n */\n\n\nfunction _postJSON() {\n  _postJSON = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(url, body, headers, fetchImpl) {\n    var response, json;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            headers['Content-Type'] = 'application/json';\n            _context5.prev = 1;\n            _context5.next = 4;\n            return fetchImpl(url, {\n              method: 'POST',\n              body: JSON.stringify(body),\n              headers: headers\n            });\n\n          case 4:\n            response = _context5.sent;\n            _context5.next = 10;\n            break;\n\n          case 7:\n            _context5.prev = 7;\n            _context5.t0 = _context5[\"catch\"](1);\n            return _context5.abrupt(\"return\", {\n              status: 0,\n              json: null\n            });\n\n          case 10:\n            json = null;\n            _context5.prev = 11;\n            _context5.next = 14;\n            return response.json();\n\n          case 14:\n            json = _context5.sent;\n            _context5.next = 19;\n            break;\n\n          case 17:\n            _context5.prev = 17;\n            _context5.t1 = _context5[\"catch\"](11);\n\n          case 19:\n            return _context5.abrupt(\"return\", {\n              status: response.status,\n              json: json\n            });\n\n          case 20:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[1, 7], [11, 17]]);\n  }));\n  return _postJSON.apply(this, arguments);\n}\n\nfunction call(_x5, _x6, _x7, _x8) {\n  return _call.apply(this, arguments);\n}\n\nfunction _call() {\n  _call = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(functionsInstance, name, data, options) {\n    var url, body, headers, context, timeout, failAfterHandle, response, error, responseData, decodedData;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            url = functionsInstance._url(name); // Encode any special types, such as dates, in the input data.\n\n            data = encode(data);\n            body = {\n              data: data\n            }; // Add a header for the authToken.\n\n            headers = {};\n            _context6.next = 6;\n            return functionsInstance.contextProvider.getContext();\n\n          case 6:\n            context = _context6.sent;\n\n            if (context.authToken) {\n              headers['Authorization'] = 'Bearer ' + context.authToken;\n            }\n\n            if (context.messagingToken) {\n              headers['Firebase-Instance-ID-Token'] = context.messagingToken;\n            }\n\n            if (context.appCheckToken !== null) {\n              headers['X-Firebase-AppCheck'] = context.appCheckToken;\n            } // Default timeout to 70s, but let the options override it.\n\n\n            timeout = options.timeout || 70000;\n            failAfterHandle = failAfter(timeout);\n            _context6.next = 14;\n            return Promise.race([postJSON(url, body, headers, functionsInstance.fetchImpl), failAfterHandle.promise, functionsInstance.cancelAllRequests]);\n\n          case 14:\n            response = _context6.sent;\n            // Always clear the failAfter timeout\n            failAfterHandle.cancel(); // If service was deleted, interrupted response throws an error.\n\n            if (response) {\n              _context6.next = 18;\n              break;\n            }\n\n            throw new FunctionsError('cancelled', 'Firebase Functions instance was deleted.');\n\n          case 18:\n            // Check for an error status, regardless of http status.\n            error = _errorForResponse(response.status, response.json);\n\n            if (!error) {\n              _context6.next = 21;\n              break;\n            }\n\n            throw error;\n\n          case 21:\n            if (response.json) {\n              _context6.next = 23;\n              break;\n            }\n\n            throw new FunctionsError('internal', 'Response is not valid JSON object.');\n\n          case 23:\n            responseData = response.json.data; // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n            // backwards compatibility.\n\n            if (typeof responseData === 'undefined') {\n              responseData = response.json.result;\n            }\n\n            if (!(typeof responseData === 'undefined')) {\n              _context6.next = 27;\n              break;\n            }\n\n            throw new FunctionsError('internal', 'Response is missing data field.');\n\n          case 27:\n            // Decode any special types, such as dates, in the returned data.\n            decodedData = decode(responseData);\n            return _context6.abrupt(\"return\", {\n              data: decodedData\n            });\n\n          case 29:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _call.apply(this, arguments);\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.7.11\";\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar AUTH_INTERNAL_NAME = 'auth-internal';\nvar APP_CHECK_INTERNAL_NAME = 'app-check-internal';\nvar MESSAGING_INTERNAL_NAME = 'messaging-internal';\n\nfunction registerFunctions(fetchImpl, variant) {\n  var factory = function factory(container, _ref) {\n    var regionOrCustomDomain = _ref.instanceIdentifier;\n    // Dependencies\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider(AUTH_INTERNAL_NAME);\n    var messagingProvider = container.getProvider(MESSAGING_INTERNAL_NAME);\n    var appCheckProvider = container.getProvider(APP_CHECK_INTERNAL_NAME); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n    return new FunctionsService(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain, fetchImpl);\n  };\n\n  _registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setMultipleInstances(true));\n\n  registerVersion(name, version, variant); // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n\n  registerVersion(name, version, 'esm2017');\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Returns a {@link Functions} instance for the given app.\r\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\r\n * @param regionOrCustomDomain - one of:\r\n *   a) The region the callable functions are located in (ex: us-central1)\r\n *   b) A custom domain hosting the callable functions (ex: https://mydomain.com)\r\n * @public\r\n */\n\n\nfunction getFunctions() {\n  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  var regionOrCustomDomain = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_REGION;\n\n  // Dependencies\n  var functionsProvider = _getProvider(getModularInstance(app), FUNCTIONS_TYPE);\n\n  var functionsInstance = functionsProvider.getImmediate({\n    identifier: regionOrCustomDomain\n  });\n  return functionsInstance;\n}\n/**\r\n * Modify this instance to communicate with the Cloud Functions emulator.\r\n *\r\n * Note: this must be called before this instance has been used to do any operations.\r\n *\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @public\r\n */\n\n\nfunction connectFunctionsEmulator(functionsInstance, host, port) {\n  connectFunctionsEmulator$1(getModularInstance(functionsInstance), host, port);\n}\n/**\r\n * Returns a reference to the callable HTTPS trigger with the given name.\r\n * @param name - The name of the trigger.\r\n * @public\r\n */\n\n\nfunction httpsCallable(functionsInstance, name, options) {\n  return httpsCallable$1(getModularInstance(functionsInstance), name, options);\n}\n/**\r\n * Cloud Functions for Firebase\r\n *\r\n * @packageDocumentation\r\n */\n\n\nregisterFunctions(fetch.bind(self));\nexport { connectFunctionsEmulator, getFunctions, httpsCallable };","map":{"version":3,"mappings":"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","names":["LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","o","f","result","key","hasOwnProperty","encode","data","Number","valueOf","isFinite","Object","prototype","toString","call","Date","toISOString","Array","isArray","map","x","Error","decode","json","value","isNaN","FUNCTIONS_TYPE","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","FunctionsError","code","message","details","FirebaseError","codeForHTTPStatus","status","_errorForResponse","bodyJSON","description","undefined","errorJSON","error","e","ContextProvider","authProvider","messagingProvider","appCheckProvider","auth","getImmediate","optional","messaging","get","then","appCheck","getToken","token","accessToken","self","Notification","permission","getAuthToken","authToken","getMessagingToken","messagingToken","getAppCheckToken","appCheckToken","DEFAULT_REGION","failAfter","millis","timer","promise","Promise","_","reject","setTimeout","cancel","clearTimeout","FunctionsService","app","regionOrCustomDomain","fetchImpl","contextProvider","cancelAllRequests","deleteService","resolve","url","URL","customDomain","origin","region","name","projectId","options","emulatorOrigin","connectFunctionsEmulator","functionsInstance","host","port","httpsCallable","postJSON","body","headers","method","JSON","stringify","response","_url","getContext","context","timeout","failAfterHandle","race","responseData","decodedData","AUTH_INTERNAL_NAME","APP_CHECK_INTERNAL_NAME","MESSAGING_INTERNAL_NAME","registerFunctions","variant","factory","container","instanceIdentifier","getProvider","_registerComponent","Component","setMultipleInstances","registerVersion","version","getFunctions","getApp","functionsProvider","_getProvider","getModularInstance","identifier","_connectFunctionsEmulator","_httpsCallable","fetch","bind"],"sources":["../src/serializer.ts","../src/constants.ts","../src/error.ts","../src/context.ts","../src/service.ts","../src/config.ts","../src/api.ts","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nconst UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\n\nfunction mapValues(\n  // { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  o: { [key: string]: any },\n  f: (arg0: unknown) => unknown\n): object {\n  const result: { [key: string]: unknown } = {};\n  for (const key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\n\n/**\n * Takes data and encodes it in a JSON-friendly way, such that types such as\n * Date are preserved.\n * @internal\n * @param data - Data to encode.\n */\nexport function encode(data: unknown): unknown {\n  if (data == null) {\n    return null;\n  }\n  if (data instanceof Number) {\n    data = data.valueOf();\n  }\n  if (typeof data === 'number' && isFinite(data)) {\n    // Any number in JS is safe to put directly in JSON and parse as a double\n    // without any loss of precision.\n    return data;\n  }\n  if (data === true || data === false) {\n    return data;\n  }\n  if (Object.prototype.toString.call(data) === '[object String]') {\n    return data;\n  }\n  if (data instanceof Date) {\n    return data.toISOString();\n  }\n  if (Array.isArray(data)) {\n    return data.map(x => encode(x));\n  }\n  if (typeof data === 'function' || typeof data === 'object') {\n    return mapValues(data!, x => encode(x));\n  }\n  // If we got this far, the data is not encodable.\n  throw new Error('Data cannot be encoded in JSON: ' + data);\n}\n\n/**\n * Takes data that's been encoded in a JSON-friendly form and returns a form\n * with richer datatypes, such as Dates, etc.\n * @internal\n * @param json - JSON to convert.\n */\nexport function decode(json: unknown): unknown {\n  if (json == null) {\n    return json;\n  }\n  if ((json as { [key: string]: unknown })['@type']) {\n    switch ((json as { [key: string]: unknown })['@type']) {\n      case LONG_TYPE:\n      // Fall through and handle this the same as unsigned.\n      case UNSIGNED_LONG_TYPE: {\n        // Technically, this could work return a valid number for malformed\n        // data if there was a number followed by garbage. But it's just not\n        // worth all the extra code to detect that case.\n        const value = Number((json as { [key: string]: unknown })['value']);\n        if (isNaN(value)) {\n          throw new Error('Data cannot be decoded from JSON: ' + json);\n        }\n        return value;\n      }\n      default: {\n        throw new Error('Data cannot be decoded from JSON: ' + json);\n      }\n    }\n  }\n  if (Array.isArray(json)) {\n    return json.map(x => decode(x));\n  }\n  if (typeof json === 'function' || typeof json === 'object') {\n    return mapValues(json!, x => decode(x));\n  }\n  // Anything else is safe to return.\n  return json;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Type constant for Firebase Functions.\n */\nexport const FUNCTIONS_TYPE = 'functions';\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FunctionsErrorCode } from './public-types';\nimport { decode } from './serializer';\nimport { HttpResponseBody } from './service';\nimport { FirebaseError } from '@firebase/util';\nimport { FUNCTIONS_TYPE } from './constants';\n\n/**\n * Standard error codes for different ways a request can fail, as defined by:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * This map is used primarily to convert from a backend error code string to\n * a client SDK error code string, and make sure it's in the supported set.\n */\nconst errorCodeMap: { [name: string]: FunctionsErrorCode } = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n\n/**\n * An explicit error that can be thrown from a handler to send an error to the\n * client that called the function.\n */\nexport class FunctionsError extends FirebaseError {\n  constructor(\n    /**\n     * A standard error code that will be returned to the client. This also\n     * determines the HTTP status code of the response, as defined in code.proto.\n     */\n    code: FunctionsErrorCode,\n    message?: string,\n    /**\n     * Extra data to be converted to JSON and included in the error response.\n     */\n    readonly details?: unknown\n  ) {\n    super(`${FUNCTIONS_TYPE}/${code}`, message || '');\n  }\n}\n\n/**\n * Takes an HTTP status code and returns the corresponding ErrorCode.\n * This is the standard HTTP status code -> error mapping defined in:\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\n *\n * @param status An HTTP status code.\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\n */\nfunction codeForHTTPStatus(status: number): FunctionsErrorCode {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n    default: // ignore\n  }\n  return 'unknown';\n}\n\n/**\n * Takes an HTTP response and returns the corresponding Error, if any.\n */\nexport function _errorForResponse(\n  status: number,\n  bodyJSON: HttpResponseBody | null\n): Error | null {\n  let code = codeForHTTPStatus(status);\n\n  // Start with reasonable defaults from the status code.\n  let description: string = code;\n\n  let details: unknown = undefined;\n\n  // Then look through the body for explicit details.\n  try {\n    const errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      const status = errorJSON.status;\n      if (typeof status === 'string') {\n        if (!errorCodeMap[status]) {\n          // They must've included an unknown error code in the body.\n          return new FunctionsError('internal', 'internal');\n        }\n        code = errorCodeMap[status];\n\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status;\n      }\n\n      const message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n\n  return new FunctionsError(code, description, details);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Provider } from '@firebase/component';\nimport {\n  AppCheckInternalComponentName,\n  FirebaseAppCheckInternal\n} from '@firebase/app-check-interop-types';\nimport {\n  MessagingInternal,\n  MessagingInternalComponentName\n} from '@firebase/messaging-interop-types';\nimport {\n  FirebaseAuthInternal,\n  FirebaseAuthInternalName\n} from '@firebase/auth-interop-types';\n\n/**\n * The metadata that should be supplied with function calls.\n * @internal\n */\nexport interface Context {\n  authToken?: string;\n  messagingToken?: string;\n  appCheckToken: string | null;\n}\n\n/**\n * Helper class to get metadata that should be included with a function call.\n * @internal\n */\nexport class ContextProvider {\n  private auth: FirebaseAuthInternal | null = null;\n  private messaging: MessagingInternal | null = null;\n  private appCheck: FirebaseAppCheckInternal | null = null;\n  constructor(\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<MessagingInternalComponentName>,\n    appCheckProvider: Provider<AppCheckInternalComponentName>\n  ) {\n    this.auth = authProvider.getImmediate({ optional: true });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n\n    if (!this.auth) {\n      authProvider.get().then(\n        auth => (this.auth = auth),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.messaging) {\n      messagingProvider.get().then(\n        messaging => (this.messaging = messaging),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n\n    if (!this.appCheck) {\n      appCheckProvider.get().then(\n        appCheck => (this.appCheck = appCheck),\n        () => {\n          /* get() never rejects */\n        }\n      );\n    }\n  }\n\n  async getAuthToken(): Promise<string | undefined> {\n    if (!this.auth) {\n      return undefined;\n    }\n\n    try {\n      const token = await this.auth.getToken();\n      return token?.accessToken;\n    } catch (e) {\n      // If there's any error when trying to get the auth token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getMessagingToken(): Promise<string | undefined> {\n    if (\n      !this.messaging ||\n      !('Notification' in self) ||\n      Notification.permission !== 'granted'\n    ) {\n      return undefined;\n    }\n\n    try {\n      return await this.messaging.getToken();\n    } catch (e) {\n      // We don't warn on this, because it usually means messaging isn't set up.\n      // console.warn('Failed to retrieve instance id token.', e);\n\n      // If there's any error when trying to get the token, leave it off.\n      return undefined;\n    }\n  }\n\n  async getAppCheckToken(): Promise<string | null> {\n    if (this.appCheck) {\n      const result = await this.appCheck.getToken();\n      if (result.error) {\n        // Do not send the App Check header to the functions endpoint if\n        // there was an error from the App Check exchange endpoint. The App\n        // Check SDK will already have logged the error to console.\n        return null;\n      }\n      return result.token;\n    }\n    return null;\n  }\n\n  async getContext(): Promise<Context> {\n    const authToken = await this.getAuthToken();\n    const messagingToken = await this.getMessagingToken();\n    const appCheckToken = await this.getAppCheckToken();\n    return { authToken, messagingToken, appCheckToken };\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport {\n  HttpsCallable,\n  HttpsCallableResult,\n  HttpsCallableOptions\n} from './public-types';\nimport { _errorForResponse, FunctionsError } from './error';\nimport { ContextProvider } from './context';\nimport { encode, decode } from './serializer';\nimport { Provider } from '@firebase/component';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { MessagingInternalComponentName } from '@firebase/messaging-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\n\nexport const DEFAULT_REGION = 'us-central1';\n\n/**\n * The response to an http request.\n */\ninterface HttpResponse {\n  status: number;\n  json: HttpResponseBody | null;\n}\n/**\n * Describes the shape of the HttpResponse body.\n * It makes functions that would otherwise take {} able to access the\n * possible elements in the body more easily\n */\nexport interface HttpResponseBody {\n  data?: unknown;\n  result?: unknown;\n  error?: {\n    message?: unknown;\n    status?: unknown;\n    details?: unknown;\n  };\n}\n\ninterface CancellablePromise<T> {\n  promise: Promise<T>;\n  cancel: () => void;\n}\n\n/**\n * Returns a Promise that will be rejected after the given duration.\n * The error will be of type FunctionsError.\n *\n * @param millis Number of milliseconds to wait before rejecting.\n */\nfunction failAfter(millis: number): CancellablePromise<never> {\n  // Node timers and browser timers are fundamentally incompatible, but we\n  // don't care about the value here\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  let timer: any | null = null;\n  return {\n    promise: new Promise((_, reject) => {\n      timer = setTimeout(() => {\n        reject(new FunctionsError('deadline-exceeded', 'deadline-exceeded'));\n      }, millis);\n    }),\n    cancel: () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    }\n  };\n}\n\n/**\n * The main class for the Firebase Functions SDK.\n * @internal\n */\nexport class FunctionsService implements _FirebaseService {\n  readonly contextProvider: ContextProvider;\n  emulatorOrigin: string | null = null;\n  cancelAllRequests: Promise<void>;\n  deleteService!: () => Promise<void>;\n  region: string;\n  customDomain: string | null;\n\n  /**\n   * Creates a new Functions service for the given app.\n   * @param app - The FirebaseApp to use.\n   */\n  constructor(\n    readonly app: FirebaseApp,\n    authProvider: Provider<FirebaseAuthInternalName>,\n    messagingProvider: Provider<MessagingInternalComponentName>,\n    appCheckProvider: Provider<AppCheckInternalComponentName>,\n    regionOrCustomDomain: string = DEFAULT_REGION,\n    readonly fetchImpl: typeof fetch\n  ) {\n    this.contextProvider = new ContextProvider(\n      authProvider,\n      messagingProvider,\n      appCheckProvider\n    );\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(resolve => {\n      this.deleteService = () => {\n        return Promise.resolve(resolve());\n      };\n    });\n\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      const url = new URL(regionOrCustomDomain);\n      this.customDomain = url.origin;\n      this.region = DEFAULT_REGION;\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain;\n    }\n  }\n\n  _delete(): Promise<void> {\n    return this.deleteService();\n  }\n\n  /**\n   * Returns the URL for a callable with the given name.\n   * @param name - The name of the callable.\n   * @internal\n   */\n  _url(name: string): string {\n    const projectId = this.app.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      const origin = this.emulatorOrigin;\n      return `${origin}/${projectId}/${this.region}/${name}`;\n    }\n\n    if (this.customDomain !== null) {\n      return `${this.customDomain}/${name}`;\n    }\n\n    return `https://${this.region}-${projectId}.cloudfunctions.net/${name}`;\n  }\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host The emulator host (ex: localhost)\n * @param port The emulator port (ex: 5001)\n * @public\n */\nexport function connectFunctionsEmulator(\n  functionsInstance: FunctionsService,\n  host: string,\n  port: number\n): void {\n  functionsInstance.emulatorOrigin = `http://${host}:${port}`;\n}\n\n/**\n * Returns a reference to the callable https trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<RequestData, ResponseData>(\n  functionsInstance: FunctionsService,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData> {\n  return (data => {\n    return call(functionsInstance, name, data, options || {});\n  }) as HttpsCallable<RequestData, ResponseData>;\n}\n\n/**\n * Does an HTTP POST and returns the completed response.\n * @param url The url to post to.\n * @param body The JSON body of the post.\n * @param headers The HTTP headers to include in the request.\n * @return A Promise that will succeed when the request finishes.\n */\nasync function postJSON(\n  url: string,\n  body: unknown,\n  headers: { [key: string]: string },\n  fetchImpl: typeof fetch\n): Promise<HttpResponse> {\n  headers['Content-Type'] = 'application/json';\n\n  let response: Response;\n  try {\n    response = await fetchImpl(url, {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers\n    });\n  } catch (e) {\n    // This could be an unhandled error on the backend, or it could be a\n    // network error. There's no way to know, since an unhandled error on the\n    // backend will fail to set the proper CORS header, and thus will be\n    // treated as a network error by fetch.\n    return {\n      status: 0,\n      json: null\n    };\n  }\n  let json: HttpResponseBody | null = null;\n  try {\n    json = await response.json();\n  } catch (e) {\n    // If we fail to parse JSON, it will fail the same as an empty body.\n  }\n  return {\n    status: response.status,\n    json\n  };\n}\n\n/**\n * Calls a callable function asynchronously and returns the result.\n * @param name The name of the callable trigger.\n * @param data The data to pass as params to the function.s\n */\nasync function call(\n  functionsInstance: FunctionsService,\n  name: string,\n  data: unknown,\n  options: HttpsCallableOptions\n): Promise<HttpsCallableResult> {\n  const url = functionsInstance._url(name);\n\n  // Encode any special types, such as dates, in the input data.\n  data = encode(data);\n  const body = { data };\n\n  // Add a header for the authToken.\n  const headers: { [key: string]: string } = {};\n  const context = await functionsInstance.contextProvider.getContext();\n  if (context.authToken) {\n    headers['Authorization'] = 'Bearer ' + context.authToken;\n  }\n  if (context.messagingToken) {\n    headers['Firebase-Instance-ID-Token'] = context.messagingToken;\n  }\n  if (context.appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = context.appCheckToken;\n  }\n\n  // Default timeout to 70s, but let the options override it.\n  const timeout = options.timeout || 70000;\n\n  const failAfterHandle = failAfter(timeout);\n  const response = await Promise.race([\n    postJSON(url, body, headers, functionsInstance.fetchImpl),\n    failAfterHandle.promise,\n    functionsInstance.cancelAllRequests\n  ]);\n\n  // Always clear the failAfter timeout\n  failAfterHandle.cancel();\n\n  // If service was deleted, interrupted response throws an error.\n  if (!response) {\n    throw new FunctionsError(\n      'cancelled',\n      'Firebase Functions instance was deleted.'\n    );\n  }\n\n  // Check for an error status, regardless of http status.\n  const error = _errorForResponse(response.status, response.json);\n  if (error) {\n    throw error;\n  }\n\n  if (!response.json) {\n    throw new FunctionsError('internal', 'Response is not valid JSON object.');\n  }\n\n  let responseData = response.json.data;\n  // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n  // backwards compatibility.\n  if (typeof responseData === 'undefined') {\n    responseData = response.json.result;\n  }\n  if (typeof responseData === 'undefined') {\n    // Consider the response malformed.\n    throw new FunctionsError('internal', 'Response is missing data field.');\n  }\n\n  // Decode any special types, such as dates, in the returned data.\n  const decodedData = decode(responseData);\n\n  return { data: decodedData };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { FunctionsService } from './service';\nimport {\n  Component,\n  ComponentType,\n  ComponentContainer,\n  InstanceFactory\n} from '@firebase/component';\nimport { FUNCTIONS_TYPE } from './constants';\nimport { FirebaseAuthInternalName } from '@firebase/auth-interop-types';\nimport { AppCheckInternalComponentName } from '@firebase/app-check-interop-types';\nimport { MessagingInternalComponentName } from '@firebase/messaging-interop-types';\nimport { name, version } from '../package.json';\n\nconst AUTH_INTERNAL_NAME: FirebaseAuthInternalName = 'auth-internal';\nconst APP_CHECK_INTERNAL_NAME: AppCheckInternalComponentName =\n  'app-check-internal';\nconst MESSAGING_INTERNAL_NAME: MessagingInternalComponentName =\n  'messaging-internal';\n\nexport function registerFunctions(\n  fetchImpl: typeof fetch,\n  variant?: string\n): void {\n  const factory: InstanceFactory<'functions'> = (\n    container: ComponentContainer,\n    { instanceIdentifier: regionOrCustomDomain }\n  ) => {\n    // Dependencies\n    const app = container.getProvider('app').getImmediate();\n    const authProvider = container.getProvider(AUTH_INTERNAL_NAME);\n    const messagingProvider = container.getProvider(MESSAGING_INTERNAL_NAME);\n    const appCheckProvider = container.getProvider(APP_CHECK_INTERNAL_NAME);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new FunctionsService(\n      app,\n      authProvider,\n      messagingProvider,\n      appCheckProvider,\n      regionOrCustomDomain,\n      fetchImpl\n    );\n  };\n\n  _registerComponent(\n    new Component(\n      FUNCTIONS_TYPE,\n      factory,\n      ComponentType.PUBLIC\n    ).setMultipleInstances(true)\n  );\n\n  registerVersion(name, version, variant);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _getProvider, FirebaseApp, getApp } from '@firebase/app';\nimport { FUNCTIONS_TYPE } from './constants';\n\nimport { Provider } from '@firebase/component';\nimport { Functions, HttpsCallableOptions, HttpsCallable } from './public-types';\nimport {\n  FunctionsService,\n  DEFAULT_REGION,\n  connectFunctionsEmulator as _connectFunctionsEmulator,\n  httpsCallable as _httpsCallable\n} from './service';\nimport { getModularInstance } from '@firebase/util';\n\nexport * from './public-types';\n\n/**\n * Returns a {@link Functions} instance for the given app.\n * @param app - The {@link @firebase/app#FirebaseApp} to use.\n * @param regionOrCustomDomain - one of:\n *   a) The region the callable functions are located in (ex: us-central1)\n *   b) A custom domain hosting the callable functions (ex: https://mydomain.com)\n * @public\n */\nexport function getFunctions(\n  app: FirebaseApp = getApp(),\n  regionOrCustomDomain: string = DEFAULT_REGION\n): Functions {\n  // Dependencies\n  const functionsProvider: Provider<'functions'> = _getProvider(\n    getModularInstance(app),\n    FUNCTIONS_TYPE\n  );\n  const functionsInstance = functionsProvider.getImmediate({\n    identifier: regionOrCustomDomain\n  });\n  return functionsInstance;\n}\n\n/**\n * Modify this instance to communicate with the Cloud Functions emulator.\n *\n * Note: this must be called before this instance has been used to do any operations.\n *\n * @param host - The emulator host (ex: localhost)\n * @param port - The emulator port (ex: 5001)\n * @public\n */\nexport function connectFunctionsEmulator(\n  functionsInstance: Functions,\n  host: string,\n  port: number\n): void {\n  _connectFunctionsEmulator(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    host,\n    port\n  );\n}\n\n/**\n * Returns a reference to the callable HTTPS trigger with the given name.\n * @param name - The name of the trigger.\n * @public\n */\nexport function httpsCallable<RequestData = unknown, ResponseData = unknown>(\n  functionsInstance: Functions,\n  name: string,\n  options?: HttpsCallableOptions\n): HttpsCallable<RequestData, ResponseData> {\n  return _httpsCallable<RequestData, ResponseData>(\n    getModularInstance<FunctionsService>(functionsInstance as FunctionsService),\n    name,\n    options\n  );\n}\n","/**\n * Cloud Functions for Firebase\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { registerFunctions } from './config';\n\nexport * from './api';\n\nregisterFunctions(fetch.bind(self));\n"]},"metadata":{},"sourceType":"module"}