{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\nexport default {\n  mounted: function mounted() {\n    var lat = 51.505,\n        long = -0.03;\n    var myMap = L.map(\"map\").setView([lat, long], 13);\n    var marker = L.marker([lat, long]).addTo(myMap).bindPopup(\"<h2> Initial Location </h2> lat:<b>\".concat(lat, \"</b>, long:<b>\").concat(long, \"</b>\"));\n    var circle = L.circle([lat, long], {\n      color: \"red\",\n      fillColor: \"#f03\",\n      fillOpacity: 0.5,\n      radius: 500\n    }).addTo(myMap); //set up Leaflet\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 16,\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(myMap); //set up Pusher\n\n    var pusher = new Pusher(\"your_pusher_app_key\", {\n      cluster: \"eu\",\n      forceTLS: false\n    }); //Subscribe to the channel we specified in our Adonis Application\n\n    var channel = pusher.subscribe(\"location-channel\");\n    channel.bind(\"new-location\", function (data) {\n      var _data$location = data.location,\n          lat = _data$location.lat,\n          long = _data$location.long; //ES6 DESTRUCTURING\n\n      myMap.setView([lat, long], 13);\n      var marker = L.marker([lat, long]).bindPopup(\"<h2> Your Position </h2> lat:<b>\".concat(lat, \"</b>, long:<b>\").concat(long, \"</b>\")).addTo(myMap);\n      var circle = L.circle([lat, long], {\n        color: \"red\",\n        fillColor: \"#f03\",\n        fillOpacity: 0.5,\n        radius: 500\n      }).addTo(myMap);\n    });\n    this.loadLocations(myMap);\n    this.sendLocation();\n  },\n  methods: {\n    loadLocations: function loadLocations(map) {\n      axios.get(\"locations\").then(function (res) {\n        // const myMap = L.map(\"map\");\n        console.log(res.data);\n        res.data.forEach(function (location) {\n          // alert(\"location\");\n          var lat = location.lat,\n              long = location.long; //ES6 DESTRUCTURING\n\n          lat = parseFloat(lat);\n          long = parseFloat(long);\n          var marker = L.marker([lat, long]).addTo(map).bindPopup(\"<h2> Position </h2> lat:<b>\".concat(lat, \"</b>, long:<b>\").concat(long, \"</b>\"));\n          var circle = L.circle([lat, long], {\n            color: \"red\",\n            fillColor: \"#f03\",\n            fillOpacity: 0.5,\n            radius: 500\n          }).addTo(map);\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    sendLocation: function sendLocation() {\n      if (\"geolocation\" in navigator) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          axios.post(\"locations\", {\n            lat: position.coords.latitude,\n            long: position.coords.longitude\n          }).then(function (res) {\n            console.log(res.data.msg);\n          }).catch(function (err) {\n            return console.log(err);\n          });\n        });\n      } else {\n        alert(\"Your browser doesn't support HTML5 geolocation API\");\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;AAKA;AACAA,SADA,qBACA;AACA;AAAA;AACA;AAEA,uCACAC,KADA,CACAC,KADA,EAEAC,SAFA,8CAGAC,GAHA,2BAGAC,IAHA;AAKA;AACAC,kBADA;AAEAC,uBAFA;AAGAC,sBAHA;AAIAC;AAJA,OAKAR,KALA,CAKAC,KALA,EATA,CAeA;;AAEAQ;AACAC,iBADA;AAEAC,mBACA;AAHA,OAIAX,KAJA,CAIAC,KAJA,EAjBA,CAuBA;;AACA;AACAW,mBADA;AAEAC;AAFA,OAxBA,CA6BA;;AACA;AACAC;AACA;AAAA;AAAA,qCADA,CACA;;AACAb;AACA,yCACAC,SADA,2CAEAC,GAFA,2BAEAC,IAFA,WAIAJ,KAJA,CAIAC,KAJA;AAKA;AACAI,oBADA;AAEAC,yBAFA;AAGAC,wBAHA;AAIAC;AAJA,SAKAR,KALA,CAKAC,KALA;AAMA,KAdA;AAgBA;AACA;AAEA,GAnDA;AAoDAc;AACAC,iBADA,yBACAC,GADA,EACA;AACAC,YACAC,GADA,CACA,WADA,EAEAC,IAFA,CAEA;AACA;AACAC;AACAC;AACA;AACA;AAAA,mCAFA,CAEA;;AACAnB;AACAC;AACA,6CACAJ,KADA,CACAiB,GADA,EAEAf,SAFA,sCAGAC,GAHA,2BAGAC,IAHA;AAKA;AACAC,wBADA;AAEAC,6BAFA;AAGAC,4BAHA;AAIAC;AAJA,aAKAR,KALA,CAKAiB,GALA;AAMA,SAhBA;AAiBA,OAtBA,EAuBAM,KAvBA,CAuBA;AACAF;AACA,OAzBA;AA0BA,KA5BA;AA6BAG,gBA7BA,0BA6BA;AACA;AACAC;AACAP;AACAf,yCADA;AAEAC;AAFA,aAIAgB,IAJA,CAIA;AACAC;AACA,WANA,EAOAE,KAPA,CAOA;AAAA;AAAA,WAPA;AAQA,SATA;AAUA,OAXA,MAWA;AACAG;AACA;AACA;AA5CA;AApDA","names":["mounted","addTo","myMap","bindPopup","lat","long","color","fillColor","fillOpacity","radius","L","maxZoom","attribution","cluster","forceTLS","channel","methods","loadLocations","map","axios","get","then","console","res","catch","sendLocation","navigator","alert"],"sourceRoot":"src/components","sources":["AppMap.vue"],"sourcesContent":[" <template>\r\n      <div id=\"map\"></div>\r\n    </template>\r\n    \r\n    <script>\r\n    export default {\r\n      mounted() {\r\n        let lat = 51.505, long = -0.03;\r\n        const myMap = L.map(\"map\").setView([lat, long], 13);\r\n        \r\n        var marker = L.marker([lat, long])\r\n          .addTo(myMap)\r\n          .bindPopup(\r\n            `<h2> Initial Location </h2> lat:<b>${lat}</b>, long:<b>${long}</b>`\r\n          );\r\n        var circle = L.circle([lat, long], {\r\n          color: \"red\",\r\n          fillColor: \"#f03\",\r\n          fillOpacity: 0.5,\r\n          radius: 500\r\n        }).addTo(myMap);\r\n        //set up Leaflet\r\n       \r\n        L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\r\n          maxZoom: 16,\r\n          attribution:\r\n            '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n        }).addTo(myMap);\r\n        \r\n        //set up Pusher\r\n        var pusher = new Pusher(\"your_pusher_app_key\", {\r\n          cluster: \"eu\",\r\n          forceTLS: false\r\n        });\r\n        \r\n        //Subscribe to the channel we specified in our Adonis Application\r\n        let channel = pusher.subscribe(\"location-channel\");\r\n        channel.bind(\"new-location\", data => {\r\n          let { lat, long } = data.location; //ES6 DESTRUCTURING\r\n          myMap.setView([lat, long], 13);\r\n          var marker = L.marker([lat, long])\r\n            .bindPopup(\r\n              `<h2> Your Position </h2> lat:<b>${lat}</b>, long:<b>${long}</b>`\r\n            )\r\n            .addTo(myMap);\r\n          var circle = L.circle([lat, long], {\r\n            color: \"red\",\r\n            fillColor: \"#f03\",\r\n            fillOpacity: 0.5,\r\n            radius: 500\r\n          }).addTo(myMap);\r\n        });\r\n        \r\n        this.loadLocations(myMap);\r\n        this.sendLocation();\r\n        \r\n      },\r\n      methods: {\r\n        loadLocations(map) {\r\n          axios\r\n            .get(\"locations\")\r\n            .then(res => {\r\n              // const myMap = L.map(\"map\");\r\n              console.log(res.data);\r\n              res.data.forEach(location => {\r\n                // alert(\"location\");\r\n                let { lat, long } = location; //ES6 DESTRUCTURING\r\n                lat = parseFloat(lat);\r\n                long = parseFloat(long);\r\n                var marker = L.marker([lat, long])\r\n                  .addTo(map)\r\n                  .bindPopup(\r\n                    `<h2> Position </h2> lat:<b>${lat}</b>, long:<b>${long}</b>`\r\n                  );\r\n                var circle = L.circle([lat, long], {\r\n                  color: \"red\",\r\n                  fillColor: \"#f03\",\r\n                  fillOpacity: 0.5,\r\n                  radius: 500\r\n                }).addTo(map);\r\n              });\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n            });\r\n        },\r\n        sendLocation() {\r\n          if (\"geolocation\" in navigator) {\r\n            navigator.geolocation.getCurrentPosition(function(position) {\r\n              axios.post(\"locations\", {\r\n                  lat: position.coords.latitude,\r\n                  long: position.coords.longitude\r\n                })\r\n                .then(res => {\r\n                  console.log(res.data.msg);\r\n                })\r\n                .catch(err => console.log(err));\r\n            });\r\n          } else {\r\n            alert(\"Your browser doesn't support HTML5 geolocation API\");\r\n          }\r\n        }\r\n      }\r\n    };\r\n    </script>\r\n    <style scoped>\r\n    #map {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    </style>"]},"metadata":{},"sourceType":"module"}