{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.split.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n/*\n * ScrollSpy class definition\n */\n\n\nimport observeDom from '../../utils/observe-dom';\nimport warn from '../../utils/warn';\nimport { isElement, isVisible, closest, matches, getBCR, offset, position, selectAll, select, hasClass, addClass, removeClass, getAttr, eventOn, eventOff } from '../../utils/dom';\nimport { isString, isUndefined } from '../../utils/inspect';\nimport { toString as objectToString } from '../../utils/object';\n/*\n * Constants / Defaults\n */\n\nvar NAME = 'v-b-scrollspy';\nvar ACTIVATE_EVENT = 'bv::scrollspy::activate';\nvar Default = {\n  element: 'body',\n  offset: 10,\n  method: 'auto',\n  throttle: 75\n};\nvar DefaultType = {\n  element: '(string|element|component)',\n  offset: 'number',\n  method: 'string',\n  throttle: 'number'\n};\nvar ClassName = {\n  DROPDOWN_ITEM: 'dropdown-item',\n  ACTIVE: 'active'\n};\nvar Selector = {\n  ACTIVE: '.active',\n  NAV_LIST_GROUP: '.nav, .list-group',\n  NAV_LINKS: '.nav-link',\n  NAV_ITEMS: '.nav-item',\n  LIST_ITEMS: '.list-group-item',\n  DROPDOWN: '.dropdown, .dropup',\n  DROPDOWN_ITEMS: '.dropdown-item',\n  DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\nvar OffsetMethod = {\n  OFFSET: 'offset',\n  POSITION: 'position' // HREFs must end with a hash followed by at least one non-hash character.\n  // HREFs in the links are assumed to point to non-external links.\n  // Comparison to the current page base URL is not performed!\n\n};\nvar HREF_REGEX = /^.*(#[^#]+)$/; // Transition Events\n\nvar TransitionEndEvents = ['webkitTransitionEnd', 'transitionend', 'otransitionend', 'oTransitionEnd']; // Options for events\n\nvar EventOptions = {\n  passive: true,\n  capture: false\n  /*\n   * Utility Methods\n   */\n  // Better var type detection\n\n};\n\nvar toType = function toType(obj)\n/* istanbul ignore next: not easy to test */\n{\n  return objectToString(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}; // Check config properties for expected types\n\n\nvar typeCheckConfig = function typeCheckConfig(componentName, config, configTypes)\n/* istanbul ignore next: not easy to test */\n{\n  for (var property in configTypes) {\n    if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n      var expectedTypes = configTypes[property];\n      var value = config[property];\n      var valueType = value && isElement(value) ? 'element' : toType(value); // handle Vue instances\n\n      valueType = value && value._isVue ? 'component' : valueType;\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        /* istanbul ignore next */\n        warn(\"\".concat(componentName, \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\"\"));\n      }\n    }\n  }\n};\n/*\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n/* istanbul ignore next: not easy to test */\n\n\nvar ScrollSpy\n/* istanbul ignore next: not easy to test */\n= /*#__PURE__*/function () {\n  function ScrollSpy(element, config, $root) {\n    _classCallCheck(this, ScrollSpy); // The element we activate links in\n\n\n    this.$el = element;\n    this.$scroller = null;\n    this.$selector = [Selector.NAV_LINKS, Selector.LIST_ITEMS, Selector.DROPDOWN_ITEMS].join(',');\n    this.$offsets = [];\n    this.$targets = [];\n    this.$activeTarget = null;\n    this.$scrollHeight = 0;\n    this.$resizeTimeout = null;\n    this.$obs_scroller = null;\n    this.$obs_targets = null;\n    this.$root = $root || null;\n    this.$config = null;\n    this.updateConfig(config);\n  }\n\n  _createClass(ScrollSpy, [{\n    key: \"updateConfig\",\n    value: function updateConfig(config, $root) {\n      if (this.$scroller) {\n        // Just in case out scroll element has changed\n        this.unlisten();\n        this.$scroller = null;\n      }\n\n      var cfg = _objectSpread({}, this.constructor.Default, {}, config);\n\n      if ($root) {\n        this.$root = $root;\n      }\n\n      typeCheckConfig(this.constructor.Name, cfg, this.constructor.DefaultType);\n      this.$config = cfg;\n\n      if (this.$root) {\n        var self = this;\n        this.$root.$nextTick(function () {\n          self.listen();\n        });\n      } else {\n        this.listen();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.unlisten();\n      clearTimeout(this.$resizeTimeout);\n      this.$resizeTimeout = null;\n      this.$el = null;\n      this.$config = null;\n      this.$scroller = null;\n      this.$selector = null;\n      this.$offsets = null;\n      this.$targets = null;\n      this.$activeTarget = null;\n      this.$scrollHeight = null;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n\n      var scroller = this.getScroller();\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOn(scroller, 'scroll', this, EventOptions);\n      }\n\n      eventOn(window, 'scroll', this, EventOptions);\n      eventOn(window, 'resize', this, EventOptions);\n      eventOn(window, 'orientationchange', this, EventOptions);\n      TransitionEndEvents.forEach(function (evtName) {\n        eventOn(window, evtName, _this, EventOptions);\n      });\n      this.setObservers(true); // Schedule a refresh\n\n      this.handleEvent('refresh');\n    }\n  }, {\n    key: \"unlisten\",\n    value: function unlisten() {\n      var _this2 = this;\n\n      var scroller = this.getScroller();\n      this.setObservers(false);\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOff(scroller, 'scroll', this, EventOptions);\n      }\n\n      eventOff(window, 'scroll', this, EventOptions);\n      eventOff(window, 'resize', this, EventOptions);\n      eventOff(window, 'orientationchange', this, EventOptions);\n      TransitionEndEvents.forEach(function (evtName) {\n        eventOff(window, evtName, _this2, EventOptions);\n      });\n    }\n  }, {\n    key: \"setObservers\",\n    value: function setObservers(on) {\n      var _this3 = this; // We observe both the scroller for content changes, and the target links\n\n\n      if (this.$obs_scroller) {\n        this.$obs_scroller.disconnect();\n        this.$obs_scroller = null;\n      }\n\n      if (this.$obs_targets) {\n        this.$obs_targets.disconnect();\n        this.$obs_targets = null;\n      }\n\n      if (on) {\n        this.$obs_targets = observeDom(this.$el, function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          attributes: true,\n          attributeFilter: ['href']\n        });\n        this.$obs_scroller = observeDom(this.getScroller(), function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n          attributes: true,\n          attributeFilter: ['id', 'style', 'class']\n        });\n      }\n    } // General event handler\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(evt) {\n      var type = isString(evt) ? evt : evt.type;\n      var self = this;\n\n      var resizeThrottle = function resizeThrottle() {\n        if (!self.$resizeTimeout) {\n          self.$resizeTimeout = setTimeout(function () {\n            self.refresh();\n            self.process();\n            self.$resizeTimeout = null;\n          }, self.$config.throttle);\n        }\n      };\n\n      if (type === 'scroll') {\n        if (!this.$obs_scroller) {\n          // Just in case we are added to the DOM before the scroll target is\n          // We re-instantiate our listeners, just in case\n          this.listen();\n        }\n\n        this.process();\n      } else if (/(resize|orientationchange|mutation|refresh)/.test(type)) {\n        // Postpone these events by throttle time\n        resizeThrottle();\n      }\n    } // Refresh the list of target links on the element we are applied to\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this4 = this;\n\n      var scroller = this.getScroller();\n\n      if (!scroller) {\n        return;\n      }\n\n      var autoMethod = scroller !== scroller.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;\n      var method = this.$config.method === 'auto' ? autoMethod : this.$config.method;\n      var methodFn = method === OffsetMethod.POSITION ? position : offset;\n      var offsetBase = method === OffsetMethod.POSITION ? this.getScrollTop() : 0;\n      this.$offsets = [];\n      this.$targets = [];\n      this.$scrollHeight = this.getScrollHeight(); // Find all the unique link HREFs that we will control\n\n      selectAll(this.$selector, this.$el) // Get HREF value\n      .map(function (link) {\n        return getAttr(link, 'href');\n      }) // Filter out HREFs that do not match our RegExp\n      .filter(function (href) {\n        return href && HREF_REGEX.test(href || '');\n      }) // Find all elements with ID that match HREF hash\n      .map(function (href) {\n        // Convert HREF into an ID (including # at beginning)\n        var id = href.replace(HREF_REGEX, '$1').trim();\n\n        if (!id) {\n          return null;\n        } // Find the element with the ID specified by id\n\n\n        var el = select(id, scroller);\n\n        if (el && isVisible(el)) {\n          return {\n            offset: parseInt(methodFn(el).top, 10) + offsetBase,\n            target: id\n          };\n        }\n\n        return null;\n      }).filter(Boolean) // Sort them by their offsets (smallest first)\n      .sort(function (a, b) {\n        return a.offset - b.offset;\n      }) // record only unique targets/offsets\n      .reduce(function (memo, item) {\n        if (!memo[item.target]) {\n          _this4.$offsets.push(item.offset);\n\n          _this4.$targets.push(item.target);\n\n          memo[item.target] = true;\n        }\n\n        return memo;\n      }, {}); // Return this for easy chaining\n\n      return this;\n    } // Handle activating/clearing\n\n  }, {\n    key: \"process\",\n    value: function process() {\n      var scrollTop = this.getScrollTop() + this.$config.offset;\n      var scrollHeight = this.getScrollHeight();\n      var maxScroll = this.$config.offset + scrollHeight - this.getOffsetHeight();\n\n      if (this.$scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      if (scrollTop >= maxScroll) {\n        var target = this.$targets[this.$targets.length - 1];\n\n        if (this.$activeTarget !== target) {\n          this.activate(target);\n        }\n\n        return;\n      }\n\n      if (this.$activeTarget && scrollTop < this.$offsets[0] && this.$offsets[0] > 0) {\n        this.$activeTarget = null;\n        this.clear();\n        return;\n      }\n\n      for (var i = this.$offsets.length; i--;) {\n        var isActiveTarget = this.$activeTarget !== this.$targets[i] && scrollTop >= this.$offsets[i] && (isUndefined(this.$offsets[i + 1]) || scrollTop < this.$offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this.activate(this.$targets[i]);\n        }\n      }\n    }\n  }, {\n    key: \"getScroller\",\n    value: function getScroller() {\n      if (this.$scroller) {\n        return this.$scroller;\n      }\n\n      var scroller = this.$config.element;\n\n      if (!scroller) {\n        return null;\n      } else if (isElement(scroller.$el)) {\n        scroller = scroller.$el;\n      } else if (isString(scroller)) {\n        scroller = select(scroller);\n      }\n\n      if (!scroller) {\n        return null;\n      }\n\n      this.$scroller = scroller.tagName === 'BODY' ? window : scroller;\n      return this.$scroller;\n    }\n  }, {\n    key: \"getScrollTop\",\n    value: function getScrollTop() {\n      var scroller = this.getScroller();\n      return scroller === window ? scroller.pageYOffset : scroller.scrollTop;\n    }\n  }, {\n    key: \"getScrollHeight\",\n    value: function getScrollHeight() {\n      return this.getScroller().scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n    }\n  }, {\n    key: \"getOffsetHeight\",\n    value: function getOffsetHeight() {\n      var scroller = this.getScroller();\n      return scroller === window ? window.innerHeight : getBCR(scroller).height;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(target) {\n      var _this5 = this;\n\n      this.$activeTarget = target;\n      this.clear(); // Grab the list of target links (<a href=\"{$target}\">)\n\n      var links = selectAll(this.$selector // Split out the base selectors\n      .split(',') // Map to a selector that matches links with HREF ending in the ID (including '#')\n      .map(function (selector) {\n        return \"\".concat(selector, \"[href$=\\\"\").concat(target, \"\\\"]\");\n      }) // Join back into a single selector string\n      .join(','), this.$el);\n      links.forEach(function (link) {\n        if (hasClass(link, ClassName.DROPDOWN_ITEM)) {\n          // This is a dropdown item, so find the .dropdown-toggle and set it's state\n          var dropdown = closest(Selector.DROPDOWN, link);\n\n          if (dropdown) {\n            _this5.setActiveState(select(Selector.DROPDOWN_TOGGLE, dropdown), true);\n          } // Also set this link's state\n\n\n          _this5.setActiveState(link, true);\n        } else {\n          // Set triggered link as active\n          _this5.setActiveState(link, true);\n\n          if (matches(link.parentElement, Selector.NAV_ITEMS)) {\n            // Handle nav-link inside nav-item, and set nav-item active\n            _this5.setActiveState(link.parentElement, true);\n          } // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n\n          var el = link;\n\n          while (el) {\n            el = closest(Selector.NAV_LIST_GROUP, el);\n            var sibling = el ? el.previousElementSibling : null;\n\n            if (sibling && matches(sibling, \"\".concat(Selector.NAV_LINKS, \", \").concat(Selector.LIST_ITEMS))) {\n              _this5.setActiveState(sibling, true);\n            } // Handle special case where nav-link is inside a nav-item\n\n\n            if (sibling && matches(sibling, Selector.NAV_ITEMS)) {\n              _this5.setActiveState(select(Selector.NAV_LINKS, sibling), true); // Add active state to nav-item as well\n\n\n              _this5.setActiveState(sibling, true);\n            }\n          }\n        }\n      }); // Signal event to via $root, passing ID of activated target and reference to array of links\n\n      if (links && links.length > 0 && this.$root) {\n        this.$root.$emit(ACTIVATE_EVENT, target, links);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this6 = this;\n\n      selectAll(\"\".concat(this.$selector, \", \").concat(Selector.NAV_ITEMS), this.$el).filter(function (el) {\n        return hasClass(el, ClassName.ACTIVE);\n      }).forEach(function (el) {\n        return _this6.setActiveState(el, false);\n      });\n    }\n  }, {\n    key: \"setActiveState\",\n    value: function setActiveState(el, active) {\n      if (!el) {\n        return;\n      }\n\n      if (active) {\n        addClass(el, ClassName.ACTIVE);\n      } else {\n        removeClass(el, ClassName.ACTIVE);\n      }\n    }\n  }], [{\n    key: \"Name\",\n    get: function get() {\n      return NAME;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return DefaultType;\n    }\n  }]);\n\n  return ScrollSpy;\n}();\n\nexport default ScrollSpy;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/ecommercevuefirestore/ecommercevuefirestore/node_modules/bootstrap-vue/esm/directives/scrollspy/scrollspy.class.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","prototype","observeDom","warn","isElement","isVisible","closest","matches","getBCR","offset","position","selectAll","select","hasClass","addClass","removeClass","getAttr","eventOn","eventOff","isString","isUndefined","toString","objectToString","NAME","ACTIVATE_EVENT","Default","element","method","throttle","DefaultType","ClassName","DROPDOWN_ITEM","ACTIVE","Selector","NAV_LIST_GROUP","NAV_LINKS","NAV_ITEMS","LIST_ITEMS","DROPDOWN","DROPDOWN_ITEMS","DROPDOWN_TOGGLE","OffsetMethod","OFFSET","POSITION","HREF_REGEX","TransitionEndEvents","EventOptions","passive","capture","toType","match","toLowerCase","typeCheckConfig","componentName","config","configTypes","property","hasOwnProperty","call","expectedTypes","valueType","_isVue","RegExp","test","concat","ScrollSpy","$root","$el","$scroller","$selector","join","$offsets","$targets","$activeTarget","$scrollHeight","$resizeTimeout","$obs_scroller","$obs_targets","$config","updateConfig","unlisten","cfg","constructor","Name","self","$nextTick","listen","dispose","clearTimeout","_this","scroller","getScroller","tagName","window","evtName","setObservers","handleEvent","_this2","on","_this3","disconnect","subtree","childList","attributes","attributeFilter","characterData","evt","type","resizeThrottle","setTimeout","refresh","process","_this4","autoMethod","methodFn","offsetBase","getScrollTop","getScrollHeight","map","link","href","id","replace","trim","el","parseInt","top","Boolean","sort","a","b","reduce","memo","item","scrollTop","scrollHeight","maxScroll","getOffsetHeight","activate","clear","isActiveTarget","pageYOffset","Math","max","document","body","documentElement","innerHeight","height","_this5","links","split","selector","dropdown","setActiveState","parentElement","sibling","previousElementSibling","$emit","_this6","active","get"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,cAAzB,EAAyC;AAAE,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYF,MAAZ,CAAX;;AAAgC,MAAIG,MAAM,CAACC,qBAAX,EAAkC;AAAE,QAAIC,OAAO,GAAGF,MAAM,CAACC,qBAAP,CAA6BJ,MAA7B,CAAd;AAAoD,QAAIC,cAAJ,EAAoBI,OAAO,GAAGA,OAAO,CAACC,MAAR,CAAe,UAAUC,GAAV,EAAe;AAAE,aAAOJ,MAAM,CAACK,wBAAP,CAAgCR,MAAhC,EAAwCO,GAAxC,EAA6CE,UAApD;AAAiE,KAAjG,CAAV;AAA8GP,IAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBG,OAAtB;AAAiC;;AAAC,SAAOH,IAAP;AAAc;;AAErV,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAT,IAAgB,IAAhB,GAAuBC,SAAS,CAACD,CAAD,CAAhC,GAAsC,EAAnD;;AAAuD,QAAIA,CAAC,GAAG,CAAR,EAAW;AAAEf,MAAAA,OAAO,CAACkB,MAAD,EAAS,IAAT,CAAP,CAAsBC,OAAtB,CAA8B,UAAUC,GAAV,EAAe;AAAEC,QAAAA,eAAe,CAACP,MAAD,EAASM,GAAT,EAAcF,MAAM,CAACE,GAAD,CAApB,CAAf;AAA4C,OAA3F;AAA+F,KAA5G,MAAkH,IAAIhB,MAAM,CAACkB,yBAAX,EAAsC;AAAElB,MAAAA,MAAM,CAACmB,gBAAP,CAAwBT,MAAxB,EAAgCV,MAAM,CAACkB,yBAAP,CAAiCJ,MAAjC,CAAhC;AAA4E,KAApH,MAA0H;AAAElB,MAAAA,OAAO,CAACkB,MAAD,CAAP,CAAgBC,OAAhB,CAAwB,UAAUC,GAAV,EAAe;AAAEhB,QAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BM,GAA9B,EAAmChB,MAAM,CAACK,wBAAP,CAAgCS,MAAhC,EAAwCE,GAAxC,CAAnC;AAAmF,OAA5H;AAAgI;AAAE;;AAAC,SAAON,MAAP;AAAgB;;AAEtgB,SAASO,eAAT,CAAyBI,GAAzB,EAA8BL,GAA9B,EAAmCM,KAAnC,EAA0C;AAAE,MAAIN,GAAG,IAAIK,GAAX,EAAgB;AAAErB,IAAAA,MAAM,CAACoB,cAAP,CAAsBC,GAAtB,EAA2BL,GAA3B,EAAgC;AAAEM,MAAAA,KAAK,EAAEA,KAAT;AAAgBhB,MAAAA,UAAU,EAAE,IAA5B;AAAkCiB,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEH,IAAAA,GAAG,CAACL,GAAD,CAAH,GAAWM,KAAX;AAAmB;;AAAC,SAAOD,GAAP;AAAa;;AAEjN,SAASI,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,iBAAT,CAA2BnB,MAA3B,EAAmCoB,KAAnC,EAA0C;AAAE,OAAK,IAAInB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmB,KAAK,CAACjB,MAA1B,EAAkCF,CAAC,EAAnC,EAAuC;AAAE,QAAIoB,UAAU,GAAGD,KAAK,CAACnB,CAAD,CAAtB;AAA2BoB,IAAAA,UAAU,CAACzB,UAAX,GAAwByB,UAAU,CAACzB,UAAX,IAAyB,KAAjD;AAAwDyB,IAAAA,UAAU,CAACR,YAAX,GAA0B,IAA1B;AAAgC,QAAI,WAAWQ,UAAf,EAA2BA,UAAU,CAACP,QAAX,GAAsB,IAAtB;AAA4BxB,IAAAA,MAAM,CAACoB,cAAP,CAAsBV,MAAtB,EAA8BqB,UAAU,CAACf,GAAzC,EAA8Ce,UAA9C;AAA4D;AAAE;;AAE7T,SAASC,YAAT,CAAsBL,WAAtB,EAAmCM,UAAnC,EAA+CC,WAA/C,EAA4D;AAAE,MAAID,UAAJ,EAAgBJ,iBAAiB,CAACF,WAAW,CAACQ,SAAb,EAAwBF,UAAxB,CAAjB;AAAsD,MAAIC,WAAJ,EAAiBL,iBAAiB,CAACF,WAAD,EAAcO,WAAd,CAAjB;AAA6C,SAAOP,WAAP;AAAqB;AAEvN;AACA;AACA;;;AACA,OAAOS,UAAP,MAAuB,yBAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,OAA/B,EAAwCC,OAAxC,EAAiDC,MAAjD,EAAyDC,MAAzD,EAAiEC,QAAjE,EAA2EC,SAA3E,EAAsFC,MAAtF,EAA8FC,QAA9F,EAAwGC,QAAxG,EAAkHC,WAAlH,EAA+HC,OAA/H,EAAwIC,OAAxI,EAAiJC,QAAjJ,QAAiK,iBAAjK;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,qBAAtC;AACA,SAASC,QAAQ,IAAIC,cAArB,QAA2C,oBAA3C;AACA;AACA;AACA;;AAEA,IAAIC,IAAI,GAAG,eAAX;AACA,IAAIC,cAAc,GAAG,yBAArB;AACA,IAAIC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAE,MADG;AAEZjB,EAAAA,MAAM,EAAE,EAFI;AAGZkB,EAAAA,MAAM,EAAE,MAHI;AAIZC,EAAAA,QAAQ,EAAE;AAJE,CAAd;AAMA,IAAIC,WAAW,GAAG;AAChBH,EAAAA,OAAO,EAAE,4BADO;AAEhBjB,EAAAA,MAAM,EAAE,QAFQ;AAGhBkB,EAAAA,MAAM,EAAE,QAHQ;AAIhBC,EAAAA,QAAQ,EAAE;AAJM,CAAlB;AAMA,IAAIE,SAAS,GAAG;AACdC,EAAAA,aAAa,EAAE,eADD;AAEdC,EAAAA,MAAM,EAAE;AAFM,CAAhB;AAIA,IAAIC,QAAQ,GAAG;AACbD,EAAAA,MAAM,EAAE,SADK;AAEbE,EAAAA,cAAc,EAAE,mBAFH;AAGbC,EAAAA,SAAS,EAAE,WAHE;AAIbC,EAAAA,SAAS,EAAE,WAJE;AAKbC,EAAAA,UAAU,EAAE,kBALC;AAMbC,EAAAA,QAAQ,EAAE,oBANG;AAObC,EAAAA,cAAc,EAAE,gBAPH;AAQbC,EAAAA,eAAe,EAAE;AARJ,CAAf;AAUA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,QADS;AAEjBC,EAAAA,QAAQ,EAAE,UAFO,CAEI;AACrB;AACA;;AAJiB,CAAnB;AAOA,IAAIC,UAAU,GAAG,cAAjB,C,CAAiC;;AAEjC,IAAIC,mBAAmB,GAAG,CAAC,qBAAD,EAAwB,eAAxB,EAAyC,gBAAzC,EAA2D,gBAA3D,CAA1B,C,CAAwG;;AAExG,IAAIC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,OAAO,EAAE;AACT;AACF;AACA;AACE;;AANiB,CAAnB;;AAUA,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgB9D,GAAhB;AACb;AACA;AACE,SAAOmC,cAAc,CAACnC,GAAD,CAAd,CAAoB+D,KAApB,CAA0B,eAA1B,EAA2C,CAA3C,EAA8CC,WAA9C,EAAP;AACD,CAJD,C,CAIG;;;AAGH,IAAIC,eAAe,GAAG,SAASA,eAAT,CAAyBC,aAAzB,EAAwCC,MAAxC,EAAgDC,WAAhD;AACtB;AACA;AACE,OAAK,IAAIC,QAAT,IAAqBD,WAArB,EAAkC;AAChC,QAAIzF,MAAM,CAACmC,SAAP,CAAiBwD,cAAjB,CAAgCC,IAAhC,CAAqCH,WAArC,EAAkDC,QAAlD,CAAJ,EAAiE;AAC/D,UAAIG,aAAa,GAAGJ,WAAW,CAACC,QAAD,CAA/B;AACA,UAAIpE,KAAK,GAAGkE,MAAM,CAACE,QAAD,CAAlB;AACA,UAAII,SAAS,GAAGxE,KAAK,IAAIgB,SAAS,CAAChB,KAAD,CAAlB,GAA4B,SAA5B,GAAwC6D,MAAM,CAAC7D,KAAD,CAA9D,CAH+D,CAGQ;;AAEvEwE,MAAAA,SAAS,GAAGxE,KAAK,IAAIA,KAAK,CAACyE,MAAf,GAAwB,WAAxB,GAAsCD,SAAlD;;AAEA,UAAI,CAAC,IAAIE,MAAJ,CAAWH,aAAX,EAA0BI,IAA1B,CAA+BH,SAA/B,CAAL,EAAgD;AAC9C;AACAzD,QAAAA,IAAI,CAAC,GAAG6D,MAAH,CAAUX,aAAV,EAAyB,aAAzB,EAAwCW,MAAxC,CAA+CR,QAA/C,EAAyD,qBAAzD,EAAgFQ,MAAhF,CAAuFJ,SAAvF,EAAkG,yBAAlG,EAA6HI,MAA7H,CAAoIL,aAApI,EAAmJ,IAAnJ,CAAD,CAAJ;AACD;AACF;AACF;AACF,CAjBD;AAkBA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA,IAAIM;AACJ;AADa,EAGb,aACA,YAAY;AACV,WAASA,SAAT,CAAmBvC,OAAnB,EAA4B4B,MAA5B,EAAoCY,KAApC,EAA2C;AACzC3E,IAAAA,eAAe,CAAC,IAAD,EAAO0E,SAAP,CAAf,CADyC,CAGzC;;;AACA,SAAKE,GAAL,GAAWzC,OAAX;AACA,SAAK0C,SAAL,GAAiB,IAAjB;AACA,SAAKC,SAAL,GAAiB,CAACpC,QAAQ,CAACE,SAAV,EAAqBF,QAAQ,CAACI,UAA9B,EAA0CJ,QAAQ,CAACM,cAAnD,EAAmE+B,IAAnE,CAAwE,GAAxE,CAAjB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,aAAL,GAAqB,CAArB;AACA,SAAKC,cAAL,GAAsB,IAAtB;AACA,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,YAAL,GAAoB,IAApB;AACA,SAAKX,KAAL,GAAaA,KAAK,IAAI,IAAtB;AACA,SAAKY,OAAL,GAAe,IAAf;AACA,SAAKC,YAAL,CAAkBzB,MAAlB;AACD;;AAEDxD,EAAAA,YAAY,CAACmE,SAAD,EAAY,CAAC;AACvBnF,IAAAA,GAAG,EAAE,cADkB;AAEvBM,IAAAA,KAAK,EAAE,SAAS2F,YAAT,CAAsBzB,MAAtB,EAA8BY,KAA9B,EAAqC;AAC1C,UAAI,KAAKE,SAAT,EAAoB;AAClB;AACA,aAAKY,QAAL;AACA,aAAKZ,SAAL,GAAiB,IAAjB;AACD;;AAED,UAAIa,GAAG,GAAG1G,aAAa,CAAC,EAAD,EAAK,KAAK2G,WAAL,CAAiBzD,OAAtB,EAA+B,EAA/B,EAAmC6B,MAAnC,CAAvB;;AAEA,UAAIY,KAAJ,EAAW;AACT,aAAKA,KAAL,GAAaA,KAAb;AACD;;AAEDd,MAAAA,eAAe,CAAC,KAAK8B,WAAL,CAAiBC,IAAlB,EAAwBF,GAAxB,EAA6B,KAAKC,WAAL,CAAiBrD,WAA9C,CAAf;AACA,WAAKiD,OAAL,GAAeG,GAAf;;AAEA,UAAI,KAAKf,KAAT,EAAgB;AACd,YAAIkB,IAAI,GAAG,IAAX;AACA,aAAKlB,KAAL,CAAWmB,SAAX,CAAqB,YAAY;AAC/BD,UAAAA,IAAI,CAACE,MAAL;AACD,SAFD;AAGD,OALD,MAKO;AACL,aAAKA,MAAL;AACD;AACF;AA1BsB,GAAD,EA2BrB;AACDxG,IAAAA,GAAG,EAAE,SADJ;AAEDM,IAAAA,KAAK,EAAE,SAASmG,OAAT,GAAmB;AACxB,WAAKP,QAAL;AACAQ,MAAAA,YAAY,CAAC,KAAKb,cAAN,CAAZ;AACA,WAAKA,cAAL,GAAsB,IAAtB;AACA,WAAKR,GAAL,GAAW,IAAX;AACA,WAAKW,OAAL,GAAe,IAAf;AACA,WAAKV,SAAL,GAAiB,IAAjB;AACA,WAAKC,SAAL,GAAiB,IAAjB;AACA,WAAKE,QAAL,GAAgB,IAAhB;AACA,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKC,aAAL,GAAqB,IAArB;AACA,WAAKC,aAAL,GAAqB,IAArB;AACD;AAdA,GA3BqB,EA0CrB;AACD5F,IAAAA,GAAG,EAAE,QADJ;AAEDM,IAAAA,KAAK,EAAE,SAASkG,MAAT,GAAkB;AACvB,UAAIG,KAAK,GAAG,IAAZ;;AAEA,UAAIC,QAAQ,GAAG,KAAKC,WAAL,EAAf;;AAEA,UAAID,QAAQ,IAAIA,QAAQ,CAACE,OAAT,KAAqB,MAArC,EAA6C;AAC3C3E,QAAAA,OAAO,CAACyE,QAAD,EAAW,QAAX,EAAqB,IAArB,EAA2B5C,YAA3B,CAAP;AACD;;AAED7B,MAAAA,OAAO,CAAC4E,MAAD,EAAS,QAAT,EAAmB,IAAnB,EAAyB/C,YAAzB,CAAP;AACA7B,MAAAA,OAAO,CAAC4E,MAAD,EAAS,QAAT,EAAmB,IAAnB,EAAyB/C,YAAzB,CAAP;AACA7B,MAAAA,OAAO,CAAC4E,MAAD,EAAS,mBAAT,EAA8B,IAA9B,EAAoC/C,YAApC,CAAP;AACAD,MAAAA,mBAAmB,CAAChE,OAApB,CAA4B,UAAUiH,OAAV,EAAmB;AAC7C7E,QAAAA,OAAO,CAAC4E,MAAD,EAASC,OAAT,EAAkBL,KAAlB,EAAyB3C,YAAzB,CAAP;AACD,OAFD;AAGA,WAAKiD,YAAL,CAAkB,IAAlB,EAfuB,CAeE;;AAEzB,WAAKC,WAAL,CAAiB,SAAjB;AACD;AApBA,GA1CqB,EA+DrB;AACDlH,IAAAA,GAAG,EAAE,UADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS4F,QAAT,GAAoB;AACzB,UAAIiB,MAAM,GAAG,IAAb;;AAEA,UAAIP,QAAQ,GAAG,KAAKC,WAAL,EAAf;AACA,WAAKI,YAAL,CAAkB,KAAlB;;AAEA,UAAIL,QAAQ,IAAIA,QAAQ,CAACE,OAAT,KAAqB,MAArC,EAA6C;AAC3C1E,QAAAA,QAAQ,CAACwE,QAAD,EAAW,QAAX,EAAqB,IAArB,EAA2B5C,YAA3B,CAAR;AACD;;AAED5B,MAAAA,QAAQ,CAAC2E,MAAD,EAAS,QAAT,EAAmB,IAAnB,EAAyB/C,YAAzB,CAAR;AACA5B,MAAAA,QAAQ,CAAC2E,MAAD,EAAS,QAAT,EAAmB,IAAnB,EAAyB/C,YAAzB,CAAR;AACA5B,MAAAA,QAAQ,CAAC2E,MAAD,EAAS,mBAAT,EAA8B,IAA9B,EAAoC/C,YAApC,CAAR;AACAD,MAAAA,mBAAmB,CAAChE,OAApB,CAA4B,UAAUiH,OAAV,EAAmB;AAC7C5E,QAAAA,QAAQ,CAAC2E,MAAD,EAASC,OAAT,EAAkBG,MAAlB,EAA0BnD,YAA1B,CAAR;AACD,OAFD;AAGD;AAlBA,GA/DqB,EAkFrB;AACDhE,IAAAA,GAAG,EAAE,cADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS2G,YAAT,CAAsBG,EAAtB,EAA0B;AAC/B,UAAIC,MAAM,GAAG,IAAb,CAD+B,CAG/B;;;AACA,UAAI,KAAKvB,aAAT,EAAwB;AACtB,aAAKA,aAAL,CAAmBwB,UAAnB;AACA,aAAKxB,aAAL,GAAqB,IAArB;AACD;;AAED,UAAI,KAAKC,YAAT,EAAuB;AACrB,aAAKA,YAAL,CAAkBuB,UAAlB;AACA,aAAKvB,YAAL,GAAoB,IAApB;AACD;;AAED,UAAIqB,EAAJ,EAAQ;AACN,aAAKrB,YAAL,GAAoB3E,UAAU,CAAC,KAAKiE,GAAN,EAAW,YAAY;AACnDgC,UAAAA,MAAM,CAACH,WAAP,CAAmB,UAAnB;AACD,SAF6B,EAE3B;AACDK,UAAAA,OAAO,EAAE,IADR;AAEDC,UAAAA,SAAS,EAAE,IAFV;AAGDC,UAAAA,UAAU,EAAE,IAHX;AAIDC,UAAAA,eAAe,EAAE,CAAC,MAAD;AAJhB,SAF2B,CAA9B;AAQA,aAAK5B,aAAL,GAAqB1E,UAAU,CAAC,KAAKyF,WAAL,EAAD,EAAqB,YAAY;AAC9DQ,UAAAA,MAAM,CAACH,WAAP,CAAmB,UAAnB;AACD,SAF8B,EAE5B;AACDK,UAAAA,OAAO,EAAE,IADR;AAEDC,UAAAA,SAAS,EAAE,IAFV;AAGDG,UAAAA,aAAa,EAAE,IAHd;AAIDF,UAAAA,UAAU,EAAE,IAJX;AAKDC,UAAAA,eAAe,EAAE,CAAC,IAAD,EAAO,OAAP,EAAgB,OAAhB;AALhB,SAF4B,CAA/B;AASD;AACF,KAnCA,CAmCC;;AAnCD,GAlFqB,EAuHrB;AACD1H,IAAAA,GAAG,EAAE,aADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS4G,WAAT,CAAqBU,GAArB,EAA0B;AAC/B,UAAIC,IAAI,GAAGxF,QAAQ,CAACuF,GAAD,CAAR,GAAgBA,GAAhB,GAAsBA,GAAG,CAACC,IAArC;AACA,UAAIvB,IAAI,GAAG,IAAX;;AAEA,UAAIwB,cAAc,GAAG,SAASA,cAAT,GAA0B;AAC7C,YAAI,CAACxB,IAAI,CAACT,cAAV,EAA0B;AACxBS,UAAAA,IAAI,CAACT,cAAL,GAAsBkC,UAAU,CAAC,YAAY;AAC3CzB,YAAAA,IAAI,CAAC0B,OAAL;AACA1B,YAAAA,IAAI,CAAC2B,OAAL;AACA3B,YAAAA,IAAI,CAACT,cAAL,GAAsB,IAAtB;AACD,WAJ+B,EAI7BS,IAAI,CAACN,OAAL,CAAalD,QAJgB,CAAhC;AAKD;AACF,OARD;;AAUA,UAAI+E,IAAI,KAAK,QAAb,EAAuB;AACrB,YAAI,CAAC,KAAK/B,aAAV,EAAyB;AACvB;AACA;AACA,eAAKU,MAAL;AACD;;AAED,aAAKyB,OAAL;AACD,OARD,MAQO,IAAI,8CAA8ChD,IAA9C,CAAmD4C,IAAnD,CAAJ,EAA8D;AACnE;AACAC,QAAAA,cAAc;AACf;AACF,KA5BA,CA4BC;;AA5BD,GAvHqB,EAqJrB;AACD9H,IAAAA,GAAG,EAAE,SADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS0H,OAAT,GAAmB;AACxB,UAAIE,MAAM,GAAG,IAAb;;AAEA,UAAItB,QAAQ,GAAG,KAAKC,WAAL,EAAf;;AAEA,UAAI,CAACD,QAAL,EAAe;AACb;AACD;;AAED,UAAIuB,UAAU,GAAGvB,QAAQ,KAAKA,QAAQ,CAACG,MAAtB,GAA+BpD,YAAY,CAACE,QAA5C,GAAuDF,YAAY,CAACC,MAArF;AACA,UAAIf,MAAM,GAAG,KAAKmD,OAAL,CAAanD,MAAb,KAAwB,MAAxB,GAAiCsF,UAAjC,GAA8C,KAAKnC,OAAL,CAAanD,MAAxE;AACA,UAAIuF,QAAQ,GAAGvF,MAAM,KAAKc,YAAY,CAACE,QAAxB,GAAmCjC,QAAnC,GAA8CD,MAA7D;AACA,UAAI0G,UAAU,GAAGxF,MAAM,KAAKc,YAAY,CAACE,QAAxB,GAAmC,KAAKyE,YAAL,EAAnC,GAAyD,CAA1E;AACA,WAAK7C,QAAL,GAAgB,EAAhB;AACA,WAAKC,QAAL,GAAgB,EAAhB;AACA,WAAKE,aAAL,GAAqB,KAAK2C,eAAL,EAArB,CAfwB,CAeqB;;AAE7C1G,MAAAA,SAAS,CAAC,KAAK0D,SAAN,EAAiB,KAAKF,GAAtB,CAAT,CAAoC;AAApC,OACCmD,GADD,CACK,UAAUC,IAAV,EAAgB;AACnB,eAAOvG,OAAO,CAACuG,IAAD,EAAO,MAAP,CAAd;AACD,OAHD,EAGG;AAHH,OAICtJ,MAJD,CAIQ,UAAUuJ,IAAV,EAAgB;AACtB,eAAOA,IAAI,IAAI5E,UAAU,CAACmB,IAAX,CAAgByD,IAAI,IAAI,EAAxB,CAAf;AACD,OAND,EAMG;AANH,OAOCF,GAPD,CAOK,UAAUE,IAAV,EAAgB;AACnB;AACA,YAAIC,EAAE,GAAGD,IAAI,CAACE,OAAL,CAAa9E,UAAb,EAAyB,IAAzB,EAA+B+E,IAA/B,EAAT;;AAEA,YAAI,CAACF,EAAL,EAAS;AACP,iBAAO,IAAP;AACD,SANkB,CAMjB;;;AAGF,YAAIG,EAAE,GAAGhH,MAAM,CAAC6G,EAAD,EAAK/B,QAAL,CAAf;;AAEA,YAAIkC,EAAE,IAAIvH,SAAS,CAACuH,EAAD,CAAnB,EAAyB;AACvB,iBAAO;AACLnH,YAAAA,MAAM,EAAEoH,QAAQ,CAACX,QAAQ,CAACU,EAAD,CAAR,CAAaE,GAAd,EAAmB,EAAnB,CAAR,GAAiCX,UADpC;AAEL3I,YAAAA,MAAM,EAAEiJ;AAFH,WAAP;AAID;;AAED,eAAO,IAAP;AACD,OA1BD,EA0BGxJ,MA1BH,CA0BU8J,OA1BV,EA0BmB;AA1BnB,OA2BCC,IA3BD,CA2BM,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACpB,eAAOD,CAAC,CAACxH,MAAF,GAAWyH,CAAC,CAACzH,MAApB;AACD,OA7BD,EA6BG;AA7BH,OA8BC0H,MA9BD,CA8BQ,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC5B,YAAI,CAACD,IAAI,CAACC,IAAI,CAAC7J,MAAN,CAAT,EAAwB;AACtBwI,UAAAA,MAAM,CAACzC,QAAP,CAAgBlG,IAAhB,CAAqBgK,IAAI,CAAC5H,MAA1B;;AAEAuG,UAAAA,MAAM,CAACxC,QAAP,CAAgBnG,IAAhB,CAAqBgK,IAAI,CAAC7J,MAA1B;;AAEA4J,UAAAA,IAAI,CAACC,IAAI,CAAC7J,MAAN,CAAJ,GAAoB,IAApB;AACD;;AAED,eAAO4J,IAAP;AACD,OAxCD,EAwCG,EAxCH,EAjBwB,CAyDhB;;AAER,aAAO,IAAP;AACD,KA9DA,CA8DC;;AA9DD,GArJqB,EAqNrB;AACDtJ,IAAAA,GAAG,EAAE,SADJ;AAEDM,IAAAA,KAAK,EAAE,SAAS2H,OAAT,GAAmB;AACxB,UAAIuB,SAAS,GAAG,KAAKlB,YAAL,KAAsB,KAAKtC,OAAL,CAAarE,MAAnD;AACA,UAAI8H,YAAY,GAAG,KAAKlB,eAAL,EAAnB;AACA,UAAImB,SAAS,GAAG,KAAK1D,OAAL,CAAarE,MAAb,GAAsB8H,YAAtB,GAAqC,KAAKE,eAAL,EAArD;;AAEA,UAAI,KAAK/D,aAAL,KAAuB6D,YAA3B,EAAyC;AACvC,aAAKzB,OAAL;AACD;;AAED,UAAIwB,SAAS,IAAIE,SAAjB,EAA4B;AAC1B,YAAIhK,MAAM,GAAG,KAAKgG,QAAL,CAAc,KAAKA,QAAL,CAAc7F,MAAd,GAAuB,CAArC,CAAb;;AAEA,YAAI,KAAK8F,aAAL,KAAuBjG,MAA3B,EAAmC;AACjC,eAAKkK,QAAL,CAAclK,MAAd;AACD;;AAED;AACD;;AAED,UAAI,KAAKiG,aAAL,IAAsB6D,SAAS,GAAG,KAAK/D,QAAL,CAAc,CAAd,CAAlC,IAAsD,KAAKA,QAAL,CAAc,CAAd,IAAmB,CAA7E,EAAgF;AAC9E,aAAKE,aAAL,GAAqB,IAArB;AACA,aAAKkE,KAAL;AACA;AACD;;AAED,WAAK,IAAIlK,CAAC,GAAG,KAAK8F,QAAL,CAAc5F,MAA3B,EAAmCF,CAAC,EAApC,GAAyC;AACvC,YAAImK,cAAc,GAAG,KAAKnE,aAAL,KAAuB,KAAKD,QAAL,CAAc/F,CAAd,CAAvB,IAA2C6J,SAAS,IAAI,KAAK/D,QAAL,CAAc9F,CAAd,CAAxD,KAA6E2C,WAAW,CAAC,KAAKmD,QAAL,CAAc9F,CAAC,GAAG,CAAlB,CAAD,CAAX,IAAqC6J,SAAS,GAAG,KAAK/D,QAAL,CAAc9F,CAAC,GAAG,CAAlB,CAA9H,CAArB;;AAEA,YAAImK,cAAJ,EAAoB;AAClB,eAAKF,QAAL,CAAc,KAAKlE,QAAL,CAAc/F,CAAd,CAAd;AACD;AACF;AACF;AAlCA,GArNqB,EAwPrB;AACDK,IAAAA,GAAG,EAAE,aADJ;AAEDM,IAAAA,KAAK,EAAE,SAASuG,WAAT,GAAuB;AAC5B,UAAI,KAAKvB,SAAT,EAAoB;AAClB,eAAO,KAAKA,SAAZ;AACD;;AAED,UAAIsB,QAAQ,GAAG,KAAKZ,OAAL,CAAapD,OAA5B;;AAEA,UAAI,CAACgE,QAAL,EAAe;AACb,eAAO,IAAP;AACD,OAFD,MAEO,IAAItF,SAAS,CAACsF,QAAQ,CAACvB,GAAV,CAAb,EAA6B;AAClCuB,QAAAA,QAAQ,GAAGA,QAAQ,CAACvB,GAApB;AACD,OAFM,MAEA,IAAIhD,QAAQ,CAACuE,QAAD,CAAZ,EAAwB;AAC7BA,QAAAA,QAAQ,GAAG9E,MAAM,CAAC8E,QAAD,CAAjB;AACD;;AAED,UAAI,CAACA,QAAL,EAAe;AACb,eAAO,IAAP;AACD;;AAED,WAAKtB,SAAL,GAAiBsB,QAAQ,CAACE,OAAT,KAAqB,MAArB,GAA8BC,MAA9B,GAAuCH,QAAxD;AACA,aAAO,KAAKtB,SAAZ;AACD;AAvBA,GAxPqB,EAgRrB;AACDtF,IAAAA,GAAG,EAAE,cADJ;AAEDM,IAAAA,KAAK,EAAE,SAASgI,YAAT,GAAwB;AAC7B,UAAI1B,QAAQ,GAAG,KAAKC,WAAL,EAAf;AACA,aAAOD,QAAQ,KAAKG,MAAb,GAAsBH,QAAQ,CAACmD,WAA/B,GAA6CnD,QAAQ,CAAC4C,SAA7D;AACD;AALA,GAhRqB,EAsRrB;AACDxJ,IAAAA,GAAG,EAAE,iBADJ;AAEDM,IAAAA,KAAK,EAAE,SAASiI,eAAT,GAA2B;AAChC,aAAO,KAAK1B,WAAL,GAAmB4C,YAAnB,IAAmCO,IAAI,CAACC,GAAL,CAASC,QAAQ,CAACC,IAAT,CAAcV,YAAvB,EAAqCS,QAAQ,CAACE,eAAT,CAAyBX,YAA9D,CAA1C;AACD;AAJA,GAtRqB,EA2RrB;AACDzJ,IAAAA,GAAG,EAAE,iBADJ;AAEDM,IAAAA,KAAK,EAAE,SAASqJ,eAAT,GAA2B;AAChC,UAAI/C,QAAQ,GAAG,KAAKC,WAAL,EAAf;AACA,aAAOD,QAAQ,KAAKG,MAAb,GAAsBA,MAAM,CAACsD,WAA7B,GAA2C3I,MAAM,CAACkF,QAAD,CAAN,CAAiB0D,MAAnE;AACD;AALA,GA3RqB,EAiSrB;AACDtK,IAAAA,GAAG,EAAE,UADJ;AAEDM,IAAAA,KAAK,EAAE,SAASsJ,QAAT,CAAkBlK,MAAlB,EAA0B;AAC/B,UAAI6K,MAAM,GAAG,IAAb;;AAEA,WAAK5E,aAAL,GAAqBjG,MAArB;AACA,WAAKmK,KAAL,GAJ+B,CAIjB;;AAEd,UAAIW,KAAK,GAAG3I,SAAS,CAAC,KAAK0D,SAAL,CAAe;AAAf,OACrBkF,KADqB,CACf,GADe,EACV;AADU,OAErBjC,GAFqB,CAEjB,UAAUkC,QAAV,EAAoB;AACvB,eAAO,GAAGxF,MAAH,CAAUwF,QAAV,EAAoB,WAApB,EAAiCxF,MAAjC,CAAwCxF,MAAxC,EAAgD,KAAhD,CAAP;AACD,OAJqB,EAInB;AAJmB,OAKrB8F,IALqB,CAKhB,GALgB,CAAD,EAKT,KAAKH,GALI,CAArB;AAMAmF,MAAAA,KAAK,CAACzK,OAAN,CAAc,UAAU0I,IAAV,EAAgB;AAC5B,YAAI1G,QAAQ,CAAC0G,IAAD,EAAOzF,SAAS,CAACC,aAAjB,CAAZ,EAA6C;AAC3C;AACA,cAAI0H,QAAQ,GAAGnJ,OAAO,CAAC2B,QAAQ,CAACK,QAAV,EAAoBiF,IAApB,CAAtB;;AAEA,cAAIkC,QAAJ,EAAc;AACZJ,YAAAA,MAAM,CAACK,cAAP,CAAsB9I,MAAM,CAACqB,QAAQ,CAACO,eAAV,EAA2BiH,QAA3B,CAA5B,EAAkE,IAAlE;AACD,WAN0C,CAMzC;;;AAGFJ,UAAAA,MAAM,CAACK,cAAP,CAAsBnC,IAAtB,EAA4B,IAA5B;AACD,SAVD,MAUO;AACL;AACA8B,UAAAA,MAAM,CAACK,cAAP,CAAsBnC,IAAtB,EAA4B,IAA5B;;AAEA,cAAIhH,OAAO,CAACgH,IAAI,CAACoC,aAAN,EAAqB1H,QAAQ,CAACG,SAA9B,CAAX,EAAqD;AACnD;AACAiH,YAAAA,MAAM,CAACK,cAAP,CAAsBnC,IAAI,CAACoC,aAA3B,EAA0C,IAA1C;AACD,WAPI,CAOH;AACF;;;AAGA,cAAI/B,EAAE,GAAGL,IAAT;;AAEA,iBAAOK,EAAP,EAAW;AACTA,YAAAA,EAAE,GAAGtH,OAAO,CAAC2B,QAAQ,CAACC,cAAV,EAA0B0F,EAA1B,CAAZ;AACA,gBAAIgC,OAAO,GAAGhC,EAAE,GAAGA,EAAE,CAACiC,sBAAN,GAA+B,IAA/C;;AAEA,gBAAID,OAAO,IAAIrJ,OAAO,CAACqJ,OAAD,EAAU,GAAG5F,MAAH,CAAU/B,QAAQ,CAACE,SAAnB,EAA8B,IAA9B,EAAoC6B,MAApC,CAA2C/B,QAAQ,CAACI,UAApD,CAAV,CAAtB,EAAkG;AAChGgH,cAAAA,MAAM,CAACK,cAAP,CAAsBE,OAAtB,EAA+B,IAA/B;AACD,aANQ,CAMP;;;AAGF,gBAAIA,OAAO,IAAIrJ,OAAO,CAACqJ,OAAD,EAAU3H,QAAQ,CAACG,SAAnB,CAAtB,EAAqD;AACnDiH,cAAAA,MAAM,CAACK,cAAP,CAAsB9I,MAAM,CAACqB,QAAQ,CAACE,SAAV,EAAqByH,OAArB,CAA5B,EAA2D,IAA3D,EADmD,CACe;;;AAGlEP,cAAAA,MAAM,CAACK,cAAP,CAAsBE,OAAtB,EAA+B,IAA/B;AACD;AACF;AACF;AACF,OAzCD,EAZ+B,CAqD3B;;AAEJ,UAAIN,KAAK,IAAIA,KAAK,CAAC3K,MAAN,GAAe,CAAxB,IAA6B,KAAKuF,KAAtC,EAA6C;AAC3C,aAAKA,KAAL,CAAW4F,KAAX,CAAiBtI,cAAjB,EAAiChD,MAAjC,EAAyC8K,KAAzC;AACD;AACF;AA5DA,GAjSqB,EA8VrB;AACDxK,IAAAA,GAAG,EAAE,OADJ;AAEDM,IAAAA,KAAK,EAAE,SAASuJ,KAAT,GAAiB;AACtB,UAAIoB,MAAM,GAAG,IAAb;;AAEApJ,MAAAA,SAAS,CAAC,GAAGqD,MAAH,CAAU,KAAKK,SAAf,EAA0B,IAA1B,EAAgCL,MAAhC,CAAuC/B,QAAQ,CAACG,SAAhD,CAAD,EAA6D,KAAK+B,GAAlE,CAAT,CAAgFlG,MAAhF,CAAuF,UAAU2J,EAAV,EAAc;AACnG,eAAO/G,QAAQ,CAAC+G,EAAD,EAAK9F,SAAS,CAACE,MAAf,CAAf;AACD,OAFD,EAEGnD,OAFH,CAEW,UAAU+I,EAAV,EAAc;AACvB,eAAOmC,MAAM,CAACL,cAAP,CAAsB9B,EAAtB,EAA0B,KAA1B,CAAP;AACD,OAJD;AAKD;AAVA,GA9VqB,EAyWrB;AACD9I,IAAAA,GAAG,EAAE,gBADJ;AAEDM,IAAAA,KAAK,EAAE,SAASsK,cAAT,CAAwB9B,EAAxB,EAA4BoC,MAA5B,EAAoC;AACzC,UAAI,CAACpC,EAAL,EAAS;AACP;AACD;;AAED,UAAIoC,MAAJ,EAAY;AACVlJ,QAAAA,QAAQ,CAAC8G,EAAD,EAAK9F,SAAS,CAACE,MAAf,CAAR;AACD,OAFD,MAEO;AACLjB,QAAAA,WAAW,CAAC6G,EAAD,EAAK9F,SAAS,CAACE,MAAf,CAAX;AACD;AACF;AAZA,GAzWqB,CAAZ,EAsXR,CAAC;AACHlD,IAAAA,GAAG,EAAE,MADF;AAEHmL,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAO1I,IAAP;AACD;AAJE,GAAD,EAKD;AACDzC,IAAAA,GAAG,EAAE,SADJ;AAEDmL,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAOxI,OAAP;AACD;AAJA,GALC,EAUD;AACD3C,IAAAA,GAAG,EAAE,aADJ;AAEDmL,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,aAAOpI,WAAP;AACD;AAJA,GAVC,CAtXQ,CAAZ;;AAuYA,SAAOoC,SAAP;AACD,CA5ZD,EAJA;;AAkaA,eAAeA,SAAf","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n/*\n * ScrollSpy class definition\n */\nimport observeDom from '../../utils/observe-dom';\nimport warn from '../../utils/warn';\nimport { isElement, isVisible, closest, matches, getBCR, offset, position, selectAll, select, hasClass, addClass, removeClass, getAttr, eventOn, eventOff } from '../../utils/dom';\nimport { isString, isUndefined } from '../../utils/inspect';\nimport { toString as objectToString } from '../../utils/object';\n/*\n * Constants / Defaults\n */\n\nvar NAME = 'v-b-scrollspy';\nvar ACTIVATE_EVENT = 'bv::scrollspy::activate';\nvar Default = {\n  element: 'body',\n  offset: 10,\n  method: 'auto',\n  throttle: 75\n};\nvar DefaultType = {\n  element: '(string|element|component)',\n  offset: 'number',\n  method: 'string',\n  throttle: 'number'\n};\nvar ClassName = {\n  DROPDOWN_ITEM: 'dropdown-item',\n  ACTIVE: 'active'\n};\nvar Selector = {\n  ACTIVE: '.active',\n  NAV_LIST_GROUP: '.nav, .list-group',\n  NAV_LINKS: '.nav-link',\n  NAV_ITEMS: '.nav-item',\n  LIST_ITEMS: '.list-group-item',\n  DROPDOWN: '.dropdown, .dropup',\n  DROPDOWN_ITEMS: '.dropdown-item',\n  DROPDOWN_TOGGLE: '.dropdown-toggle'\n};\nvar OffsetMethod = {\n  OFFSET: 'offset',\n  POSITION: 'position' // HREFs must end with a hash followed by at least one non-hash character.\n  // HREFs in the links are assumed to point to non-external links.\n  // Comparison to the current page base URL is not performed!\n\n};\nvar HREF_REGEX = /^.*(#[^#]+)$/; // Transition Events\n\nvar TransitionEndEvents = ['webkitTransitionEnd', 'transitionend', 'otransitionend', 'oTransitionEnd']; // Options for events\n\nvar EventOptions = {\n  passive: true,\n  capture: false\n  /*\n   * Utility Methods\n   */\n  // Better var type detection\n\n};\n\nvar toType = function toType(obj)\n/* istanbul ignore next: not easy to test */\n{\n  return objectToString(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}; // Check config properties for expected types\n\n\nvar typeCheckConfig = function typeCheckConfig(componentName, config, configTypes)\n/* istanbul ignore next: not easy to test */\n{\n  for (var property in configTypes) {\n    if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n      var expectedTypes = configTypes[property];\n      var value = config[property];\n      var valueType = value && isElement(value) ? 'element' : toType(value); // handle Vue instances\n\n      valueType = value && value._isVue ? 'component' : valueType;\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        /* istanbul ignore next */\n        warn(\"\".concat(componentName, \": Option \\\"\").concat(property, \"\\\" provided type \\\"\").concat(valueType, \"\\\" but expected type \\\"\").concat(expectedTypes, \"\\\"\"));\n      }\n    }\n  }\n};\n/*\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\n/* istanbul ignore next: not easy to test */\n\n\nvar ScrollSpy\n/* istanbul ignore next: not easy to test */\n=\n/*#__PURE__*/\nfunction () {\n  function ScrollSpy(element, config, $root) {\n    _classCallCheck(this, ScrollSpy);\n\n    // The element we activate links in\n    this.$el = element;\n    this.$scroller = null;\n    this.$selector = [Selector.NAV_LINKS, Selector.LIST_ITEMS, Selector.DROPDOWN_ITEMS].join(',');\n    this.$offsets = [];\n    this.$targets = [];\n    this.$activeTarget = null;\n    this.$scrollHeight = 0;\n    this.$resizeTimeout = null;\n    this.$obs_scroller = null;\n    this.$obs_targets = null;\n    this.$root = $root || null;\n    this.$config = null;\n    this.updateConfig(config);\n  }\n\n  _createClass(ScrollSpy, [{\n    key: \"updateConfig\",\n    value: function updateConfig(config, $root) {\n      if (this.$scroller) {\n        // Just in case out scroll element has changed\n        this.unlisten();\n        this.$scroller = null;\n      }\n\n      var cfg = _objectSpread({}, this.constructor.Default, {}, config);\n\n      if ($root) {\n        this.$root = $root;\n      }\n\n      typeCheckConfig(this.constructor.Name, cfg, this.constructor.DefaultType);\n      this.$config = cfg;\n\n      if (this.$root) {\n        var self = this;\n        this.$root.$nextTick(function () {\n          self.listen();\n        });\n      } else {\n        this.listen();\n      }\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.unlisten();\n      clearTimeout(this.$resizeTimeout);\n      this.$resizeTimeout = null;\n      this.$el = null;\n      this.$config = null;\n      this.$scroller = null;\n      this.$selector = null;\n      this.$offsets = null;\n      this.$targets = null;\n      this.$activeTarget = null;\n      this.$scrollHeight = null;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen() {\n      var _this = this;\n\n      var scroller = this.getScroller();\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOn(scroller, 'scroll', this, EventOptions);\n      }\n\n      eventOn(window, 'scroll', this, EventOptions);\n      eventOn(window, 'resize', this, EventOptions);\n      eventOn(window, 'orientationchange', this, EventOptions);\n      TransitionEndEvents.forEach(function (evtName) {\n        eventOn(window, evtName, _this, EventOptions);\n      });\n      this.setObservers(true); // Schedule a refresh\n\n      this.handleEvent('refresh');\n    }\n  }, {\n    key: \"unlisten\",\n    value: function unlisten() {\n      var _this2 = this;\n\n      var scroller = this.getScroller();\n      this.setObservers(false);\n\n      if (scroller && scroller.tagName !== 'BODY') {\n        eventOff(scroller, 'scroll', this, EventOptions);\n      }\n\n      eventOff(window, 'scroll', this, EventOptions);\n      eventOff(window, 'resize', this, EventOptions);\n      eventOff(window, 'orientationchange', this, EventOptions);\n      TransitionEndEvents.forEach(function (evtName) {\n        eventOff(window, evtName, _this2, EventOptions);\n      });\n    }\n  }, {\n    key: \"setObservers\",\n    value: function setObservers(on) {\n      var _this3 = this;\n\n      // We observe both the scroller for content changes, and the target links\n      if (this.$obs_scroller) {\n        this.$obs_scroller.disconnect();\n        this.$obs_scroller = null;\n      }\n\n      if (this.$obs_targets) {\n        this.$obs_targets.disconnect();\n        this.$obs_targets = null;\n      }\n\n      if (on) {\n        this.$obs_targets = observeDom(this.$el, function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          attributes: true,\n          attributeFilter: ['href']\n        });\n        this.$obs_scroller = observeDom(this.getScroller(), function () {\n          _this3.handleEvent('mutation');\n        }, {\n          subtree: true,\n          childList: true,\n          characterData: true,\n          attributes: true,\n          attributeFilter: ['id', 'style', 'class']\n        });\n      }\n    } // General event handler\n\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(evt) {\n      var type = isString(evt) ? evt : evt.type;\n      var self = this;\n\n      var resizeThrottle = function resizeThrottle() {\n        if (!self.$resizeTimeout) {\n          self.$resizeTimeout = setTimeout(function () {\n            self.refresh();\n            self.process();\n            self.$resizeTimeout = null;\n          }, self.$config.throttle);\n        }\n      };\n\n      if (type === 'scroll') {\n        if (!this.$obs_scroller) {\n          // Just in case we are added to the DOM before the scroll target is\n          // We re-instantiate our listeners, just in case\n          this.listen();\n        }\n\n        this.process();\n      } else if (/(resize|orientationchange|mutation|refresh)/.test(type)) {\n        // Postpone these events by throttle time\n        resizeThrottle();\n      }\n    } // Refresh the list of target links on the element we are applied to\n\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this4 = this;\n\n      var scroller = this.getScroller();\n\n      if (!scroller) {\n        return;\n      }\n\n      var autoMethod = scroller !== scroller.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;\n      var method = this.$config.method === 'auto' ? autoMethod : this.$config.method;\n      var methodFn = method === OffsetMethod.POSITION ? position : offset;\n      var offsetBase = method === OffsetMethod.POSITION ? this.getScrollTop() : 0;\n      this.$offsets = [];\n      this.$targets = [];\n      this.$scrollHeight = this.getScrollHeight(); // Find all the unique link HREFs that we will control\n\n      selectAll(this.$selector, this.$el) // Get HREF value\n      .map(function (link) {\n        return getAttr(link, 'href');\n      }) // Filter out HREFs that do not match our RegExp\n      .filter(function (href) {\n        return href && HREF_REGEX.test(href || '');\n      }) // Find all elements with ID that match HREF hash\n      .map(function (href) {\n        // Convert HREF into an ID (including # at beginning)\n        var id = href.replace(HREF_REGEX, '$1').trim();\n\n        if (!id) {\n          return null;\n        } // Find the element with the ID specified by id\n\n\n        var el = select(id, scroller);\n\n        if (el && isVisible(el)) {\n          return {\n            offset: parseInt(methodFn(el).top, 10) + offsetBase,\n            target: id\n          };\n        }\n\n        return null;\n      }).filter(Boolean) // Sort them by their offsets (smallest first)\n      .sort(function (a, b) {\n        return a.offset - b.offset;\n      }) // record only unique targets/offsets\n      .reduce(function (memo, item) {\n        if (!memo[item.target]) {\n          _this4.$offsets.push(item.offset);\n\n          _this4.$targets.push(item.target);\n\n          memo[item.target] = true;\n        }\n\n        return memo;\n      }, {}); // Return this for easy chaining\n\n      return this;\n    } // Handle activating/clearing\n\n  }, {\n    key: \"process\",\n    value: function process() {\n      var scrollTop = this.getScrollTop() + this.$config.offset;\n      var scrollHeight = this.getScrollHeight();\n      var maxScroll = this.$config.offset + scrollHeight - this.getOffsetHeight();\n\n      if (this.$scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      if (scrollTop >= maxScroll) {\n        var target = this.$targets[this.$targets.length - 1];\n\n        if (this.$activeTarget !== target) {\n          this.activate(target);\n        }\n\n        return;\n      }\n\n      if (this.$activeTarget && scrollTop < this.$offsets[0] && this.$offsets[0] > 0) {\n        this.$activeTarget = null;\n        this.clear();\n        return;\n      }\n\n      for (var i = this.$offsets.length; i--;) {\n        var isActiveTarget = this.$activeTarget !== this.$targets[i] && scrollTop >= this.$offsets[i] && (isUndefined(this.$offsets[i + 1]) || scrollTop < this.$offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this.activate(this.$targets[i]);\n        }\n      }\n    }\n  }, {\n    key: \"getScroller\",\n    value: function getScroller() {\n      if (this.$scroller) {\n        return this.$scroller;\n      }\n\n      var scroller = this.$config.element;\n\n      if (!scroller) {\n        return null;\n      } else if (isElement(scroller.$el)) {\n        scroller = scroller.$el;\n      } else if (isString(scroller)) {\n        scroller = select(scroller);\n      }\n\n      if (!scroller) {\n        return null;\n      }\n\n      this.$scroller = scroller.tagName === 'BODY' ? window : scroller;\n      return this.$scroller;\n    }\n  }, {\n    key: \"getScrollTop\",\n    value: function getScrollTop() {\n      var scroller = this.getScroller();\n      return scroller === window ? scroller.pageYOffset : scroller.scrollTop;\n    }\n  }, {\n    key: \"getScrollHeight\",\n    value: function getScrollHeight() {\n      return this.getScroller().scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\n    }\n  }, {\n    key: \"getOffsetHeight\",\n    value: function getOffsetHeight() {\n      var scroller = this.getScroller();\n      return scroller === window ? window.innerHeight : getBCR(scroller).height;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(target) {\n      var _this5 = this;\n\n      this.$activeTarget = target;\n      this.clear(); // Grab the list of target links (<a href=\"{$target}\">)\n\n      var links = selectAll(this.$selector // Split out the base selectors\n      .split(',') // Map to a selector that matches links with HREF ending in the ID (including '#')\n      .map(function (selector) {\n        return \"\".concat(selector, \"[href$=\\\"\").concat(target, \"\\\"]\");\n      }) // Join back into a single selector string\n      .join(','), this.$el);\n      links.forEach(function (link) {\n        if (hasClass(link, ClassName.DROPDOWN_ITEM)) {\n          // This is a dropdown item, so find the .dropdown-toggle and set it's state\n          var dropdown = closest(Selector.DROPDOWN, link);\n\n          if (dropdown) {\n            _this5.setActiveState(select(Selector.DROPDOWN_TOGGLE, dropdown), true);\n          } // Also set this link's state\n\n\n          _this5.setActiveState(link, true);\n        } else {\n          // Set triggered link as active\n          _this5.setActiveState(link, true);\n\n          if (matches(link.parentElement, Selector.NAV_ITEMS)) {\n            // Handle nav-link inside nav-item, and set nav-item active\n            _this5.setActiveState(link.parentElement, true);\n          } // Set triggered links parents as active\n          // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\n\n\n          var el = link;\n\n          while (el) {\n            el = closest(Selector.NAV_LIST_GROUP, el);\n            var sibling = el ? el.previousElementSibling : null;\n\n            if (sibling && matches(sibling, \"\".concat(Selector.NAV_LINKS, \", \").concat(Selector.LIST_ITEMS))) {\n              _this5.setActiveState(sibling, true);\n            } // Handle special case where nav-link is inside a nav-item\n\n\n            if (sibling && matches(sibling, Selector.NAV_ITEMS)) {\n              _this5.setActiveState(select(Selector.NAV_LINKS, sibling), true); // Add active state to nav-item as well\n\n\n              _this5.setActiveState(sibling, true);\n            }\n          }\n        }\n      }); // Signal event to via $root, passing ID of activated target and reference to array of links\n\n      if (links && links.length > 0 && this.$root) {\n        this.$root.$emit(ACTIVATE_EVENT, target, links);\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this6 = this;\n\n      selectAll(\"\".concat(this.$selector, \", \").concat(Selector.NAV_ITEMS), this.$el).filter(function (el) {\n        return hasClass(el, ClassName.ACTIVE);\n      }).forEach(function (el) {\n        return _this6.setActiveState(el, false);\n      });\n    }\n  }, {\n    key: \"setActiveState\",\n    value: function setActiveState(el, active) {\n      if (!el) {\n        return;\n      }\n\n      if (active) {\n        addClass(el, ClassName.ACTIVE);\n      } else {\n        removeClass(el, ClassName.ACTIVE);\n      }\n    }\n  }], [{\n    key: \"Name\",\n    get: function get() {\n      return NAME;\n    }\n  }, {\n    key: \"Default\",\n    get: function get() {\n      return Default;\n    }\n  }, {\n    key: \"DefaultType\",\n    get: function get() {\n      return DefaultType;\n    }\n  }]);\n\n  return ScrollSpy;\n}();\n\nexport default ScrollSpy;"]},"metadata":{},"sourceType":"module"}