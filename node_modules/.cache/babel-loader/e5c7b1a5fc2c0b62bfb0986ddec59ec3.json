{"ast":null,"code":"import Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { normalizeSlot } from '../../utils/normalize-slot';\nimport { BMediaBody } from './media-body';\nimport { BMediaAside } from './media-aside';\nexport var props = {\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  rightAlign: {\n    type: Boolean,\n    default: false\n  },\n  verticalAlign: {\n    type: String,\n    default: 'top'\n  },\n  noBody: {\n    type: Boolean,\n    default: false\n  } // @vue/component\n\n};\nexport var BMedia = /*#__PURE__*/Vue.extend({\n  name: 'BMedia',\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots,\n        children = _ref.children;\n    var childNodes = props.noBody ? children : [];\n\n    if (!props.noBody) {\n      var $slots = slots();\n      var $scopedSlots = scopedSlots || {};\n      var $aside = normalizeSlot('aside', {}, $scopedSlots, $slots);\n      var $default = normalizeSlot('default', {}, $scopedSlots, $slots);\n\n      if ($aside && !props.rightAlign) {\n        childNodes.push(h(BMediaAside, {\n          staticClass: 'mr-3',\n          props: {\n            verticalAlign: props.verticalAlign\n          }\n        }, $aside));\n      }\n\n      childNodes.push(h(BMediaBody, {}, $default));\n\n      if ($aside && props.rightAlign) {\n        childNodes.push(h(BMediaAside, {\n          staticClass: 'ml-3',\n          props: {\n            verticalAlign: props.verticalAlign\n          }\n        }, $aside));\n      }\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'media'\n    }), childNodes);\n  }\n});\nexport default BMedia;","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/media/media.js"],"names":["Vue","mergeData","normalizeSlot","BMediaBody","BMediaAside","props","tag","type","String","default","rightAlign","Boolean","verticalAlign","noBody","BMedia","extend","name","functional","render","h","_ref","data","slots","scopedSlots","children","childNodes","$slots","$scopedSlots","$aside","$default","push","staticClass"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,IAAIC,KAAK,GAAG;AACjBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,OAAO,EAAE;AAFN,GADY;AAKjBC,EAAAA,UAAU,EAAE;AACVH,IAAAA,IAAI,EAAEI,OADI;AAEVF,IAAAA,OAAO,EAAE;AAFC,GALK;AASjBG,EAAAA,aAAa,EAAE;AACbL,IAAAA,IAAI,EAAEC,MADO;AAEbC,IAAAA,OAAO,EAAE;AAFI,GATE;AAajBI,EAAAA,MAAM,EAAE;AACNN,IAAAA,IAAI,EAAEI,OADA;AAENF,IAAAA,OAAO,EAAE;AAFH,GAbS,CAgBf;;AAhBe,CAAZ;AAmBP,OAAO,IAAIK,MAAM,GACjB,aACAd,GAAG,CAACe,MAAJ,CAAW;AACTC,EAAAA,IAAI,EAAE,QADG;AAETC,EAAAA,UAAU,EAAE,IAFH;AAGTZ,EAAAA,KAAK,EAAEA,KAHE;AAITa,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmBC,IAAnB,EAAyB;AAC/B,QAAIf,KAAK,GAAGe,IAAI,CAACf,KAAjB;AAAA,QACIgB,IAAI,GAAGD,IAAI,CAACC,IADhB;AAAA,QAEIC,KAAK,GAAGF,IAAI,CAACE,KAFjB;AAAA,QAGIC,WAAW,GAAGH,IAAI,CAACG,WAHvB;AAAA,QAIIC,QAAQ,GAAGJ,IAAI,CAACI,QAJpB;AAKA,QAAIC,UAAU,GAAGpB,KAAK,CAACQ,MAAN,GAAeW,QAAf,GAA0B,EAA3C;;AAEA,QAAI,CAACnB,KAAK,CAACQ,MAAX,EAAmB;AACjB,UAAIa,MAAM,GAAGJ,KAAK,EAAlB;AACA,UAAIK,YAAY,GAAGJ,WAAW,IAAI,EAAlC;AACA,UAAIK,MAAM,GAAG1B,aAAa,CAAC,OAAD,EAAU,EAAV,EAAcyB,YAAd,EAA4BD,MAA5B,CAA1B;AACA,UAAIG,QAAQ,GAAG3B,aAAa,CAAC,SAAD,EAAY,EAAZ,EAAgByB,YAAhB,EAA8BD,MAA9B,CAA5B;;AAEA,UAAIE,MAAM,IAAI,CAACvB,KAAK,CAACK,UAArB,EAAiC;AAC/Be,QAAAA,UAAU,CAACK,IAAX,CAAgBX,CAAC,CAACf,WAAD,EAAc;AAC7B2B,UAAAA,WAAW,EAAE,MADgB;AAE7B1B,UAAAA,KAAK,EAAE;AACLO,YAAAA,aAAa,EAAEP,KAAK,CAACO;AADhB;AAFsB,SAAd,EAKdgB,MALc,CAAjB;AAMD;;AAEDH,MAAAA,UAAU,CAACK,IAAX,CAAgBX,CAAC,CAAChB,UAAD,EAAa,EAAb,EAAiB0B,QAAjB,CAAjB;;AAEA,UAAID,MAAM,IAAIvB,KAAK,CAACK,UAApB,EAAgC;AAC9Be,QAAAA,UAAU,CAACK,IAAX,CAAgBX,CAAC,CAACf,WAAD,EAAc;AAC7B2B,UAAAA,WAAW,EAAE,MADgB;AAE7B1B,UAAAA,KAAK,EAAE;AACLO,YAAAA,aAAa,EAAEP,KAAK,CAACO;AADhB;AAFsB,SAAd,EAKdgB,MALc,CAAjB;AAMD;AACF;;AAED,WAAOT,CAAC,CAACd,KAAK,CAACC,GAAP,EAAYL,SAAS,CAACoB,IAAD,EAAO;AAClCU,MAAAA,WAAW,EAAE;AADqB,KAAP,CAArB,EAEJN,UAFI,CAAR;AAGD;AA1CQ,CAAX,CAFO;AA8CP,eAAeX,MAAf","sourcesContent":["import Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { normalizeSlot } from '../../utils/normalize-slot';\nimport { BMediaBody } from './media-body';\nimport { BMediaAside } from './media-aside';\nexport var props = {\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  rightAlign: {\n    type: Boolean,\n    default: false\n  },\n  verticalAlign: {\n    type: String,\n    default: 'top'\n  },\n  noBody: {\n    type: Boolean,\n    default: false\n  } // @vue/component\n\n};\nexport var BMedia =\n/*#__PURE__*/\nVue.extend({\n  name: 'BMedia',\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots,\n        children = _ref.children;\n    var childNodes = props.noBody ? children : [];\n\n    if (!props.noBody) {\n      var $slots = slots();\n      var $scopedSlots = scopedSlots || {};\n      var $aside = normalizeSlot('aside', {}, $scopedSlots, $slots);\n      var $default = normalizeSlot('default', {}, $scopedSlots, $slots);\n\n      if ($aside && !props.rightAlign) {\n        childNodes.push(h(BMediaAside, {\n          staticClass: 'mr-3',\n          props: {\n            verticalAlign: props.verticalAlign\n          }\n        }, $aside));\n      }\n\n      childNodes.push(h(BMediaBody, {}, $default));\n\n      if ($aside && props.rightAlign) {\n        childNodes.push(h(BMediaAside, {\n          staticClass: 'ml-3',\n          props: {\n            verticalAlign: props.verticalAlign\n          }\n        }, $aside));\n      }\n    }\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'media'\n    }), childNodes);\n  }\n});\nexport default BMedia;"]},"metadata":{},"sourceType":"module"}