{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.function.name.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// @ is an alias to /src\nimport { LMap, LTileLayer, LMarker, LIcon, LPopup } from \"vue2-leaflet\";\nimport beer from \"../assets/beer-mug-icon-png-11.jpg\";\nexport default {\n  components: {\n    LMap: LMap,\n    LTileLayer: LTileLayer,\n    LMarker: LMarker,\n    LIcon: LIcon,\n    LPopup: LPopup\n  },\n  data: function data() {\n    return {\n      zoom: 10,\n      center: null,\n      url: \"https://tile.thunderforest.com/pioneer/{z}/{x}/{y}.png?apikey=3eeffe78d4454d8ab83cbb1f08f30619\",\n      attribution: '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n      marker: L.latLng(47.41322, -1.219482),\n      icon: beer,\n      iconSize: [55, 55],\n      location: null,\n      gettingLocation: false,\n      errorStr: null\n    };\n  },\n  computed: {\n    getCoords: function getCoords() {\n      var lat = parseInt(this.$store.state.beers.latitude);\n      var long = this.$store.state.beers.longitude;\n      console.log(this.$store.state.beers.latitude);\n      this.center = L.latLng(lat, long);\n      return L.latLng(lat, long);\n    },\n    popup: function popup() {\n      return \"<div><h2>\".concat(this.$store.state.beers.name, \"</h2><p class=\\\"popup-text\\\">City: \").concat(this.$store.state.beers.city, \"</p><p class=\\\"popup-text\\\">State: \").concat(this.$store.state.beers.state, \"</p><p class=\\\"popup-text\\\">Country: \").concat(this.$store.state.beers.country, \"</p><p class=\\\"popup-text\\\">Type: \").concat(this.$store.state.beers.type, \"</p><span class=\\\"popup-text\\\">Website: <a class=\\\"popup-text\\\" href=\\\"\").concat(this.$store.state.beers.website, \"\\\"> \").concat(this.$store.state.beers.website, \"</a></span></div>\");\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    //do we support geolocation\n    if (!(\"geolocation\" in navigator)) {\n      this.errorStr = \"Geolocation is not available.\";\n      return;\n    } // get position\n\n\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      _this.center = L.latLng(pos.coords.latitude, pos.coords.longitude);\n      _this.gettingLocation = true;\n    }, function (err) {\n      _this.gettingLocation = false;\n      _this.errorStr = err.message;\n    });\n  },\n  updated: function updated() {\n    var _this2 = this;\n\n    //do we support geolocation\n    if (!(\"geolocation\" in navigator)) {\n      this.errorStr = \"Geolocation is not available.\";\n      return;\n    } // get position\n\n\n    navigator.geolocation.getCurrentPosition(function (pos) {\n      _this2.center = L.latLng(pos.coords.latitude, pos.coords.longitude);\n      _this2.gettingLocation = true;\n    }, function (err) {\n      _this2.gettingLocation = false;\n      _this2.errorStr = err.message;\n    });\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACAA;AAAAC;AAAAC;AAAAC;AAAAC;AAAAC;AAAA,GADA;AAEAC,MAFA,kBAEA;AACA;AACAC,cADA;AAEAC,kBAFA;AAGAC,WACA,gGAJA;AAKAC,mBACA,0EANA;AAOAC,2CAPA;AAQAC,gBARA;AASAC,wBATA;AAUAC,oBAVA;AAWAC,4BAXA;AAYAC;AAZA;AAcA,GAjBA;AAkBAC;AACAC,aADA,uBACA;AACA;AACA;AACAC;AACA;AACA;AACA,KAPA;AASAC,SATA,mBASA;AACA,gCACA,4BADA,gDAGA,4BAHA,gDAKA,6BALA,kDAOA,+BAPA,+CASA,4BATA,oFAWA,+BAXA,iBAYA,+BAZA;AAaA;AAvBA,GAlBA;AA2CAC,SA3CA,qBA2CA;AAAA;;AACA;AACA;AACA;AACA;AACA,KALA,CAMA;;;AACAC,6CACA;AACA;AACA;AACA,KAJA,EAKA;AACA;AACA;AACA,KARA;AAUA,GA5DA;AA6DAC,SA7DA,qBA6DA;AAAA;;AACA;AACA;AACA;AACA;AACA,KALA,CAMA;;;AACAD,6CACA;AACA;AACA;AACA,KAJA,EAKA;AACA;AACA;AACA,KARA;AAUA;AA9EA","names":["components","LMap","LTileLayer","LMarker","LIcon","LPopup","data","zoom","center","url","attribution","marker","icon","iconSize","location","gettingLocation","errorStr","computed","getCoords","console","popup","mounted","navigator","updated"],"sourceRoot":"src/components","sources":["AppMap.vue"],"sourcesContent":["    <template>\r\n      <div class=\"map\" v-if=\"gettingLocation\">\r\n        <l-map :zoom=\"zoom\" :center=\"center\">\r\n          <l-tile-layer :url=\"url\" :attribution=\"attribution\"></l-tile-layer>\r\n          <l-marker :lat-lng=\"getCoords\">\r\n            <l-icon :icon-url=\"icon\" :icon-size=\"iconSize\"></l-icon>\r\n            <l-popup :content=\"popup\" :options=\"{ autoClose: false, closeOnClick: false }\"></l-popup>\r\n          </l-marker>\r\n        </l-map>\r\n      </div>\r\n    </template>\r\n\r\n    <script>\r\n    // @ is an alias to /src\r\n    import { LMap, LTileLayer, LMarker, LIcon, LPopup } from \"vue2-leaflet\";\r\n    import beer from \"../assets/beer-mug-icon-png-11.jpg\";\r\n    export default {\r\n      components: { LMap, LTileLayer, LMarker, LIcon, LPopup },\r\n      data() {\r\n        return {\r\n          zoom: 10,\r\n          center: null,\r\n          url:\r\n            \"https://tile.thunderforest.com/pioneer/{z}/{x}/{y}.png?apikey=3eeffe78d4454d8ab83cbb1f08f30619\",\r\n          attribution:\r\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n          marker: L.latLng(47.41322, -1.219482),\r\n          icon: beer,\r\n          iconSize: [55, 55],\r\n          location: null,\r\n          gettingLocation: false,\r\n          errorStr: null\r\n        };\r\n      },\r\n      computed: {\r\n        getCoords() {\r\n          let lat = parseInt(this.$store.state.beers.latitude);\r\n          let long = this.$store.state.beers.longitude;\r\n          console.log(this.$store.state.beers.latitude);\r\n          this.center = L.latLng(lat, long);\r\n          return L.latLng(lat, long);\r\n        },\r\n\r\n        popup() {\r\n          return `<div><h2>${\r\n            this.$store.state.beers.name\r\n          }</h2><p class=\"popup-text\">City: ${\r\n            this.$store.state.beers.city\r\n          }</p><p class=\"popup-text\">State: ${\r\n            this.$store.state.beers.state\r\n          }</p><p class=\"popup-text\">Country: ${\r\n            this.$store.state.beers.country\r\n          }</p><p class=\"popup-text\">Type: ${\r\n            this.$store.state.beers.type\r\n          }</p><span class=\"popup-text\">Website: <a class=\"popup-text\" href=\"${\r\n            this.$store.state.beers.website\r\n          }\"> ${this.$store.state.beers.website}</a></span></div>`;\r\n        }\r\n      },\r\n      mounted() {\r\n        //do we support geolocation\r\n        if (!(\"geolocation\" in navigator)) {\r\n          this.errorStr = \"Geolocation is not available.\";\r\n          return;\r\n        }\r\n        // get position\r\n        navigator.geolocation.getCurrentPosition(\r\n          pos => {\r\n            this.center = L.latLng(pos.coords.latitude, pos.coords.longitude);\r\n            this.gettingLocation = true;\r\n          },\r\n          err => {\r\n            this.gettingLocation = false;\r\n            this.errorStr = err.message;\r\n          }\r\n        );\r\n      },\r\n      updated() {\r\n        //do we support geolocation\r\n        if (!(\"geolocation\" in navigator)) {\r\n          this.errorStr = \"Geolocation is not available.\";\r\n          return;\r\n        }\r\n        // get position\r\n        navigator.geolocation.getCurrentPosition(\r\n          pos => {\r\n            this.center = L.latLng(pos.coords.latitude, pos.coords.longitude);\r\n            this.gettingLocation = true;\r\n          },\r\n          err => {\r\n            this.gettingLocation = false;\r\n            this.errorStr = err.message;\r\n          }\r\n        );\r\n      }\r\n    };\r\n    </script>"]},"metadata":{},"sourceType":"module"}