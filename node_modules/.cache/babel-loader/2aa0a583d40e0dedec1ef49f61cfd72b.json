{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Krystian/Desktop/projekt/ecommercevuefirestore/ecommercevuefirestore/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { LMap, LMarker, LTileLayer, LTooltip } from \"vue2-leaflet\";\nimport { OpenStreetMapProvider } from \"leaflet-geosearch\";\nimport LGeosearch from \"vue2-leaflet-geosearch\";\nimport { icon } from \"leaflet\";\nexport default {\n  name: \"LocationInput\",\n  components: {\n    LMap: LMap,\n    LTileLayer: LTileLayer,\n    LMarker: LMarker,\n    LTooltip: LTooltip,\n    LGeosearch: LGeosearch\n  },\n  props: {\n    value: {\n      type: Object,\n      required: true\n    },\n    defaultLocation: {\n      type: Object,\n      default: function _default() {\n        return {\n          lat: 8.9806,\n          lng: 38.7578\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      loading: false,\n      geoSearchOptions: {\n        provider: new OpenStreetMapProvider(),\n        showMarker: false,\n        autoClose: true\n      },\n      userLocation: {},\n      icon: icon({\n        iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\n        iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\n        shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\n      }),\n      position: {},\n      address: \"\",\n      tileProvider: {\n        attribution: '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      },\n      zoom: 18,\n      dragging: false\n    };\n  },\n  mounted: function mounted() {\n    this.getUserPosition();\n    this.$refs.map.mapObject.on(\"geosearch/showlocation\", this.onSearch);\n  },\n  watch: {\n    position: {\n      deep: true,\n      handler: function handler(value) {\n        var _this = this;\n\n        return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return _this.getAddress();\n\n                case 2:\n                  _this.address = _context.sent;\n\n                  _this.$emit(\"input\", {\n                    position: value,\n                    address: _this.address\n                  });\n\n                case 4:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))();\n      }\n    }\n  },\n  computed: {\n    tooltipContent: function tooltipContent() {\n      if (this.dragging) return \"...\";\n      if (this.loading) return \"Loading...\";\n      return \"<strong>\".concat(this.address.replace(\",\", \"<br/>\"), \"</strong> <hr/><strong>lat:</strong> \").concat(this.position.lat, \"<br/> <strong>lng:</strong> \").concat(this.position.lng);\n    }\n  },\n  methods: {\n    getAddress: function getAddress() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var address, _this2$position, lat, lng, result, body;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this2.loading = true;\n                address = \"Unresolved address\";\n                _context2.prev = 2;\n                _this2$position = _this2.position, lat = _this2$position.lat, lng = _this2$position.lng;\n                _context2.next = 6;\n                return fetch(\"https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=\".concat(lat, \"&lon=\").concat(lng));\n\n              case 6:\n                result = _context2.sent;\n\n                if (!(result.status === 200)) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                _context2.next = 10;\n                return result.json();\n\n              case 10:\n                body = _context2.sent;\n                address = body.display_name;\n\n              case 12:\n                _context2.next = 17;\n                break;\n\n              case 14:\n                _context2.prev = 14;\n                _context2.t0 = _context2[\"catch\"](2);\n                console.error(\"Reverse Geocode Error->\", _context2.t0);\n\n              case 17:\n                _this2.loading = false;\n                return _context2.abrupt(\"return\", address);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 14]]);\n      }))();\n    },\n    onMapClick: function onMapClick(value) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                // place the marker on the clicked spot\n                _this3.position = value.latlng;\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    onSearch: function onSearch(value) {\n      var loc = value.location;\n      this.position = {\n        lat: loc.y,\n        lng: loc.x\n      };\n    },\n    getUserPosition: function getUserPosition() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (navigator.geolocation) {\n                  // get GPS position\n                  navigator.geolocation.getCurrentPosition(function (pos) {\n                    // set the user location\n                    _this4.userLocation = {\n                      lat: pos.coords.latitude,\n                      lng: pos.coords.longitude\n                    };\n                  });\n                }\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;AACA;AACA;AACA;AACA;AACAA,uBADA;AAEAC;AACAC,cADA;AAEAC,0BAFA;AAGAC,oBAHA;AAIAC,sBAJA;AAKAC;AALA,GAFA;AASAC;AACAC;AACAC,kBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAG;AAAA;AACAC,qBADA;AAEAC;AAFA;AAAA;AAFA;AALA,GATA;AAsBAC,MAtBA,kBAsBA;AACA;AACAC,oBADA;AAEAC;AACAC,6CADA;AAEAC,yBAFA;AAGAC;AAHA,OAFA;AAOAC,sBAPA;AAQAC;AACAC,wEADA;AAEAC,+DAFA;AAGAC;AAHA,QARA;AAaAC,kBAbA;AAcAC,iBAdA;AAeAC;AACAC,qBACA,0FAFA;AAGAC;AAHA,OAfA;AAoBAC,cApBA;AAqBAC;AArBA;AAuBA,GA9CA;AA+CAC,SA/CA,qBA+CA;AACA;AACA;AACA,GAlDA;AAmDAC;AACAR;AACAS,gBADA;AAEAC,aAFA,mBAEA5B,KAFA,EAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACA,kBADA;;AAAA;AACA,+BADA;;AAEA;AAAAkB;AAAAC;AAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AALA;AADA,GAnDA;AA4DAU;AACAC,kBADA,4BACA;AACA;AACA;AACA,oDACA,GADA,EAEA,OAFA,mDAIA,iBAJA,yCAKA,iBALA;AAMA;AAVA,GA5DA;AAwEAC;AACAC,cADA,wBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACAb,uBAFA,GAEA,oBAFA;AAAA;AAAA,kCAIA,eAJA,EAIAd,GAJA,mBAIAA,GAJA,EAIAC,GAJA,mBAIAA,GAJA;AAAA;AAAA,uBAKA2B,8EACA5B,GADA,kBACAC,GADA,EALA;;AAAA;AAKA4B,sBALA;;AAAA,sBAQAA,qBARA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBASAA,aATA;;AAAA;AASAC,oBATA;AAUAhB;;AAVA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaAiB;;AAbA;AAeA;AAfA,kDAgBAjB,OAhBA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA,KAlBA;AAmBAkB,cAnBA,sBAmBArC,KAnBA,EAmBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,KAtBA;AAuBAsC,YAvBA,oBAuBAtC,KAvBA,EAuBA;AACA;AACA;AAAAK;AAAAC;AAAA;AACA,KA1BA;AA2BAiC,mBA3BA,6BA2BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACAC;AACA;AACA;AACAnC,8CADA;AAEAC;AAFA;AAIA,mBANA;AAOA;;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAtCA;AAxEA","names":["name","components","LMap","LTileLayer","LMarker","LTooltip","LGeosearch","props","value","type","required","defaultLocation","default","lat","lng","data","loading","geoSearchOptions","provider","showMarker","autoClose","userLocation","icon","iconRetinaUrl","iconUrl","shadowUrl","position","address","tileProvider","attribution","url","zoom","dragging","mounted","watch","deep","handler","computed","tooltipContent","methods","getAddress","fetch","result","body","console","onMapClick","onSearch","getUserPosition","navigator"],"sourceRoot":"src/components","sources":["AppMap.vue"],"sourcesContent":["Skip to content\r\nSearch or jump toâ€¦\r\nPull requests\r\nIssues\r\nMarketplace\r\nExplore\r\n \r\n@cristiano250 \r\neyuelberga\r\n/\r\nvue-leaflet-geolocation-selector\r\nPublic\r\nCode\r\nIssues\r\nPull requests\r\nActions\r\nProjects\r\nWiki\r\nSecurity\r\nInsights\r\nvue-leaflet-geolocation-selector/src/components/GeolocationSelectorMap.vue\r\n@eyuelberga\r\neyuelberga ðŸ‘• verbose name\r\nLatest commit dcc2c12 on 7 Sep 2020\r\n History\r\n 1 contributor\r\n148 lines (147 sloc)  3.75 KB\r\n   \r\n<template>\r\n  <l-map\r\n    ref=\"map\"\r\n    @dblclick=\"onMapClick\"\r\n    :zoom=\"zoom\"\r\n    :center=\"[\r\n      position.lat || userLocation.lat || defaultLocation.lat,\r\n      position.lng || userLocation.lng || defaultLocation.lng\r\n    ]\"\r\n  >\r\n    <l-tile-layer\r\n      :url=\"tileProvider.url\"\r\n      :attribution=\"tileProvider.attribution\"\r\n    />\r\n    <l-geosearch :options=\"geoSearchOptions\"></l-geosearch>\r\n    <l-marker\r\n      v-if=\"position.lat && position.lng\"\r\n      visible\r\n      draggable\r\n      :icon=\"icon\"\r\n      :lat-lng.sync=\"position\"\r\n      @dragstart=\"dragging = true\"\r\n      @dragend=\"dragging = false\"\r\n    >\r\n      <l-tooltip :content=\"tooltipContent\" :options=\"{ permanent: true }\" />\r\n    </l-marker>\r\n  </l-map>\r\n</template>\r\n<script>\r\nimport { LMap, LMarker, LTileLayer, LTooltip } from \"vue2-leaflet\";\r\nimport { OpenStreetMapProvider } from \"leaflet-geosearch\";\r\nimport LGeosearch from \"vue2-leaflet-geosearch\";\r\nimport { icon } from \"leaflet\";\r\nexport default {\r\n  name: \"LocationInput\",\r\n  components: {\r\n    LMap,\r\n    LTileLayer,\r\n    LMarker,\r\n    LTooltip,\r\n    LGeosearch\r\n  },\r\n  props: {\r\n    value: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    defaultLocation: {\r\n      type: Object,\r\n      default: () => ({\r\n        lat: 8.9806,\r\n        lng: 38.7578\r\n      })\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      loading: false,\r\n      geoSearchOptions: {\r\n        provider: new OpenStreetMapProvider(),\r\n        showMarker: false,\r\n        autoClose: true\r\n      },\r\n      userLocation: {},\r\n      icon: icon({\r\n        iconRetinaUrl: require(\"leaflet/dist/images/marker-icon-2x.png\"),\r\n        iconUrl: require(\"leaflet/dist/images/marker-icon.png\"),\r\n        shadowUrl: require(\"leaflet/dist/images/marker-shadow.png\")\r\n      }),\r\n      position: {},\r\n      address: \"\",\r\n      tileProvider: {\r\n        attribution:\r\n          '&copy; <a target=\"_blank\" href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n      },\r\n      zoom: 18,\r\n      dragging: false\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getUserPosition();\r\n    this.$refs.map.mapObject.on(\"geosearch/showlocation\", this.onSearch);\r\n  },\r\n  watch: {\r\n    position: {\r\n      deep: true,\r\n      async handler(value) {\r\n        this.address = await this.getAddress();\r\n        this.$emit(\"input\", { position: value, address: this.address });\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    tooltipContent() {\r\n      if (this.dragging) return \"...\";\r\n      if (this.loading) return \"Loading...\";\r\n      return `<strong>${this.address.replace(\r\n        \",\",\r\n        \"<br/>\"\r\n      )}</strong> <hr/><strong>lat:</strong> ${\r\n        this.position.lat\r\n      }<br/> <strong>lng:</strong> ${this.position.lng}`;\r\n    }\r\n  },\r\n  methods: {\r\n    async getAddress() {\r\n      this.loading = true;\r\n      let address = \"Unresolved address\";\r\n      try {\r\n        const { lat, lng } = this.position;\r\n        const result = await fetch(\r\n          `https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lng}`\r\n        );\r\n        if (result.status === 200) {\r\n          const body = await result.json();\r\n          address = body.display_name;\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Reverse Geocode Error->\", e);\r\n      }\r\n      this.loading = false;\r\n      return address;\r\n    },\r\n    async onMapClick(value) {\r\n      // place the marker on the clicked spot\r\n      this.position = value.latlng;\r\n    },\r\n    onSearch(value) {\r\n      const loc = value.location;\r\n      this.position = { lat: loc.y, lng: loc.x };\r\n    },\r\n    async getUserPosition() {\r\n      if (navigator.geolocation) {\r\n        // get GPS position\r\n        navigator.geolocation.getCurrentPosition(pos => {\r\n          // set the user location\r\n          this.userLocation = {\r\n            lat: pos.coords.latitude,\r\n            lng: pos.coords.longitude\r\n          };\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\nÂ© 2022 GitHub, Inc.\r\nTerms\r\nPrivacy\r\nSecurity\r\nStatus\r\nDocs\r\nContact GitHub\r\nPricing\r\nAPI\r\nTraining\r\nBlog\r\nAbout\r\nLoading complete"]},"metadata":{},"sourceType":"module"}