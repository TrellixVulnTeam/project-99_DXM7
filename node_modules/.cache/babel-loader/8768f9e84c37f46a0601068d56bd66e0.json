{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport Vue from '../../utils/vue';\nimport ToolTip from '../../utils/tooltip.class';\nimport warn from '../../utils/warn';\nimport { isArray, arrayIncludes } from '../../utils/array';\nimport { getComponentConfig } from '../../utils/config';\nimport { HTMLElement } from '../../utils/safe-types';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nimport toolpopMixin from '../../mixins/toolpop';\nvar NAME = 'BTooltip'; // @vue/component\n\nexport var BTooltip = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  mixins: [toolpopMixin, normalizeSlotMixin],\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    triggers: {\n      type: [String, Array],\n      default: 'hover focus'\n    },\n    placement: {\n      type: String,\n      default: 'top'\n    },\n    fallbackPlacement: {\n      type: [String, Array],\n      default: 'flip',\n      validator: function validator(value) {\n        return isArray(value) || arrayIncludes(['flip', 'clockwise', 'counterclockwise'], value);\n      }\n    },\n    variant: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'variant');\n      }\n    },\n    customClass: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'customClass');\n      }\n    },\n    delay: {\n      type: [Number, Object, String],\n      default: function _default() {\n        return getComponentConfig(NAME, 'delay');\n      }\n    },\n    boundary: {\n      // String: scrollParent, window, or viewport\n      // Element: element reference\n      type: [String, HTMLElement],\n      default: function _default() {\n        return getComponentConfig(NAME, 'boundary');\n      }\n    },\n    boundaryPadding: {\n      type: Number,\n      default: function _default() {\n        return getComponentConfig(NAME, 'boundaryPadding');\n      }\n    }\n  },\n  methods: {\n    createToolpop: function createToolpop() {\n      // getTarget is in toolpop mixin\n      var target = this.getTarget();\n      /* istanbul ignore else */\n\n      if (target) {\n        this._toolpop = new ToolTip(target, this.getConfig(), this);\n      } else {\n        this._toolpop = null;\n        warn(\"b-tooltip: 'target' element not found!\");\n      }\n\n      return this._toolpop;\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      class: ['d-none'],\n      style: {\n        display: 'none'\n      },\n      attrs: {\n        'aria-hidden': true\n      }\n    }, [h('div', {\n      ref: 'title'\n    }, this.normalizeSlot('default'))]);\n  }\n});\nexport default BTooltip;","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js"],"names":["Vue","ToolTip","warn","isArray","arrayIncludes","getComponentConfig","HTMLElement","normalizeSlotMixin","toolpopMixin","NAME","BTooltip","extend","name","mixins","props","title","type","String","default","triggers","Array","placement","fallbackPlacement","validator","value","variant","_default","customClass","delay","Number","Object","boundary","boundaryPadding","methods","createToolpop","target","getTarget","_toolpop","getConfig","render","h","class","style","display","attrs","ref","normalizeSlot"],"mappings":"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","sourcesContent":["import Vue from '../../utils/vue';\nimport ToolTip from '../../utils/tooltip.class';\nimport warn from '../../utils/warn';\nimport { isArray, arrayIncludes } from '../../utils/array';\nimport { getComponentConfig } from '../../utils/config';\nimport { HTMLElement } from '../../utils/safe-types';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nimport toolpopMixin from '../../mixins/toolpop';\nvar NAME = 'BTooltip'; // @vue/component\n\nexport var BTooltip =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  mixins: [toolpopMixin, normalizeSlotMixin],\n  props: {\n    title: {\n      type: String,\n      default: ''\n    },\n    triggers: {\n      type: [String, Array],\n      default: 'hover focus'\n    },\n    placement: {\n      type: String,\n      default: 'top'\n    },\n    fallbackPlacement: {\n      type: [String, Array],\n      default: 'flip',\n      validator: function validator(value) {\n        return isArray(value) || arrayIncludes(['flip', 'clockwise', 'counterclockwise'], value);\n      }\n    },\n    variant: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'variant');\n      }\n    },\n    customClass: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'customClass');\n      }\n    },\n    delay: {\n      type: [Number, Object, String],\n      default: function _default() {\n        return getComponentConfig(NAME, 'delay');\n      }\n    },\n    boundary: {\n      // String: scrollParent, window, or viewport\n      // Element: element reference\n      type: [String, HTMLElement],\n      default: function _default() {\n        return getComponentConfig(NAME, 'boundary');\n      }\n    },\n    boundaryPadding: {\n      type: Number,\n      default: function _default() {\n        return getComponentConfig(NAME, 'boundaryPadding');\n      }\n    }\n  },\n  methods: {\n    createToolpop: function createToolpop() {\n      // getTarget is in toolpop mixin\n      var target = this.getTarget();\n      /* istanbul ignore else */\n\n      if (target) {\n        this._toolpop = new ToolTip(target, this.getConfig(), this);\n      } else {\n        this._toolpop = null;\n        warn(\"b-tooltip: 'target' element not found!\");\n      }\n\n      return this._toolpop;\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      class: ['d-none'],\n      style: {\n        display: 'none'\n      },\n      attrs: {\n        'aria-hidden': true\n      }\n    }, [h('div', {\n      ref: 'title'\n    }, this.normalizeSlot('default'))]);\n  }\n});\nexport default BTooltip;"]},"metadata":{},"sourceType":"module"}