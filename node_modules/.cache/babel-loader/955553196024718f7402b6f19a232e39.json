{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport normalizeSlotMixin from './normalize-slot'; // @vue/component\n\nexport default {\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  model: {\n    prop: 'checked',\n    event: 'input'\n  },\n  props: {\n    value: {// Value when checked\n      // type: Object,\n      // default: undefined\n    },\n    checked: {// This is the v-model\n      // type: Object,\n      // default: undefined\n    },\n    inline: {\n      type: Boolean,\n      default: false\n    },\n    plain: {\n      type: Boolean,\n      default: false\n    },\n    button: {\n      // Only applicable in standalone mode (non group)\n      type: Boolean,\n      default: false\n    },\n    buttonVariant: {\n      // Only applicable when rendered with button style\n      type: String,\n      default: null\n    },\n    ariaLabel: {\n      // Placed on the input if present.\n      type: String,\n      default: null\n    },\n    ariaLabelledby: {\n      // Placed on the input if present.\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      localChecked: this.isGroup ? this.bvGroup.checked : this.checked,\n      hasFocus: false\n    };\n  },\n  computed: {\n    computedLocalChecked: {\n      get: function get() {\n        return this.isGroup ? this.bvGroup.localChecked : this.localChecked;\n      },\n      set: function set(val) {\n        if (this.isGroup) {\n          this.bvGroup.localChecked = val;\n        } else {\n          this.localChecked = val;\n        }\n      }\n    },\n    isGroup: function isGroup() {\n      // Is this check/radio a child of check-group or radio-group?\n      return Boolean(this.bvGroup);\n    },\n    isBtnMode: function isBtnMode() {\n      // Support button style in single input mode\n      return this.isGroup ? this.bvGroup.buttons : this.button;\n    },\n    isPlain: function isPlain() {\n      return this.isBtnMode ? false : this.isGroup ? this.bvGroup.plain : this.plain;\n    },\n    isCustom: function isCustom() {\n      return this.isBtnMode ? false : !this.isPlain;\n    },\n    isSwitch: function isSwitch() {\n      // Custom switch styling (checkboxes only)\n      return this.isBtnMode || this.isRadio || this.isPlain ? false : this.isGroup ? this.bvGroup.switches : this.switch;\n    },\n    isInline: function isInline() {\n      return this.isGroup ? this.bvGroup.inline : this.inline;\n    },\n    isDisabled: function isDisabled() {\n      // Child can be disabled while parent isn't, but is always disabled if group is\n      return this.isGroup ? this.bvGroup.disabled || this.disabled : this.disabled;\n    },\n    isRequired: function isRequired() {\n      // Required only works when a name is provided for the input(s)\n      // Child can only be required when parent is\n      // Groups will always have a name (either user supplied or auto generated)\n      return Boolean(this.getName && (this.isGroup ? this.bvGroup.required : this.required));\n    },\n    getName: function getName() {\n      // Group name preferred over local name\n      return (this.isGroup ? this.bvGroup.groupName : this.name) || null;\n    },\n    getForm: function getForm() {\n      return (this.isGroup ? this.bvGroup.form : this.form) || null;\n    },\n    getSize: function getSize() {\n      return (this.isGroup ? this.bvGroup.size : this.size) || '';\n    },\n    getState: function getState() {\n      return this.isGroup ? this.bvGroup.computedState : this.computedState;\n    },\n    getButtonVariant: function getButtonVariant() {\n      // Local variant preferred over group variant\n      if (this.buttonVariant) {\n        return this.buttonVariant;\n      } else if (this.isGroup && this.bvGroup.buttonVariant) {\n        return this.bvGroup.buttonVariant;\n      } // default variant\n\n\n      return 'secondary';\n    },\n    buttonClasses: function buttonClasses() {\n      var _ref; // Same for radio & check\n\n\n      return ['btn', \"btn-\".concat(this.getButtonVariant), (_ref = {}, _defineProperty(_ref, \"btn-\".concat(this.getSize), this.getSize), _defineProperty(_ref, \"disabled\", this.isDisabled), _defineProperty(_ref, \"active\", this.isChecked), _defineProperty(_ref, \"focus\", this.hasFocus), _ref)];\n    }\n  },\n  watch: {\n    checked: function checked(newVal, oldVal) {\n      this.computedLocalChecked = newVal;\n    }\n  },\n  methods: {\n    handleFocus: function handleFocus(evt) {\n      // When in buttons mode, we need to add 'focus' class to label when input focused\n      // As it is the hidden input which has actual focus\n      if (evt.target) {\n        if (evt.type === 'focus') {\n          this.hasFocus = true;\n        } else if (evt.type === 'blur') {\n          this.hasFocus = false;\n        }\n      }\n    },\n    // Convenience methods for focusing the input\n    focus: function focus() {\n      if (!this.isDisabled && this.$refs.input && this.$refs.input.focus) {\n        this.$refs.input.focus();\n      }\n    },\n    blur: function blur() {\n      if (!this.isDisabled && this.$refs.input && this.$refs.input.blur) {\n        this.$refs.input.blur();\n      }\n    }\n  },\n  render: function render(h) {\n    var defaultSlot = this.normalizeSlot('default'); // Generate the input element\n\n    var on = {\n      change: this.handleChange\n    };\n\n    if (this.isBtnMode) {\n      // Handlers for focus styling when in button mode\n      on.focus = on.blur = this.handleFocus;\n    }\n\n    var input = h('input', {\n      ref: 'input',\n      key: 'input',\n      on: on,\n      class: {\n        'form-check-input': this.isPlain,\n        'custom-control-input': this.isCustom,\n        'is-valid': this.getState === true && !this.isBtnMode,\n        'is-invalid': this.getState === false && !this.isBtnMode,\n        // https://github.com/bootstrap-vue/bootstrap-vue/issues/2911\n        'position-static': this.isPlain && !defaultSlot\n      },\n      directives: [{\n        name: 'model',\n        rawName: 'v-model',\n        value: this.computedLocalChecked,\n        expression: 'computedLocalChecked'\n      }],\n      attrs: _objectSpread({}, this.$attrs, {\n        id: this.safeId(),\n        type: this.isRadio ? 'radio' : 'checkbox',\n        name: this.getName,\n        form: this.getForm,\n        disabled: this.isDisabled,\n        required: this.isRequired,\n        autocomplete: 'off',\n        'aria-required': this.isRequired || null,\n        'aria-label': this.ariaLabel || null,\n        'aria-labelledby': this.ariaLabelledby || null\n      }),\n      domProps: {\n        value: this.value,\n        checked: this.isChecked\n      }\n    });\n\n    if (this.isBtnMode) {\n      // Button mode\n      var button = h('label', {\n        class: this.buttonClasses\n      }, [input, defaultSlot]);\n\n      if (!this.isGroup) {\n        // Standalone button mode, so wrap in 'btn-group-toggle'\n        // and flag it as inline-block to mimic regular buttons\n        button = h('div', {\n          class: ['btn-group-toggle', 'd-inline-block']\n        }, [button]);\n      }\n\n      return button;\n    } else {\n      // Not button mode\n      var label = h(); // If no label content in plain mode we dont render the label\n      // https://github.com/bootstrap-vue/bootstrap-vue/issues/2911\n\n      if (!(this.isPlain && !defaultSlot)) {\n        label = h('label', {\n          class: {\n            'form-check-label': this.isPlain,\n            'custom-control-label': this.isCustom\n          },\n          attrs: {\n            for: this.safeId()\n          }\n        }, defaultSlot);\n      } // Wrap it in a div\n\n\n      return h('div', {\n        class: _defineProperty({\n          'form-check': this.isPlain,\n          'form-check-inline': this.isPlain && this.isInline,\n          'custom-control': this.isCustom,\n          'custom-control-inline': this.isCustom && this.isInline,\n          'custom-checkbox': this.isCustom && this.isCheck && !this.isSwitch,\n          'custom-switch': this.isSwitch,\n          'custom-radio': this.isCustom && this.isRadio\n        }, \"b-custom-control-\".concat(this.getSize), Boolean(this.getSize && !this.isBtnMode))\n      }, [input, label]);\n    }\n  }\n};","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/mixins/form-radio-check.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","normalizeSlotMixin","mixins","inheritAttrs","model","prop","event","props","checked","inline","type","Boolean","default","plain","button","buttonVariant","String","ariaLabel","ariaLabelledby","data","localChecked","isGroup","bvGroup","hasFocus","computed","computedLocalChecked","get","set","val","isBtnMode","buttons","isPlain","isCustom","isSwitch","isRadio","switches","switch","isInline","isDisabled","disabled","isRequired","getName","required","groupName","name","getForm","form","getSize","size","getState","computedState","getButtonVariant","buttonClasses","_ref","concat","isChecked","watch","newVal","oldVal","methods","handleFocus","evt","focus","$refs","input","blur","render","h","defaultSlot","normalizeSlot","on","change","handleChange","ref","class","directives","rawName","expression","attrs","$attrs","id","safeId","autocomplete","domProps","label","for","isCheck"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport normalizeSlotMixin from './normalize-slot'; // @vue/component\n\nexport default {\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  model: {\n    prop: 'checked',\n    event: 'input'\n  },\n  props: {\n    value: {// Value when checked\n      // type: Object,\n      // default: undefined\n    },\n    checked: {// This is the v-model\n      // type: Object,\n      // default: undefined\n    },\n    inline: {\n      type: Boolean,\n      default: false\n    },\n    plain: {\n      type: Boolean,\n      default: false\n    },\n    button: {\n      // Only applicable in standalone mode (non group)\n      type: Boolean,\n      default: false\n    },\n    buttonVariant: {\n      // Only applicable when rendered with button style\n      type: String,\n      default: null\n    },\n    ariaLabel: {\n      // Placed on the input if present.\n      type: String,\n      default: null\n    },\n    ariaLabelledby: {\n      // Placed on the input if present.\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      localChecked: this.isGroup ? this.bvGroup.checked : this.checked,\n      hasFocus: false\n    };\n  },\n  computed: {\n    computedLocalChecked: {\n      get: function get() {\n        return this.isGroup ? this.bvGroup.localChecked : this.localChecked;\n      },\n      set: function set(val) {\n        if (this.isGroup) {\n          this.bvGroup.localChecked = val;\n        } else {\n          this.localChecked = val;\n        }\n      }\n    },\n    isGroup: function isGroup() {\n      // Is this check/radio a child of check-group or radio-group?\n      return Boolean(this.bvGroup);\n    },\n    isBtnMode: function isBtnMode() {\n      // Support button style in single input mode\n      return this.isGroup ? this.bvGroup.buttons : this.button;\n    },\n    isPlain: function isPlain() {\n      return this.isBtnMode ? false : this.isGroup ? this.bvGroup.plain : this.plain;\n    },\n    isCustom: function isCustom() {\n      return this.isBtnMode ? false : !this.isPlain;\n    },\n    isSwitch: function isSwitch() {\n      // Custom switch styling (checkboxes only)\n      return this.isBtnMode || this.isRadio || this.isPlain ? false : this.isGroup ? this.bvGroup.switches : this.switch;\n    },\n    isInline: function isInline() {\n      return this.isGroup ? this.bvGroup.inline : this.inline;\n    },\n    isDisabled: function isDisabled() {\n      // Child can be disabled while parent isn't, but is always disabled if group is\n      return this.isGroup ? this.bvGroup.disabled || this.disabled : this.disabled;\n    },\n    isRequired: function isRequired() {\n      // Required only works when a name is provided for the input(s)\n      // Child can only be required when parent is\n      // Groups will always have a name (either user supplied or auto generated)\n      return Boolean(this.getName && (this.isGroup ? this.bvGroup.required : this.required));\n    },\n    getName: function getName() {\n      // Group name preferred over local name\n      return (this.isGroup ? this.bvGroup.groupName : this.name) || null;\n    },\n    getForm: function getForm() {\n      return (this.isGroup ? this.bvGroup.form : this.form) || null;\n    },\n    getSize: function getSize() {\n      return (this.isGroup ? this.bvGroup.size : this.size) || '';\n    },\n    getState: function getState() {\n      return this.isGroup ? this.bvGroup.computedState : this.computedState;\n    },\n    getButtonVariant: function getButtonVariant() {\n      // Local variant preferred over group variant\n      if (this.buttonVariant) {\n        return this.buttonVariant;\n      } else if (this.isGroup && this.bvGroup.buttonVariant) {\n        return this.bvGroup.buttonVariant;\n      } // default variant\n\n\n      return 'secondary';\n    },\n    buttonClasses: function buttonClasses() {\n      var _ref;\n\n      // Same for radio & check\n      return ['btn', \"btn-\".concat(this.getButtonVariant), (_ref = {}, _defineProperty(_ref, \"btn-\".concat(this.getSize), this.getSize), _defineProperty(_ref, \"disabled\", this.isDisabled), _defineProperty(_ref, \"active\", this.isChecked), _defineProperty(_ref, \"focus\", this.hasFocus), _ref)];\n    }\n  },\n  watch: {\n    checked: function checked(newVal, oldVal) {\n      this.computedLocalChecked = newVal;\n    }\n  },\n  methods: {\n    handleFocus: function handleFocus(evt) {\n      // When in buttons mode, we need to add 'focus' class to label when input focused\n      // As it is the hidden input which has actual focus\n      if (evt.target) {\n        if (evt.type === 'focus') {\n          this.hasFocus = true;\n        } else if (evt.type === 'blur') {\n          this.hasFocus = false;\n        }\n      }\n    },\n    // Convenience methods for focusing the input\n    focus: function focus() {\n      if (!this.isDisabled && this.$refs.input && this.$refs.input.focus) {\n        this.$refs.input.focus();\n      }\n    },\n    blur: function blur() {\n      if (!this.isDisabled && this.$refs.input && this.$refs.input.blur) {\n        this.$refs.input.blur();\n      }\n    }\n  },\n  render: function render(h) {\n    var defaultSlot = this.normalizeSlot('default'); // Generate the input element\n\n    var on = {\n      change: this.handleChange\n    };\n\n    if (this.isBtnMode) {\n      // Handlers for focus styling when in button mode\n      on.focus = on.blur = this.handleFocus;\n    }\n\n    var input = h('input', {\n      ref: 'input',\n      key: 'input',\n      on: on,\n      class: {\n        'form-check-input': this.isPlain,\n        'custom-control-input': this.isCustom,\n        'is-valid': this.getState === true && !this.isBtnMode,\n        'is-invalid': this.getState === false && !this.isBtnMode,\n        // https://github.com/bootstrap-vue/bootstrap-vue/issues/2911\n        'position-static': this.isPlain && !defaultSlot\n      },\n      directives: [{\n        name: 'model',\n        rawName: 'v-model',\n        value: this.computedLocalChecked,\n        expression: 'computedLocalChecked'\n      }],\n      attrs: _objectSpread({}, this.$attrs, {\n        id: this.safeId(),\n        type: this.isRadio ? 'radio' : 'checkbox',\n        name: this.getName,\n        form: this.getForm,\n        disabled: this.isDisabled,\n        required: this.isRequired,\n        autocomplete: 'off',\n        'aria-required': this.isRequired || null,\n        'aria-label': this.ariaLabel || null,\n        'aria-labelledby': this.ariaLabelledby || null\n      }),\n      domProps: {\n        value: this.value,\n        checked: this.isChecked\n      }\n    });\n\n    if (this.isBtnMode) {\n      // Button mode\n      var button = h('label', {\n        class: this.buttonClasses\n      }, [input, defaultSlot]);\n\n      if (!this.isGroup) {\n        // Standalone button mode, so wrap in 'btn-group-toggle'\n        // and flag it as inline-block to mimic regular buttons\n        button = h('div', {\n          class: ['btn-group-toggle', 'd-inline-block']\n        }, [button]);\n      }\n\n      return button;\n    } else {\n      // Not button mode\n      var label = h(); // If no label content in plain mode we dont render the label\n      // https://github.com/bootstrap-vue/bootstrap-vue/issues/2911\n\n      if (!(this.isPlain && !defaultSlot)) {\n        label = h('label', {\n          class: {\n            'form-check-label': this.isPlain,\n            'custom-control-label': this.isCustom\n          },\n          attrs: {\n            for: this.safeId()\n          }\n        }, defaultSlot);\n      } // Wrap it in a div\n\n\n      return h('div', {\n        class: _defineProperty({\n          'form-check': this.isPlain,\n          'form-check-inline': this.isPlain && this.isInline,\n          'custom-control': this.isCustom,\n          'custom-control-inline': this.isCustom && this.isInline,\n          'custom-checkbox': this.isCustom && this.isCheck && !this.isSwitch,\n          'custom-switch': this.isSwitch,\n          'custom-radio': this.isCustom && this.isRadio\n        }, \"b-custom-control-\".concat(this.getSize), Boolean(this.getSize && !this.isBtnMode))\n      }, [input, label]);\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}