{"ast":null,"code":"import \"core-js/modules/es.string.small.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { getComponentConfig } from '../../utils/config';\nimport { normalizeSlot } from '../../utils/normalize-slot';\nvar NAME = 'BSpinner'; // @vue/component\n\nexport var BSpinner = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  functional: true,\n  props: {\n    type: {\n      type: String,\n      default: 'border' // SCSS currently supports 'border' or 'grow'\n\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    variant: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'variant');\n      }\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    role: {\n      type: String,\n      default: 'status'\n    },\n    tag: {\n      type: String,\n      default: 'span'\n    }\n  },\n  render: function render(h, _ref) {\n    var _class;\n\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots;\n    var $slots = slots();\n    var $scopedSlots = scopedSlots || {};\n    var label = normalizeSlot('label', {}, $scopedSlots, $slots) || props.label;\n\n    if (label) {\n      label = h('span', {\n        staticClass: 'sr-only'\n      }, label);\n    }\n\n    return h(props.tag, mergeData(data, {\n      attrs: {\n        role: label ? props.role || 'status' : null,\n        'aria-hidden': label ? null : 'true'\n      },\n      class: (_class = {}, _defineProperty(_class, \"spinner-\".concat(props.type), Boolean(props.type)), _defineProperty(_class, \"spinner-\".concat(props.type, \"-sm\"), props.small), _defineProperty(_class, \"text-\".concat(props.variant), Boolean(props.variant)), _class)\n    }), [label || h()]);\n  }\n});\nexport default BSpinner;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/ecommercevuefirestore/ecommercevuefirestore/node_modules/bootstrap-vue/esm/components/spinner/spinner.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Vue","mergeData","getComponentConfig","normalizeSlot","NAME","BSpinner","extend","name","functional","props","type","String","default","label","variant","_default","small","Boolean","role","tag","render","h","_ref","_class","data","slots","scopedSlots","$slots","$scopedSlots","staticClass","attrs","class","concat"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { getComponentConfig } from '../../utils/config';\nimport { normalizeSlot } from '../../utils/normalize-slot';\nvar NAME = 'BSpinner'; // @vue/component\n\nexport var BSpinner =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  functional: true,\n  props: {\n    type: {\n      type: String,\n      default: 'border' // SCSS currently supports 'border' or 'grow'\n\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    variant: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'variant');\n      }\n    },\n    small: {\n      type: Boolean,\n      default: false\n    },\n    role: {\n      type: String,\n      default: 'status'\n    },\n    tag: {\n      type: String,\n      default: 'span'\n    }\n  },\n  render: function render(h, _ref) {\n    var _class;\n\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots;\n    var $slots = slots();\n    var $scopedSlots = scopedSlots || {};\n    var label = normalizeSlot('label', {}, $scopedSlots, $slots) || props.label;\n\n    if (label) {\n      label = h('span', {\n        staticClass: 'sr-only'\n      }, label);\n    }\n\n    return h(props.tag, mergeData(data, {\n      attrs: {\n        role: label ? props.role || 'status' : null,\n        'aria-hidden': label ? null : 'true'\n      },\n      class: (_class = {}, _defineProperty(_class, \"spinner-\".concat(props.type), Boolean(props.type)), _defineProperty(_class, \"spinner-\".concat(props.type, \"-sm\"), props.small), _defineProperty(_class, \"text-\".concat(props.variant), Boolean(props.variant)), _class)\n    }), [label || h()]);\n  }\n});\nexport default BSpinner;"]},"metadata":{},"sourceType":"module"}