{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\n\n/**\n * Utilities to get information about the current environment\n */\n// --- Constants ---\nexport var hasWindowSupport = typeof window !== 'undefined';\nexport var hasDocumentSupport = typeof document !== 'undefined';\nexport var hasNavigatorSupport = typeof navigator !== 'undefined';\nexport var hasPromiseSupport = typeof Promise !== 'undefined';\nexport var hasMutationObserverSupport = typeof MutationObserver !== 'undefined' || typeof WebKitMutationObserver !== 'undefined' || typeof MozMutationObserver !== 'undefined';\nexport var isBrowser = hasWindowSupport && hasDocumentSupport && hasNavigatorSupport; // Browser type sniffing\n\nexport var userAgent = isBrowser ? window.navigator.userAgent.toLowerCase() : '';\nexport var isJSDOM = userAgent.indexOf('jsdom') > 0;\nexport var isIE = /msie|trident/.test(userAgent); // Determine if the browser supports the option passive for events\n\nexport var hasPassiveEventSupport = function () {\n  var passiveEventSupported = false;\n\n  if (isBrowser) {\n    try {\n      var options = {\n        get passive() {\n          // This function will be called when the browser\n          // attempts to access the passive property.\n\n          /* istanbul ignore next: will never be called in JSDOM */\n          passiveEventSupported = true;\n        }\n\n      };\n      window.addEventListener('test', options, options);\n      window.removeEventListener('test', options, options);\n    } catch (err) {\n      /* istanbul ignore next: will never be called in JSDOM */\n      passiveEventSupported = false;\n    }\n  }\n\n  return passiveEventSupported;\n}();\nexport var hasTouchSupport = isBrowser && ('ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0);\nexport var hasPointerEventSupport = isBrowser && Boolean(window.PointerEvent || window.MSPointerEvent);\nexport var hasIntersectionObserverSupport = isBrowser && 'IntersectionObserver' in window && 'IntersectionObserverEntry' in window && // Edge 15 and UC Browser lack support for `isIntersecting`\n// but we an use intersectionRatio > 0 instead\n// 'isIntersecting' in window.IntersectionObserverEntry.prototype &&\n'intersectionRatio' in window.IntersectionObserverEntry.prototype; // --- Getters ---\n\nexport var getEnv = function getEnv(key) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var env = typeof process !== 'undefined' && process ? process.env || {} : {};\n\n  if (!key) {\n    /* istanbul ignore next */\n    return env;\n  }\n\n  return env[key] || fallback;\n};\nexport var getNoWarn = function getNoWarn() {\n  return getEnv('BOOTSTRAP_VUE_NO_WARN');\n};","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/TO3/ecommercevuefirestore/node_modules/bootstrap-vue/esm/utils/env.js"],"names":["hasWindowSupport","window","hasDocumentSupport","document","hasNavigatorSupport","navigator","hasPromiseSupport","Promise","hasMutationObserverSupport","MutationObserver","WebKitMutationObserver","MozMutationObserver","isBrowser","userAgent","toLowerCase","isJSDOM","indexOf","isIE","test","hasPassiveEventSupport","passiveEventSupported","options","passive","addEventListener","removeEventListener","err","hasTouchSupport","documentElement","maxTouchPoints","hasPointerEventSupport","Boolean","PointerEvent","MSPointerEvent","hasIntersectionObserverSupport","IntersectionObserverEntry","prototype","getEnv","key","fallback","arguments","length","undefined","env","process","getNoWarn"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,OAAO,IAAIA,gBAAgB,GAAG,OAAOC,MAAP,KAAkB,WAAzC;AACP,OAAO,IAAIC,kBAAkB,GAAG,OAAOC,QAAP,KAAoB,WAA7C;AACP,OAAO,IAAIC,mBAAmB,GAAG,OAAOC,SAAP,KAAqB,WAA/C;AACP,OAAO,IAAIC,iBAAiB,GAAG,OAAOC,OAAP,KAAmB,WAA3C;AACP,OAAO,IAAIC,0BAA0B,GAAG,OAAOC,gBAAP,KAA4B,WAA5B,IAA2C,OAAOC,sBAAP,KAAkC,WAA7E,IAA4F,OAAOC,mBAAP,KAA+B,WAA5J;AACP,OAAO,IAAIC,SAAS,GAAGZ,gBAAgB,IAAIE,kBAApB,IAA0CE,mBAA1D,C,CAA+E;;AAEtF,OAAO,IAAIS,SAAS,GAAGD,SAAS,GAAGX,MAAM,CAACI,SAAP,CAAiBQ,SAAjB,CAA2BC,WAA3B,EAAH,GAA8C,EAAvE;AACP,OAAO,IAAIC,OAAO,GAAGF,SAAS,CAACG,OAAV,CAAkB,OAAlB,IAA6B,CAA3C;AACP,OAAO,IAAIC,IAAI,GAAG,eAAeC,IAAf,CAAoBL,SAApB,CAAX,C,CAA2C;;AAElD,OAAO,IAAIM,sBAAsB,GAAG,YAAY;AAC9C,MAAIC,qBAAqB,GAAG,KAA5B;;AAEA,MAAIR,SAAJ,EAAe;AACb,QAAI;AACF,UAAIS,OAAO,GAAG;AACZ,YAAIC,OAAJ,GAAc;AACZ;AACA;;AAEA;AACAF,UAAAA,qBAAqB,GAAG,IAAxB;AACD;;AAPW,OAAd;AAUAnB,MAAAA,MAAM,CAACsB,gBAAP,CAAwB,MAAxB,EAAgCF,OAAhC,EAAyCA,OAAzC;AACApB,MAAAA,MAAM,CAACuB,mBAAP,CAA2B,MAA3B,EAAmCH,OAAnC,EAA4CA,OAA5C;AACD,KAbD,CAaE,OAAOI,GAAP,EAAY;AACZ;AACAL,MAAAA,qBAAqB,GAAG,KAAxB;AACD;AACF;;AAED,SAAOA,qBAAP;AACD,CAxBmC,EAA7B;AAyBP,OAAO,IAAIM,eAAe,GAAGd,SAAS,KAAK,kBAAkBT,QAAQ,CAACwB,eAA3B,IAA8CtB,SAAS,CAACuB,cAAV,GAA2B,CAA9E,CAA/B;AACP,OAAO,IAAIC,sBAAsB,GAAGjB,SAAS,IAAIkB,OAAO,CAAC7B,MAAM,CAAC8B,YAAP,IAAuB9B,MAAM,CAAC+B,cAA/B,CAAjD;AACP,OAAO,IAAIC,8BAA8B,GAAGrB,SAAS,IAAI,0BAA0BX,MAAvC,IAAiD,+BAA+BA,MAAhF,IAA0F;AACtI;AACA;AACA,uBAAuBA,MAAM,CAACiC,yBAAP,CAAiCC,SAHjD,C,CAG4D;;AAEnE,OAAO,IAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AACvC,MAAIC,QAAQ,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,IAAnF;AACA,MAAIG,GAAG,GAAG,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAlC,GAA4CA,OAAO,CAACD,GAAR,IAAe,EAA3D,GAAgE,EAA1E;;AAEA,MAAI,CAACL,GAAL,EAAU;AACR;AACA,WAAOK,GAAP;AACD;;AAED,SAAOA,GAAG,CAACL,GAAD,CAAH,IAAYC,QAAnB;AACD,CAVM;AAWP,OAAO,IAAIM,SAAS,GAAG,SAASA,SAAT,GAAqB;AAC1C,SAAOR,MAAM,CAAC,uBAAD,CAAb;AACD,CAFM","sourcesContent":["/**\n * Utilities to get information about the current environment\n */\n// --- Constants ---\nexport var hasWindowSupport = typeof window !== 'undefined';\nexport var hasDocumentSupport = typeof document !== 'undefined';\nexport var hasNavigatorSupport = typeof navigator !== 'undefined';\nexport var hasPromiseSupport = typeof Promise !== 'undefined';\nexport var hasMutationObserverSupport = typeof MutationObserver !== 'undefined' || typeof WebKitMutationObserver !== 'undefined' || typeof MozMutationObserver !== 'undefined';\nexport var isBrowser = hasWindowSupport && hasDocumentSupport && hasNavigatorSupport; // Browser type sniffing\n\nexport var userAgent = isBrowser ? window.navigator.userAgent.toLowerCase() : '';\nexport var isJSDOM = userAgent.indexOf('jsdom') > 0;\nexport var isIE = /msie|trident/.test(userAgent); // Determine if the browser supports the option passive for events\n\nexport var hasPassiveEventSupport = function () {\n  var passiveEventSupported = false;\n\n  if (isBrowser) {\n    try {\n      var options = {\n        get passive() {\n          // This function will be called when the browser\n          // attempts to access the passive property.\n\n          /* istanbul ignore next: will never be called in JSDOM */\n          passiveEventSupported = true;\n        }\n\n      };\n      window.addEventListener('test', options, options);\n      window.removeEventListener('test', options, options);\n    } catch (err) {\n      /* istanbul ignore next: will never be called in JSDOM */\n      passiveEventSupported = false;\n    }\n  }\n\n  return passiveEventSupported;\n}();\nexport var hasTouchSupport = isBrowser && ('ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0);\nexport var hasPointerEventSupport = isBrowser && Boolean(window.PointerEvent || window.MSPointerEvent);\nexport var hasIntersectionObserverSupport = isBrowser && 'IntersectionObserver' in window && 'IntersectionObserverEntry' in window && // Edge 15 and UC Browser lack support for `isIntersecting`\n// but we an use intersectionRatio > 0 instead\n// 'isIntersecting' in window.IntersectionObserverEntry.prototype &&\n'intersectionRatio' in window.IntersectionObserverEntry.prototype; // --- Getters ---\n\nexport var getEnv = function getEnv(key) {\n  var fallback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  var env = typeof process !== 'undefined' && process ? process.env || {} : {};\n\n  if (!key) {\n    /* istanbul ignore next */\n    return env;\n  }\n\n  return env[key] || fallback;\n};\nexport var getNoWarn = function getNoWarn() {\n  return getEnv('BOOTSTRAP_VUE_NO_WARN');\n};"]},"metadata":{},"sourceType":"module"}