{"ast":null,"code":"import \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { setOptions, tileLayer, DomEvent } from 'leaflet';\n\nvar capitalizeFirstLetter = function capitalizeFirstLetter(string) {\n  if (!string || typeof string.charAt !== 'function') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nvar propsBinder = function propsBinder(vueElement, leafletElement, props, options) {\n  var loop = function loop(key) {\n    var setMethodName = 'set' + capitalizeFirstLetter(key);\n    var deepValue = props[key].type === Object || props[key].type === Array || Array.isArray(props[key].type);\n\n    if (props[key].custom && vueElement[setMethodName]) {\n      vueElement.$watch(key, function (newVal, oldVal) {\n        vueElement[setMethodName](newVal, oldVal);\n      }, {\n        deep: deepValue\n      });\n    } else if (setMethodName === 'setOptions') {\n      vueElement.$watch(key, function (newVal, oldVal) {\n        setOptions(leafletElement, newVal);\n      }, {\n        deep: deepValue\n      });\n    } else if (leafletElement[setMethodName]) {\n      vueElement.$watch(key, function (newVal, oldVal) {\n        leafletElement[setMethodName](newVal);\n      }, {\n        deep: deepValue\n      });\n    }\n  };\n\n  for (var key in props) {\n    loop(key);\n  }\n};\n\nvar collectionCleaner = function collectionCleaner(options) {\n  var result = {};\n\n  for (var key in options) {\n    var value = options[key];\n\n    if (value !== null && value !== undefined) {\n      result[key] = value;\n    }\n  }\n\n  return result;\n};\n\nvar optionsMerger = function optionsMerger(props, instance) {\n  var options = instance.options && instance.options.constructor === Object ? instance.options : {};\n  props = props && props.constructor === Object ? props : {};\n  var result = collectionCleaner(options);\n  props = collectionCleaner(props);\n  var defaultProps = instance.$options.props;\n\n  for (var key in props) {\n    var def = defaultProps[key] ? defaultProps[key].default && typeof defaultProps[key].default === 'function' ? defaultProps[key].default.call() : defaultProps[key].default : Symbol('unique');\n    var isEqual = false;\n\n    if (Array.isArray(def)) {\n      isEqual = JSON.stringify(def) === JSON.stringify(props[key]);\n    } else {\n      isEqual = def === props[key];\n    }\n\n    if (result[key] && !isEqual) {\n      console.warn(key + \" props is overriding the value passed in the options props\");\n      result[key] = props[key];\n    } else if (!result[key]) {\n      result[key] = props[key];\n    }\n  }\n\n  return result;\n};\n\nvar findRealParent = function findRealParent(firstVueParent) {\n  var found = false;\n\n  while (firstVueParent && !found) {\n    if (firstVueParent.mapObject === undefined) {\n      firstVueParent = firstVueParent.$parent;\n    } else {\n      found = true;\n    }\n  }\n\n  return firstVueParent;\n};\n\nvar Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane'\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    }\n  }\n};\nvar GridLayer = {\n  mixins: [Layer],\n  props: {\n    pane: {\n      type: String,\n      default: 'tilePane'\n    },\n    opacity: {\n      type: Number,\n      custom: false,\n      default: 1.0\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    },\n    tileSize: {\n      type: Number,\n      default: 256\n    },\n    noWrap: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.gridLayerOptions = Object.assign({}, this.layerOptions, {\n      pane: this.pane,\n      opacity: this.opacity,\n      zIndex: this.zIndex,\n      tileSize: this.tileSize,\n      noWrap: this.noWrap\n    });\n  }\n};\nvar TileLayerMixin = {\n  mixins: [GridLayer],\n  props: {\n    tms: {\n      type: Boolean,\n      default: false\n    },\n    subdomains: {\n      type: [String, Array],\n      default: 'abc',\n      validator: function validator(prop) {\n        if (typeof prop === 'string') {\n          return true;\n        } // Validates array that array only contains only strings\n\n\n        if (Array.isArray(prop)) {\n          return prop.every(function (subdomain) {\n            return typeof subdomain === 'string';\n          });\n        }\n\n        return false;\n      }\n    },\n    detectRetina: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.tileLayerOptions = Object.assign({}, this.gridLayerOptions, {\n      tms: this.tms,\n      subdomains: this.subdomains,\n      detectRetina: this.detectRetina\n    });\n  },\n  render: function render() {\n    return null;\n  }\n};\nvar Options = {\n  props: {\n    /**\n     * Leaflet options to pass to the component constructor\n     */\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  }\n}; //\n\n/**\n * Load tiles from a map server and display them accordingly to map zoom, center and size\n */\n\nvar script = {\n  name: 'LTileLayer',\n  mixins: [TileLayerMixin, Options],\n  props: {\n    url: {\n      type: String,\n      default: null\n    },\n    tileLayerClass: {\n      type: Function,\n      default: tileLayer\n    }\n  },\n  mounted: function mounted() {\n    var this$1 = this;\n    var options = optionsMerger(this.tileLayerOptions, this);\n    this.mapObject = this.tileLayerClass(this.url, options);\n    DomEvent.on(this.mapObject, this.$listeners);\n    propsBinder(this, this.mapObject, this.$options.props);\n    this.parentContainer = findRealParent(this.$parent);\n    this.parentContainer.addLayer(this, !this.visible);\n    this.$nextTick(function () {\n      /**\n       * Triggers when the component is ready\n       * @type {object}\n       * @property {object} mapObject - reference to leaflet map object\n       */\n      this$1.$emit('ready', this$1.mapObject);\n    });\n  }\n};\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== 'boolean') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === 'function' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function (context) {\n      style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n/* script */\n\n\nvar __vue_script__ = script;\n/* template */\n\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n\n  var _h = _vm.$createElement;\n\n  var _c = _vm._self._c || _h;\n\n  return _c('div');\n};\n\nvar __vue_staticRenderFns__ = [];\n/* style */\n\nvar __vue_inject_styles__ = undefined;\n/* scoped */\n\nvar __vue_scope_id__ = undefined;\n/* module identifier */\n\nvar __vue_module_identifier__ = undefined;\n/* functional template */\n\nvar __vue_is_functional_template__ = false;\n/* style inject */\n\n/* style inject SSR */\n\n/* style inject shadow dom */\n\nvar __vue_component__ = /*#__PURE__*/normalizeComponent({\n  render: __vue_render__,\n  staticRenderFns: __vue_staticRenderFns__\n}, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, false, undefined, undefined, undefined);\n\nexport default __vue_component__;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/projekt/ecommercevuefirestore/ecommercevuefirestore/node_modules/vue2-leaflet/dist/components/LTileLayer.js"],"names":["setOptions","tileLayer","DomEvent","capitalizeFirstLetter","string","charAt","toUpperCase","slice","propsBinder","vueElement","leafletElement","props","options","loop","key","setMethodName","deepValue","type","Object","Array","isArray","custom","$watch","newVal","oldVal","deep","collectionCleaner","result","value","undefined","optionsMerger","instance","constructor","defaultProps","$options","def","default","call","Symbol","isEqual","JSON","stringify","console","warn","findRealParent","firstVueParent","found","mapObject","$parent","Layer","pane","String","attribution","name","layerType","visible","Boolean","mounted","layerOptions","beforeDestroy","unbindPopup","unbindTooltip","parentContainer","removeLayer","methods","setAttribution","val","old","attributionControl","removeAttribution","addAttribution","setName","addLayer","setLayerType","setVisible","isVisible","hideLayer","tooltip","getTooltip","popup","getPopup","updateVisibleProp","$emit","GridLayer","mixins","opacity","Number","zIndex","tileSize","noWrap","gridLayerOptions","assign","TileLayerMixin","tms","subdomains","validator","prop","every","subdomain","detectRetina","tileLayerOptions","render","Options","script","url","tileLayerClass","Function","this$1","on","$listeners","$nextTick","normalizeComponent","template","style","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","staticRenderFns","_compiled","functional","_scopeId","hook","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","shadowRoot","originalRender","renderWithStyleInjection","h","existing","beforeCreate","concat","__vue_script__","__vue_render__","_vm","_h","$createElement","_c","_self","__vue_staticRenderFns__","__vue_inject_styles__","__vue_scope_id__","__vue_module_identifier__","__vue_is_functional_template__","__vue_component__"],"mappings":"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","sourcesContent":["import { setOptions, tileLayer, DomEvent } from 'leaflet';\n\nvar capitalizeFirstLetter = function (string) {\n  if (!string || typeof string.charAt !== 'function') {\n    return string;\n  }\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\nvar propsBinder = function (vueElement, leafletElement, props, options) {\n  var loop = function ( key ) {\n    var setMethodName = 'set' + capitalizeFirstLetter(key);\n    var deepValue =\n      props[key].type === Object ||\n      props[key].type === Array ||\n      Array.isArray(props[key].type);\n    if (props[key].custom && vueElement[setMethodName]) {\n      vueElement.$watch(\n        key,\n        function (newVal, oldVal) {\n          vueElement[setMethodName](newVal, oldVal);\n        },\n        {\n          deep: deepValue,\n        }\n      );\n    } else if (setMethodName === 'setOptions') {\n      vueElement.$watch(\n        key,\n        function (newVal, oldVal) {\n          setOptions(leafletElement, newVal);\n        },\n        {\n          deep: deepValue,\n        }\n      );\n    } else if (leafletElement[setMethodName]) {\n      vueElement.$watch(\n        key,\n        function (newVal, oldVal) {\n          leafletElement[setMethodName](newVal);\n        },\n        {\n          deep: deepValue,\n        }\n      );\n    }\n  };\n\n  for (var key in props) loop( key );\n};\n\nvar collectionCleaner = function (options) {\n  var result = {};\n  for (var key in options) {\n    var value = options[key];\n    if (value !== null && value !== undefined) {\n      result[key] = value;\n    }\n  }\n  return result;\n};\n\nvar optionsMerger = function (props, instance) {\n  var options =\n    instance.options && instance.options.constructor === Object\n      ? instance.options\n      : {};\n  props = props && props.constructor === Object ? props : {};\n  var result = collectionCleaner(options);\n  props = collectionCleaner(props);\n  var defaultProps = instance.$options.props;\n  for (var key in props) {\n    var def = defaultProps[key]\n      ? defaultProps[key].default &&\n        typeof defaultProps[key].default === 'function'\n        ? defaultProps[key].default.call()\n        : defaultProps[key].default\n      : Symbol('unique');\n    var isEqual = false;\n    if (Array.isArray(def)) {\n      isEqual = JSON.stringify(def) === JSON.stringify(props[key]);\n    } else {\n      isEqual = def === props[key];\n    }\n    if (result[key] && !isEqual) {\n      console.warn(\n        (key + \" props is overriding the value passed in the options props\")\n      );\n      result[key] = props[key];\n    } else if (!result[key]) {\n      result[key] = props[key];\n    }\n  }\n  return result;\n};\n\nvar findRealParent = function (firstVueParent) {\n  var found = false;\n  while (firstVueParent && !found) {\n    if (firstVueParent.mapObject === undefined) {\n      firstVueParent = firstVueParent.$parent;\n    } else {\n      found = true;\n    }\n  }\n  return firstVueParent;\n};\n\nvar Layer = {\n  props: {\n    pane: {\n      type: String,\n      default: 'overlayPane',\n    },\n    attribution: {\n      type: String,\n      default: null,\n      custom: true,\n    },\n    name: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    layerType: {\n      type: String,\n      custom: true,\n      default: undefined,\n    },\n    visible: {\n      type: Boolean,\n      custom: true,\n      default: true,\n    },\n  },\n  mounted: function mounted() {\n    this.layerOptions = {\n      attribution: this.attribution,\n      pane: this.pane,\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.unbindPopup();\n    this.unbindTooltip();\n    this.parentContainer.removeLayer(this);\n  },\n  methods: {\n    setAttribution: function setAttribution(val, old) {\n      var attributionControl = this.$parent.mapObject.attributionControl;\n      attributionControl.removeAttribution(old).addAttribution(val);\n    },\n    setName: function setName() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setLayerType: function setLayerType() {\n      this.parentContainer.removeLayer(this);\n      if (this.visible) {\n        this.parentContainer.addLayer(this);\n      }\n    },\n    setVisible: function setVisible(isVisible) {\n      if (this.mapObject) {\n        if (isVisible) {\n          this.parentContainer.addLayer(this);\n        } else {\n          if (this.parentContainer.hideLayer) {\n            this.parentContainer.hideLayer(this);\n          } else {\n            this.parentContainer.removeLayer(this);\n          }\n        }\n      }\n    },\n    unbindTooltip: function unbindTooltip() {\n      var tooltip = this.mapObject ? this.mapObject.getTooltip() : null;\n      if (tooltip) {\n        tooltip.unbindTooltip();\n      }\n    },\n    unbindPopup: function unbindPopup() {\n      var popup = this.mapObject ? this.mapObject.getPopup() : null;\n      if (popup) {\n        popup.unbindPopup();\n      }\n    },\n    updateVisibleProp: function updateVisibleProp(value) {\n      /**\n       * Triggers when the visible prop needs to be updated\n       * @type {boolean}\n       * @property {boolean} value - value of the visible property\n       */\n      this.$emit('update:visible', value);\n    },\n  },\n};\n\nvar GridLayer = {\n  mixins: [Layer],\n  props: {\n    pane: {\n      type: String,\n      default: 'tilePane'\n    },\n    opacity: {\n      type: Number,\n      custom: false,\n      default: 1.0\n    },\n    zIndex: {\n      type: Number,\n      default: 1\n    },\n    tileSize: {\n      type: Number,\n      default: 256\n    },\n    noWrap: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted () {\n    this.gridLayerOptions = Object.assign({}, this.layerOptions,\n      {pane: this.pane,\n      opacity: this.opacity,\n      zIndex: this.zIndex,\n      tileSize: this.tileSize,\n      noWrap: this.noWrap});\n  }\n};\n\nvar TileLayerMixin = {\n  mixins: [GridLayer],\n  props: {\n    tms: {\n      type: Boolean,\n      default: false,\n    },\n    subdomains: {\n      type: [String, Array],\n      default: 'abc',\n      validator: function (prop) {\n        if (typeof prop === 'string') { return true; }\n        // Validates array that array only contains only strings\n        if (Array.isArray(prop)) {\n          return prop.every(function (subdomain) { return typeof subdomain === 'string'; });\n        }\n        return false;\n      },\n    },\n    detectRetina: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  mounted: function mounted() {\n    this.tileLayerOptions = Object.assign({}, this.gridLayerOptions,\n      {tms: this.tms,\n      subdomains: this.subdomains,\n      detectRetina: this.detectRetina});\n  },\n  render: function render() {\n    return null;\n  },\n};\n\nvar Options = {\n  props: {\n    /**\n     * Leaflet options to pass to the component constructor\n     */\n    options: {\n      type: Object,\n      default: function () { return ({}); }\n    }\n  }\n};\n\n//\n\n/**\n * Load tiles from a map server and display them accordingly to map zoom, center and size\n */\nvar script = {\n  name: 'LTileLayer',\n  mixins: [TileLayerMixin, Options],\n  props: {\n    url: {\n      type: String,\n      default: null,\n    },\n    tileLayerClass: {\n      type: Function,\n      default: tileLayer,\n    },\n  },\n  mounted: function mounted() {\n    var this$1 = this;\n\n    var options = optionsMerger(this.tileLayerOptions, this);\n    this.mapObject = this.tileLayerClass(this.url, options);\n    DomEvent.on(this.mapObject, this.$listeners);\n    propsBinder(this, this.mapObject, this.$options.props);\n    this.parentContainer = findRealParent(this.$parent);\n    this.parentContainer.addLayer(this, !this.visible);\n    this.$nextTick(function () {\n      /**\n       * Triggers when the component is ready\n       * @type {object}\n       * @property {object} mapObject - reference to leaflet map object\n       */\n      this$1.$emit('ready', this$1.mapObject);\n    });\n  },\n};\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    var options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    var hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            var originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            var existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\n/* script */\nvar __vue_script__ = script;\n\n/* template */\nvar __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div')};\nvar __vue_staticRenderFns__ = [];\n\n  /* style */\n  var __vue_inject_styles__ = undefined;\n  /* scoped */\n  var __vue_scope_id__ = undefined;\n  /* module identifier */\n  var __vue_module_identifier__ = undefined;\n  /* functional template */\n  var __vue_is_functional_template__ = false;\n  /* style inject */\n  \n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  var __vue_component__ = /*#__PURE__*/normalizeComponent(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    undefined,\n    undefined,\n    undefined\n  );\n\nexport default __vue_component__;\n"]},"metadata":{},"sourceType":"module"}