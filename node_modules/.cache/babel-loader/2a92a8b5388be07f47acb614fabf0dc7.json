{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { getComponentConfig } from '../../utils/config';\nimport { stripTags } from '../../utils/html';\nimport { hasNormalizedSlot, normalizeSlot } from '../../utils/normalize-slot';\nimport { BContainer } from '../layout/container';\nvar NAME = 'BJumbotron';\nexport var props = {\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  containerFluid: {\n    type: Boolean,\n    default: false\n  },\n  header: {\n    type: String,\n    default: null\n  },\n  headerHtml: {\n    type: String,\n    default: null\n  },\n  headerTag: {\n    type: String,\n    default: 'h1'\n  },\n  headerLevel: {\n    type: [Number, String],\n    default: '3'\n  },\n  lead: {\n    type: String,\n    default: null\n  },\n  leadHtml: {\n    type: String,\n    default: null\n  },\n  leadTag: {\n    type: String,\n    default: 'p'\n  },\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  bgVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'bgVariant');\n    }\n  },\n  borderVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'borderVariant');\n    }\n  },\n  textVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'textVariant');\n    }\n  } // @vue/component\n\n};\nexport var BJumbotron = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class2;\n\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots; // The order of the conditionals matter.\n    // We are building the component markup in order.\n\n    var childNodes = [];\n    var $slots = slots();\n    var $scopedSlots = scopedSlots || {}; // Header\n\n    if (props.header || hasNormalizedSlot('header', $scopedSlots, $slots) || props.headerHtml) {\n      childNodes.push(h(props.headerTag, {\n        class: _defineProperty({}, \"display-\".concat(props.headerLevel), Boolean(props.headerLevel))\n      }, normalizeSlot('header', {}, $scopedSlots, $slots) || props.headerHtml || stripTags(props.header)));\n    } // Lead\n\n\n    if (props.lead || hasNormalizedSlot('lead', $scopedSlots, $slots) || props.leadHtml) {\n      childNodes.push(h(props.leadTag, {\n        staticClass: 'lead'\n      }, normalizeSlot('lead', {}, $scopedSlots, $slots) || props.leadHtml || stripTags(props.lead)));\n    } // Default slot\n\n\n    if (hasNormalizedSlot('default', $scopedSlots, $slots)) {\n      childNodes.push(normalizeSlot('default', {}, $scopedSlots, $slots));\n    } // If fluid, wrap content in a container/container-fluid\n\n\n    if (props.fluid) {\n      // Children become a child of a container\n      childNodes = [h(BContainer, {\n        props: {\n          fluid: props.containerFluid\n        }\n      }, childNodes)];\n    } // Return the jumbotron\n\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'jumbotron',\n      class: (_class2 = {\n        'jumbotron-fluid': props.fluid\n      }, _defineProperty(_class2, \"text-\".concat(props.textVariant), Boolean(props.textVariant)), _defineProperty(_class2, \"bg-\".concat(props.bgVariant), Boolean(props.bgVariant)), _defineProperty(_class2, \"border-\".concat(props.borderVariant), Boolean(props.borderVariant)), _defineProperty(_class2, \"border\", Boolean(props.borderVariant)), _class2)\n    }), childNodes);\n  }\n});\nexport default BJumbotron;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/ecommercevuefirestore/ecommercevuefirestore/node_modules/bootstrap-vue/esm/components/jumbotron/jumbotron.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Vue","mergeData","getComponentConfig","stripTags","hasNormalizedSlot","normalizeSlot","BContainer","NAME","props","fluid","type","Boolean","default","containerFluid","header","String","headerHtml","headerTag","headerLevel","Number","lead","leadHtml","leadTag","tag","bgVariant","_default","borderVariant","textVariant","BJumbotron","extend","name","functional","render","h","_ref","_class2","data","slots","scopedSlots","childNodes","$slots","$scopedSlots","push","class","concat","staticClass"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { getComponentConfig } from '../../utils/config';\nimport { stripTags } from '../../utils/html';\nimport { hasNormalizedSlot, normalizeSlot } from '../../utils/normalize-slot';\nimport { BContainer } from '../layout/container';\nvar NAME = 'BJumbotron';\nexport var props = {\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  containerFluid: {\n    type: Boolean,\n    default: false\n  },\n  header: {\n    type: String,\n    default: null\n  },\n  headerHtml: {\n    type: String,\n    default: null\n  },\n  headerTag: {\n    type: String,\n    default: 'h1'\n  },\n  headerLevel: {\n    type: [Number, String],\n    default: '3'\n  },\n  lead: {\n    type: String,\n    default: null\n  },\n  leadHtml: {\n    type: String,\n    default: null\n  },\n  leadTag: {\n    type: String,\n    default: 'p'\n  },\n  tag: {\n    type: String,\n    default: 'div'\n  },\n  bgVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'bgVariant');\n    }\n  },\n  borderVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'borderVariant');\n    }\n  },\n  textVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'textVariant');\n    }\n  } // @vue/component\n\n};\nexport var BJumbotron =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class2;\n\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots;\n    // The order of the conditionals matter.\n    // We are building the component markup in order.\n    var childNodes = [];\n    var $slots = slots();\n    var $scopedSlots = scopedSlots || {}; // Header\n\n    if (props.header || hasNormalizedSlot('header', $scopedSlots, $slots) || props.headerHtml) {\n      childNodes.push(h(props.headerTag, {\n        class: _defineProperty({}, \"display-\".concat(props.headerLevel), Boolean(props.headerLevel))\n      }, normalizeSlot('header', {}, $scopedSlots, $slots) || props.headerHtml || stripTags(props.header)));\n    } // Lead\n\n\n    if (props.lead || hasNormalizedSlot('lead', $scopedSlots, $slots) || props.leadHtml) {\n      childNodes.push(h(props.leadTag, {\n        staticClass: 'lead'\n      }, normalizeSlot('lead', {}, $scopedSlots, $slots) || props.leadHtml || stripTags(props.lead)));\n    } // Default slot\n\n\n    if (hasNormalizedSlot('default', $scopedSlots, $slots)) {\n      childNodes.push(normalizeSlot('default', {}, $scopedSlots, $slots));\n    } // If fluid, wrap content in a container/container-fluid\n\n\n    if (props.fluid) {\n      // Children become a child of a container\n      childNodes = [h(BContainer, {\n        props: {\n          fluid: props.containerFluid\n        }\n      }, childNodes)];\n    } // Return the jumbotron\n\n\n    return h(props.tag, mergeData(data, {\n      staticClass: 'jumbotron',\n      class: (_class2 = {\n        'jumbotron-fluid': props.fluid\n      }, _defineProperty(_class2, \"text-\".concat(props.textVariant), Boolean(props.textVariant)), _defineProperty(_class2, \"bg-\".concat(props.bgVariant), Boolean(props.bgVariant)), _defineProperty(_class2, \"border-\".concat(props.borderVariant), Boolean(props.borderVariant)), _defineProperty(_class2, \"border\", Boolean(props.borderVariant)), _class2)\n    }), childNodes);\n  }\n});\nexport default BJumbotron;"]},"metadata":{},"sourceType":"module"}