{"ast":null,"code":"import Vue from '../../utils/vue';\nimport { isVisible, selectAll } from '../../utils/dom';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nimport KeyCodes from '../../utils/key-codes';\nvar ITEM_SELECTOR = ['.btn:not(.disabled):not([disabled]):not(.dropdown-item)', '.form-control:not(.disabled):not([disabled])', 'select:not(.disabled):not([disabled])', 'input[type=\"checkbox\"]:not(.disabled)', 'input[type=\"radio\"]:not(.disabled)'].join(','); // @vue/component\n\nexport var BButtonToolbar = /*#__PURE__*/Vue.extend({\n  name: 'BButtonToolbar',\n  mixins: [normalizeSlotMixin],\n  props: {\n    justify: {\n      type: Boolean,\n      default: false\n    },\n    keyNav: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    if (this.keyNav) {\n      // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\n      this.getItems();\n    }\n  },\n  methods: {\n    onFocusin: function onFocusin(evt) {\n      if (evt.target === this.$el) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        this.focusFirst(evt);\n      }\n    },\n    stop: function stop(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n    },\n    onKeydown: function onKeydown(evt) {\n      if (!this.keyNav) {\n        /* istanbul ignore next: should never happen */\n        return;\n      }\n\n      var key = evt.keyCode;\n      var shift = evt.shiftKey;\n\n      if (key === KeyCodes.UP || key === KeyCodes.LEFT) {\n        this.stop(evt);\n        shift ? this.focusFirst(evt) : this.focusPrev(evt);\n      } else if (key === KeyCodes.DOWN || key === KeyCodes.RIGHT) {\n        this.stop(evt);\n        shift ? this.focusLast(evt) : this.focusNext(evt);\n      }\n    },\n    setItemFocus: function setItemFocus(item) {\n      item && item.focus && item.focus();\n    },\n    focusFirst: function focusFirst(evt) {\n      var items = this.getItems();\n      this.setItemFocus(items[0]);\n    },\n    focusPrev: function focusPrev(evt) {\n      var items = this.getItems();\n      var index = items.indexOf(evt.target);\n\n      if (index > -1) {\n        items = items.slice(0, index).reverse();\n        this.setItemFocus(items[0]);\n      }\n    },\n    focusNext: function focusNext(evt) {\n      var items = this.getItems();\n      var index = items.indexOf(evt.target);\n\n      if (index > -1) {\n        items = items.slice(index + 1);\n        this.setItemFocus(items[0]);\n      }\n    },\n    focusLast: function focusLast(evt) {\n      var items = this.getItems().reverse();\n      this.setItemFocus(items[0]);\n    },\n    getItems: function getItems() {\n      var items = selectAll(ITEM_SELECTOR, this.$el);\n      items.forEach(function (item) {\n        // Ensure tabfocus is -1 on any new elements\n        item.tabIndex = -1;\n      });\n      return items.filter(function (el) {\n        return isVisible(el);\n      });\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'btn-toolbar',\n      class: {\n        'justify-content-between': this.justify\n      },\n      attrs: {\n        role: 'toolbar',\n        tabindex: this.keyNav ? '0' : null\n      },\n      on: this.keyNav ? {\n        focusin: this.onFocusin,\n        keydown: this.onKeydown\n      } : {}\n    }, [this.normalizeSlot('default')]);\n  }\n});\nexport default BButtonToolbar;","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/button-toolbar/button-toolbar.js"],"names":["Vue","isVisible","selectAll","normalizeSlotMixin","KeyCodes","ITEM_SELECTOR","join","BButtonToolbar","extend","name","mixins","props","justify","type","Boolean","default","keyNav","mounted","getItems","methods","onFocusin","evt","target","$el","preventDefault","stopPropagation","focusFirst","stop","onKeydown","key","keyCode","shift","shiftKey","UP","LEFT","focusPrev","DOWN","RIGHT","focusLast","focusNext","setItemFocus","item","focus","items","index","indexOf","slice","reverse","forEach","tabIndex","filter","el","render","h","staticClass","class","attrs","role","tabindex","on","focusin","keydown","normalizeSlot"],"mappings":"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","sourcesContent":["import Vue from '../../utils/vue';\nimport { isVisible, selectAll } from '../../utils/dom';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nimport KeyCodes from '../../utils/key-codes';\nvar ITEM_SELECTOR = ['.btn:not(.disabled):not([disabled]):not(.dropdown-item)', '.form-control:not(.disabled):not([disabled])', 'select:not(.disabled):not([disabled])', 'input[type=\"checkbox\"]:not(.disabled)', 'input[type=\"radio\"]:not(.disabled)'].join(','); // @vue/component\n\nexport var BButtonToolbar =\n/*#__PURE__*/\nVue.extend({\n  name: 'BButtonToolbar',\n  mixins: [normalizeSlotMixin],\n  props: {\n    justify: {\n      type: Boolean,\n      default: false\n    },\n    keyNav: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    if (this.keyNav) {\n      // Pre-set the tabindexes if the markup does not include tabindex=\"-1\" on the toolbar items\n      this.getItems();\n    }\n  },\n  methods: {\n    onFocusin: function onFocusin(evt) {\n      if (evt.target === this.$el) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        this.focusFirst(evt);\n      }\n    },\n    stop: function stop(evt) {\n      evt.preventDefault();\n      evt.stopPropagation();\n    },\n    onKeydown: function onKeydown(evt) {\n      if (!this.keyNav) {\n        /* istanbul ignore next: should never happen */\n        return;\n      }\n\n      var key = evt.keyCode;\n      var shift = evt.shiftKey;\n\n      if (key === KeyCodes.UP || key === KeyCodes.LEFT) {\n        this.stop(evt);\n        shift ? this.focusFirst(evt) : this.focusPrev(evt);\n      } else if (key === KeyCodes.DOWN || key === KeyCodes.RIGHT) {\n        this.stop(evt);\n        shift ? this.focusLast(evt) : this.focusNext(evt);\n      }\n    },\n    setItemFocus: function setItemFocus(item) {\n      item && item.focus && item.focus();\n    },\n    focusFirst: function focusFirst(evt) {\n      var items = this.getItems();\n      this.setItemFocus(items[0]);\n    },\n    focusPrev: function focusPrev(evt) {\n      var items = this.getItems();\n      var index = items.indexOf(evt.target);\n\n      if (index > -1) {\n        items = items.slice(0, index).reverse();\n        this.setItemFocus(items[0]);\n      }\n    },\n    focusNext: function focusNext(evt) {\n      var items = this.getItems();\n      var index = items.indexOf(evt.target);\n\n      if (index > -1) {\n        items = items.slice(index + 1);\n        this.setItemFocus(items[0]);\n      }\n    },\n    focusLast: function focusLast(evt) {\n      var items = this.getItems().reverse();\n      this.setItemFocus(items[0]);\n    },\n    getItems: function getItems() {\n      var items = selectAll(ITEM_SELECTOR, this.$el);\n      items.forEach(function (item) {\n        // Ensure tabfocus is -1 on any new elements\n        item.tabIndex = -1;\n      });\n      return items.filter(function (el) {\n        return isVisible(el);\n      });\n    }\n  },\n  render: function render(h) {\n    return h('div', {\n      staticClass: 'btn-toolbar',\n      class: {\n        'justify-content-between': this.justify\n      },\n      attrs: {\n        role: 'toolbar',\n        tabindex: this.keyNav ? '0' : null\n      },\n      on: this.keyNav ? {\n        focusin: this.onFocusin,\n        keydown: this.onKeydown\n      } : {}\n    }, [this.normalizeSlot('default')]);\n  }\n});\nexport default BButtonToolbar;"]},"metadata":{},"sourceType":"module"}