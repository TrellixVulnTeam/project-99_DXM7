{"ast":null,"code":"import { contains, eventOff, eventOn } from '../utils/dom'; // @vue/component\n\nexport default {\n  data: function data() {\n    return {\n      listenForClickOut: false\n    };\n  },\n  watch: {\n    listenForClickOut: function listenForClickOut(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        eventOff(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n\n        if (newValue) {\n          eventOn(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n        }\n      }\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    // Declare non-reactive properties\n    this.clickOutElement = null;\n    this.clickOutEventName = null;\n  },\n  mounted: function mounted() {\n    if (!this.clickOutElement) {\n      this.clickOutElement = document;\n    }\n\n    if (!this.clickOutEventName) {\n      this.clickOutEventName = 'ontouchstart' in document.documentElement ? 'touchstart' : 'click';\n    }\n\n    if (this.listenForClickOut) {\n      eventOn(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n    }\n  },\n  beforeDestroy: function beforeDestroy()\n  /* istanbul ignore next */\n  {\n    eventOff(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n  },\n  methods: {\n    isClickOut: function isClickOut(evt) {\n      return !contains(this.$el, evt.target);\n    },\n    _clickOutHandler: function _clickOutHandler(evt) {\n      if (this.clickOutHandler && this.isClickOut(evt)) {\n        this.clickOutHandler(evt);\n      }\n    }\n  }\n};","map":{"version":3,"sources":["D:/UEK/ecommercevuefirestore2304/node_modules/bootstrap-vue/esm/mixins/click-out.js"],"names":["contains","eventOff","eventOn","data","listenForClickOut","watch","newValue","oldValue","clickOutElement","clickOutEventName","_clickOutHandler","beforeCreate","mounted","document","documentElement","beforeDestroy","methods","isClickOut","evt","$el","target","clickOutHandler"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,OAA7B,QAA4C,cAA5C,C,CAA4D;;AAE5D,eAAe;AACbC,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,WAAO;AACLC,MAAAA,iBAAiB,EAAE;AADd,KAAP;AAGD,GALY;AAMbC,EAAAA,KAAK,EAAE;AACLD,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,CAA2BE,QAA3B,EAAqCC,QAArC,EAA+C;AAChE,UAAID,QAAQ,KAAKC,QAAjB,EAA2B;AACzBN,QAAAA,QAAQ,CAAC,KAAKO,eAAN,EAAuB,KAAKC,iBAA5B,EAA+C,KAAKC,gBAApD,EAAsE,KAAtE,CAAR;;AAEA,YAAIJ,QAAJ,EAAc;AACZJ,UAAAA,OAAO,CAAC,KAAKM,eAAN,EAAuB,KAAKC,iBAA5B,EAA+C,KAAKC,gBAApD,EAAsE,KAAtE,CAAP;AACD;AACF;AACF;AATI,GANM;AAiBbC,EAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC;AACA,SAAKH,eAAL,GAAuB,IAAvB;AACA,SAAKC,iBAAL,GAAyB,IAAzB;AACD,GArBY;AAsBbG,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,QAAI,CAAC,KAAKJ,eAAV,EAA2B;AACzB,WAAKA,eAAL,GAAuBK,QAAvB;AACD;;AAED,QAAI,CAAC,KAAKJ,iBAAV,EAA6B;AAC3B,WAAKA,iBAAL,GAAyB,kBAAkBI,QAAQ,CAACC,eAA3B,GAA6C,YAA7C,GAA4D,OAArF;AACD;;AAED,QAAI,KAAKV,iBAAT,EAA4B;AAC1BF,MAAAA,OAAO,CAAC,KAAKM,eAAN,EAAuB,KAAKC,iBAA5B,EAA+C,KAAKC,gBAApD,EAAsE,KAAtE,CAAP;AACD;AACF,GAlCY;AAmCbK,EAAAA,aAAa,EAAE,SAASA,aAAT;AACf;AACA;AACEd,IAAAA,QAAQ,CAAC,KAAKO,eAAN,EAAuB,KAAKC,iBAA5B,EAA+C,KAAKC,gBAApD,EAAsE,KAAtE,CAAR;AACD,GAvCY;AAwCbM,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,GAApB,EAAyB;AACnC,aAAO,CAAClB,QAAQ,CAAC,KAAKmB,GAAN,EAAWD,GAAG,CAACE,MAAf,CAAhB;AACD,KAHM;AAIPV,IAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BQ,GAA1B,EAA+B;AAC/C,UAAI,KAAKG,eAAL,IAAwB,KAAKJ,UAAL,CAAgBC,GAAhB,CAA5B,EAAkD;AAChD,aAAKG,eAAL,CAAqBH,GAArB;AACD;AACF;AARM;AAxCI,CAAf","sourcesContent":["import { contains, eventOff, eventOn } from '../utils/dom'; // @vue/component\n\nexport default {\n  data: function data() {\n    return {\n      listenForClickOut: false\n    };\n  },\n  watch: {\n    listenForClickOut: function listenForClickOut(newValue, oldValue) {\n      if (newValue !== oldValue) {\n        eventOff(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n\n        if (newValue) {\n          eventOn(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n        }\n      }\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    // Declare non-reactive properties\n    this.clickOutElement = null;\n    this.clickOutEventName = null;\n  },\n  mounted: function mounted() {\n    if (!this.clickOutElement) {\n      this.clickOutElement = document;\n    }\n\n    if (!this.clickOutEventName) {\n      this.clickOutEventName = 'ontouchstart' in document.documentElement ? 'touchstart' : 'click';\n    }\n\n    if (this.listenForClickOut) {\n      eventOn(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n    }\n  },\n  beforeDestroy: function beforeDestroy()\n  /* istanbul ignore next */\n  {\n    eventOff(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, false);\n  },\n  methods: {\n    isClickOut: function isClickOut(evt) {\n      return !contains(this.$el, evt.target);\n    },\n    _clickOutHandler: function _clickOutHandler(evt) {\n      if (this.clickOutHandler && this.isClickOut(evt)) {\n        this.clickOutHandler(evt);\n      }\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}