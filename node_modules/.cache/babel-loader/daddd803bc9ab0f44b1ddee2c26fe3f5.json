{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//import { mapGetters } from \"vuex\";\n//import firebase from \"firebase/compat/app\";\nexport default {\n  //computed: {\n  //  ...mapGetters({\n  //     user: \"user\"\n  //   })\n  //  },\n  data() {\n    return {\n      cart: '',\n      form: {\n        userK: '',\n        pass: ''\n      }\n    };\n  },\n\n  created() {\n    if (JSON.parse(localStorage.getItem('products'))) {\n      this.cart = JSON.parse(localStorage.getItem('products'));\n    } else {\n      return;\n    }\n  },\n\n  methods: {\n    gotocart() {\n      this.$router.push('/cart');\n    },\n\n    goHome() {\n      this.$router.push('/');\n    },\n\n    goToLogin() {\n      this.$router.push('/login');\n    },\n\n    goToRegister() {\n      this.$router.push('/register');\n    },\n\n    goTogeoLocation() {\n      this.$router.push('/geoLocation');\n    },\n\n    flashlightFunc() {\n      const SUPPORTS_MEDIA_DEVICES = ('mediaDevices' in navigator);\n\n      if (SUPPORTS_MEDIA_DEVICES) {\n        //Get the environment camera (usually the second one)\n        navigator.mediaDevices.enumerateDevices().then(devices => {\n          const cameras = devices.filter(device => device.kind === 'videoinput');\n\n          if (cameras.length === 0) {\n            throw 'No camera found on this device.';\n          }\n\n          const camera = cameras[cameras.length - 1]; // Create stream and get video track\n\n          navigator.mediaDevices.getUserMedia({\n            video: {\n              deviceId: camera.deviceId,\n              facingMode: ['user', 'environment'],\n              height: {\n                ideal: 1080\n              },\n              width: {\n                ideal: 1920\n              }\n            }\n          }).then(stream => {\n            const track = stream.getVideoTracks()[0]; //Create image capture object and get camera capabilities\n\n            const imageCapture = new ImageCapture(track);\n            const photoCapabilities = imageCapture.getPhotoCapabilities().then(() => {\n              //todo: check if camera has a torch\n              //let there be light!\n              const btn = document.querySelector('.switch');\n              btn.addEventListener('click', function () {\n                track.applyConstraints({\n                  advanced: [{\n                    torch: true\n                  }]\n                });\n              });\n            });\n          });\n        }); //The light will be on as long the track exists\n      }\n    },\n\n    onSubmit(e) {\n      e.preventDefault();\n\n      if (this.form.user == 'admin' && this.form.pass == '456789') {\n        this.$refs['my-modal'].hide();\n        this.$router.push('/admin');\n        localStorage.setItem('admin', JSON.stringify('true'));\n      } else {\n        return false;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACAA;AACA;AACAC,cADA;AAEAC;AACAC,iBADA;AAEAC;AAFA;AAFA;AAOA,GAdA;;AAeAC;AACA;AACA;AACA,KAFA,MAEA;AACA;AACA;AACA,GArBA;;AAsBAC;AACAC;AACA;AACA,KAHA;;AAIAC;AACA;AACA,KANA;;AAOAC;AACA;AACA,KATA;;AAUAC;AACA;AACA,KAZA;;AAaAC;AACA;AACA,KAfA;;AAgBAC;AACA;;AAEA;AACA;AACAC;AAEA;;AAEA;AACA;AACA;;AACA,qDAPA,CASA;;AACAA;AACAC;AACAC,uCADA;AAEAC,iDAFA;AAGAC;AAAAC;AAAA,eAHA;AAIAC;AAAAD;AAAA;AAJA;AADA,aAOAE,IAPA,CAOAC;AACA,qDADA,CAGA;;AACA;AACA;AAEA;AAEA;AACA;AACAC;AACAC;AACAC;AAAAC;AAAA;AADA;AAGA,eAJA;AAKA,aAXA;AAYA,WAxBA;AAyBA,SAnCA,EAFA,CAuCA;AAGA;AAAA,KA7DA;;AA8DAC;AACAC;;AACA;AACA;AACA;AACAC;AACA,OAJA,MAIA;AACA;AACA;AACA;;AAvEA;AAtBA","names":["data","cart","form","userK","pass","created","methods","gotocart","goHome","goToLogin","goToRegister","goTogeoLocation","flashlightFunc","navigator","video","deviceId","facingMode","height","ideal","width","then","stream","btn","track","advanced","torch","onSubmit","e","localStorage"],"sourceRoot":"src/components","sources":["Navbar.vue"],"sourcesContent":["<template>\r\n\t<div>\r\n\t\t<b-navbar toggleable=\"lg\" type=\"dark\" variant=\"success\">\r\n\t\t\t<b-navbar-brand @click=\"goHome\" href=\"#\">\r\n\t\t\t\t<!-- <b-icon-brightness-fill-high>das</b-icon-brightness-fill-high> -->\r\n\t\t\t\tEcommerce</b-navbar-brand>\r\n\t\t\t\r\n\t\t\t<b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\r\n\t\t\t\r\n\t\t\t<b-collapse id=\"nav-collapse\" is-nav>\r\n\t\t\t\t\r\n\t\t\t\t<!--Right alligned nav items-->\r\n\t\t\t\t<b-navbar-nav class=\"ml-auto\">\r\n\t\t\t\t\r\n\t\t\t\t\t<b-nav-item @click=\"gotocart\" active>Lista zakupów</b-nav-item>\r\n\t\t\t\t\t<b-nav-item @click=\"goToLogin\" active>Logowanie się</b-nav-item>\r\n\t\t\t\t\t<b-nav-item @click=\"goToRegister\" active>Zarejestruj się</b-nav-item>\r\n\t\t\t\t\t<b-nav-item @click=\"goTogeoLocation\" active>Zobacz lokalizacje sklepu</b-nav-item>\r\n\t\t\t\t\t<b-nav-item @click=\"flashlightFunc\" active>Latarka</b-nav-item>\r\n\t\t\t\t</b-navbar-nav>\r\n\t\t\t</b-collapse>\r\n\t\t</b-navbar>\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t<div>\r\n\t\t\r\n\t\t\r\n\t\t\t<b-modal hide-footer ref=\"my-modal\" id=\"modal-1\" title=\"Admin\">\r\n\t\t\t\t<b-form @submit=\"onSubmit\">\r\n\t\t\t\t<b-form-group\r\n\t\t\t\t\tid=\"input-group-1\"\r\n\t\t\t\t\tlabel=\"UserK:\"\r\n\t\t\t\t\tlabel-for=\"input-1\"\r\n\t\t\t\t\t\r\n\t\t\t\t>\r\n\t\t\t\t\t<b-form-input\r\n\t\t\t\t\t\tid=\"input-1\"\r\n\t\t\t\t\t\tv-model=\"form.userK\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tplaceholder=\"Enter UserK\"\r\n\t\t\t\t\t></b-form-input>\r\n\t\t\t\t</b-form-group>\r\n\t\t\t\t\r\n\t\t\t\t<b-form-group id=\"input-group-2\" label=\"Password:\" label-for=\"input-2\">\r\n\t\t\t\t\t<b-form-input\r\n\t\t\t\t\t\tid=\"input-2\"\r\n\t\t\t\t\t\tv-model=\"form.pass\"\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t\tplaceholder=\"Enter Password\"\r\n\t\t\t\t\t\t></b-form-input>\r\n\t\t\t\t</b-form-group>\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t<b-button type=\"submit\" block variant=\"primary\">Submit</b-button>\r\n\t\t\t\t\r\n\t\t\t\t</b-form>\r\n\t\t\t\r\n\t\t\t\r\n\t\t\t</b-modal>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n//import { mapGetters } from \"vuex\";\r\n//import firebase from \"firebase/compat/app\";\r\n\r\nexport default {\r\n  //computed: {\r\n  //  ...mapGetters({\r\n //     user: \"user\"\r\n //   })\r\n //  },\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tcart:'',\r\n\t\t\tform: {\r\n\t\t\t\tuserK:'',\r\n\t\t\t\tpass:''\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreated(){\r\n\t\tif(JSON.parse(localStorage.getItem('products'))) {\r\n\t\t\tthis.cart = JSON.parse(localStorage.getItem('products'))\r\n\t\t} else {\r\n\t\t\t\treturn\r\n\t\t}\r\n\t},\r\n\tmethods:{\r\n\t\tgotocart(){\r\n\t\t\tthis.$router.push('/cart')\r\n\t\t},\r\n\t\tgoHome(){\r\n\t\t\tthis.$router.push('/')\r\n\t\t},\r\n\t\tgoToLogin(){\r\n\t\t\tthis.$router.push('/login')\r\n\t\t},\r\n\t\tgoToRegister(){\r\n\t\t\tthis.$router.push('/register')\r\n\t\t},\r\n\t\tgoTogeoLocation(){\r\n\t\t\tthis.$router.push('/geoLocation')\r\n\t\t},\r\n\t\tflashlightFunc(){\r\nconst SUPPORTS_MEDIA_DEVICES = 'mediaDevices' in navigator;\r\n\r\nif (SUPPORTS_MEDIA_DEVICES) {\r\n  //Get the environment camera (usually the second one)\r\n  navigator.mediaDevices.enumerateDevices().then(devices => {\r\n  \r\n    const cameras = devices.filter((device) => device.kind === 'videoinput');\r\n\r\n    if (cameras.length === 0) {\r\n      throw 'No camera found on this device.';\r\n    }\r\n    const camera = cameras[cameras.length - 1];\r\n\r\n    // Create stream and get video track\r\n    navigator.mediaDevices.getUserMedia({\r\n      video: {\r\n        deviceId: camera.deviceId,\r\n        facingMode: ['user', 'environment'],\r\n        height: {ideal: 1080},\r\n        width: {ideal: 1920}\r\n      }\r\n    }).then(stream => {\r\n      const track = stream.getVideoTracks()[0];\r\n\r\n      //Create image capture object and get camera capabilities\r\n      const imageCapture = new ImageCapture(track)\r\n      const photoCapabilities = imageCapture.getPhotoCapabilities().then(() => {\r\n\r\n        //todo: check if camera has a torch\r\n\r\n        //let there be light!\r\n        const btn = document.querySelector('.switch');\r\n        btn.addEventListener('click', function(){\r\n          track.applyConstraints({\r\n            advanced: [{torch: true}]\r\n          });\r\n        });\r\n      });\r\n    });\r\n  });\r\n  \r\n  //The light will be on as long the track exists\r\n  \r\n  \r\n}},\r\n\t\tonSubmit(e){\r\n\t\t\te.preventDefault();\r\n\t\t\tif(this.form.user=='admin' && this.form.pass=='456789'){\r\n\t\t\t\tthis.$refs['my-modal'].hide()\r\n\t\t\t\tthis.$router.push('/admin')\r\n\t\t\t\tlocalStorage.setItem('admin', JSON.stringify('true'))\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}