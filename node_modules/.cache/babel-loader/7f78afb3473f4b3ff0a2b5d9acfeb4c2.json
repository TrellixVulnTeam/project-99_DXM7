{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.string.trim.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n} // Utils\n\n\nimport memoize from '../../utils/memoize';\nimport upperFirst from '../../utils/upper-first';\nimport warn from '../../utils/warn';\nimport { arrayIncludes } from '../../utils/array';\nimport { getBreakpointsUpCached } from '../../utils/config';\nimport { select, selectAll, isVisible, setAttr, removeAttr, getAttr } from '../../utils/dom';\nimport { isBrowser } from '../../utils/env';\nimport { isBoolean } from '../../utils/inspect';\nimport { keys, create } from '../../utils/object'; // Mixins\n\nimport formStateMixin from '../../mixins/form-state';\nimport idMixin from '../../mixins/id';\nimport normalizeSlotMixin from '../../mixins/normalize-slot'; // Sub components\n\nimport { BCol } from '../layout/col';\nimport { BFormRow } from '../layout/form-row';\nimport { BFormText } from '../form/form-text';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormValidFeedback } from '../form/form-valid-feedback'; // Component name\n\nvar NAME = 'BFormGroup'; // Selector for finding first input in the form-group\n\nvar SELECTOR = 'input:not([disabled]),textarea:not([disabled]),select:not([disabled])';\nvar DEPRECATED_MSG = 'Props \"horizontal\" and \"breakpoint\" are deprecated. Use \"label-cols(-{breakpoint})\" props instead.'; // Render helper functions (here rather than polluting the instance with more methods)\n\nvar renderInvalidFeedback = function renderInvalidFeedback(h, ctx) {\n  var content = ctx.normalizeSlot('invalid-feedback') || ctx.invalidFeedback;\n  var invalidFeedback = h();\n\n  if (content) {\n    invalidFeedback = h(BFormInvalidFeedback, {\n      props: {\n        id: ctx.invalidFeedbackId,\n        // If state is explicitly false, always show the feedback\n        state: ctx.computedState,\n        tooltip: ctx.tooltip,\n        ariaLive: ctx.feedbackAriaLive,\n        role: ctx.feedbackAriaLive ? 'alert' : null\n      },\n      attrs: {\n        tabindex: content ? '-1' : null\n      }\n    }, [content]);\n  }\n\n  return invalidFeedback;\n};\n\nvar renderValidFeedback = function renderValidFeedback(h, ctx) {\n  var content = ctx.normalizeSlot('valid-feedback') || ctx.validFeedback;\n  var validFeedback = h();\n\n  if (content) {\n    validFeedback = h(BFormValidFeedback, {\n      props: {\n        id: ctx.validFeedbackId,\n        // If state is explicitly true, always show the feedback\n        state: ctx.computedState,\n        tooltip: ctx.tooltip,\n        ariaLive: ctx.feedbackAriaLive,\n        role: ctx.feedbackAriaLive ? 'alert' : null\n      },\n      attrs: {\n        tabindex: content ? '-1' : null\n      }\n    }, [content]);\n  }\n\n  return validFeedback;\n};\n\nvar renderHelpText = function renderHelpText(h, ctx) {\n  // Form help text (description)\n  var content = ctx.normalizeSlot('description') || ctx.description;\n  var description = h();\n\n  if (content) {\n    description = h(BFormText, {\n      attrs: {\n        id: ctx.descriptionId,\n        tabindex: content ? '-1' : null\n      }\n    }, [content]);\n  }\n\n  return description;\n};\n\nvar renderLabel = function renderLabel(h, ctx) {\n  // Render label/legend inside b-col if necessary\n  var content = ctx.normalizeSlot('label') || ctx.label;\n  var labelFor = ctx.labelFor;\n  var isLegend = !labelFor;\n  var isHorizontal = ctx.isHorizontal;\n  var labelTag = isLegend ? 'legend' : 'label';\n\n  if (!content && !isHorizontal) {\n    return h();\n  } else if (ctx.labelSrOnly) {\n    var label = h();\n\n    if (content) {\n      label = h(labelTag, {\n        class: 'sr-only',\n        attrs: {\n          id: ctx.labelId,\n          for: labelFor || null\n        }\n      }, [content]);\n    }\n\n    return h(isHorizontal ? BCol : 'div', {\n      props: isHorizontal ? ctx.labelColProps : {}\n    }, [label]);\n  } else {\n    return h(isHorizontal ? BCol : labelTag, {\n      on: isLegend ? {\n        click: ctx.legendClick\n      } : {},\n      props: isHorizontal ? _objectSpread({\n        tag: labelTag\n      }, ctx.labelColProps) : {},\n      attrs: {\n        id: ctx.labelId,\n        for: labelFor || null,\n        // We add a tab index to legend so that screen readers\n        // will properly read the aria-labelledby in IE.\n        tabindex: isLegend ? '-1' : null\n      },\n      class: [// When horizontal or if a legend is rendered, add col-form-label\n      // for correct sizing as Bootstrap has inconsistent font styling\n      // for legend in non-horizontal form-groups.\n      // See: https://github.com/twbs/bootstrap/issues/27805\n      isHorizontal || isLegend ? 'col-form-label' : '', // Emulate label padding top of 0 on legend when not horizontal\n      !isHorizontal && isLegend ? 'pt-0' : '', // If not horizontal and not a legend, we add d-block to label\n      // so that label-align works\n      !isHorizontal && !isLegend ? 'd-block' : '', ctx.labelSize ? \"col-form-label-\".concat(ctx.labelSize) : '', ctx.labelAlignClasses, ctx.labelClass]\n    }, [content]);\n  }\n}; // -- BFormGroup Prop factory -- used for lazy generation of props\n// Memoize this function to return cached values to\n// save time in computed functions\n\n\nvar makePropName = memoize(function () {\n  var breakpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var prefix = arguments.length > 1 ? arguments[1] : undefined;\n  return \"\".concat(prefix).concat(upperFirst(breakpoint));\n}); // BFormGroup prop generator for lazy generation of props\n\nvar generateProps = function generateProps() {\n  var BREAKPOINTS = getBreakpointsUpCached(); // Generate the labelCol breakpoint props\n\n  var bpLabelColProps = BREAKPOINTS.reduce(function (props, breakpoint) {\n    // i.e. label-cols, label-cols-sm, label-cols-md, ...\n    props[makePropName(breakpoint, 'labelCols')] = {\n      type: [Number, String, Boolean],\n      default: breakpoint ? false : null\n    };\n    return props;\n  }, create(null)); // Generate the labelAlign breakpoint props\n\n  var bpLabelAlignProps = BREAKPOINTS.reduce(function (props, breakpoint) {\n    // label-align, label-align-sm, label-align-md, ...\n    props[makePropName(breakpoint, 'labelAlign')] = {\n      type: String,\n      // left, right, center\n      default: null\n    };\n    return props;\n  }, create(null));\n  return _objectSpread({\n    label: {\n      type: String,\n      default: null\n    },\n    labelFor: {\n      type: String,\n      default: null\n    },\n    labelSize: {\n      type: String,\n      default: null\n    },\n    labelSrOnly: {\n      type: Boolean,\n      default: false\n    }\n  }, bpLabelColProps, {}, bpLabelAlignProps, {\n    labelClass: {\n      type: [String, Array, Object],\n      default: null\n    },\n    description: {\n      type: String,\n      default: null\n    },\n    invalidFeedback: {\n      type: String,\n      default: null\n    },\n    validFeedback: {\n      type: String,\n      default: null\n    },\n    tooltip: {\n      // Enable tooltip style feedback\n      type: Boolean,\n      default: false\n    },\n    feedbackAriaLive: {\n      type: String,\n      default: 'assertive'\n    },\n    validated: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    horizontal: {\n      // Deprecated\n      type: Boolean,\n      default: false,\n      deprecated: DEPRECATED_MSG\n    },\n    breakpoint: {\n      // Deprecated (ignored if horizontal is not true)\n      type: String,\n      default: null,\n      // legacy value 'sm',\n      deprecated: DEPRECATED_MSG\n    }\n  });\n}; // We do not use Vue.extend here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\n\n\nexport var BFormGroup = {\n  name: NAME,\n  mixins: [idMixin, formStateMixin, normalizeSlotMixin],\n\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props; // eslint-disable-next-line no-return-assign\n\n    return this.props = generateProps();\n  },\n\n  computed: {\n    labelColProps: function labelColProps() {\n      var _this = this;\n\n      var props = {};\n      /* istanbul ignore next: deprecated */\n\n      if (this.horizontal) {\n        // Deprecated setting of horizontal/breakpoint props\n\n        /* istanbul ignore next */\n        warn(\"b-form-group: \".concat(DEPRECATED_MSG)); // Legacy default is breakpoint sm and cols 3\n\n        var bp = this.breakpoint || getBreakpointsUpCached()[1]; // 'sm'\n\n        var cols = parseInt(this.labelCols, 10) || 3;\n        props[bp] = cols > 0 ? cols : 3; // We then return the single breakpoint prop for legacy compatibility\n\n        return props;\n      }\n\n      getBreakpointsUpCached().forEach(function (breakpoint) {\n        // Grab the value if the label column breakpoint prop\n        var propVal = _this[makePropName(breakpoint, 'labelCols')]; // Handle case where the prop's value is an empty string,\n        // which represents true\n\n\n        propVal = propVal === '' ? true : propVal || false;\n\n        if (!isBoolean(propVal)) {\n          // Convert to column size to number\n          propVal = parseInt(propVal, 10) || 0; // Ensure column size is greater than 0\n\n          propVal = propVal > 0 ? propVal : false;\n        }\n\n        if (propVal) {\n          // Add the prop to the list of props to give to b-col\n          // If breakpoint is '' (labelCols=true), then we use the\n          // col prop to make equal width at xs\n          var bColPropName = breakpoint || (isBoolean(propVal) ? 'col' : 'cols'); // Add it to the props\n\n          props[bColPropName] = propVal;\n        }\n      });\n      return props;\n    },\n    labelAlignClasses: function labelAlignClasses() {\n      var _this2 = this;\n\n      var classes = [];\n      getBreakpointsUpCached().forEach(function (breakpoint) {\n        // Assemble the label column breakpoint align classes\n        var propVal = _this2[makePropName(breakpoint, 'labelAlign')] || null;\n\n        if (propVal) {\n          var className = breakpoint ? \"text-\".concat(breakpoint, \"-\").concat(propVal) : \"text-\".concat(propVal);\n          classes.push(className);\n        }\n      });\n      return classes;\n    },\n    isHorizontal: function isHorizontal() {\n      // Determine if the resultant form-group will be rendered\n      // horizontal (meaning it has label-col breakpoints)\n      return keys(this.labelColProps).length > 0;\n    },\n    labelId: function labelId() {\n      return this.$slots['label'] || this.label ? this.safeId('_BV_label_') : null;\n    },\n    descriptionId: function descriptionId() {\n      return this.$slots['description'] || this.description ? this.safeId('_BV_description_') : null;\n    },\n    hasInvalidFeedback: function hasInvalidFeedback() {\n      // Used for computing aria-describedby\n      var $slots = this.$slots;\n      return this.computedState === false && ($slots['invalid-feedback'] || this.invalidFeedback);\n    },\n    invalidFeedbackId: function invalidFeedbackId() {\n      return this.hasInvalidFeedback ? this.safeId('_BV_feedback_invalid_') : null;\n    },\n    hasValidFeedback: function hasValidFeedback() {\n      // Used for computing aria-describedby\n      return this.computedState === true && (this.$slots['valid-feedback'] || this.validFeedback);\n    },\n    validFeedbackId: function validFeedbackId() {\n      return this.hasValidFeedback ? this.safeId('_BV_feedback_valid_') : null;\n    },\n    describedByIds: function describedByIds() {\n      // Screen readers will read out any content linked to by aria-describedby\n      // even if the content is hidden with `display: none;`, hence we only include\n      // feedback IDs if the form-group's state is explicitly valid or invalid.\n      return [this.descriptionId, this.invalidFeedbackId, this.validFeedbackId].filter(Boolean).join(' ') || null;\n    }\n  },\n  watch: {\n    describedByIds: function describedByIds(add, remove) {\n      if (add !== remove) {\n        this.setInputDescribedBy(add, remove);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    this.$nextTick(function () {\n      // Set the aria-describedby IDs on the input specified by label-for\n      // We do this in a nextTick to ensure the children have finished rendering\n      _this3.setInputDescribedBy(_this3.describedByIds);\n    });\n  },\n  methods: {\n    legendClick: function legendClick(evt) {\n      if (this.labelFor) {\n        // Don't do anything if labelFor is set\n\n        /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n        return;\n      }\n\n      var tagName = evt.target ? evt.target.tagName : '';\n\n      if (/^(input|select|textarea|label|button|a)$/i.test(tagName)) {\n        // If clicked an interactive element inside legend,\n        // we just let the default happen\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var inputs = selectAll(SELECTOR, this.$refs.content).filter(isVisible);\n\n      if (inputs && inputs.length === 1 && inputs[0].focus) {\n        // if only a single input, focus it, emulating label behaviour\n        inputs[0].focus();\n      }\n    },\n    setInputDescribedBy: function setInputDescribedBy(add, remove) {\n      // Sets the `aria-describedby` attribute on the input if label-for is set.\n      // Optionally accepts a string of IDs to remove as the second parameter.\n      // Preserves any aria-describedby value(s) user may have on input.\n      if (this.labelFor && isBrowser) {\n        var input = select(\"#\".concat(this.labelFor), this.$refs.content);\n\n        if (input) {\n          var adb = 'aria-describedby';\n          var ids = (getAttr(input, adb) || '').split(/\\s+/);\n          add = (add || '').split(/\\s+/);\n          remove = (remove || '').split(/\\s+/); // Update ID list, preserving any original IDs\n          // and ensuring the ID's are unique\n\n          ids = ids.filter(function (id) {\n            return !arrayIncludes(remove, id);\n          }).concat(add).filter(Boolean);\n          ids = keys(ids.reduce(function (memo, id) {\n            return _objectSpread({}, memo, _defineProperty({}, id, true));\n          }, {})).join(' ').trim();\n\n          if (ids) {\n            setAttr(input, adb, ids);\n          } else {\n            // No IDs, so remove the attribute\n            removeAttr(input, adb);\n          }\n        }\n      }\n    }\n  },\n  render: function render(h) {\n    var isFieldset = !this.labelFor;\n    var isHorizontal = this.isHorizontal; // Generate the label\n\n    var label = renderLabel(h, this); // Generate the content\n\n    var content = h(isHorizontal ? BCol : 'div', {\n      ref: 'content',\n      attrs: {\n        tabindex: isFieldset ? '-1' : null,\n        role: isFieldset ? 'group' : null\n      }\n    }, [this.normalizeSlot('default') || h(), renderInvalidFeedback(h, this), renderValidFeedback(h, this), renderHelpText(h, this)]); // Create the form-group\n\n    var data = {\n      staticClass: 'form-group',\n      class: [this.validated ? 'was-validated' : null, this.stateClass],\n      attrs: {\n        id: this.safeId(),\n        disabled: isFieldset ? this.disabled : null,\n        role: isFieldset ? null : 'group',\n        'aria-invalid': this.computedState === false ? 'true' : null,\n        // Only apply aria-labelledby if we are a horizontal fieldset\n        // as the legend is no longer a direct child of fieldset\n        'aria-labelledby': isFieldset && isHorizontal ? this.labelId : null,\n        // Only apply aria-describedby IDs if we are a fieldset\n        // as the input will have the IDs when not a fieldset\n        'aria-describedby': isFieldset ? this.describedByIds : null\n      } // Return it wrapped in a form-group\n      // Note: Fieldsets do not support adding `row` or `form-row` directly\n      // to them due to browser specific render issues, so we move the `form-row`\n      // to an inner wrapper div when horizontal and using a fieldset\n\n    };\n    return h(isFieldset ? 'fieldset' : isHorizontal ? BFormRow : 'div', data, isHorizontal && isFieldset ? [h(BFormRow, {}, [label, content])] : [label, content]);\n  }\n};\nexport default BFormGroup;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/ecommercevuefirestore/ecommercevuefirestore/node_modules/bootstrap-vue/esm/components/form-group/form-group.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","memoize","upperFirst","warn","arrayIncludes","getBreakpointsUpCached","select","selectAll","isVisible","setAttr","removeAttr","getAttr","isBrowser","isBoolean","create","formStateMixin","idMixin","normalizeSlotMixin","BCol","BFormRow","BFormText","BFormInvalidFeedback","BFormValidFeedback","NAME","SELECTOR","DEPRECATED_MSG","renderInvalidFeedback","h","ctx","content","normalizeSlot","invalidFeedback","props","id","invalidFeedbackId","state","computedState","tooltip","ariaLive","feedbackAriaLive","role","attrs","tabindex","renderValidFeedback","validFeedback","validFeedbackId","renderHelpText","description","descriptionId","renderLabel","label","labelFor","isLegend","isHorizontal","labelTag","labelSrOnly","class","labelId","for","labelColProps","on","click","legendClick","tag","labelSize","concat","labelAlignClasses","labelClass","makePropName","breakpoint","undefined","prefix","generateProps","BREAKPOINTS","bpLabelColProps","reduce","type","Number","String","Boolean","default","bpLabelAlignProps","Array","validated","disabled","horizontal","deprecated","BFormGroup","name","mixins","computed","_this","bp","cols","parseInt","labelCols","propVal","bColPropName","_this2","classes","className","$slots","safeId","hasInvalidFeedback","hasValidFeedback","describedByIds","join","watch","add","remove","setInputDescribedBy","mounted","_this3","$nextTick","methods","evt","tagName","test","inputs","$refs","focus","input","adb","ids","split","memo","trim","render","isFieldset","ref","data","staticClass","stateClass"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Utils\nimport memoize from '../../utils/memoize';\nimport upperFirst from '../../utils/upper-first';\nimport warn from '../../utils/warn';\nimport { arrayIncludes } from '../../utils/array';\nimport { getBreakpointsUpCached } from '../../utils/config';\nimport { select, selectAll, isVisible, setAttr, removeAttr, getAttr } from '../../utils/dom';\nimport { isBrowser } from '../../utils/env';\nimport { isBoolean } from '../../utils/inspect';\nimport { keys, create } from '../../utils/object'; // Mixins\n\nimport formStateMixin from '../../mixins/form-state';\nimport idMixin from '../../mixins/id';\nimport normalizeSlotMixin from '../../mixins/normalize-slot'; // Sub components\n\nimport { BCol } from '../layout/col';\nimport { BFormRow } from '../layout/form-row';\nimport { BFormText } from '../form/form-text';\nimport { BFormInvalidFeedback } from '../form/form-invalid-feedback';\nimport { BFormValidFeedback } from '../form/form-valid-feedback'; // Component name\n\nvar NAME = 'BFormGroup'; // Selector for finding first input in the form-group\n\nvar SELECTOR = 'input:not([disabled]),textarea:not([disabled]),select:not([disabled])';\nvar DEPRECATED_MSG = 'Props \"horizontal\" and \"breakpoint\" are deprecated. Use \"label-cols(-{breakpoint})\" props instead.'; // Render helper functions (here rather than polluting the instance with more methods)\n\nvar renderInvalidFeedback = function renderInvalidFeedback(h, ctx) {\n  var content = ctx.normalizeSlot('invalid-feedback') || ctx.invalidFeedback;\n  var invalidFeedback = h();\n\n  if (content) {\n    invalidFeedback = h(BFormInvalidFeedback, {\n      props: {\n        id: ctx.invalidFeedbackId,\n        // If state is explicitly false, always show the feedback\n        state: ctx.computedState,\n        tooltip: ctx.tooltip,\n        ariaLive: ctx.feedbackAriaLive,\n        role: ctx.feedbackAriaLive ? 'alert' : null\n      },\n      attrs: {\n        tabindex: content ? '-1' : null\n      }\n    }, [content]);\n  }\n\n  return invalidFeedback;\n};\n\nvar renderValidFeedback = function renderValidFeedback(h, ctx) {\n  var content = ctx.normalizeSlot('valid-feedback') || ctx.validFeedback;\n  var validFeedback = h();\n\n  if (content) {\n    validFeedback = h(BFormValidFeedback, {\n      props: {\n        id: ctx.validFeedbackId,\n        // If state is explicitly true, always show the feedback\n        state: ctx.computedState,\n        tooltip: ctx.tooltip,\n        ariaLive: ctx.feedbackAriaLive,\n        role: ctx.feedbackAriaLive ? 'alert' : null\n      },\n      attrs: {\n        tabindex: content ? '-1' : null\n      }\n    }, [content]);\n  }\n\n  return validFeedback;\n};\n\nvar renderHelpText = function renderHelpText(h, ctx) {\n  // Form help text (description)\n  var content = ctx.normalizeSlot('description') || ctx.description;\n  var description = h();\n\n  if (content) {\n    description = h(BFormText, {\n      attrs: {\n        id: ctx.descriptionId,\n        tabindex: content ? '-1' : null\n      }\n    }, [content]);\n  }\n\n  return description;\n};\n\nvar renderLabel = function renderLabel(h, ctx) {\n  // Render label/legend inside b-col if necessary\n  var content = ctx.normalizeSlot('label') || ctx.label;\n  var labelFor = ctx.labelFor;\n  var isLegend = !labelFor;\n  var isHorizontal = ctx.isHorizontal;\n  var labelTag = isLegend ? 'legend' : 'label';\n\n  if (!content && !isHorizontal) {\n    return h();\n  } else if (ctx.labelSrOnly) {\n    var label = h();\n\n    if (content) {\n      label = h(labelTag, {\n        class: 'sr-only',\n        attrs: {\n          id: ctx.labelId,\n          for: labelFor || null\n        }\n      }, [content]);\n    }\n\n    return h(isHorizontal ? BCol : 'div', {\n      props: isHorizontal ? ctx.labelColProps : {}\n    }, [label]);\n  } else {\n    return h(isHorizontal ? BCol : labelTag, {\n      on: isLegend ? {\n        click: ctx.legendClick\n      } : {},\n      props: isHorizontal ? _objectSpread({\n        tag: labelTag\n      }, ctx.labelColProps) : {},\n      attrs: {\n        id: ctx.labelId,\n        for: labelFor || null,\n        // We add a tab index to legend so that screen readers\n        // will properly read the aria-labelledby in IE.\n        tabindex: isLegend ? '-1' : null\n      },\n      class: [// When horizontal or if a legend is rendered, add col-form-label\n      // for correct sizing as Bootstrap has inconsistent font styling\n      // for legend in non-horizontal form-groups.\n      // See: https://github.com/twbs/bootstrap/issues/27805\n      isHorizontal || isLegend ? 'col-form-label' : '', // Emulate label padding top of 0 on legend when not horizontal\n      !isHorizontal && isLegend ? 'pt-0' : '', // If not horizontal and not a legend, we add d-block to label\n      // so that label-align works\n      !isHorizontal && !isLegend ? 'd-block' : '', ctx.labelSize ? \"col-form-label-\".concat(ctx.labelSize) : '', ctx.labelAlignClasses, ctx.labelClass]\n    }, [content]);\n  }\n}; // -- BFormGroup Prop factory -- used for lazy generation of props\n// Memoize this function to return cached values to\n// save time in computed functions\n\n\nvar makePropName = memoize(function () {\n  var breakpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var prefix = arguments.length > 1 ? arguments[1] : undefined;\n  return \"\".concat(prefix).concat(upperFirst(breakpoint));\n}); // BFormGroup prop generator for lazy generation of props\n\nvar generateProps = function generateProps() {\n  var BREAKPOINTS = getBreakpointsUpCached(); // Generate the labelCol breakpoint props\n\n  var bpLabelColProps = BREAKPOINTS.reduce(function (props, breakpoint) {\n    // i.e. label-cols, label-cols-sm, label-cols-md, ...\n    props[makePropName(breakpoint, 'labelCols')] = {\n      type: [Number, String, Boolean],\n      default: breakpoint ? false : null\n    };\n    return props;\n  }, create(null)); // Generate the labelAlign breakpoint props\n\n  var bpLabelAlignProps = BREAKPOINTS.reduce(function (props, breakpoint) {\n    // label-align, label-align-sm, label-align-md, ...\n    props[makePropName(breakpoint, 'labelAlign')] = {\n      type: String,\n      // left, right, center\n      default: null\n    };\n    return props;\n  }, create(null));\n  return _objectSpread({\n    label: {\n      type: String,\n      default: null\n    },\n    labelFor: {\n      type: String,\n      default: null\n    },\n    labelSize: {\n      type: String,\n      default: null\n    },\n    labelSrOnly: {\n      type: Boolean,\n      default: false\n    }\n  }, bpLabelColProps, {}, bpLabelAlignProps, {\n    labelClass: {\n      type: [String, Array, Object],\n      default: null\n    },\n    description: {\n      type: String,\n      default: null\n    },\n    invalidFeedback: {\n      type: String,\n      default: null\n    },\n    validFeedback: {\n      type: String,\n      default: null\n    },\n    tooltip: {\n      // Enable tooltip style feedback\n      type: Boolean,\n      default: false\n    },\n    feedbackAriaLive: {\n      type: String,\n      default: 'assertive'\n    },\n    validated: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    horizontal: {\n      // Deprecated\n      type: Boolean,\n      default: false,\n      deprecated: DEPRECATED_MSG\n    },\n    breakpoint: {\n      // Deprecated (ignored if horizontal is not true)\n      type: String,\n      default: null,\n      // legacy value 'sm',\n      deprecated: DEPRECATED_MSG\n    }\n  });\n}; // We do not use Vue.extend here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\n\n\nexport var BFormGroup = {\n  name: NAME,\n  mixins: [idMixin, formStateMixin, normalizeSlotMixin],\n\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props; // eslint-disable-next-line no-return-assign\n\n    return this.props = generateProps();\n  },\n\n  computed: {\n    labelColProps: function labelColProps() {\n      var _this = this;\n\n      var props = {};\n      /* istanbul ignore next: deprecated */\n\n      if (this.horizontal) {\n        // Deprecated setting of horizontal/breakpoint props\n\n        /* istanbul ignore next */\n        warn(\"b-form-group: \".concat(DEPRECATED_MSG)); // Legacy default is breakpoint sm and cols 3\n\n        var bp = this.breakpoint || getBreakpointsUpCached()[1]; // 'sm'\n\n        var cols = parseInt(this.labelCols, 10) || 3;\n        props[bp] = cols > 0 ? cols : 3; // We then return the single breakpoint prop for legacy compatibility\n\n        return props;\n      }\n\n      getBreakpointsUpCached().forEach(function (breakpoint) {\n        // Grab the value if the label column breakpoint prop\n        var propVal = _this[makePropName(breakpoint, 'labelCols')]; // Handle case where the prop's value is an empty string,\n        // which represents true\n\n\n        propVal = propVal === '' ? true : propVal || false;\n\n        if (!isBoolean(propVal)) {\n          // Convert to column size to number\n          propVal = parseInt(propVal, 10) || 0; // Ensure column size is greater than 0\n\n          propVal = propVal > 0 ? propVal : false;\n        }\n\n        if (propVal) {\n          // Add the prop to the list of props to give to b-col\n          // If breakpoint is '' (labelCols=true), then we use the\n          // col prop to make equal width at xs\n          var bColPropName = breakpoint || (isBoolean(propVal) ? 'col' : 'cols'); // Add it to the props\n\n          props[bColPropName] = propVal;\n        }\n      });\n      return props;\n    },\n    labelAlignClasses: function labelAlignClasses() {\n      var _this2 = this;\n\n      var classes = [];\n      getBreakpointsUpCached().forEach(function (breakpoint) {\n        // Assemble the label column breakpoint align classes\n        var propVal = _this2[makePropName(breakpoint, 'labelAlign')] || null;\n\n        if (propVal) {\n          var className = breakpoint ? \"text-\".concat(breakpoint, \"-\").concat(propVal) : \"text-\".concat(propVal);\n          classes.push(className);\n        }\n      });\n      return classes;\n    },\n    isHorizontal: function isHorizontal() {\n      // Determine if the resultant form-group will be rendered\n      // horizontal (meaning it has label-col breakpoints)\n      return keys(this.labelColProps).length > 0;\n    },\n    labelId: function labelId() {\n      return this.$slots['label'] || this.label ? this.safeId('_BV_label_') : null;\n    },\n    descriptionId: function descriptionId() {\n      return this.$slots['description'] || this.description ? this.safeId('_BV_description_') : null;\n    },\n    hasInvalidFeedback: function hasInvalidFeedback() {\n      // Used for computing aria-describedby\n      var $slots = this.$slots;\n      return this.computedState === false && ($slots['invalid-feedback'] || this.invalidFeedback);\n    },\n    invalidFeedbackId: function invalidFeedbackId() {\n      return this.hasInvalidFeedback ? this.safeId('_BV_feedback_invalid_') : null;\n    },\n    hasValidFeedback: function hasValidFeedback() {\n      // Used for computing aria-describedby\n      return this.computedState === true && (this.$slots['valid-feedback'] || this.validFeedback);\n    },\n    validFeedbackId: function validFeedbackId() {\n      return this.hasValidFeedback ? this.safeId('_BV_feedback_valid_') : null;\n    },\n    describedByIds: function describedByIds() {\n      // Screen readers will read out any content linked to by aria-describedby\n      // even if the content is hidden with `display: none;`, hence we only include\n      // feedback IDs if the form-group's state is explicitly valid or invalid.\n      return [this.descriptionId, this.invalidFeedbackId, this.validFeedbackId].filter(Boolean).join(' ') || null;\n    }\n  },\n  watch: {\n    describedByIds: function describedByIds(add, remove) {\n      if (add !== remove) {\n        this.setInputDescribedBy(add, remove);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    this.$nextTick(function () {\n      // Set the aria-describedby IDs on the input specified by label-for\n      // We do this in a nextTick to ensure the children have finished rendering\n      _this3.setInputDescribedBy(_this3.describedByIds);\n    });\n  },\n  methods: {\n    legendClick: function legendClick(evt) {\n      if (this.labelFor) {\n        // Don't do anything if labelFor is set\n\n        /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n        return;\n      }\n\n      var tagName = evt.target ? evt.target.tagName : '';\n\n      if (/^(input|select|textarea|label|button|a)$/i.test(tagName)) {\n        // If clicked an interactive element inside legend,\n        // we just let the default happen\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var inputs = selectAll(SELECTOR, this.$refs.content).filter(isVisible);\n\n      if (inputs && inputs.length === 1 && inputs[0].focus) {\n        // if only a single input, focus it, emulating label behaviour\n        inputs[0].focus();\n      }\n    },\n    setInputDescribedBy: function setInputDescribedBy(add, remove) {\n      // Sets the `aria-describedby` attribute on the input if label-for is set.\n      // Optionally accepts a string of IDs to remove as the second parameter.\n      // Preserves any aria-describedby value(s) user may have on input.\n      if (this.labelFor && isBrowser) {\n        var input = select(\"#\".concat(this.labelFor), this.$refs.content);\n\n        if (input) {\n          var adb = 'aria-describedby';\n          var ids = (getAttr(input, adb) || '').split(/\\s+/);\n          add = (add || '').split(/\\s+/);\n          remove = (remove || '').split(/\\s+/); // Update ID list, preserving any original IDs\n          // and ensuring the ID's are unique\n\n          ids = ids.filter(function (id) {\n            return !arrayIncludes(remove, id);\n          }).concat(add).filter(Boolean);\n          ids = keys(ids.reduce(function (memo, id) {\n            return _objectSpread({}, memo, _defineProperty({}, id, true));\n          }, {})).join(' ').trim();\n\n          if (ids) {\n            setAttr(input, adb, ids);\n          } else {\n            // No IDs, so remove the attribute\n            removeAttr(input, adb);\n          }\n        }\n      }\n    }\n  },\n  render: function render(h) {\n    var isFieldset = !this.labelFor;\n    var isHorizontal = this.isHorizontal; // Generate the label\n\n    var label = renderLabel(h, this); // Generate the content\n\n    var content = h(isHorizontal ? BCol : 'div', {\n      ref: 'content',\n      attrs: {\n        tabindex: isFieldset ? '-1' : null,\n        role: isFieldset ? 'group' : null\n      }\n    }, [this.normalizeSlot('default') || h(), renderInvalidFeedback(h, this), renderValidFeedback(h, this), renderHelpText(h, this)]); // Create the form-group\n\n    var data = {\n      staticClass: 'form-group',\n      class: [this.validated ? 'was-validated' : null, this.stateClass],\n      attrs: {\n        id: this.safeId(),\n        disabled: isFieldset ? this.disabled : null,\n        role: isFieldset ? null : 'group',\n        'aria-invalid': this.computedState === false ? 'true' : null,\n        // Only apply aria-labelledby if we are a horizontal fieldset\n        // as the legend is no longer a direct child of fieldset\n        'aria-labelledby': isFieldset && isHorizontal ? this.labelId : null,\n        // Only apply aria-describedby IDs if we are a fieldset\n        // as the input will have the IDs when not a fieldset\n        'aria-describedby': isFieldset ? this.describedByIds : null\n      } // Return it wrapped in a form-group\n      // Note: Fieldsets do not support adding `row` or `form-row` directly\n      // to them due to browser specific render issues, so we move the `form-row`\n      // to an inner wrapper div when horizontal and using a fieldset\n\n    };\n    return h(isFieldset ? 'fieldset' : isHorizontal ? BFormRow : 'div', data, isHorizontal && isFieldset ? [h(BFormRow, {}, [label, content])] : [label, content]);\n  }\n};\nexport default BFormGroup;"]},"metadata":{},"sourceType":"module"}