{"ast":null,"code":"import { getSel, isElement } from '../../../utils/dom'; // Helper to determine if a there is an active text selection on the document page\n// Used to filter out click events caused by the mouse up at end of selection\n//\n// Accepts an element as only argument to test to see if selection overlaps or is\n// contained within the element\n\nvar textSelectionActive = function textSelectionActive() {\n  var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var sel = getSel();\n  return sel && sel.toString().trim() !== '' && sel.containsNode && isElement(el) ? sel.containsNode(el, true) : false;\n};\n\nexport default textSelectionActive;","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/table/helpers/text-selection-active.js"],"names":["getSel","isElement","textSelectionActive","el","arguments","length","undefined","document","sel","toString","trim","containsNode"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,SAAjB,QAAkC,oBAAlC,C,CAAwD;AACxD;AACA;AACA;AACA;;AAEA,IAAIC,mBAAmB,GAAG,SAASA,mBAAT,GAA+B;AACvD,MAAIC,EAAE,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoEG,QAA7E;AACA,MAAIC,GAAG,GAAGR,MAAM,EAAhB;AACA,SAAOQ,GAAG,IAAIA,GAAG,CAACC,QAAJ,GAAeC,IAAf,OAA0B,EAAjC,IAAuCF,GAAG,CAACG,YAA3C,IAA2DV,SAAS,CAACE,EAAD,CAApE,GAA2EK,GAAG,CAACG,YAAJ,CAAiBR,EAAjB,EAAqB,IAArB,CAA3E,GAAwG,KAA/G;AACD,CAJD;;AAMA,eAAeD,mBAAf","sourcesContent":["import { getSel, isElement } from '../../../utils/dom'; // Helper to determine if a there is an active text selection on the document page\n// Used to filter out click events caused by the mouse up at end of selection\n//\n// Accepts an element as only argument to test to see if selection overlaps or is\n// contained within the element\n\nvar textSelectionActive = function textSelectionActive() {\n  var el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  var sel = getSel();\n  return sel && sel.toString().trim() !== '' && sel.containsNode && isElement(el) ? sel.containsNode(el, true) : false;\n};\n\nexport default textSelectionActive;"]},"metadata":{},"sourceType":"module"}