{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport Vue from '../../utils/vue';\nimport { arrayIncludes } from '../../utils/array';\nimport { stripTags } from '../../utils/html';\nimport { getComponentConfig } from '../../utils/config';\nimport { HTMLElement } from '../../utils/safe-types';\nimport idMixin from '../../mixins/id';\nimport dropdownMixin from '../../mixins/dropdown';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nimport { BButton } from '../button/button';\nvar NAME = 'BDropdown';\nexport var props = {\n  toggleText: {\n    // This really should be toggleLabel\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'toggleText');\n    }\n  },\n  size: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'size');\n    }\n  },\n  variant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'variant');\n    }\n  },\n  menuClass: {\n    type: [String, Array],\n    default: null\n  },\n  toggleTag: {\n    type: String,\n    default: 'button'\n  },\n  toggleClass: {\n    type: [String, Array],\n    default: null\n  },\n  noCaret: {\n    type: Boolean,\n    default: false\n  },\n  split: {\n    type: Boolean,\n    default: false\n  },\n  splitHref: {\n    type: String // default: undefined\n\n  },\n  splitTo: {\n    type: [String, Object] // default: undefined\n\n  },\n  splitVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'splitVariant');\n    }\n  },\n  splitButtonType: {\n    type: String,\n    default: 'button',\n    validator: function validator(value) {\n      return arrayIncludes(['button', 'submit', 'reset'], value);\n    }\n  },\n  role: {\n    type: String,\n    default: 'menu'\n  },\n  boundary: {\n    // String: `scrollParent`, `window` or `viewport`\n    // HTMLElement: HTML Element reference\n    type: [String, HTMLElement],\n    default: 'scrollParent'\n  } // @vue/component\n\n};\nexport var BDropdown = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  mixins: [idMixin, dropdownMixin, normalizeSlotMixin],\n  props: props,\n  computed: {\n    dropdownClasses: function dropdownClasses() {\n      return [this.directionClass, {\n        show: this.visible,\n        // Position `static` is needed to allow menu to \"breakout\" of the scrollParent boundaries\n        // when boundary is anything other than `scrollParent`\n        // See https://github.com/twbs/bootstrap/issues/24251#issuecomment-341413786\n        'position-static': this.boundary !== 'scrollParent' || !this.boundary\n      }];\n    },\n    menuClasses: function menuClasses() {\n      return [this.menuClass, {\n        'dropdown-menu-right': this.right,\n        show: this.visible\n      }];\n    },\n    toggleClasses: function toggleClasses() {\n      return [this.toggleClass, {\n        'dropdown-toggle-split': this.split,\n        'dropdown-toggle-no-caret': this.noCaret && !this.split\n      }];\n    }\n  },\n  render: function render(h) {\n    var split = h();\n    var buttonContent = this.normalizeSlot('button-content') || this.normalizeSlot('text') || this.html || stripTags(this.text);\n\n    if (this.split) {\n      var btnProps = {\n        disabled: this.disabled,\n        variant: this.splitVariant || this.variant,\n        size: this.size // We add these as needed due to router-link issues with defined property with undefined/null values\n\n      };\n\n      if (this.splitTo) {\n        btnProps.to = this.splitTo;\n      } else if (this.splitHref) {\n        btnProps.href = this.splitHref;\n      } else if (this.splitButtonType) {\n        btnProps.type = this.splitButtonType;\n      }\n\n      split = h(BButton, {\n        ref: 'button',\n        props: btnProps,\n        attrs: {\n          id: this.safeId('_BV_button_')\n        },\n        on: {\n          click: this.click\n        }\n      }, [buttonContent]);\n    }\n\n    var toggle = h(BButton, {\n      ref: 'toggle',\n      staticClass: 'dropdown-toggle',\n      class: this.toggleClasses,\n      props: {\n        variant: this.variant,\n        size: this.size,\n        disabled: this.disabled,\n        tag: this.toggleTag\n      },\n      attrs: {\n        id: this.safeId('_BV_toggle_'),\n        'aria-haspopup': 'true',\n        'aria-expanded': this.visible ? 'true' : 'false'\n      },\n      on: {\n        click: this.toggle,\n        // click\n        keydown: this.toggle // enter, space, down\n\n      }\n    }, [this.split ? h('span', {\n      class: ['sr-only']\n    }, [this.toggleText]) : buttonContent]);\n    var menu = h('ul', {\n      ref: 'menu',\n      staticClass: 'dropdown-menu',\n      class: this.menuClasses,\n      attrs: {\n        role: this.role,\n        tabindex: '-1',\n        'aria-labelledby': this.safeId(this.split ? '_BV_button_' : '_BV_toggle_')\n      },\n      on: {\n        keydown: this.onKeydown // up, down, esc\n\n      }\n    }, !this.lazy || this.visible ? this.normalizeSlot('default', {\n      hide: this.hide\n    }) : [h()]);\n    return h('div', {\n      staticClass: 'dropdown btn-group b-dropdown',\n      class: this.dropdownClasses,\n      attrs: {\n        id: this.safeId()\n      }\n    }, [split, toggle, menu]);\n  }\n});\nexport default BDropdown;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/TO3/ecommercevuefirestore/node_modules/bootstrap-vue/esm/components/dropdown/dropdown.js"],"names":["Vue","arrayIncludes","stripTags","getComponentConfig","HTMLElement","idMixin","dropdownMixin","normalizeSlotMixin","BButton","NAME","props","toggleText","type","String","default","_default","size","variant","menuClass","Array","toggleTag","toggleClass","noCaret","Boolean","split","splitHref","splitTo","Object","splitVariant","splitButtonType","validator","value","role","boundary","BDropdown","extend","name","mixins","computed","dropdownClasses","directionClass","show","visible","menuClasses","right","toggleClasses","render","h","buttonContent","normalizeSlot","html","text","btnProps","disabled","to","href","ref","attrs","id","safeId","on","click","toggle","staticClass","class","tag","keydown","menu","tabindex","onKeydown","lazy","hide"],"mappings":"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","sourcesContent":["import Vue from '../../utils/vue';\nimport { arrayIncludes } from '../../utils/array';\nimport { stripTags } from '../../utils/html';\nimport { getComponentConfig } from '../../utils/config';\nimport { HTMLElement } from '../../utils/safe-types';\nimport idMixin from '../../mixins/id';\nimport dropdownMixin from '../../mixins/dropdown';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nimport { BButton } from '../button/button';\nvar NAME = 'BDropdown';\nexport var props = {\n  toggleText: {\n    // This really should be toggleLabel\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'toggleText');\n    }\n  },\n  size: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'size');\n    }\n  },\n  variant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'variant');\n    }\n  },\n  menuClass: {\n    type: [String, Array],\n    default: null\n  },\n  toggleTag: {\n    type: String,\n    default: 'button'\n  },\n  toggleClass: {\n    type: [String, Array],\n    default: null\n  },\n  noCaret: {\n    type: Boolean,\n    default: false\n  },\n  split: {\n    type: Boolean,\n    default: false\n  },\n  splitHref: {\n    type: String // default: undefined\n\n  },\n  splitTo: {\n    type: [String, Object] // default: undefined\n\n  },\n  splitVariant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'splitVariant');\n    }\n  },\n  splitButtonType: {\n    type: String,\n    default: 'button',\n    validator: function validator(value) {\n      return arrayIncludes(['button', 'submit', 'reset'], value);\n    }\n  },\n  role: {\n    type: String,\n    default: 'menu'\n  },\n  boundary: {\n    // String: `scrollParent`, `window` or `viewport`\n    // HTMLElement: HTML Element reference\n    type: [String, HTMLElement],\n    default: 'scrollParent'\n  } // @vue/component\n\n};\nexport var BDropdown =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  mixins: [idMixin, dropdownMixin, normalizeSlotMixin],\n  props: props,\n  computed: {\n    dropdownClasses: function dropdownClasses() {\n      return [this.directionClass, {\n        show: this.visible,\n        // Position `static` is needed to allow menu to \"breakout\" of the scrollParent boundaries\n        // when boundary is anything other than `scrollParent`\n        // See https://github.com/twbs/bootstrap/issues/24251#issuecomment-341413786\n        'position-static': this.boundary !== 'scrollParent' || !this.boundary\n      }];\n    },\n    menuClasses: function menuClasses() {\n      return [this.menuClass, {\n        'dropdown-menu-right': this.right,\n        show: this.visible\n      }];\n    },\n    toggleClasses: function toggleClasses() {\n      return [this.toggleClass, {\n        'dropdown-toggle-split': this.split,\n        'dropdown-toggle-no-caret': this.noCaret && !this.split\n      }];\n    }\n  },\n  render: function render(h) {\n    var split = h();\n    var buttonContent = this.normalizeSlot('button-content') || this.normalizeSlot('text') || this.html || stripTags(this.text);\n\n    if (this.split) {\n      var btnProps = {\n        disabled: this.disabled,\n        variant: this.splitVariant || this.variant,\n        size: this.size // We add these as needed due to router-link issues with defined property with undefined/null values\n\n      };\n\n      if (this.splitTo) {\n        btnProps.to = this.splitTo;\n      } else if (this.splitHref) {\n        btnProps.href = this.splitHref;\n      } else if (this.splitButtonType) {\n        btnProps.type = this.splitButtonType;\n      }\n\n      split = h(BButton, {\n        ref: 'button',\n        props: btnProps,\n        attrs: {\n          id: this.safeId('_BV_button_')\n        },\n        on: {\n          click: this.click\n        }\n      }, [buttonContent]);\n    }\n\n    var toggle = h(BButton, {\n      ref: 'toggle',\n      staticClass: 'dropdown-toggle',\n      class: this.toggleClasses,\n      props: {\n        variant: this.variant,\n        size: this.size,\n        disabled: this.disabled,\n        tag: this.toggleTag\n      },\n      attrs: {\n        id: this.safeId('_BV_toggle_'),\n        'aria-haspopup': 'true',\n        'aria-expanded': this.visible ? 'true' : 'false'\n      },\n      on: {\n        click: this.toggle,\n        // click\n        keydown: this.toggle // enter, space, down\n\n      }\n    }, [this.split ? h('span', {\n      class: ['sr-only']\n    }, [this.toggleText]) : buttonContent]);\n    var menu = h('ul', {\n      ref: 'menu',\n      staticClass: 'dropdown-menu',\n      class: this.menuClasses,\n      attrs: {\n        role: this.role,\n        tabindex: '-1',\n        'aria-labelledby': this.safeId(this.split ? '_BV_button_' : '_BV_toggle_')\n      },\n      on: {\n        keydown: this.onKeydown // up, down, esc\n\n      }\n    }, !this.lazy || this.visible ? this.normalizeSlot('default', {\n      hide: this.hide\n    }) : [h()]);\n    return h('div', {\n      staticClass: 'dropdown btn-group b-dropdown',\n      class: this.dropdownClasses,\n      attrs: {\n        id: this.safeId()\n      }\n    }, [split, toggle, menu]);\n  }\n});\nexport default BDropdown;"]},"metadata":{},"sourceType":"module"}