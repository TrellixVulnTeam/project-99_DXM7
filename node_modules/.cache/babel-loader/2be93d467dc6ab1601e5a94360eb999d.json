{"ast":null,"code":"import _classCallCheck from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _createForOfIteratorHelper from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _typeof from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport _defineProperty from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _asyncToGenerator from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _toConsumableArray from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\n\nvar _ERROR_MAP;\n\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.typed-array.uint8-array.js\";\nimport \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.copy-within.js\";\nimport \"core-js/modules/es.typed-array.every.js\";\nimport \"core-js/modules/es.typed-array.fill.js\";\nimport \"core-js/modules/es.typed-array.filter.js\";\nimport \"core-js/modules/es.typed-array.find.js\";\nimport \"core-js/modules/es.typed-array.find-index.js\";\nimport \"core-js/modules/es.typed-array.for-each.js\";\nimport \"core-js/modules/es.typed-array.includes.js\";\nimport \"core-js/modules/es.typed-array.index-of.js\";\nimport \"core-js/modules/es.typed-array.iterator.js\";\nimport \"core-js/modules/es.typed-array.join.js\";\nimport \"core-js/modules/es.typed-array.last-index-of.js\";\nimport \"core-js/modules/es.typed-array.map.js\";\nimport \"core-js/modules/es.typed-array.reduce.js\";\nimport \"core-js/modules/es.typed-array.reduce-right.js\";\nimport \"core-js/modules/es.typed-array.reverse.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.typed-array.slice.js\";\nimport \"core-js/modules/es.typed-array.some.js\";\nimport \"core-js/modules/es.typed-array.sort.js\";\nimport \"core-js/modules/es.typed-array.subarray.js\";\nimport \"core-js/modules/es.typed-array.to-locale-string.js\";\nimport \"core-js/modules/es.typed-array.to-string.js\";\nimport \"core-js/modules/web.btoa.js\";\nimport \"core-js/modules/web.dom-exception.constructor.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/web.dom-exception.to-string-tag.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.repeat.js\";\nimport \"core-js/modules/web.atob.js\";\nimport \"core-js/modules/es.string.link.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.string.match-all.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport '@firebase/installations';\nimport { Component } from '@firebase/component';\nimport { openDB, deleteDB, ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable, getModularInstance } from '@firebase/util';\nimport { _registerComponent, getApp, _getProvider } from '@firebase/app';\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar DEFAULT_VAPID_KEY = 'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\nvar ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n/** Key of FCM Payload in Notification's data field. */\n\nvar FCM_MSG = 'FCM_MSG';\nvar CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id'; // Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\n\nvar SDK_PLATFORM_WEB = 3;\nvar EVENT_MESSAGE_DELIVERED = 1;\nvar MessageType$1;\n\n(function (MessageType) {\n  MessageType[MessageType[\"DATA_MESSAGE\"] = 1] = \"DATA_MESSAGE\";\n  MessageType[MessageType[\"DISPLAY_NOTIFICATION\"] = 3] = \"DISPLAY_NOTIFICATION\";\n})(MessageType$1 || (MessageType$1 = {}));\n/**\r\n * @license\r\n * Copyright 2018 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\r\n * in compliance with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed under the License\r\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\r\n * or implied. See the License for the specific language governing permissions and limitations under\r\n * the License.\r\n */\n\n\nvar MessageType;\n\n(function (MessageType) {\n  MessageType[\"PUSH_RECEIVED\"] = \"push-received\";\n  MessageType[\"NOTIFICATION_CLICKED\"] = \"notification-clicked\";\n})(MessageType || (MessageType = {}));\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction arrayToBase64(array) {\n  var uint8Array = new Uint8Array(array);\n  var base64String = btoa(String.fromCharCode.apply(String, _toConsumableArray(uint8Array)));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nfunction base64ToArray(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  var rawData = atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar OLD_DB_NAME = 'fcm_token_details_db';\n/**\r\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\r\n * callback is called for all versions of the old DB.\r\n */\n\nvar OLD_DB_VERSION = 5;\nvar OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nfunction migrateOldDatabase(_x) {\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction _migrateOldDatabase() {\n  _migrateOldDatabase = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(senderId) {\n    var databases, dbNames, tokenDetails, db;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!('databases' in indexedDB)) {\n              _context2.next = 7;\n              break;\n            }\n\n            _context2.next = 3;\n            return indexedDB.databases();\n\n          case 3:\n            databases = _context2.sent;\n            dbNames = databases.map(function (db) {\n              return db.name;\n            });\n\n            if (dbNames.includes(OLD_DB_NAME)) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", null);\n\n          case 7:\n            tokenDetails = null;\n            _context2.next = 10;\n            return openDB(OLD_DB_NAME, OLD_DB_VERSION, /*#__PURE__*/function () {\n              var _ref6 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(db, oldVersion, newVersion, upgradeTransaction) {\n                var _a, objectStore, value, oldDetails, _oldDetails, _oldDetails2;\n\n                return regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        if (!(oldVersion < 2)) {\n                          _context.next = 2;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\");\n\n                      case 2:\n                        if (db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n                          _context.next = 4;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\");\n\n                      case 4:\n                        objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n                        _context.next = 7;\n                        return objectStore.index('fcmSenderId').get(senderId);\n\n                      case 7:\n                        value = _context.sent;\n                        _context.next = 10;\n                        return objectStore.clear();\n\n                      case 10:\n                        if (value) {\n                          _context.next = 12;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\");\n\n                      case 12:\n                        if (!(oldVersion === 2)) {\n                          _context.next = 19;\n                          break;\n                        }\n\n                        oldDetails = value;\n\n                        if (!(!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint)) {\n                          _context.next = 16;\n                          break;\n                        }\n\n                        return _context.abrupt(\"return\");\n\n                      case 16:\n                        tokenDetails = {\n                          token: oldDetails.fcmToken,\n                          createTime: (_a = oldDetails.createTime) !== null && _a !== void 0 ? _a : Date.now(),\n                          subscriptionOptions: {\n                            auth: oldDetails.auth,\n                            p256dh: oldDetails.p256dh,\n                            endpoint: oldDetails.endpoint,\n                            swScope: oldDetails.swScope,\n                            vapidKey: typeof oldDetails.vapidKey === 'string' ? oldDetails.vapidKey : arrayToBase64(oldDetails.vapidKey)\n                          }\n                        };\n                        _context.next = 20;\n                        break;\n\n                      case 19:\n                        if (oldVersion === 3) {\n                          _oldDetails = value;\n                          tokenDetails = {\n                            token: _oldDetails.fcmToken,\n                            createTime: _oldDetails.createTime,\n                            subscriptionOptions: {\n                              auth: arrayToBase64(_oldDetails.auth),\n                              p256dh: arrayToBase64(_oldDetails.p256dh),\n                              endpoint: _oldDetails.endpoint,\n                              swScope: _oldDetails.swScope,\n                              vapidKey: arrayToBase64(_oldDetails.vapidKey)\n                            }\n                          };\n                        } else if (oldVersion === 4) {\n                          _oldDetails2 = value;\n                          tokenDetails = {\n                            token: _oldDetails2.fcmToken,\n                            createTime: _oldDetails2.createTime,\n                            subscriptionOptions: {\n                              auth: arrayToBase64(_oldDetails2.auth),\n                              p256dh: arrayToBase64(_oldDetails2.p256dh),\n                              endpoint: _oldDetails2.endpoint,\n                              swScope: _oldDetails2.swScope,\n                              vapidKey: arrayToBase64(_oldDetails2.vapidKey)\n                            }\n                          };\n                        }\n\n                      case 20:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x29, _x30, _x31, _x32) {\n                return _ref6.apply(this, arguments);\n              };\n            }());\n\n          case 10:\n            db = _context2.sent;\n            db.close(); // Delete all old databases.\n\n            _context2.next = 14;\n            return deleteDB(OLD_DB_NAME);\n\n          case 14:\n            _context2.next = 16;\n            return deleteDB('fcm_vapid_details_db');\n\n          case 16:\n            _context2.next = 18;\n            return deleteDB('undefined');\n\n          case 18:\n            return _context2.abrupt(\"return\", checkTokenDetails(tokenDetails) ? tokenDetails : null);\n\n          case 19:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _migrateOldDatabase.apply(this, arguments);\n}\n\nfunction checkTokenDetails(tokenDetails) {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n\n  var subscriptionOptions = tokenDetails.subscriptionOptions;\n  return typeof tokenDetails.createTime === 'number' && tokenDetails.createTime > 0 && typeof tokenDetails.token === 'string' && tokenDetails.token.length > 0 && typeof subscriptionOptions.auth === 'string' && subscriptionOptions.auth.length > 0 && typeof subscriptionOptions.p256dh === 'string' && subscriptionOptions.p256dh.length > 0 && typeof subscriptionOptions.endpoint === 'string' && subscriptionOptions.endpoint.length > 0 && typeof subscriptionOptions.swScope === 'string' && subscriptionOptions.swScope.length > 0 && typeof subscriptionOptions.vapidKey === 'string' && subscriptionOptions.vapidKey.length > 0;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Exported for tests.\n\n\nvar DATABASE_NAME = 'firebase-messaging-database';\nvar DATABASE_VERSION = 1;\nvar OBJECT_STORE_NAME = 'firebase-messaging-store';\nvar dbPromise = null;\n\nfunction getDbPromise() {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, function (upgradeDb, oldVersion) {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n\n  return dbPromise;\n}\n/** Gets record(s) from the objectStore that match the given key. */\n\n\nfunction dbGet(_x2) {\n  return _dbGet.apply(this, arguments);\n}\n/** Assigns or overwrites the record for the given key with the given value. */\n\n\nfunction _dbGet() {\n  _dbGet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(firebaseDependencies) {\n    var key, db, tokenDetails, oldTokenDetails;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context3.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context3.sent;\n            _context3.next = 6;\n            return db.transaction(OBJECT_STORE_NAME).objectStore(OBJECT_STORE_NAME).get(key);\n\n          case 6:\n            tokenDetails = _context3.sent;\n\n            if (!tokenDetails) {\n              _context3.next = 11;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", tokenDetails);\n\n          case 11:\n            _context3.next = 13;\n            return migrateOldDatabase(firebaseDependencies.appConfig.senderId);\n\n          case 13:\n            oldTokenDetails = _context3.sent;\n\n            if (!oldTokenDetails) {\n              _context3.next = 18;\n              break;\n            }\n\n            _context3.next = 17;\n            return dbSet(firebaseDependencies, oldTokenDetails);\n\n          case 17:\n            return _context3.abrupt(\"return\", oldTokenDetails);\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _dbGet.apply(this, arguments);\n}\n\nfunction dbSet(_x3, _x4) {\n  return _dbSet.apply(this, arguments);\n}\n/** Removes record(s) from the objectStore that match the given key. */\n\n\nfunction _dbSet() {\n  _dbSet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(firebaseDependencies, tokenDetails) {\n    var key, db, tx;\n    return regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context4.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context4.sent;\n            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n            _context4.next = 7;\n            return tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n\n          case 7:\n            _context4.next = 9;\n            return tx.complete;\n\n          case 9:\n            return _context4.abrupt(\"return\", tokenDetails);\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _dbSet.apply(this, arguments);\n}\n\nfunction dbRemove(_x5) {\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction _dbRemove() {\n  _dbRemove = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(firebaseDependencies) {\n    var key, db, tx;\n    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            key = getKey(firebaseDependencies);\n            _context5.next = 3;\n            return getDbPromise();\n\n          case 3:\n            db = _context5.sent;\n            tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n            _context5.next = 7;\n            return tx.objectStore(OBJECT_STORE_NAME).delete(key);\n\n          case 7:\n            _context5.next = 9;\n            return tx.complete;\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _dbRemove.apply(this, arguments);\n}\n\nfunction getKey(_ref) {\n  var appConfig = _ref.appConfig;\n  return appConfig.appId;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar ERROR_MAP = (_ERROR_MAP = {}, _defineProperty(_ERROR_MAP, \"missing-app-config-values\"\n/* MISSING_APP_CONFIG_VALUES */\n, 'Missing App configuration value: \"{$valueName}\"'), _defineProperty(_ERROR_MAP, \"only-available-in-window\"\n/* AVAILABLE_IN_WINDOW */\n, 'This method is available in a Window context.'), _defineProperty(_ERROR_MAP, \"only-available-in-sw\"\n/* AVAILABLE_IN_SW */\n, 'This method is available in a service worker context.'), _defineProperty(_ERROR_MAP, \"permission-default\"\n/* PERMISSION_DEFAULT */\n, 'The notification permission was not granted and dismissed instead.'), _defineProperty(_ERROR_MAP, \"permission-blocked\"\n/* PERMISSION_BLOCKED */\n, 'The notification permission was not granted and blocked instead.'), _defineProperty(_ERROR_MAP, \"unsupported-browser\"\n/* UNSUPPORTED_BROWSER */\n, \"This browser doesn't support the API's required to use the Firebase SDK.\"), _defineProperty(_ERROR_MAP, \"indexed-db-unsupported\"\n/* INDEXED_DB_UNSUPPORTED */\n, \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\"), _defineProperty(_ERROR_MAP, \"failed-service-worker-registration\"\n/* FAILED_DEFAULT_REGISTRATION */\n, 'We are unable to register the default service worker. {$browserErrorMessage}'), _defineProperty(_ERROR_MAP, \"token-subscribe-failed\"\n/* TOKEN_SUBSCRIBE_FAILED */\n, 'A problem occurred while subscribing the user to FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-subscribe-no-token\"\n/* TOKEN_SUBSCRIBE_NO_TOKEN */\n, 'FCM returned no token when subscribing the user to push.'), _defineProperty(_ERROR_MAP, \"token-unsubscribe-failed\"\n/* TOKEN_UNSUBSCRIBE_FAILED */\n, 'A problem occurred while unsubscribing the ' + 'user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-failed\"\n/* TOKEN_UPDATE_FAILED */\n, 'A problem occurred while updating the user from FCM: {$errorInfo}'), _defineProperty(_ERROR_MAP, \"token-update-no-token\"\n/* TOKEN_UPDATE_NO_TOKEN */\n, 'FCM returned no token when updating the user to push.'), _defineProperty(_ERROR_MAP, \"use-sw-after-get-token\"\n/* USE_SW_AFTER_GET_TOKEN */\n, 'The useServiceWorker() method may only be called once and must be ' + 'called before calling getToken() to ensure your service worker is used.'), _defineProperty(_ERROR_MAP, \"invalid-sw-registration\"\n/* INVALID_SW_REGISTRATION */\n, 'The input to useServiceWorker() must be a ServiceWorkerRegistration.'), _defineProperty(_ERROR_MAP, \"invalid-bg-handler\"\n/* INVALID_BG_HANDLER */\n, 'The input to setBackgroundMessageHandler() must be a function.'), _defineProperty(_ERROR_MAP, \"invalid-vapid-key\"\n/* INVALID_VAPID_KEY */\n, 'The public VAPID key must be a string.'), _defineProperty(_ERROR_MAP, \"use-vapid-key-after-get-token\"\n/* USE_VAPID_KEY_AFTER_GET_TOKEN */\n, 'The usePublicVapidKey() method may only be called once and must be ' + 'called before calling getToken() to ensure your VAPID key is used.'), _ERROR_MAP);\nvar ERROR_FACTORY = new ErrorFactory('messaging', 'Messaging', ERROR_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nfunction requestGetToken(_x6, _x7) {\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction _requestGetToken() {\n  _requestGetToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(firebaseDependencies, subscriptionOptions) {\n    var headers, body, subscribeOptions, responseData, response, message;\n    return regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context6.sent;\n            body = getBody(subscriptionOptions);\n            subscribeOptions = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context6.prev = 5;\n            _context6.next = 8;\n            return fetch(getEndpoint(firebaseDependencies.appConfig), subscribeOptions);\n\n          case 8:\n            response = _context6.sent;\n            _context6.next = 11;\n            return response.json();\n\n          case 11:\n            responseData = _context6.sent;\n            _context6.next = 17;\n            break;\n\n          case 14:\n            _context6.prev = 14;\n            _context6.t0 = _context6[\"catch\"](5);\n            throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: _context6.t0\n            });\n\n          case 17:\n            if (!responseData.error) {\n              _context6.next = 20;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-subscribe-failed\"\n            /* TOKEN_SUBSCRIBE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 20:\n            if (responseData.token) {\n              _context6.next = 22;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"token-subscribe-no-token\"\n            /* TOKEN_SUBSCRIBE_NO_TOKEN */\n            );\n\n          case 22:\n            return _context6.abrupt(\"return\", responseData.token);\n\n          case 23:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[5, 14]]);\n  }));\n  return _requestGetToken.apply(this, arguments);\n}\n\nfunction requestUpdateToken(_x8, _x9) {\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction _requestUpdateToken() {\n  _requestUpdateToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(firebaseDependencies, tokenDetails) {\n    var headers, body, updateOptions, responseData, response, message;\n    return regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context7.sent;\n            body = getBody(tokenDetails.subscriptionOptions);\n            updateOptions = {\n              method: 'PATCH',\n              headers: headers,\n              body: JSON.stringify(body)\n            };\n            _context7.prev = 5;\n            _context7.next = 8;\n            return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(tokenDetails.token), updateOptions);\n\n          case 8:\n            response = _context7.sent;\n            _context7.next = 11;\n            return response.json();\n\n          case 11:\n            responseData = _context7.sent;\n            _context7.next = 17;\n            break;\n\n          case 14:\n            _context7.prev = 14;\n            _context7.t0 = _context7[\"catch\"](5);\n            throw ERROR_FACTORY.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: _context7.t0\n            });\n\n          case 17:\n            if (!responseData.error) {\n              _context7.next = 20;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-update-failed\"\n            /* TOKEN_UPDATE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 20:\n            if (responseData.token) {\n              _context7.next = 22;\n              break;\n            }\n\n            throw ERROR_FACTORY.create(\"token-update-no-token\"\n            /* TOKEN_UPDATE_NO_TOKEN */\n            );\n\n          case 22:\n            return _context7.abrupt(\"return\", responseData.token);\n\n          case 23:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7, null, [[5, 14]]);\n  }));\n  return _requestUpdateToken.apply(this, arguments);\n}\n\nfunction requestDeleteToken(_x10, _x11) {\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction _requestDeleteToken() {\n  _requestDeleteToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(firebaseDependencies, token) {\n    var headers, unsubscribeOptions, response, responseData, message;\n    return regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            _context8.next = 2;\n            return getHeaders(firebaseDependencies);\n\n          case 2:\n            headers = _context8.sent;\n            unsubscribeOptions = {\n              method: 'DELETE',\n              headers: headers\n            };\n            _context8.prev = 4;\n            _context8.next = 7;\n            return fetch(\"\".concat(getEndpoint(firebaseDependencies.appConfig), \"/\").concat(token), unsubscribeOptions);\n\n          case 7:\n            response = _context8.sent;\n            _context8.next = 10;\n            return response.json();\n\n          case 10:\n            responseData = _context8.sent;\n\n            if (!responseData.error) {\n              _context8.next = 14;\n              break;\n            }\n\n            message = responseData.error.message;\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: message\n            });\n\n          case 14:\n            _context8.next = 19;\n            break;\n\n          case 16:\n            _context8.prev = 16;\n            _context8.t0 = _context8[\"catch\"](4);\n            throw ERROR_FACTORY.create(\"token-unsubscribe-failed\"\n            /* TOKEN_UNSUBSCRIBE_FAILED */\n            , {\n              errorInfo: _context8.t0\n            });\n\n          case 19:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8, null, [[4, 16]]);\n  }));\n  return _requestDeleteToken.apply(this, arguments);\n}\n\nfunction getEndpoint(_ref2) {\n  var projectId = _ref2.projectId;\n  return \"\".concat(ENDPOINT, \"/projects/\").concat(projectId, \"/registrations\");\n}\n\nfunction getHeaders(_x12) {\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction _getHeaders() {\n  _getHeaders = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(_ref3) {\n    var appConfig, installations, authToken;\n    return regeneratorRuntime.wrap(function _callee9$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            appConfig = _ref3.appConfig, installations = _ref3.installations;\n            _context9.next = 3;\n            return installations.getToken();\n\n          case 3:\n            authToken = _context9.sent;\n            return _context9.abrupt(\"return\", new Headers({\n              'Content-Type': 'application/json',\n              Accept: 'application/json',\n              'x-goog-api-key': appConfig.apiKey,\n              'x-goog-firebase-installations-auth': \"FIS \".concat(authToken)\n            }));\n\n          case 5:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, _callee9);\n  }));\n  return _getHeaders.apply(this, arguments);\n}\n\nfunction getBody(_ref4) {\n  var p256dh = _ref4.p256dh,\n      auth = _ref4.auth,\n      endpoint = _ref4.endpoint,\n      vapidKey = _ref4.vapidKey;\n  var body = {\n    web: {\n      endpoint: endpoint,\n      auth: auth,\n      p256dh: p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// UpdateRegistration will be called once every week.\n\n\nvar TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nfunction getTokenInternal(_x13) {\n  return _getTokenInternal.apply(this, arguments);\n}\n/**\r\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\r\n * the push subscription if it exists.\r\n */\n\n\nfunction _getTokenInternal() {\n  _getTokenInternal = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(messaging) {\n    var pushSubscription, subscriptionOptions, tokenDetails;\n    return regeneratorRuntime.wrap(function _callee10$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _context10.next = 2;\n            return getPushSubscription(messaging.swRegistration, messaging.vapidKey);\n\n          case 2:\n            pushSubscription = _context10.sent;\n            subscriptionOptions = {\n              vapidKey: messaging.vapidKey,\n              swScope: messaging.swRegistration.scope,\n              endpoint: pushSubscription.endpoint,\n              auth: arrayToBase64(pushSubscription.getKey('auth')),\n              p256dh: arrayToBase64(pushSubscription.getKey('p256dh'))\n            };\n            _context10.next = 6;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 6:\n            tokenDetails = _context10.sent;\n\n            if (tokenDetails) {\n              _context10.next = 11;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n\n          case 11:\n            if (isTokenValid(tokenDetails.subscriptionOptions, subscriptionOptions)) {\n              _context10.next = 23;\n              break;\n            }\n\n            _context10.prev = 12;\n            _context10.next = 15;\n            return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n\n          case 15:\n            _context10.next = 20;\n            break;\n\n          case 17:\n            _context10.prev = 17;\n            _context10.t0 = _context10[\"catch\"](12);\n            // Suppress errors because of #2364\n            console.warn(_context10.t0);\n\n          case 20:\n            return _context10.abrupt(\"return\", getNewToken(messaging.firebaseDependencies, subscriptionOptions));\n\n          case 23:\n            if (!(Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS)) {\n              _context10.next = 27;\n              break;\n            }\n\n            return _context10.abrupt(\"return\", updateToken(messaging, {\n              token: tokenDetails.token,\n              createTime: Date.now(),\n              subscriptionOptions: subscriptionOptions\n            }));\n\n          case 27:\n            return _context10.abrupt(\"return\", tokenDetails.token);\n\n          case 28:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, _callee10, null, [[12, 17]]);\n  }));\n  return _getTokenInternal.apply(this, arguments);\n}\n\nfunction deleteTokenInternal(_x14) {\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction _deleteTokenInternal() {\n  _deleteTokenInternal = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(messaging) {\n    var tokenDetails, pushSubscription;\n    return regeneratorRuntime.wrap(function _callee11$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            _context11.next = 2;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 2:\n            tokenDetails = _context11.sent;\n\n            if (!tokenDetails) {\n              _context11.next = 8;\n              break;\n            }\n\n            _context11.next = 6;\n            return requestDeleteToken(messaging.firebaseDependencies, tokenDetails.token);\n\n          case 6:\n            _context11.next = 8;\n            return dbRemove(messaging.firebaseDependencies);\n\n          case 8:\n            _context11.next = 10;\n            return messaging.swRegistration.pushManager.getSubscription();\n\n          case 10:\n            pushSubscription = _context11.sent;\n\n            if (!pushSubscription) {\n              _context11.next = 13;\n              break;\n            }\n\n            return _context11.abrupt(\"return\", pushSubscription.unsubscribe());\n\n          case 13:\n            return _context11.abrupt(\"return\", true);\n\n          case 14:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, _callee11);\n  }));\n  return _deleteTokenInternal.apply(this, arguments);\n}\n\nfunction updateToken(_x15, _x16) {\n  return _updateToken.apply(this, arguments);\n}\n\nfunction _updateToken() {\n  _updateToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(messaging, tokenDetails) {\n    var updatedToken, updatedTokenDetails;\n    return regeneratorRuntime.wrap(function _callee12$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            _context12.prev = 0;\n            _context12.next = 3;\n            return requestUpdateToken(messaging.firebaseDependencies, tokenDetails);\n\n          case 3:\n            updatedToken = _context12.sent;\n            updatedTokenDetails = Object.assign(Object.assign({}, tokenDetails), {\n              token: updatedToken,\n              createTime: Date.now()\n            });\n            _context12.next = 7;\n            return dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n\n          case 7:\n            return _context12.abrupt(\"return\", updatedToken);\n\n          case 10:\n            _context12.prev = 10;\n            _context12.t0 = _context12[\"catch\"](0);\n            _context12.next = 14;\n            return deleteTokenInternal(messaging);\n\n          case 14:\n            throw _context12.t0;\n\n          case 15:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, _callee12, null, [[0, 10]]);\n  }));\n  return _updateToken.apply(this, arguments);\n}\n\nfunction getNewToken(_x17, _x18) {\n  return _getNewToken.apply(this, arguments);\n}\n/**\r\n * Gets a PushSubscription for the current user.\r\n */\n\n\nfunction _getNewToken() {\n  _getNewToken = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(firebaseDependencies, subscriptionOptions) {\n    var token, tokenDetails;\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return requestGetToken(firebaseDependencies, subscriptionOptions);\n\n          case 2:\n            token = _context13.sent;\n            tokenDetails = {\n              token: token,\n              createTime: Date.now(),\n              subscriptionOptions: subscriptionOptions\n            };\n            _context13.next = 6;\n            return dbSet(firebaseDependencies, tokenDetails);\n\n          case 6:\n            return _context13.abrupt(\"return\", tokenDetails.token);\n\n          case 7:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _getNewToken.apply(this, arguments);\n}\n\nfunction getPushSubscription(_x19, _x20) {\n  return _getPushSubscription.apply(this, arguments);\n}\n/**\r\n * Checks if the saved tokenDetails object matches the configuration provided.\r\n */\n\n\nfunction _getPushSubscription() {\n  _getPushSubscription = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee14(swRegistration, vapidKey) {\n    var subscription;\n    return regeneratorRuntime.wrap(function _callee14$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            _context14.next = 2;\n            return swRegistration.pushManager.getSubscription();\n\n          case 2:\n            subscription = _context14.sent;\n\n            if (!subscription) {\n              _context14.next = 5;\n              break;\n            }\n\n            return _context14.abrupt(\"return\", subscription);\n\n          case 5:\n            return _context14.abrupt(\"return\", swRegistration.pushManager.subscribe({\n              userVisibleOnly: true,\n              // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n              // submitted to pushManager#subscribe must be of type Uint8Array.\n              applicationServerKey: base64ToArray(vapidKey)\n            }));\n\n          case 6:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    }, _callee14);\n  }));\n  return _getPushSubscription.apply(this, arguments);\n}\n\nfunction isTokenValid(dbOptions, currentOptions) {\n  var isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  var isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  var isAuthEqual = currentOptions.auth === dbOptions.auth;\n  var isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction externalizePayload(internalPayload) {\n  var payload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  };\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n  return payload;\n}\n\nfunction propagateNotificationPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n  var title = messagePayloadInternal.notification.title;\n\n  if (!!title) {\n    payload.notification.title = title;\n  }\n\n  var body = messagePayloadInternal.notification.body;\n\n  if (!!body) {\n    payload.notification.body = body;\n  }\n\n  var image = messagePayloadInternal.notification.image;\n\n  if (!!image) {\n    payload.notification.image = image;\n  }\n}\n\nfunction propagateDataPayload(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data;\n}\n\nfunction propagateFcmOptions(payload, messagePayloadInternal) {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n  var link = messagePayloadInternal.fcmOptions.link;\n\n  if (!!link) {\n    payload.fcmOptions.link = link;\n  } // eslint-disable-next-line camelcase\n\n\n  var analyticsLabel = messagePayloadInternal.fcmOptions.analytics_label;\n\n  if (!!analyticsLabel) {\n    payload.fcmOptions.analyticsLabel = analyticsLabel;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction isConsoleMessage(data) {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return _typeof(data) === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/** Returns a promise that resolves after given time passes. */\n\n\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\n_mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n\n_mergeStrings('AzSCbw63g1R0nCw85jG8', 'Iaya3yLKwmgvh7cF0q4');\n\nfunction stageLog(_x21, _x22) {\n  return _stageLog.apply(this, arguments);\n}\n\nfunction _stageLog() {\n  _stageLog = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee15(messaging, internalPayload) {\n    var fcmEvent;\n    return regeneratorRuntime.wrap(function _callee15$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            _context15.t0 = createFcmEvent;\n            _context15.t1 = internalPayload;\n            _context15.next = 4;\n            return messaging.firebaseDependencies.installations.getId();\n\n          case 4:\n            _context15.t2 = _context15.sent;\n            fcmEvent = (0, _context15.t0)(_context15.t1, _context15.t2);\n            createAndEnqueueLogEvent(messaging, fcmEvent);\n\n          case 7:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    }, _callee15);\n  }));\n  return _stageLog.apply(this, arguments);\n}\n\nfunction createFcmEvent(internalPayload, fid) {\n  var _a, _b;\n\n  var fcmEvent = {};\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType$1.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType$1.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!((_a = internalPayload.fcmOptions) === null || _a === void 0 ? void 0 : _a.analytics_label)) {\n    fcmEvent.analytics_label = (_b = internalPayload.fcmOptions) === null || _b === void 0 ? void 0 : _b.analytics_label;\n  }\n  /* eslint-enable camelcase */\n\n\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(messaging, fcmEvent) {\n  var logEvent = {};\n  /* eslint-disable camelcase */\n\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent); // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nfunction _mergeStrings(s1, s2) {\n  var resultArray = [];\n\n  for (var i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction onSubChange(_x23, _x24) {\n  return _onSubChange.apply(this, arguments);\n}\n\nfunction _onSubChange() {\n  _onSubChange = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee16(event, messaging) {\n    var _a, _b, newSubscription, tokenDetails;\n\n    return regeneratorRuntime.wrap(function _callee16$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            newSubscription = event.newSubscription;\n\n            if (newSubscription) {\n              _context16.next = 5;\n              break;\n            }\n\n            _context16.next = 4;\n            return deleteTokenInternal(messaging);\n\n          case 4:\n            return _context16.abrupt(\"return\");\n\n          case 5:\n            _context16.next = 7;\n            return dbGet(messaging.firebaseDependencies);\n\n          case 7:\n            tokenDetails = _context16.sent;\n            _context16.next = 10;\n            return deleteTokenInternal(messaging);\n\n          case 10:\n            messaging.vapidKey = (_b = (_a = tokenDetails === null || tokenDetails === void 0 ? void 0 : tokenDetails.subscriptionOptions) === null || _a === void 0 ? void 0 : _a.vapidKey) !== null && _b !== void 0 ? _b : DEFAULT_VAPID_KEY;\n            _context16.next = 13;\n            return getTokenInternal(messaging);\n\n          case 13:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    }, _callee16);\n  }));\n  return _onSubChange.apply(this, arguments);\n}\n\nfunction onPush(_x25, _x26) {\n  return _onPush.apply(this, arguments);\n}\n\nfunction _onPush() {\n  _onPush = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee17(event, messaging) {\n    var internalPayload, clientList, payload;\n    return regeneratorRuntime.wrap(function _callee17$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            internalPayload = getMessagePayloadInternal(event);\n\n            if (internalPayload) {\n              _context17.next = 3;\n              break;\n            }\n\n            return _context17.abrupt(\"return\");\n\n          case 3:\n            if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n              _context17.next = 6;\n              break;\n            }\n\n            _context17.next = 6;\n            return stageLog(messaging, internalPayload);\n\n          case 6:\n            _context17.next = 8;\n            return getClientList();\n\n          case 8:\n            clientList = _context17.sent;\n\n            if (!hasVisibleClients(clientList)) {\n              _context17.next = 11;\n              break;\n            }\n\n            return _context17.abrupt(\"return\", sendMessagePayloadInternalToWindows(clientList, internalPayload));\n\n          case 11:\n            if (!internalPayload.notification) {\n              _context17.next = 14;\n              break;\n            }\n\n            _context17.next = 14;\n            return showNotification(wrapInternalPayload(internalPayload));\n\n          case 14:\n            if (messaging) {\n              _context17.next = 16;\n              break;\n            }\n\n            return _context17.abrupt(\"return\");\n\n          case 16:\n            if (!messaging.onBackgroundMessageHandler) {\n              _context17.next = 24;\n              break;\n            }\n\n            payload = externalizePayload(internalPayload);\n\n            if (!(typeof messaging.onBackgroundMessageHandler === 'function')) {\n              _context17.next = 23;\n              break;\n            }\n\n            _context17.next = 21;\n            return messaging.onBackgroundMessageHandler(payload);\n\n          case 21:\n            _context17.next = 24;\n            break;\n\n          case 23:\n            messaging.onBackgroundMessageHandler.next(payload);\n\n          case 24:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    }, _callee17);\n  }));\n  return _onPush.apply(this, arguments);\n}\n\nfunction onNotificationClick(_x27) {\n  return _onNotificationClick.apply(this, arguments);\n}\n\nfunction _onNotificationClick() {\n  _onNotificationClick = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee18(event) {\n    var _a, _b, internalPayload, link, url, originUrl, client;\n\n    return regeneratorRuntime.wrap(function _callee18$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            internalPayload = (_b = (_a = event.notification) === null || _a === void 0 ? void 0 : _a.data) === null || _b === void 0 ? void 0 : _b[FCM_MSG];\n\n            if (internalPayload) {\n              _context18.next = 5;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 5:\n            if (!event.action) {\n              _context18.next = 7;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 7:\n            // Prevent other listeners from receiving the event\n            event.stopImmediatePropagation();\n            event.notification.close(); // Note clicking on a notification with no link set will focus the Chrome's current tab.\n\n            link = getLink(internalPayload);\n\n            if (link) {\n              _context18.next = 12;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 12:\n            // FM should only open/focus links from app's origin.\n            url = new URL(link, self.location.href);\n            originUrl = new URL(self.location.origin);\n\n            if (!(url.host !== originUrl.host)) {\n              _context18.next = 16;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 16:\n            _context18.next = 18;\n            return getWindowClient(url);\n\n          case 18:\n            client = _context18.sent;\n\n            if (client) {\n              _context18.next = 27;\n              break;\n            }\n\n            _context18.next = 22;\n            return self.clients.openWindow(link);\n\n          case 22:\n            client = _context18.sent;\n            _context18.next = 25;\n            return sleep(3000);\n\n          case 25:\n            _context18.next = 30;\n            break;\n\n          case 27:\n            _context18.next = 29;\n            return client.focus();\n\n          case 29:\n            client = _context18.sent;\n\n          case 30:\n            if (client) {\n              _context18.next = 32;\n              break;\n            }\n\n            return _context18.abrupt(\"return\");\n\n          case 32:\n            internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n            internalPayload.isFirebaseMessaging = true;\n            return _context18.abrupt(\"return\", client.postMessage(internalPayload));\n\n          case 35:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    }, _callee18);\n  }));\n  return _onNotificationClick.apply(this, arguments);\n}\n\nfunction wrapInternalPayload(internalPayload) {\n  var wrappedInternalPayload = Object.assign({}, internalPayload.notification); // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n\n  wrappedInternalPayload.data = _defineProperty({}, FCM_MSG, internalPayload);\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal(_ref5) {\n  var data = _ref5.data;\n\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n/**\r\n * @param url The URL to look for when focusing a client.\r\n * @return Returns an existing window client or a newly opened WindowClient.\r\n */\n\n\nfunction getWindowClient(_x28) {\n  return _getWindowClient.apply(this, arguments);\n}\n/**\r\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\r\n * otherwise false.\r\n */\n\n\nfunction _getWindowClient() {\n  _getWindowClient = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee19(url) {\n    var clientList, _iterator2, _step2, client, clientUrl;\n\n    return regeneratorRuntime.wrap(function _callee19$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            _context19.next = 2;\n            return getClientList();\n\n          case 2:\n            clientList = _context19.sent;\n            _iterator2 = _createForOfIteratorHelper(clientList);\n            _context19.prev = 4;\n\n            _iterator2.s();\n\n          case 6:\n            if ((_step2 = _iterator2.n()).done) {\n              _context19.next = 13;\n              break;\n            }\n\n            client = _step2.value;\n            clientUrl = new URL(client.url, self.location.href);\n\n            if (!(url.host === clientUrl.host)) {\n              _context19.next = 11;\n              break;\n            }\n\n            return _context19.abrupt(\"return\", client);\n\n          case 11:\n            _context19.next = 6;\n            break;\n\n          case 13:\n            _context19.next = 18;\n            break;\n\n          case 15:\n            _context19.prev = 15;\n            _context19.t0 = _context19[\"catch\"](4);\n\n            _iterator2.e(_context19.t0);\n\n          case 18:\n            _context19.prev = 18;\n\n            _iterator2.f();\n\n            return _context19.finish(18);\n\n          case 21:\n            return _context19.abrupt(\"return\", null);\n\n          case 22:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    }, _callee19, null, [[4, 15, 18, 21]]);\n  }));\n  return _getWindowClient.apply(this, arguments);\n}\n\nfunction hasVisibleClients(clientList) {\n  return clientList.some(function (client) {\n    return client.visibilityState === 'visible' && // Ignore chrome-extension clients as that matches the background pages of extensions, which\n    // are always considered visible for some reason.\n    !client.url.startsWith('chrome-extension://');\n  });\n}\n\nfunction sendMessagePayloadInternalToWindows(clientList, internalPayload) {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  var _iterator = _createForOfIteratorHelper(clientList),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var client = _step.value;\n      client.postMessage(internalPayload);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction getClientList() {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n\n  });\n}\n\nfunction showNotification(notificationPayloadInternal) {\n  var _a; // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n\n\n  var actions = notificationPayloadInternal.actions;\n  var _Notification = Notification,\n      maxActions = _Notification.maxActions;\n\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\"This browser only supports \".concat(maxActions, \" actions. The remaining actions will not be displayed.\"));\n  }\n\n  return self.registration.showNotification(\n  /* title= */\n  (_a = notificationPayloadInternal.title) !== null && _a !== void 0 ? _a : '', notificationPayloadInternal);\n}\n\nfunction getLink(payload) {\n  var _a, _b, _c; // eslint-disable-next-line camelcase\n\n\n  var link = (_b = (_a = payload.fcmOptions) === null || _a === void 0 ? void 0 : _a.link) !== null && _b !== void 0 ? _b : (_c = payload.notification) === null || _c === void 0 ? void 0 : _c.click_action;\n\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction extractAppConfig(app) {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  } // Required app config keys\n\n\n  var configKeys = ['projectId', 'apiKey', 'appId', 'messagingSenderId'];\n  var options = app.options;\n\n  for (var _i = 0, _configKeys = configKeys; _i < _configKeys.length; _i++) {\n    var keyName = _configKeys[_i];\n\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId,\n    apiKey: options.apiKey,\n    appId: options.appId,\n    senderId: options.messagingSenderId\n  };\n}\n\nfunction getMissingValueError(valueName) {\n  return ERROR_FACTORY.create(\"missing-app-config-values\"\n  /* MISSING_APP_CONFIG_VALUES */\n  , {\n    valueName: valueName\n  });\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MessagingService = /*#__PURE__*/function () {\n  function MessagingService(app, installations, analyticsProvider) {\n    _classCallCheck(this, MessagingService);\n\n    // logging is only done with end user consent. Default to false.\n    this.deliveryMetricsExportedToBigQueryEnabled = false;\n    this.onBackgroundMessageHandler = null;\n    this.onMessageHandler = null;\n    this.logEvents = [];\n    this.isLogServiceStarted = false;\n    var appConfig = extractAppConfig(app);\n    this.firebaseDependencies = {\n      app: app,\n      appConfig: appConfig,\n      installations: installations,\n      analyticsProvider: analyticsProvider\n    };\n  }\n\n  _createClass(MessagingService, [{\n    key: \"_delete\",\n    value: function _delete() {\n      return Promise.resolve();\n    }\n  }]);\n\n  return MessagingService;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar SwMessagingFactory = function SwMessagingFactory(container) {\n  var messaging = new MessagingService(container.getProvider('app').getImmediate(), container.getProvider('installations-internal').getImmediate(), container.getProvider('analytics-internal'));\n  self.addEventListener('push', function (e) {\n    e.waitUntil(onPush(e, messaging));\n  });\n  self.addEventListener('pushsubscriptionchange', function (e) {\n    e.waitUntil(onSubChange(e, messaging));\n  });\n  self.addEventListener('notificationclick', function (e) {\n    e.waitUntil(onNotificationClick(e));\n  });\n  return messaging;\n};\n/**\r\n * The messaging instance registered in sw is named differently than that of in client. This is\r\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\r\n * `messaging-compat` and component with the same name can only be registered once.\r\n */\n\n\nfunction registerMessagingInSw() {\n  _registerComponent(new Component('messaging-sw', SwMessagingFactory, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Checks whether all required APIs exist within SW Context\r\n * @returns a Promise that resolves to a boolean.\r\n *\r\n * @public\r\n */\n\n\nfunction isSwSupported() {\n  return _isSwSupported.apply(this, arguments);\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _isSwSupported() {\n  _isSwSupported = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee20() {\n    return regeneratorRuntime.wrap(function _callee20$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            _context20.t4 = isIndexedDBAvailable();\n\n            if (!_context20.t4) {\n              _context20.next = 5;\n              break;\n            }\n\n            _context20.next = 4;\n            return validateIndexedDBOpenable();\n\n          case 4:\n            _context20.t4 = _context20.sent;\n\n          case 5:\n            _context20.t3 = _context20.t4;\n\n            if (!_context20.t3) {\n              _context20.next = 8;\n              break;\n            }\n\n            _context20.t3 = 'PushManager' in self;\n\n          case 8:\n            _context20.t2 = _context20.t3;\n\n            if (!_context20.t2) {\n              _context20.next = 11;\n              break;\n            }\n\n            _context20.t2 = 'Notification' in self;\n\n          case 11:\n            _context20.t1 = _context20.t2;\n\n            if (!_context20.t1) {\n              _context20.next = 14;\n              break;\n            }\n\n            _context20.t1 = ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification');\n\n          case 14:\n            _context20.t0 = _context20.t1;\n\n            if (!_context20.t0) {\n              _context20.next = 17;\n              break;\n            }\n\n            _context20.t0 = PushSubscription.prototype.hasOwnProperty('getKey');\n\n          case 17:\n            return _context20.abrupt(\"return\", _context20.t0);\n\n          case 18:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    }, _callee20);\n  }));\n  return _isSwSupported.apply(this, arguments);\n}\n\nfunction onBackgroundMessage$1(messaging, nextOrObserver) {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(\"only-available-in-sw\"\n    /* AVAILABLE_IN_SW */\n    );\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n  return function () {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\n  messaging.deliveryMetricsExportedToBigQueryEnabled = enable;\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * Retrieves a Firebase Cloud Messaging instance.\r\n *\r\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\r\n *\r\n * @public\r\n */\n\n\nfunction getMessagingInSw() {\n  var app = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getApp();\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(function (isSupported) {\n    // If `isSwSupported()` resolved, but returned false.\n    if (!isSupported) {\n      throw ERROR_FACTORY.create(\"unsupported-browser\"\n      /* UNSUPPORTED_BROWSER */\n      );\n    }\n  }, function (_) {\n    // If `isSwSupported()` rejected.\n    throw ERROR_FACTORY.create(\"indexed-db-unsupported\"\n    /* INDEXED_DB_UNSUPPORTED */\n    );\n  });\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n/**\r\n * Called when a message is received while the app is in the background. An app is considered to be\r\n * in the background if no active window is displayed.\r\n *\r\n * @param messaging - The {@link Messaging} instance.\r\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\r\n * message is received and the app is currently in the background.\r\n *\r\n * @returns To stop listening for messages execute this returned function\r\n *\r\n * @public\r\n */\n\n\nfunction onBackgroundMessage(messaging, nextOrObserver) {\n  messaging = getModularInstance(messaging);\n  return onBackgroundMessage$1(messaging, nextOrObserver);\n}\n/**\r\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\r\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\r\n * disable the export at runtime.\r\n *\r\n * @param messaging - The `FirebaseMessaging` instance.\r\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\r\n * BigQuery.\r\n *\r\n * @public\r\n */\n\n\nfunction experimentalSetDeliveryMetricsExportedToBigQueryEnabled(messaging, enable) {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nregisterMessagingInSw();\nexport { experimentalSetDeliveryMetricsExportedToBigQueryEnabled, getMessagingInSw as getMessaging, isSwSupported as isSupported, onBackgroundMessage };","map":{"version":3,"mappings":"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","names":["DEFAULT_VAPID_KEY","ENDPOINT","FCM_MSG","CONSOLE_CAMPAIGN_ID","SDK_PLATFORM_WEB","EVENT_MESSAGE_DELIVERED","MessageType","arrayToBase64","array","uint8Array","Uint8Array","base64String","btoa","String","fromCharCode","replace","base64ToArray","padding","repeat","length","base64","rawData","atob","outputArray","i","charCodeAt","OLD_DB_NAME","OLD_DB_VERSION","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","indexedDB","databases","dbNames","map","db","name","includes","tokenDetails","openDB","oldVersion","newVersion","upgradeTransaction","objectStoreNames","contains","objectStore","index","get","value","clear","oldDetails","auth","p256dh","endpoint","token","fcmToken","createTime","_a","Date","now","subscriptionOptions","swScope","vapidKey","close","deleteDB","checkTokenDetails","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDb","createObjectStore","dbGet","firebaseDependencies","key","getKey","transaction","appConfig","oldTokenDetails","dbSet","tx","put","complete","dbRemove","delete","appId","ERROR_MAP","ERROR_FACTORY","ErrorFactory","requestGetToken","getHeaders","headers","body","getBody","subscribeOptions","method","JSON","stringify","fetch","getEndpoint","response","json","responseData","create","errorInfo","error","message","requestUpdateToken","updateOptions","requestDeleteToken","unsubscribeOptions","projectId","installations","getToken","authToken","Headers","Accept","apiKey","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","messaging","getPushSubscription","swRegistration","pushSubscription","scope","getNewToken","isTokenValid","console","warn","updateToken","deleteTokenInternal","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","Object","subscription","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messageId","fcmMessageId","propagateNotificationPayload","propagateDataPayload","propagateFcmOptions","messagePayloadInternal","notification","title","image","data","fcmOptions","link","analyticsLabel","analytics_label","isConsoleMessage","sleep","ms","Promise","setTimeout","resolve","_mergeStrings","stageLog","createFcmEvent","getId","fcmEvent","createAndEnqueueLogEvent","fid","project_number","message_id","instance_id","message_type","DISPLAY_NOTIFICATION","toString","DATA_MESSAGE","sdk_platform","package_name","self","origin","event","_b","logEvent","event_time_ms","Math","floor","source_extension_json_proto3","logEvents","push","s1","s2","resultArray","charAt","join","onSubChange","newSubscription","onPush","getMessagePayloadInternal","deliveryMetricsExportedToBigQueryEnabled","getClientList","clientList","hasVisibleClients","sendMessagePayloadInternalToWindows","showNotification","wrapInternalPayload","onBackgroundMessageHandler","next","onNotificationClick","action","stopImmediatePropagation","getLink","url","URL","location","href","originUrl","host","getWindowClient","client","clients","openWindow","focus","messageType","NOTIFICATION_CLICKED","isFirebaseMessaging","postMessage","wrappedInternalPayload","err","clientUrl","some","visibilityState","startsWith","PUSH_RECEIVED","matchAll","type","includeUncontrolled","notificationPayloadInternal","actions","Notification","maxActions","registration","_c","click_action","extractAppConfig","app","options","getMissingValueError","configKeys","keyName","appName","messagingSenderId","valueName","MessagingService","analyticsProvider","SwMessagingFactory","container","getProvider","getImmediate","addEventListener","e","waitUntil","registerMessagingInSw","_registerComponent","Component","isSwSupported","isIndexedDBAvailable","validateIndexedDBOpenable","ServiceWorkerRegistration","prototype","hasOwnProperty","PushSubscription","onBackgroundMessage","nextOrObserver","document","undefined","_setDeliveryMetricsExportedToBigQueryEnabled","enable","getMessagingInSw","getApp","then","isSupported","_getProvider","getModularInstance","_onBackgroundMessage","experimentalSetDeliveryMetricsExportedToBigQueryEnabled"],"sources":["../src/util/constants.ts","../src/interfaces/internal-message-payload.ts","../src/helpers/array-base64-translator.ts","../src/helpers/migrate-old-database.ts","../src/internals/idb-manager.ts","../src/util/errors.ts","../src/internals/requests.ts","../src/internals/token-manager.ts","../src/helpers/externalizePayload.ts","../src/helpers/is-console-message.ts","../src/helpers/sleep.ts","../src/helpers/logToFirelog.ts","../src/listeners/sw-listeners.ts","../src/helpers/extract-app-config.ts","../src/messaging-service.ts","../src/helpers/register.ts","../src/api/isSupported.ts","../src/api/onBackgroundMessage.ts","../src/api/setDeliveryMetricsExportedToBigQueryEnabled.ts","../src/api.ts","../src/index.sw.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  fcmMessageId: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDB, openDB } from '@firebase/util';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDB(\n    OLD_DB_NAME,\n    OLD_DB_VERSION,\n    async (db, oldVersion, newVersion, upgradeTransaction) => {\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n\n      if (oldVersion === 2) {\n        const oldDetails = value as V2TokenDetails;\n\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime ?? Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey:\n              typeof oldDetails.vapidKey === 'string'\n                ? oldDetails.vapidKey\n                : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value as V3TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value as V4TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  );\n  db.close();\n\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBWrapper, deleteDB, openDB } from '@firebase/util';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DBWrapper> | null = null;\nfunction getDbPromise(): Promise<DBWrapper> {\n  if (!dbPromise) {\n    dbPromise = openDB(\n      DATABASE_NAME,\n      DATABASE_VERSION,\n      (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    );\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = (await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key)) as TokenDetails;\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDB(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link = messagePayloadInternal.fcmOptions!.link;\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions!.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, FCM_MSG } from '../util/constants';\nimport {\n  MessagePayloadInternal,\n  MessageType,\n  NotificationPayloadInternal\n} from '../interfaces/internal-message-payload';\nimport {\n  NotificationEvent,\n  PushEvent,\n  PushSubscriptionChangeEvent,\n  ServiceWorkerGlobalScope,\n  WindowClient\n} from '../util/sw-types';\nimport {\n  deleteTokenInternal,\n  getTokenInternal\n} from '../internals/token-manager';\n\nimport { MessagingService } from '../messaging-service';\nimport { dbGet } from '../internals/idb-manager';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { sleep } from '../helpers/sleep';\nimport { stageLog } from '../helpers/logToFirelog';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport async function onSubChange(\n  event: PushSubscriptionChangeEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const { newSubscription } = event;\n  if (!newSubscription) {\n    // Subscription revoked, delete token\n    await deleteTokenInternal(messaging);\n    return;\n  }\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  await deleteTokenInternal(messaging);\n\n  messaging.vapidKey =\n    tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n  await getTokenInternal(messaging);\n}\n\nexport async function onPush(\n  event: PushEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const internalPayload = getMessagePayloadInternal(event);\n  if (!internalPayload) {\n    // Failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\n    return;\n  }\n\n  // log to Firelog with user consent\n  if (messaging.deliveryMetricsExportedToBigQueryEnabled) {\n    await stageLog(messaging, internalPayload);\n  }\n\n  // foreground handling: eventually passed to onMessage hook\n  const clientList = await getClientList();\n  if (hasVisibleClients(clientList)) {\n    return sendMessagePayloadInternalToWindows(clientList, internalPayload);\n  }\n\n  // background handling: display if possible and pass to onBackgroundMessage hook\n  if (!!internalPayload.notification) {\n    await showNotification(wrapInternalPayload(internalPayload));\n  }\n\n  if (!messaging) {\n    return;\n  }\n\n  if (!!messaging.onBackgroundMessageHandler) {\n    const payload = externalizePayload(internalPayload);\n\n    if (typeof messaging.onBackgroundMessageHandler === 'function') {\n      await messaging.onBackgroundMessageHandler(payload);\n    } else {\n      messaging.onBackgroundMessageHandler.next(payload);\n    }\n  }\n}\n\nexport async function onNotificationClick(\n  event: NotificationEvent\n): Promise<void> {\n  const internalPayload: MessagePayloadInternal =\n    event.notification?.data?.[FCM_MSG];\n\n  if (!internalPayload) {\n    return;\n  } else if (event.action) {\n    // User clicked on an action button. This will allow developers to act on action button clicks\n    // by using a custom onNotificationClick listener that they define.\n    return;\n  }\n\n  // Prevent other listeners from receiving the event\n  event.stopImmediatePropagation();\n  event.notification.close();\n\n  // Note clicking on a notification with no link set will focus the Chrome's current tab.\n  const link = getLink(internalPayload);\n  if (!link) {\n    return;\n  }\n\n  // FM should only open/focus links from app's origin.\n  const url = new URL(link, self.location.href);\n  const originUrl = new URL(self.location.origin);\n\n  if (url.host !== originUrl.host) {\n    return;\n  }\n\n  let client = await getWindowClient(url);\n\n  if (!client) {\n    client = await self.clients.openWindow(link);\n\n    // Wait three seconds for the client to initialize and set up the message handler so that it\n    // can receive the message.\n    await sleep(3000);\n  } else {\n    client = await client.focus();\n  }\n\n  if (!client) {\n    // Window Client will not be returned if it's for a third party origin.\n    return;\n  }\n\n  internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n  internalPayload.isFirebaseMessaging = true;\n  return client.postMessage(internalPayload);\n}\n\nfunction wrapInternalPayload(\n  internalPayload: MessagePayloadInternal\n): NotificationPayloadInternal {\n  const wrappedInternalPayload: NotificationPayloadInternal = {\n    ...(internalPayload.notification as unknown as NotificationPayloadInternal)\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n  wrappedInternalPayload.data = {\n    [FCM_MSG]: internalPayload\n  };\n\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal({\n  data\n}: PushEvent): MessagePayloadInternal | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: URL): Promise<WindowClient | null> {\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const clientUrl = new URL(client.url, self.location.href);\n\n    if (url.host === clientUrl.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\n * otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages of extensions, which\n      // are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\nfunction sendMessagePayloadInternalToWindows(\n  clientList: WindowClient[],\n  internalPayload: MessagePayloadInternal\n): void {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  for (const client of clientList) {\n    client.postMessage(internalPayload);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction showNotification(\n  notificationPayloadInternal: NotificationPayloadInternal\n): Promise<void> {\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { actions } = notificationPayloadInternal;\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(\n    /* title= */ notificationPayloadInternal.title ?? '',\n    notificationPayloadInternal\n  );\n}\n\nfunction getLink(payload: MessagePayloadInternal): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onBackgroundMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { Messaging } from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function _setDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  (messaging as MessagingService).deliveryMetricsExportedToBigQueryEnabled =\n    enable;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\n\nimport { Messaging } from './interfaces/public-types';\nimport { registerMessagingInSw } from './helpers/register';\n\nexport * from './interfaces/public-types';\nexport {\n  onBackgroundMessage,\n  getMessagingInSw as getMessaging,\n  experimentalSetDeliveryMetricsExportedToBigQueryEnabled\n} from './api';\nexport { isSwSupported as isSupported } from './api/isSupported';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'messaging-sw': Messaging;\n  }\n}\n\nregisterMessagingInSw();\n"]},"metadata":{},"sourceType":"module"}