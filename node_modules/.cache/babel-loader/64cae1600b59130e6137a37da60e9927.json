{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport pluckProps from '../../utils/pluck-props';\nimport { concat } from '../../utils/array';\nimport { getComponentConfig } from '../../utils/config';\nimport { addClass, removeClass } from '../../utils/dom';\nimport { isBoolean, isEvent, isFunction } from '../../utils/inspect';\nimport { keys } from '../../utils/object';\nimport { BLink, propsFactory as linkPropsFactory } from '../link/link'; // --- Constants --\n\nvar NAME = 'BButton';\nvar btnProps = {\n  block: {\n    type: Boolean,\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  size: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'size');\n    }\n  },\n  variant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'variant');\n    }\n  },\n  type: {\n    type: String,\n    default: 'button'\n  },\n  tag: {\n    type: String,\n    default: 'button'\n  },\n  pill: {\n    type: Boolean,\n    default: false\n  },\n  squared: {\n    type: Boolean,\n    default: false\n  },\n  pressed: {\n    // tri-state prop: true, false or null\n    // => on, off, not a toggle\n    type: Boolean,\n    default: null\n  }\n};\nvar linkProps = linkPropsFactory();\ndelete linkProps.href.default;\ndelete linkProps.to.default;\nvar linkPropKeys = keys(linkProps);\nexport var props = _objectSpread({}, linkProps, {}, btnProps); // --- Helper methods ---\n// Focus handler for toggle buttons.  Needs class of 'focus' when focused.\n\nvar handleFocus = function handleFocus(evt) {\n  if (evt.type === 'focusin') {\n    addClass(evt.target, 'focus');\n  } else if (evt.type === 'focusout') {\n    removeClass(evt.target, 'focus');\n  }\n}; // Is the requested button a link?\n\n\nvar isLink = function isLink(props) {\n  // If tag prop is set to `a`, we use a b-link to get proper disabled handling\n  return Boolean(props.href || props.to || props.tag && String(props.tag).toLowerCase() === 'a');\n}; // Is the button to be a toggle button?\n\n\nvar isToggle = function isToggle(props) {\n  return isBoolean(props.pressed);\n}; // Is the button \"really\" a button?\n\n\nvar isButton = function isButton(props) {\n  if (isLink(props)) {\n    return false;\n  } else if (props.tag && String(props.tag).toLowerCase() !== 'button') {\n    return false;\n  }\n\n  return true;\n}; // Is the requested tag not a button or link?\n\n\nvar isNonStandardTag = function isNonStandardTag(props) {\n  return !isLink(props) && !isButton(props);\n}; // Compute required classes (non static classes)\n\n\nvar computeClass = function computeClass(props) {\n  var _ref;\n\n  return [\"btn-\".concat(props.variant || getComponentConfig(NAME, 'variant')), (_ref = {}, _defineProperty(_ref, \"btn-\".concat(props.size), Boolean(props.size)), _defineProperty(_ref, 'btn-block', props.block), _defineProperty(_ref, 'rounded-pill', props.pill), _defineProperty(_ref, 'rounded-0', props.squared && !props.pill), _defineProperty(_ref, \"disabled\", props.disabled), _defineProperty(_ref, \"active\", props.pressed), _ref)];\n}; // Compute the link props to pass to b-link (if required)\n\n\nvar computeLinkProps = function computeLinkProps(props) {\n  return isLink(props) ? pluckProps(linkPropKeys, props) : null;\n}; // Compute the attributes for a button\n\n\nvar computeAttrs = function computeAttrs(props, data) {\n  var button = isButton(props);\n  var link = isLink(props);\n  var toggle = isToggle(props);\n  var nonStdTag = isNonStandardTag(props);\n  var role = data.attrs && data.attrs['role'] ? data.attrs['role'] : null;\n  var tabindex = data.attrs ? data.attrs['tabindex'] : null;\n\n  if (nonStdTag) {\n    tabindex = '0';\n  }\n\n  return {\n    // Type only used for \"real\" buttons\n    type: button && !link ? props.type : null,\n    // Disabled only set on \"real\" buttons\n    disabled: button ? props.disabled : null,\n    // We add a role of button when the tag is not a link or button for ARIA.\n    // Don't bork any role provided in data.attrs when isLink or isButton\n    role: nonStdTag ? 'button' : role,\n    // We set the aria-disabled state for non-standard tags\n    'aria-disabled': nonStdTag ? String(props.disabled) : null,\n    // For toggles, we need to set the pressed state for ARIA\n    'aria-pressed': toggle ? String(props.pressed) : null,\n    // autocomplete off is needed in toggle mode to prevent some browsers from\n    // remembering the previous setting when using the back button.\n    autocomplete: toggle ? 'off' : null,\n    // Tab index is used when the component is not a button.\n    // Links are tabbable, but don't allow disabled, while non buttons or links\n    // are not tabbable, so we mimic that functionality by disabling tabbing\n    // when disabled, and adding a tabindex of '0' to non buttons or non links.\n    tabindex: props.disabled && !button ? '-1' : tabindex\n  };\n}; // @vue/component\n\n\nexport var BButton = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref2) {\n    var props = _ref2.props,\n        data = _ref2.data,\n        listeners = _ref2.listeners,\n        children = _ref2.children;\n    var toggle = isToggle(props);\n    var link = isLink(props);\n    var on = {\n      click: function click(evt) {\n        /* istanbul ignore if: blink/button disabled should handle this */\n        if (props.disabled && isEvent(evt)) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        } else if (toggle && listeners && listeners['update:pressed']) {\n          // Send .sync updates to any \"pressed\" prop (if .sync listeners)\n          // Concat will normalize the value to an array\n          // without double wrapping an array value in an array.\n          concat(listeners['update:pressed']).forEach(function (fn) {\n            if (isFunction(fn)) {\n              fn(!props.pressed);\n            }\n          });\n        }\n      }\n    };\n\n    if (toggle) {\n      on.focusin = handleFocus;\n      on.focusout = handleFocus;\n    }\n\n    var componentData = {\n      staticClass: 'btn',\n      class: computeClass(props),\n      props: computeLinkProps(props),\n      attrs: computeAttrs(props, data),\n      on: on\n    };\n    return h(link ? BLink : props.tag, mergeData(data, componentData), children);\n  }\n});\nexport default BButton;","map":{"version":3,"sources":["C:/Users/Krystian/Desktop/ecommercevuefirestore/ecommercevuefirestore/node_modules/bootstrap-vue/esm/components/button/button.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","mergeData","pluckProps","concat","getComponentConfig","addClass","removeClass","isBoolean","isEvent","isFunction","BLink","propsFactory","linkPropsFactory","NAME","btnProps","block","type","Boolean","default","disabled","size","String","_default","variant","tag","pill","squared","pressed","linkProps","href","to","linkPropKeys","props","handleFocus","evt","isLink","toLowerCase","isToggle","isButton","isNonStandardTag","computeClass","_ref","computeLinkProps","computeAttrs","data","button","link","toggle","nonStdTag","role","attrs","tabindex","autocomplete","BButton","extend","name","functional","render","h","_ref2","listeners","children","on","click","stopPropagation","preventDefault","fn","focusin","focusout","componentData","staticClass","class"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport pluckProps from '../../utils/pluck-props';\nimport { concat } from '../../utils/array';\nimport { getComponentConfig } from '../../utils/config';\nimport { addClass, removeClass } from '../../utils/dom';\nimport { isBoolean, isEvent, isFunction } from '../../utils/inspect';\nimport { keys } from '../../utils/object';\nimport { BLink, propsFactory as linkPropsFactory } from '../link/link'; // --- Constants --\n\nvar NAME = 'BButton';\nvar btnProps = {\n  block: {\n    type: Boolean,\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  size: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'size');\n    }\n  },\n  variant: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'variant');\n    }\n  },\n  type: {\n    type: String,\n    default: 'button'\n  },\n  tag: {\n    type: String,\n    default: 'button'\n  },\n  pill: {\n    type: Boolean,\n    default: false\n  },\n  squared: {\n    type: Boolean,\n    default: false\n  },\n  pressed: {\n    // tri-state prop: true, false or null\n    // => on, off, not a toggle\n    type: Boolean,\n    default: null\n  }\n};\nvar linkProps = linkPropsFactory();\ndelete linkProps.href.default;\ndelete linkProps.to.default;\nvar linkPropKeys = keys(linkProps);\nexport var props = _objectSpread({}, linkProps, {}, btnProps); // --- Helper methods ---\n// Focus handler for toggle buttons.  Needs class of 'focus' when focused.\n\nvar handleFocus = function handleFocus(evt) {\n  if (evt.type === 'focusin') {\n    addClass(evt.target, 'focus');\n  } else if (evt.type === 'focusout') {\n    removeClass(evt.target, 'focus');\n  }\n}; // Is the requested button a link?\n\n\nvar isLink = function isLink(props) {\n  // If tag prop is set to `a`, we use a b-link to get proper disabled handling\n  return Boolean(props.href || props.to || props.tag && String(props.tag).toLowerCase() === 'a');\n}; // Is the button to be a toggle button?\n\n\nvar isToggle = function isToggle(props) {\n  return isBoolean(props.pressed);\n}; // Is the button \"really\" a button?\n\n\nvar isButton = function isButton(props) {\n  if (isLink(props)) {\n    return false;\n  } else if (props.tag && String(props.tag).toLowerCase() !== 'button') {\n    return false;\n  }\n\n  return true;\n}; // Is the requested tag not a button or link?\n\n\nvar isNonStandardTag = function isNonStandardTag(props) {\n  return !isLink(props) && !isButton(props);\n}; // Compute required classes (non static classes)\n\n\nvar computeClass = function computeClass(props) {\n  var _ref;\n\n  return [\"btn-\".concat(props.variant || getComponentConfig(NAME, 'variant')), (_ref = {}, _defineProperty(_ref, \"btn-\".concat(props.size), Boolean(props.size)), _defineProperty(_ref, 'btn-block', props.block), _defineProperty(_ref, 'rounded-pill', props.pill), _defineProperty(_ref, 'rounded-0', props.squared && !props.pill), _defineProperty(_ref, \"disabled\", props.disabled), _defineProperty(_ref, \"active\", props.pressed), _ref)];\n}; // Compute the link props to pass to b-link (if required)\n\n\nvar computeLinkProps = function computeLinkProps(props) {\n  return isLink(props) ? pluckProps(linkPropKeys, props) : null;\n}; // Compute the attributes for a button\n\n\nvar computeAttrs = function computeAttrs(props, data) {\n  var button = isButton(props);\n  var link = isLink(props);\n  var toggle = isToggle(props);\n  var nonStdTag = isNonStandardTag(props);\n  var role = data.attrs && data.attrs['role'] ? data.attrs['role'] : null;\n  var tabindex = data.attrs ? data.attrs['tabindex'] : null;\n\n  if (nonStdTag) {\n    tabindex = '0';\n  }\n\n  return {\n    // Type only used for \"real\" buttons\n    type: button && !link ? props.type : null,\n    // Disabled only set on \"real\" buttons\n    disabled: button ? props.disabled : null,\n    // We add a role of button when the tag is not a link or button for ARIA.\n    // Don't bork any role provided in data.attrs when isLink or isButton\n    role: nonStdTag ? 'button' : role,\n    // We set the aria-disabled state for non-standard tags\n    'aria-disabled': nonStdTag ? String(props.disabled) : null,\n    // For toggles, we need to set the pressed state for ARIA\n    'aria-pressed': toggle ? String(props.pressed) : null,\n    // autocomplete off is needed in toggle mode to prevent some browsers from\n    // remembering the previous setting when using the back button.\n    autocomplete: toggle ? 'off' : null,\n    // Tab index is used when the component is not a button.\n    // Links are tabbable, but don't allow disabled, while non buttons or links\n    // are not tabbable, so we mimic that functionality by disabling tabbing\n    // when disabled, and adding a tabindex of '0' to non buttons or non links.\n    tabindex: props.disabled && !button ? '-1' : tabindex\n  };\n}; // @vue/component\n\n\nexport var BButton =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref2) {\n    var props = _ref2.props,\n        data = _ref2.data,\n        listeners = _ref2.listeners,\n        children = _ref2.children;\n    var toggle = isToggle(props);\n    var link = isLink(props);\n    var on = {\n      click: function click(evt) {\n        /* istanbul ignore if: blink/button disabled should handle this */\n        if (props.disabled && isEvent(evt)) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        } else if (toggle && listeners && listeners['update:pressed']) {\n          // Send .sync updates to any \"pressed\" prop (if .sync listeners)\n          // Concat will normalize the value to an array\n          // without double wrapping an array value in an array.\n          concat(listeners['update:pressed']).forEach(function (fn) {\n            if (isFunction(fn)) {\n              fn(!props.pressed);\n            }\n          });\n        }\n      }\n    };\n\n    if (toggle) {\n      on.focusin = handleFocus;\n      on.focusout = handleFocus;\n    }\n\n    var componentData = {\n      staticClass: 'btn',\n      class: computeClass(props),\n      props: computeLinkProps(props),\n      attrs: computeAttrs(props, data),\n      on: on\n    };\n    return h(link ? BLink : props.tag, mergeData(data, componentData), children);\n  }\n});\nexport default BButton;"]},"metadata":{},"sourceType":"module"}