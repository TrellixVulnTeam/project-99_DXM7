{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.array.join.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport stableSort from '../../../utils/stable-sort';\nimport startCase from '../../../utils/startcase';\nimport { arrayIncludes } from '../../../utils/array';\nimport { isFunction, isUndefinedOrNull } from '../../../utils/inspect';\nimport defaultSortCompare from './default-sort-compare';\nexport default {\n  props: {\n    sortBy: {\n      type: String,\n      default: ''\n    },\n    sortDesc: {\n      // TODO: Make this tri-state: true, false, null\n      type: Boolean,\n      default: false\n    },\n    sortDirection: {\n      // This prop is named incorrectly\n      // It should be `initialSortDirection` as it is a bit misleading\n      // (not to mention it screws up the ARIA label on the headers)\n      type: String,\n      default: 'asc',\n      validator: function validator(direction) {\n        return arrayIncludes(['asc', 'desc', 'last'], direction);\n      }\n    },\n    sortCompare: {\n      type: Function,\n      default: null\n    },\n    sortCompareOptions: {\n      // Supported localCompare options, see `options` section of:\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\n      type: Object,\n      default: function _default() {\n        return {\n          numeric: true\n        };\n      }\n    },\n    sortCompareLocale: {\n      // String: locale code\n      // Array: array of Locale strings\n      type: [String, Array] // default: undefined\n\n    },\n    sortNullLast: {\n      // Sort null and undefined to appear last\n      type: Boolean,\n      default: false\n    },\n    noSortReset: {\n      // Another prop that should have had a better name.\n      // It should be noSortClear (on non-sortable headers).\n      // We will need to make sure the documentation is clear on what\n      // this prop does (as well as in the code for future reference)\n      type: Boolean,\n      default: false\n    },\n    labelSortAsc: {\n      type: String,\n      default: 'Click to sort Ascending'\n    },\n    labelSortDesc: {\n      type: String,\n      default: 'Click to sort Descending'\n    },\n    labelSortClear: {\n      type: String,\n      default: 'Click to clear sorting'\n    },\n    noLocalSorting: {\n      type: Boolean,\n      default: false\n    },\n    noFooterSorting: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      localSortBy: this.sortBy || '',\n      localSortDesc: this.sortDesc || false\n    };\n  },\n  computed: {\n    localSorting: function localSorting() {\n      return this.hasProvider ? !!this.noProviderSorting : !this.noLocalSorting;\n    },\n    isSortable: function isSortable() {\n      return this.computedFields.some(function (f) {\n        return f.sortable;\n      });\n    },\n    sortedItems: function sortedItems() {\n      // Sorts the filtered items and returns a new array of the sorted items\n      // or the original items array if not sorted.\n      var items = (this.filteredItems || this.localItems || []).slice();\n      var sortBy = this.localSortBy;\n      var sortDesc = this.localSortDesc;\n      var sortCompare = this.sortCompare;\n      var localSorting = this.localSorting;\n\n      var sortOptions = _objectSpread({}, this.sortCompareOptions, {\n        usage: 'sort'\n      });\n\n      var sortLocale = this.sortCompareLocale || undefined;\n      var nullLast = this.sortNullLast;\n\n      if (sortBy && localSorting) {\n        var field = this.computedFieldsObj[sortBy];\n        var formatter = field && field.sortByFormatted ? this.getFieldFormatter(sortBy) : undefined; // stableSort returns a new array, and leaves the original array intact\n\n        return stableSort(items, function (a, b) {\n          var result = null;\n\n          if (isFunction(sortCompare)) {\n            // Call user provided sortCompare routine\n            result = sortCompare(a, b, sortBy, sortDesc, formatter, sortOptions, sortLocale);\n          }\n\n          if (isUndefinedOrNull(result) || result === false) {\n            // Fallback to built-in defaultSortCompare if sortCompare\n            // is not defined or returns null/false\n            result = defaultSortCompare(a, b, sortBy, sortDesc, formatter, sortOptions, sortLocale, nullLast);\n          } // Negate result if sorting in descending order\n\n\n          return (result || 0) * (sortDesc ? -1 : 1);\n        });\n      }\n\n      return items;\n    }\n  },\n  watch: {\n    isSortable: function isSortable(newVal, oldVal)\n    /* istanbul ignore next: pain in the butt to test */\n    {\n      if (newVal) {\n        if (this.isSortable) {\n          this.$on('head-clicked', this.handleSort);\n        }\n      } else {\n        this.$off('head-clicked', this.handleSort);\n      }\n    },\n    sortDesc: function sortDesc(newVal, oldVal) {\n      if (newVal === this.localSortDesc) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.localSortDesc = newVal || false;\n    },\n    sortBy: function sortBy(newVal, oldVal) {\n      if (newVal === this.localSortBy) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.localSortBy = newVal || '';\n    },\n    // Update .sync props\n    localSortDesc: function localSortDesc(newVal, oldVal) {\n      // Emit update to sort-desc.sync\n      if (newVal !== oldVal) {\n        this.$emit('update:sortDesc', newVal);\n      }\n    },\n    localSortBy: function localSortBy(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.$emit('update:sortBy', newVal);\n      }\n    }\n  },\n  created: function created() {\n    if (this.isSortable) {\n      this.$on('head-clicked', this.handleSort);\n    }\n  },\n  methods: {\n    // Handlers\n    // Need to move from thead-mixin\n    handleSort: function handleSort(key, field, evt, isFoot) {\n      var _this = this;\n\n      if (!this.isSortable) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (isFoot && this.noFooterSorting) {\n        return;\n      } // TODO: make this tri-state sorting\n      // cycle desc => asc => none => desc => ...\n\n\n      var sortChanged = false;\n\n      var toggleLocalSortDesc = function toggleLocalSortDesc() {\n        var sortDirection = field.sortDirection || _this.sortDirection;\n\n        if (sortDirection === 'asc') {\n          _this.localSortDesc = false;\n        } else if (sortDirection === 'desc') {\n          _this.localSortDesc = true;\n        } else {// sortDirection === 'last'\n          // Leave at last sort direction from previous column\n        }\n      };\n\n      if (field.sortable) {\n        if (key === this.localSortBy) {\n          // Change sorting direction on current column\n          this.localSortDesc = !this.localSortDesc;\n        } else {\n          // Start sorting this column ascending\n          this.localSortBy = key; // this.localSortDesc = false\n\n          toggleLocalSortDesc();\n        }\n\n        sortChanged = true;\n      } else if (this.localSortBy && !this.noSortReset) {\n        this.localSortBy = '';\n        toggleLocalSortDesc();\n        sortChanged = true;\n      }\n\n      if (sortChanged) {\n        // Sorting parameters changed\n        this.$emit('sort-changed', this.context);\n      }\n    },\n    // methods to compute classes and attrs for thead>th cells\n    sortTheadThClasses: function sortTheadThClasses(key, field, isFoot) {\n      return {// No Classes for sorting currently...\n        // All styles targeted using aria-* attrs\n      };\n    },\n    sortTheadThAttrs: function sortTheadThAttrs(key, field, isFoot) {\n      if (!this.isSortable || isFoot && this.noFooterSorting) {\n        // No attributes if not a sortable table\n        return {};\n      }\n\n      var sortable = field.sortable;\n      var ariaLabel = '';\n\n      if ((!field.label || !field.label.trim()) && !field.headerTitle) {\n        // In case field's label and title are empty/blank, we need to\n        // add a hint about what the column is about for non-sighted users.\n        // This is duplicated code from tbody-row mixin, but we need it\n        // here as well, since we overwrite the original aria-label.\n\n        /* istanbul ignore next */\n        ariaLabel = startCase(key);\n      } // The correctness of these labels is very important for screen-reader users.\n\n\n      var ariaLabelSorting = '';\n\n      if (sortable) {\n        if (this.localSortBy === key) {\n          // currently sorted sortable column.\n          ariaLabelSorting = this.localSortDesc ? this.labelSortAsc : this.labelSortDesc;\n        } else {\n          // Not currently sorted sortable column.\n          // Not using nested ternary's here for clarity/readability\n          // Default for ariaLabel\n          ariaLabelSorting = this.localSortDesc ? this.labelSortDesc : this.labelSortAsc; // Handle sortDirection setting\n\n          var sortDirection = this.sortDirection || field.sortDirection;\n\n          if (sortDirection === 'asc') {\n            ariaLabelSorting = this.labelSortAsc;\n          } else if (sortDirection === 'desc') {\n            ariaLabelSorting = this.labelSortDesc;\n          }\n        }\n      } else if (!this.noSortReset) {\n        // Non sortable column\n        ariaLabelSorting = this.localSortBy ? this.labelSortClear : '';\n      } // Assemble the aria-label attribute value\n\n\n      ariaLabel = [ariaLabel.trim(), ariaLabelSorting.trim()].filter(Boolean).join(': '); // Assemble the aria-sort attribute value\n\n      var ariaSort = sortable && this.localSortBy === key ? this.localSortDesc ? 'descending' : 'ascending' : sortable ? 'none' : null; // Return the attributes\n      // (All the above just to get these two values)\n\n      return {\n        'aria-label': ariaLabel || null,\n        'aria-sort': ariaSort\n      };\n    }\n  }\n};","map":{"version":3,"sources":["D:/UEK/ecommercevuefirestore2304/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","stableSort","startCase","arrayIncludes","isFunction","isUndefinedOrNull","defaultSortCompare","props","sortBy","type","String","default","sortDesc","Boolean","sortDirection","validator","direction","sortCompare","Function","sortCompareOptions","_default","numeric","sortCompareLocale","Array","sortNullLast","noSortReset","labelSortAsc","labelSortDesc","labelSortClear","noLocalSorting","noFooterSorting","data","localSortBy","localSortDesc","computed","localSorting","hasProvider","noProviderSorting","isSortable","computedFields","some","f","sortable","sortedItems","items","filteredItems","localItems","slice","sortOptions","usage","sortLocale","undefined","nullLast","field","computedFieldsObj","formatter","sortByFormatted","getFieldFormatter","a","b","result","watch","newVal","oldVal","$on","handleSort","$off","$emit","created","methods","evt","isFoot","_this","sortChanged","toggleLocalSortDesc","context","sortTheadThClasses","sortTheadThAttrs","ariaLabel","label","trim","headerTitle","ariaLabelSorting","join","ariaSort"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport stableSort from '../../../utils/stable-sort';\nimport startCase from '../../../utils/startcase';\nimport { arrayIncludes } from '../../../utils/array';\nimport { isFunction, isUndefinedOrNull } from '../../../utils/inspect';\nimport defaultSortCompare from './default-sort-compare';\nexport default {\n  props: {\n    sortBy: {\n      type: String,\n      default: ''\n    },\n    sortDesc: {\n      // TODO: Make this tri-state: true, false, null\n      type: Boolean,\n      default: false\n    },\n    sortDirection: {\n      // This prop is named incorrectly\n      // It should be `initialSortDirection` as it is a bit misleading\n      // (not to mention it screws up the ARIA label on the headers)\n      type: String,\n      default: 'asc',\n      validator: function validator(direction) {\n        return arrayIncludes(['asc', 'desc', 'last'], direction);\n      }\n    },\n    sortCompare: {\n      type: Function,\n      default: null\n    },\n    sortCompareOptions: {\n      // Supported localCompare options, see `options` section of:\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\n      type: Object,\n      default: function _default() {\n        return {\n          numeric: true\n        };\n      }\n    },\n    sortCompareLocale: {\n      // String: locale code\n      // Array: array of Locale strings\n      type: [String, Array] // default: undefined\n\n    },\n    sortNullLast: {\n      // Sort null and undefined to appear last\n      type: Boolean,\n      default: false\n    },\n    noSortReset: {\n      // Another prop that should have had a better name.\n      // It should be noSortClear (on non-sortable headers).\n      // We will need to make sure the documentation is clear on what\n      // this prop does (as well as in the code for future reference)\n      type: Boolean,\n      default: false\n    },\n    labelSortAsc: {\n      type: String,\n      default: 'Click to sort Ascending'\n    },\n    labelSortDesc: {\n      type: String,\n      default: 'Click to sort Descending'\n    },\n    labelSortClear: {\n      type: String,\n      default: 'Click to clear sorting'\n    },\n    noLocalSorting: {\n      type: Boolean,\n      default: false\n    },\n    noFooterSorting: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      localSortBy: this.sortBy || '',\n      localSortDesc: this.sortDesc || false\n    };\n  },\n  computed: {\n    localSorting: function localSorting() {\n      return this.hasProvider ? !!this.noProviderSorting : !this.noLocalSorting;\n    },\n    isSortable: function isSortable() {\n      return this.computedFields.some(function (f) {\n        return f.sortable;\n      });\n    },\n    sortedItems: function sortedItems() {\n      // Sorts the filtered items and returns a new array of the sorted items\n      // or the original items array if not sorted.\n      var items = (this.filteredItems || this.localItems || []).slice();\n      var sortBy = this.localSortBy;\n      var sortDesc = this.localSortDesc;\n      var sortCompare = this.sortCompare;\n      var localSorting = this.localSorting;\n\n      var sortOptions = _objectSpread({}, this.sortCompareOptions, {\n        usage: 'sort'\n      });\n\n      var sortLocale = this.sortCompareLocale || undefined;\n      var nullLast = this.sortNullLast;\n\n      if (sortBy && localSorting) {\n        var field = this.computedFieldsObj[sortBy];\n        var formatter = field && field.sortByFormatted ? this.getFieldFormatter(sortBy) : undefined; // stableSort returns a new array, and leaves the original array intact\n\n        return stableSort(items, function (a, b) {\n          var result = null;\n\n          if (isFunction(sortCompare)) {\n            // Call user provided sortCompare routine\n            result = sortCompare(a, b, sortBy, sortDesc, formatter, sortOptions, sortLocale);\n          }\n\n          if (isUndefinedOrNull(result) || result === false) {\n            // Fallback to built-in defaultSortCompare if sortCompare\n            // is not defined or returns null/false\n            result = defaultSortCompare(a, b, sortBy, sortDesc, formatter, sortOptions, sortLocale, nullLast);\n          } // Negate result if sorting in descending order\n\n\n          return (result || 0) * (sortDesc ? -1 : 1);\n        });\n      }\n\n      return items;\n    }\n  },\n  watch: {\n    isSortable: function isSortable(newVal, oldVal)\n    /* istanbul ignore next: pain in the butt to test */\n    {\n      if (newVal) {\n        if (this.isSortable) {\n          this.$on('head-clicked', this.handleSort);\n        }\n      } else {\n        this.$off('head-clicked', this.handleSort);\n      }\n    },\n    sortDesc: function sortDesc(newVal, oldVal) {\n      if (newVal === this.localSortDesc) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.localSortDesc = newVal || false;\n    },\n    sortBy: function sortBy(newVal, oldVal) {\n      if (newVal === this.localSortBy) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.localSortBy = newVal || '';\n    },\n    // Update .sync props\n    localSortDesc: function localSortDesc(newVal, oldVal) {\n      // Emit update to sort-desc.sync\n      if (newVal !== oldVal) {\n        this.$emit('update:sortDesc', newVal);\n      }\n    },\n    localSortBy: function localSortBy(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.$emit('update:sortBy', newVal);\n      }\n    }\n  },\n  created: function created() {\n    if (this.isSortable) {\n      this.$on('head-clicked', this.handleSort);\n    }\n  },\n  methods: {\n    // Handlers\n    // Need to move from thead-mixin\n    handleSort: function handleSort(key, field, evt, isFoot) {\n      var _this = this;\n\n      if (!this.isSortable) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (isFoot && this.noFooterSorting) {\n        return;\n      } // TODO: make this tri-state sorting\n      // cycle desc => asc => none => desc => ...\n\n\n      var sortChanged = false;\n\n      var toggleLocalSortDesc = function toggleLocalSortDesc() {\n        var sortDirection = field.sortDirection || _this.sortDirection;\n\n        if (sortDirection === 'asc') {\n          _this.localSortDesc = false;\n        } else if (sortDirection === 'desc') {\n          _this.localSortDesc = true;\n        } else {// sortDirection === 'last'\n          // Leave at last sort direction from previous column\n        }\n      };\n\n      if (field.sortable) {\n        if (key === this.localSortBy) {\n          // Change sorting direction on current column\n          this.localSortDesc = !this.localSortDesc;\n        } else {\n          // Start sorting this column ascending\n          this.localSortBy = key; // this.localSortDesc = false\n\n          toggleLocalSortDesc();\n        }\n\n        sortChanged = true;\n      } else if (this.localSortBy && !this.noSortReset) {\n        this.localSortBy = '';\n        toggleLocalSortDesc();\n        sortChanged = true;\n      }\n\n      if (sortChanged) {\n        // Sorting parameters changed\n        this.$emit('sort-changed', this.context);\n      }\n    },\n    // methods to compute classes and attrs for thead>th cells\n    sortTheadThClasses: function sortTheadThClasses(key, field, isFoot) {\n      return {// No Classes for sorting currently...\n        // All styles targeted using aria-* attrs\n      };\n    },\n    sortTheadThAttrs: function sortTheadThAttrs(key, field, isFoot) {\n      if (!this.isSortable || isFoot && this.noFooterSorting) {\n        // No attributes if not a sortable table\n        return {};\n      }\n\n      var sortable = field.sortable;\n      var ariaLabel = '';\n\n      if ((!field.label || !field.label.trim()) && !field.headerTitle) {\n        // In case field's label and title are empty/blank, we need to\n        // add a hint about what the column is about for non-sighted users.\n        // This is duplicated code from tbody-row mixin, but we need it\n        // here as well, since we overwrite the original aria-label.\n\n        /* istanbul ignore next */\n        ariaLabel = startCase(key);\n      } // The correctness of these labels is very important for screen-reader users.\n\n\n      var ariaLabelSorting = '';\n\n      if (sortable) {\n        if (this.localSortBy === key) {\n          // currently sorted sortable column.\n          ariaLabelSorting = this.localSortDesc ? this.labelSortAsc : this.labelSortDesc;\n        } else {\n          // Not currently sorted sortable column.\n          // Not using nested ternary's here for clarity/readability\n          // Default for ariaLabel\n          ariaLabelSorting = this.localSortDesc ? this.labelSortDesc : this.labelSortAsc; // Handle sortDirection setting\n\n          var sortDirection = this.sortDirection || field.sortDirection;\n\n          if (sortDirection === 'asc') {\n            ariaLabelSorting = this.labelSortAsc;\n          } else if (sortDirection === 'desc') {\n            ariaLabelSorting = this.labelSortDesc;\n          }\n        }\n      } else if (!this.noSortReset) {\n        // Non sortable column\n        ariaLabelSorting = this.localSortBy ? this.labelSortClear : '';\n      } // Assemble the aria-label attribute value\n\n\n      ariaLabel = [ariaLabel.trim(), ariaLabelSorting.trim()].filter(Boolean).join(': '); // Assemble the aria-sort attribute value\n\n      var ariaSort = sortable && this.localSortBy === key ? this.localSortDesc ? 'descending' : 'ascending' : sortable ? 'none' : null; // Return the attributes\n      // (All the above just to get these two values)\n\n      return {\n        'aria-label': ariaLabel || null,\n        'aria-sort': ariaSort\n      };\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}