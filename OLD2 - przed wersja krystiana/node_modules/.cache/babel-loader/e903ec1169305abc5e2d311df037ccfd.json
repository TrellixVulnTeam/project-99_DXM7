{"ast":null,"code":"import _classCallCheck from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/UEK/project-99/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport firebase from '@firebase/app-compat';\nimport { httpsCallable as _httpsCallable, connectFunctionsEmulator } from '@firebase/functions';\nimport { FirebaseError } from '@firebase/util';\nimport { Component } from '@firebase/component';\nvar name = \"@firebase/functions-compat\";\nvar version = \"0.1.12\";\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar FunctionsService = /*#__PURE__*/function () {\n  function FunctionsService(app, _delegate) {\n    _classCallCheck(this, FunctionsService);\n\n    this.app = app;\n    this._delegate = _delegate;\n    this._region = this._delegate.region;\n    this._customDomain = this._delegate.customDomain;\n  }\n\n  _createClass(FunctionsService, [{\n    key: \"httpsCallable\",\n    value: function httpsCallable(name, options) {\n      return _httpsCallable(this._delegate, name, options);\n    }\n    /**\r\n     * Deprecated in pre-modularized repo, does not exist in modularized\r\n     * functions package, need to convert to \"host\" and \"port\" args that\r\n     * `useFunctionsEmulatorExp` takes.\r\n     * @deprecated\r\n     */\n\n  }, {\n    key: \"useFunctionsEmulator\",\n    value: function useFunctionsEmulator(origin) {\n      var match = origin.match('[a-zA-Z]+://([a-zA-Z0-9.-]+)(?::([0-9]+))?');\n\n      if (match == null) {\n        throw new FirebaseError('functions', 'No origin provided to useFunctionsEmulator()');\n      }\n\n      if (match[2] == null) {\n        throw new FirebaseError('functions', 'Port missing in origin provided to useFunctionsEmulator()');\n      }\n\n      return connectFunctionsEmulator(this._delegate, match[1], Number(match[2]));\n    }\n  }, {\n    key: \"useEmulator\",\n    value: function useEmulator(host, port) {\n      return connectFunctionsEmulator(this._delegate, host, port);\n    }\n  }]);\n\n  return FunctionsService;\n}();\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_REGION = 'us-central1';\n\nvar factory = function factory(container, _ref) {\n  var regionOrCustomDomain = _ref.instanceIdentifier;\n  // Dependencies\n  var app = container.getProvider('app-compat').getImmediate();\n  var functionsServiceExp = container.getProvider('functions').getImmediate({\n    identifier: regionOrCustomDomain !== null && regionOrCustomDomain !== void 0 ? regionOrCustomDomain : DEFAULT_REGION\n  });\n  return new FunctionsService(app, functionsServiceExp);\n};\n\nfunction registerFunctions() {\n  var namespaceExports = {\n    Functions: FunctionsService\n  };\n  firebase.INTERNAL.registerComponent(new Component('functions-compat', factory, \"PUBLIC\"\n  /* PUBLIC */\n  ).setServiceProps(namespaceExports).setMultipleInstances(true));\n}\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nregisterFunctions();\nfirebase.registerVersion(name, version);","map":{"version":3,"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;IA2BaA,gB;AAYX,4BACSC,GADT,EAEWC,SAFX,EAEyC;AAAA;;AADhC;AACE;AAET,SAAKC,OAAL,GAAe,KAAKD,SAAL,CAAeE,MAA9B;AACA,SAAKC,aAAL,GAAqB,KAAKH,SAAL,CAAeI,YAApC;AACD;;;;WACD,uBAAcC,IAAd,EAA4BC,OAA5B,EAA0D;AACxD,aAAOC,cAAgB,CAAC,KAAKP,SAAN,EAAiBK,IAAjB,EAAuBC,OAAvB,CAAvB;AACD;;;;;;;;;;WAOD,8BAAqBE,MAArB,EAAmC;AACjC,UAAMC,KAAK,GAAGD,MAAM,CAACC,KAAP,CAAa,4CAAb,CAAd;;AACA,UAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,cAAM,IAAIC,aAAJ,CACJ,WADI,EAEJ,8CAFI,CAAN;AAID;;AACD,UAAID,KAAK,CAAC,CAAD,CAAL,IAAY,IAAhB,EAAsB;AACpB,cAAM,IAAIC,aAAJ,CACJ,WADI,EAEJ,2DAFI,CAAN;AAID;;AACD,aAAOC,wBAAuB,CAAC,KAAKX,SAAN,EAAiBS,KAAK,CAAC,CAAD,CAAtB,EAA2BG,MAAM,CAACH,KAAK,CAAC,CAAD,CAAN,CAAjC,CAA9B;AACD;;;WACD,qBAAYI,IAAZ,EAA0BC,IAA1B,EAAsC;AACpC,aAAOH,wBAAuB,CAAC,KAAKX,SAAN,EAAiBa,IAAjB,EAAuBC,IAAvB,CAA9B;AACD;;;;;ACzEH;;;;;;;;;;;;;;;;;;AA2BA,IAAMC,cAAc,GAAG,aAAvB;;AAEA,IAAMC,OAAO,GAAwC,SAA/CA,OAA+C,CACnDC,SADmD,QAEiB;AAAA,MAA9CC,oBAA8C,QAAlEC,kBAAkE;;AAGpE,MAAMpB,GAAG,GAAGkB,SAAS,CAACG,WAAV,CAAsB,YAAtB,EAAoCC,YAApC,EAAZ;AACA,MAAMC,mBAAmB,GAAGL,SAAS,CAACG,WAAV,CAAsB,WAAtB,EAAmCC,YAAnC,CAAgD;AAC1EE,cAAU,EAAEL,oBAAoB,SAApB,wBAAoB,WAApB,0BAAwBH;AADsC,GAAhD,CAA5B;AAIA,SAAO,IAAIjB,gBAAJ,CAAqBC,GAArB,EAA0BuB,mBAA1B,CAAP;AACD,CAXD;;SAagBE,oBAAiB;AAC/B,MAAMC,gBAAgB,GAAG;AACvBC,aAAS,EAAE5B;AADY,GAAzB;AAGC6B,UAA+B,CAACC,QAAhC,CAAyCC,iBAAzC,CACC,IAAIC,SAAJ,CAAc,kBAAd,EAAkCd,OAAlC,EAAyC;AAAA;AAAzC,IACGe,eADH,CACmBN,gBADnB,EAEGO,oBAFH,CAEwB,IAFxB,CADD;AAKH;ACnDA;;;;;;;;;;;;;;;;;;AAsBAR,iBAAiB;AACjBG,QAAQ,CAACM,eAAT,CAAyB5B,IAAzB,EAA+B6B,OAA/B","names":["FunctionsService","app","_delegate","_region","region","_customDomain","customDomain","name","options","httpsCallableExp","origin","match","FirebaseError","useFunctionsEmulatorExp","Number","host","port","DEFAULT_REGION","factory","container","regionOrCustomDomain","instanceIdentifier","getProvider","getImmediate","functionsServiceExp","identifier","registerFunctions","namespaceExports","Functions","firebase","INTERNAL","registerComponent","Component","setServiceProps","setMultipleInstances","registerVersion","version"],"sources":["../src/service.ts","../src/register.ts","../src/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseFunctions, HttpsCallable } from '@firebase/functions-types';\nimport {\n  httpsCallable as httpsCallableExp,\n  connectFunctionsEmulator as useFunctionsEmulatorExp,\n  HttpsCallableOptions,\n  Functions as FunctionsServiceExp\n} from '@firebase/functions';\nimport { FirebaseApp, _FirebaseService } from '@firebase/app-compat';\nimport { FirebaseError } from '@firebase/util';\n\nexport class FunctionsService implements FirebaseFunctions, _FirebaseService {\n  /**\n   * For testing.\n   * @internal\n   */\n  _region: string;\n  /**\n   * For testing.\n   * @internal\n   */\n  _customDomain: string | null;\n\n  constructor(\n    public app: FirebaseApp,\n    readonly _delegate: FunctionsServiceExp\n  ) {\n    this._region = this._delegate.region;\n    this._customDomain = this._delegate.customDomain;\n  }\n  httpsCallable(name: string, options?: HttpsCallableOptions): HttpsCallable {\n    return httpsCallableExp(this._delegate, name, options);\n  }\n  /**\n   * Deprecated in pre-modularized repo, does not exist in modularized\n   * functions package, need to convert to \"host\" and \"port\" args that\n   * `useFunctionsEmulatorExp` takes.\n   * @deprecated\n   */\n  useFunctionsEmulator(origin: string): void {\n    const match = origin.match('[a-zA-Z]+://([a-zA-Z0-9.-]+)(?::([0-9]+))?');\n    if (match == null) {\n      throw new FirebaseError(\n        'functions',\n        'No origin provided to useFunctionsEmulator()'\n      );\n    }\n    if (match[2] == null) {\n      throw new FirebaseError(\n        'functions',\n        'Port missing in origin provided to useFunctionsEmulator()'\n      );\n    }\n    return useFunctionsEmulatorExp(this._delegate, match[1], Number(match[2]));\n  }\n  useEmulator(host: string, port: number): void {\n    return useFunctionsEmulatorExp(this._delegate, host, port);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\nimport { FunctionsService } from './service';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer,\n  InstanceFactoryOptions\n} from '@firebase/component';\n\nconst DEFAULT_REGION = 'us-central1';\n\nconst factory: InstanceFactory<'functions-compat'> = (\n  container: ComponentContainer,\n  { instanceIdentifier: regionOrCustomDomain }: InstanceFactoryOptions\n) => {\n  // Dependencies\n  const app = container.getProvider('app-compat').getImmediate();\n  const functionsServiceExp = container.getProvider('functions').getImmediate({\n    identifier: regionOrCustomDomain ?? DEFAULT_REGION\n  });\n\n  return new FunctionsService(app, functionsServiceExp);\n};\n\nexport function registerFunctions(): void {\n  const namespaceExports = {\n    Functions: FunctionsService\n  };\n  (firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component('functions-compat', factory, ComponentType.PUBLIC)\n      .setServiceProps(namespaceExports)\n      .setMultipleInstances(true)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport firebase from '@firebase/app-compat';\nimport { name, version } from '../package.json';\nimport { registerFunctions } from './register';\nimport * as types from '@firebase/functions-types';\n\nregisterFunctions();\nfirebase.registerVersion(name, version);\n\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    functions: {\n      (app?: FirebaseApp): types.FirebaseFunctions;\n      Functions: typeof types.FirebaseFunctions;\n    };\n  }\n  interface FirebaseApp {\n    functions(regionOrCustomDomain?: string): types.FirebaseFunctions;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}