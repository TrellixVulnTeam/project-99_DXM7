{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptor.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.get-own-property-descriptors.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.concat.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Vue from '../../../utils/vue';\nimport toString from '../../../utils/to-string';\nimport { isUndefinedOrNull } from '../../../utils/inspect';\nimport normalizeSlotMixin from '../../../mixins/normalize-slot';\nvar digitsRx = /^\\d+$/; // Parse a rowspan or colspan into a digit (or null if < 1 or NaN)\n\nvar parseSpan = function parseSpan(val) {\n  val = parseInt(val, 10);\n  return digitsRx.test(String(val)) && val > 0 ? val : null;\n};\n/* istanbul ignore next */\n\n\nvar spanValidator = function spanValidator(val) {\n  return isUndefinedOrNull(val) || parseSpan(val) > 0;\n};\n\nexport var props = {\n  header: {\n    type: Boolean,\n    default: false\n  },\n  variant: {\n    type: String,\n    default: null\n  },\n  colspan: {\n    type: [Number, String],\n    default: null,\n    validator: spanValidator\n  },\n  rowspan: {\n    type: [Number, String],\n    default: null,\n    validator: spanValidator\n  },\n  stackedHeading: {\n    type: String,\n    default: null\n  },\n  stickyColumn: {\n    type: Boolean,\n    default: false\n  } // @vue/component\n\n};\nexport var BTableCell = /*#__PURE__*/Vue.extend({\n  name: 'BTableCell',\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  inject: {\n    // Injections for feature / attribute detection\n    bvTable: {\n      default: null\n    },\n    bvTableTbody: {\n      default: null\n    },\n    bvTableThead: {\n      default: null\n    },\n    bvTableTfoot: {\n      default: null\n    },\n    bvTableTr: {\n      default: null\n    }\n  },\n  props: props,\n  computed: {\n    isDark: function isDark() {\n      return this.bvTable && this.bvTable.dark;\n    },\n    isStacked: function isStacked() {\n      return this.bvTable && this.bvTable.isStacked;\n    },\n    isStackedCell: function isStackedCell() {\n      // We only support stacked-heading in tbody in stacked mode\n      return this.isStacked && this.bvTableTbody;\n    },\n    isResponsive: function isResponsive() {\n      return this.bvTable && this.bvTable.isResponsive && !this.isStacked;\n    },\n    isStickyHeader: function isStickyHeader() {\n      // Needed to handle header background classes, due to lack of\n      // bg color inheritance with Bootstrap v4 tabl css\n      // Sticky headers only apply to cells in table `thead`\n      return !this.isStacked && this.bvTable && this.bvTableThead && this.bvTableTr && this.bvTable.stickyHeader;\n    },\n    isStickyColumn: function isStickyColumn() {\n      // Needed to handle header background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table css.\n      // Sticky column cells are only available in responsive\n      // mode (horzontal scrolling) or when sticky header mode.\n      // Applies to cells in `thead`, `tbody` and `tfoot`\n      return (this.isResponsive || this.isStickyHeader) && this.stickyColumn && !this.isStacked && this.bvTable && this.bvTableTr;\n    },\n    cellClasses: function cellClasses() {\n      // We use computed props here for improved performance by caching\n      // the results of the string interpolation\n      var variant = this.variant;\n\n      if (!variant && this.isStickyHeader && !this.bvTableThead.headVariant || !variant && this.isStickyColumn) {\n        // Needed for stickyheader mode as Bootstrap v4 table cells do\n        // not inherit parent's background-color. Boo!\n        variant = this.bvTableTr.variant || this.bvTable.tableVariant || 'b-table-default';\n      }\n\n      return [variant ? \"\".concat(this.isDark ? 'bg' : 'table', \"-\").concat(variant) : null, this.isStickyColumn ? 'b-table-sticky-column' : null];\n    },\n    computedColspan: function computedColspan() {\n      return parseSpan(this.colspan);\n    },\n    computedRowspan: function computedRowspan() {\n      return parseSpan(this.rowspan);\n    },\n    cellAttrs: function cellAttrs() {\n      // We use computed props here for improved performance by caching\n      // the results of the object spread (Object.assign)\n      var headOrFoot = this.bvTableThead || this.bvTableTfoot; // Make sure col/rowspan's are > 0 or null\n\n      var colspan = this.computedColspan;\n      var rowspan = this.computedRowspan; // Default role and scope\n\n      var role = 'cell';\n      var scope = null; // Compute role and scope\n      // We only add scopes with an explicit span of 1 or greater\n\n      if (headOrFoot) {\n        // Header or footer cells\n        role = 'columnheader';\n        scope = colspan > 0 ? 'colspan' : 'col';\n      } else if (this.header) {\n        // th's in tbody\n        role = 'rowheader';\n        scope = rowspan > 0 ? 'rowgroup' : 'row';\n      }\n\n      return _objectSpread({\n        colspan: colspan,\n        rowspan: rowspan,\n        role: role,\n        scope: scope\n      }, this.$attrs, {\n        // Add in the stacked cell label data-attribute if in\n        // stacked mode (if a stacked heading label is provided)\n        'data-label': this.isStackedCell && !isUndefinedOrNull(this.stackedHeading) ? toString(this.stackedHeading) : null\n      });\n    }\n  },\n  render: function render(h) {\n    var content = [this.normalizeSlot('default')];\n    return h(this.header ? 'th' : 'td', {\n      class: this.cellClasses,\n      attrs: this.cellAttrs,\n      // Transfer any native listeners\n      on: this.$listeners\n    }, [this.isStackedCell ? h('div', {}, [content]) : content]);\n  }\n});","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/table/helpers/table-cell.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","Vue","toString","isUndefinedOrNull","normalizeSlotMixin","digitsRx","parseSpan","val","parseInt","test","String","spanValidator","props","header","type","Boolean","default","variant","colspan","Number","validator","rowspan","stackedHeading","stickyColumn","BTableCell","extend","name","mixins","inheritAttrs","inject","bvTable","bvTableTbody","bvTableThead","bvTableTfoot","bvTableTr","computed","isDark","dark","isStacked","isStackedCell","isResponsive","isStickyHeader","stickyHeader","isStickyColumn","cellClasses","headVariant","tableVariant","concat","computedColspan","computedRowspan","cellAttrs","headOrFoot","role","scope","$attrs","render","h","content","normalizeSlot","class","attrs","on","$listeners"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from '../../../utils/vue';\nimport toString from '../../../utils/to-string';\nimport { isUndefinedOrNull } from '../../../utils/inspect';\nimport normalizeSlotMixin from '../../../mixins/normalize-slot';\nvar digitsRx = /^\\d+$/; // Parse a rowspan or colspan into a digit (or null if < 1 or NaN)\n\nvar parseSpan = function parseSpan(val) {\n  val = parseInt(val, 10);\n  return digitsRx.test(String(val)) && val > 0 ? val : null;\n};\n/* istanbul ignore next */\n\n\nvar spanValidator = function spanValidator(val) {\n  return isUndefinedOrNull(val) || parseSpan(val) > 0;\n};\n\nexport var props = {\n  header: {\n    type: Boolean,\n    default: false\n  },\n  variant: {\n    type: String,\n    default: null\n  },\n  colspan: {\n    type: [Number, String],\n    default: null,\n    validator: spanValidator\n  },\n  rowspan: {\n    type: [Number, String],\n    default: null,\n    validator: spanValidator\n  },\n  stackedHeading: {\n    type: String,\n    default: null\n  },\n  stickyColumn: {\n    type: Boolean,\n    default: false\n  } // @vue/component\n\n};\nexport var BTableCell =\n/*#__PURE__*/\nVue.extend({\n  name: 'BTableCell',\n  mixins: [normalizeSlotMixin],\n  inheritAttrs: false,\n  inject: {\n    // Injections for feature / attribute detection\n    bvTable: {\n      default: null\n    },\n    bvTableTbody: {\n      default: null\n    },\n    bvTableThead: {\n      default: null\n    },\n    bvTableTfoot: {\n      default: null\n    },\n    bvTableTr: {\n      default: null\n    }\n  },\n  props: props,\n  computed: {\n    isDark: function isDark() {\n      return this.bvTable && this.bvTable.dark;\n    },\n    isStacked: function isStacked() {\n      return this.bvTable && this.bvTable.isStacked;\n    },\n    isStackedCell: function isStackedCell() {\n      // We only support stacked-heading in tbody in stacked mode\n      return this.isStacked && this.bvTableTbody;\n    },\n    isResponsive: function isResponsive() {\n      return this.bvTable && this.bvTable.isResponsive && !this.isStacked;\n    },\n    isStickyHeader: function isStickyHeader() {\n      // Needed to handle header background classes, due to lack of\n      // bg color inheritance with Bootstrap v4 tabl css\n      // Sticky headers only apply to cells in table `thead`\n      return !this.isStacked && this.bvTable && this.bvTableThead && this.bvTableTr && this.bvTable.stickyHeader;\n    },\n    isStickyColumn: function isStickyColumn() {\n      // Needed to handle header background classes, due to lack of\n      // background color inheritance with Bootstrap v4 table css.\n      // Sticky column cells are only available in responsive\n      // mode (horzontal scrolling) or when sticky header mode.\n      // Applies to cells in `thead`, `tbody` and `tfoot`\n      return (this.isResponsive || this.isStickyHeader) && this.stickyColumn && !this.isStacked && this.bvTable && this.bvTableTr;\n    },\n    cellClasses: function cellClasses() {\n      // We use computed props here for improved performance by caching\n      // the results of the string interpolation\n      var variant = this.variant;\n\n      if (!variant && this.isStickyHeader && !this.bvTableThead.headVariant || !variant && this.isStickyColumn) {\n        // Needed for stickyheader mode as Bootstrap v4 table cells do\n        // not inherit parent's background-color. Boo!\n        variant = this.bvTableTr.variant || this.bvTable.tableVariant || 'b-table-default';\n      }\n\n      return [variant ? \"\".concat(this.isDark ? 'bg' : 'table', \"-\").concat(variant) : null, this.isStickyColumn ? 'b-table-sticky-column' : null];\n    },\n    computedColspan: function computedColspan() {\n      return parseSpan(this.colspan);\n    },\n    computedRowspan: function computedRowspan() {\n      return parseSpan(this.rowspan);\n    },\n    cellAttrs: function cellAttrs() {\n      // We use computed props here for improved performance by caching\n      // the results of the object spread (Object.assign)\n      var headOrFoot = this.bvTableThead || this.bvTableTfoot; // Make sure col/rowspan's are > 0 or null\n\n      var colspan = this.computedColspan;\n      var rowspan = this.computedRowspan; // Default role and scope\n\n      var role = 'cell';\n      var scope = null; // Compute role and scope\n      // We only add scopes with an explicit span of 1 or greater\n\n      if (headOrFoot) {\n        // Header or footer cells\n        role = 'columnheader';\n        scope = colspan > 0 ? 'colspan' : 'col';\n      } else if (this.header) {\n        // th's in tbody\n        role = 'rowheader';\n        scope = rowspan > 0 ? 'rowgroup' : 'row';\n      }\n\n      return _objectSpread({\n        colspan: colspan,\n        rowspan: rowspan,\n        role: role,\n        scope: scope\n      }, this.$attrs, {\n        // Add in the stacked cell label data-attribute if in\n        // stacked mode (if a stacked heading label is provided)\n        'data-label': this.isStackedCell && !isUndefinedOrNull(this.stackedHeading) ? toString(this.stackedHeading) : null\n      });\n    }\n  },\n  render: function render(h) {\n    var content = [this.normalizeSlot('default')];\n    return h(this.header ? 'th' : 'td', {\n      class: this.cellClasses,\n      attrs: this.cellAttrs,\n      // Transfer any native listeners\n      on: this.$listeners\n    }, [this.isStackedCell ? h('div', {}, [content]) : content]);\n  }\n});"]},"metadata":{},"sourceType":"module"}