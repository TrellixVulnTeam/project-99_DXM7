{"ast":null,"code":"import { isFunction } from '../../../utils/inspect';\nimport { BTr } from '../tr';\nvar slotName = 'bottom-row';\nexport default {\n  methods: {\n    renderBottomRow: function renderBottomRow() {\n      var h = this.$createElement; // Static bottom row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n\n      if (!this.hasNormalizedSlot(slotName) || this.stacked === true || this.stacked === '') {\n        return h();\n      }\n\n      var fields = this.computedFields;\n      return h(BTr, {\n        key: 'b-bottom-row',\n        staticClass: 'b-table-bottom-row',\n        class: [isFunction(this.tbodyTrClass) ? this.tbodyTrClass(null, 'row-bottom') : this.tbodyTrClass]\n      }, this.normalizeSlot(slotName, {\n        columns: fields.length,\n        fields: fields\n      }));\n    }\n  }\n};","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-bottom-row.js"],"names":["isFunction","BTr","slotName","methods","renderBottomRow","h","$createElement","hasNormalizedSlot","stacked","fields","computedFields","key","staticClass","class","tbodyTrClass","normalizeSlot","columns","length"],"mappings":"AAAA,SAASA,UAAT,QAA2B,wBAA3B;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,IAAIC,QAAQ,GAAG,YAAf;AACA,eAAe;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C,UAAIC,CAAC,GAAG,KAAKC,cAAb,CAD0C,CACb;AAC7B;;AAEA,UAAI,CAAC,KAAKC,iBAAL,CAAuBL,QAAvB,CAAD,IAAqC,KAAKM,OAAL,KAAiB,IAAtD,IAA8D,KAAKA,OAAL,KAAiB,EAAnF,EAAuF;AACrF,eAAOH,CAAC,EAAR;AACD;;AAED,UAAII,MAAM,GAAG,KAAKC,cAAlB;AACA,aAAOL,CAAC,CAACJ,GAAD,EAAM;AACZU,QAAAA,GAAG,EAAE,cADO;AAEZC,QAAAA,WAAW,EAAE,oBAFD;AAGZC,QAAAA,KAAK,EAAE,CAACb,UAAU,CAAC,KAAKc,YAAN,CAAV,GAAgC,KAAKA,YAAL,CAAkB,IAAlB,EAAwB,YAAxB,CAAhC,GAAwE,KAAKA,YAA9E;AAHK,OAAN,EAIL,KAAKC,aAAL,CAAmBb,QAAnB,EAA6B;AAC9Bc,QAAAA,OAAO,EAAEP,MAAM,CAACQ,MADc;AAE9BR,QAAAA,MAAM,EAAEA;AAFsB,OAA7B,CAJK,CAAR;AAQD;AAlBM;AADI,CAAf","sourcesContent":["import { isFunction } from '../../../utils/inspect';\nimport { BTr } from '../tr';\nvar slotName = 'bottom-row';\nexport default {\n  methods: {\n    renderBottomRow: function renderBottomRow() {\n      var h = this.$createElement; // Static bottom row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n\n      if (!this.hasNormalizedSlot(slotName) || this.stacked === true || this.stacked === '') {\n        return h();\n      }\n\n      var fields = this.computedFields;\n      return h(BTr, {\n        key: 'b-bottom-row',\n        staticClass: 'b-table-bottom-row',\n        class: [isFunction(this.tbodyTrClass) ? this.tbodyTrClass(null, 'row-bottom') : this.tbodyTrClass]\n      }, this.normalizeSlot(slotName, {\n        columns: fields.length,\n        fields: fields\n      }));\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}