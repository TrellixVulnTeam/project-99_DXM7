{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport Vue from '../../utils/vue';\nimport { getComponentConfig } from '../../utils/config';\nimport { htmlOrText } from '../../utils/html';\nimport { isBoolean, isNumber } from '../../utils/inspect';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nvar NAME = 'BProgressBar'; // @vue/component\n\nexport var BProgressBar = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  mixins: [normalizeSlotMixin],\n  inject: {\n    bvProgress: {\n      default: function _default()\n      /* istanbul ignore next */\n      {\n        return {};\n      }\n    }\n  },\n  props: {\n    value: {\n      type: Number,\n      default: 0\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    labelHtml: {\n      type: String\n    },\n    // $parent (this.bvProgress) prop values may take precedence over the following props\n    // Which is why they are defaulted to null\n    max: {\n      type: Number,\n      default: null\n    },\n    precision: {\n      type: Number,\n      default: null\n    },\n    variant: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'variant');\n      }\n    },\n    striped: {\n      type: Boolean,\n      default: null\n    },\n    animated: {\n      type: Boolean,\n      default: null\n    },\n    showProgress: {\n      type: Boolean,\n      default: null\n    },\n    showValue: {\n      type: Boolean,\n      default: null\n    }\n  },\n  computed: {\n    progressBarClasses: function progressBarClasses() {\n      return [this.computedVariant ? \"bg-\".concat(this.computedVariant) : '', this.computedStriped || this.computedAnimated ? 'progress-bar-striped' : '', this.computedAnimated ? 'progress-bar-animated' : ''];\n    },\n    progressBarStyles: function progressBarStyles() {\n      return {\n        width: 100 * (this.value / this.computedMax) + '%'\n      };\n    },\n    computedProgress: function computedProgress() {\n      var p = Math.pow(10, this.computedPrecision);\n      return Math.round(100 * p * this.value / this.computedMax) / p;\n    },\n    computedMax: function computedMax() {\n      // Prefer our max over parent setting\n      return isNumber(this.max) ? this.max : this.bvProgress.max || 100;\n    },\n    computedVariant: function computedVariant() {\n      // Prefer our variant over parent setting\n      return this.variant || this.bvProgress.variant;\n    },\n    computedPrecision: function computedPrecision() {\n      // Prefer our precision over parent setting\n      return isNumber(this.precision) ? this.precision : this.bvProgress.precision || 0;\n    },\n    computedStriped: function computedStriped() {\n      // Prefer our striped over parent setting\n      return isBoolean(this.striped) ? this.striped : this.bvProgress.striped || false;\n    },\n    computedAnimated: function computedAnimated() {\n      // Prefer our animated over parent setting\n      return isBoolean(this.animated) ? this.animated : this.bvProgress.animated || false;\n    },\n    computedShowProgress: function computedShowProgress() {\n      // Prefer our showProgress over parent setting\n      return isBoolean(this.showProgress) ? this.showProgress : this.bvProgress.showProgress || false;\n    },\n    computedShowValue: function computedShowValue() {\n      // Prefer our showValue over parent setting\n      return isBoolean(this.showValue) ? this.showValue : this.bvProgress.showValue || false;\n    }\n  },\n  render: function render(h) {\n    var childNodes = h();\n\n    if (this.hasNormalizedSlot('default')) {\n      childNodes = this.normalizeSlot('default');\n    } else if (this.label || this.labelHtml) {\n      childNodes = h('span', {\n        domProps: htmlOrText(this.labelHtml, this.label)\n      });\n    } else if (this.computedShowProgress) {\n      childNodes = this.computedProgress.toFixed(this.computedPrecision);\n    } else if (this.computedShowValue) {\n      childNodes = this.value.toFixed(this.computedPrecision);\n    }\n\n    return h('div', {\n      staticClass: 'progress-bar',\n      class: this.progressBarClasses,\n      style: this.progressBarStyles,\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': '0',\n        'aria-valuemax': this.computedMax.toString(),\n        'aria-valuenow': this.value.toFixed(this.computedPrecision)\n      }\n    }, [childNodes]);\n  }\n});\nexport default BProgressBar;","map":{"version":3,"sources":["D:/UEK/ecommercevuefirestore2304/node_modules/bootstrap-vue/esm/components/progress/progress-bar.js"],"names":["Vue","getComponentConfig","htmlOrText","isBoolean","isNumber","normalizeSlotMixin","NAME","BProgressBar","extend","name","mixins","inject","bvProgress","default","_default","props","value","type","Number","label","String","labelHtml","max","precision","variant","striped","Boolean","animated","showProgress","showValue","computed","progressBarClasses","computedVariant","concat","computedStriped","computedAnimated","progressBarStyles","width","computedMax","computedProgress","p","Math","pow","computedPrecision","round","computedShowProgress","computedShowValue","render","h","childNodes","hasNormalizedSlot","normalizeSlot","domProps","toFixed","staticClass","class","style","attrs","role","toString"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,iBAAhB;AACA,SAASC,kBAAT,QAAmC,oBAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,qBAApC;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,IAAIC,IAAI,GAAG,cAAX,C,CAA2B;;AAE3B,OAAO,IAAIC,YAAY,GACvB,aACAP,GAAG,CAACQ,MAAJ,CAAW;AACTC,EAAAA,IAAI,EAAEH,IADG;AAETI,EAAAA,MAAM,EAAE,CAACL,kBAAD,CAFC;AAGTM,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE;AACVC,MAAAA,OAAO,EAAE,SAASC,QAAT;AACT;AACA;AACE,eAAO,EAAP;AACD;AALS;AADN,GAHC;AAYTC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEC,MADD;AAELL,MAAAA,OAAO,EAAE;AAFJ,KADF;AAKLM,IAAAA,KAAK,EAAE;AACLF,MAAAA,IAAI,EAAEG,MADD;AAELP,MAAAA,OAAO,EAAE;AAFJ,KALF;AASLQ,IAAAA,SAAS,EAAE;AACTJ,MAAAA,IAAI,EAAEG;AADG,KATN;AAYL;AACA;AACAE,IAAAA,GAAG,EAAE;AACHL,MAAAA,IAAI,EAAEC,MADH;AAEHL,MAAAA,OAAO,EAAE;AAFN,KAdA;AAkBLU,IAAAA,SAAS,EAAE;AACTN,MAAAA,IAAI,EAAEC,MADG;AAETL,MAAAA,OAAO,EAAE;AAFA,KAlBN;AAsBLW,IAAAA,OAAO,EAAE;AACPP,MAAAA,IAAI,EAAEG,MADC;AAEPP,MAAAA,OAAO,EAAE,SAASC,QAAT,GAAoB;AAC3B,eAAOb,kBAAkB,CAACK,IAAD,EAAO,SAAP,CAAzB;AACD;AAJM,KAtBJ;AA4BLmB,IAAAA,OAAO,EAAE;AACPR,MAAAA,IAAI,EAAES,OADC;AAEPb,MAAAA,OAAO,EAAE;AAFF,KA5BJ;AAgCLc,IAAAA,QAAQ,EAAE;AACRV,MAAAA,IAAI,EAAES,OADE;AAERb,MAAAA,OAAO,EAAE;AAFD,KAhCL;AAoCLe,IAAAA,YAAY,EAAE;AACZX,MAAAA,IAAI,EAAES,OADM;AAEZb,MAAAA,OAAO,EAAE;AAFG,KApCT;AAwCLgB,IAAAA,SAAS,EAAE;AACTZ,MAAAA,IAAI,EAAES,OADG;AAETb,MAAAA,OAAO,EAAE;AAFA;AAxCN,GAZE;AAyDTiB,EAAAA,QAAQ,EAAE;AACRC,IAAAA,kBAAkB,EAAE,SAASA,kBAAT,GAA8B;AAChD,aAAO,CAAC,KAAKC,eAAL,GAAuB,MAAMC,MAAN,CAAa,KAAKD,eAAlB,CAAvB,GAA4D,EAA7D,EAAiE,KAAKE,eAAL,IAAwB,KAAKC,gBAA7B,GAAgD,sBAAhD,GAAyE,EAA1I,EAA8I,KAAKA,gBAAL,GAAwB,uBAAxB,GAAkD,EAAhM,CAAP;AACD,KAHO;AAIRC,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,aAAO;AACLC,QAAAA,KAAK,EAAE,OAAO,KAAKrB,KAAL,GAAa,KAAKsB,WAAzB,IAAwC;AAD1C,OAAP;AAGD,KARO;AASRC,IAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B;AAC5C,UAAIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAS,EAAT,EAAa,KAAKC,iBAAlB,CAAR;AACA,aAAOF,IAAI,CAACG,KAAL,CAAW,MAAMJ,CAAN,GAAU,KAAKxB,KAAf,GAAuB,KAAKsB,WAAvC,IAAsDE,CAA7D;AACD,KAZO;AAaRF,IAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC;AACA,aAAOlC,QAAQ,CAAC,KAAKkB,GAAN,CAAR,GAAqB,KAAKA,GAA1B,GAAgC,KAAKV,UAAL,CAAgBU,GAAhB,IAAuB,GAA9D;AACD,KAhBO;AAiBRU,IAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C;AACA,aAAO,KAAKR,OAAL,IAAgB,KAAKZ,UAAL,CAAgBY,OAAvC;AACD,KApBO;AAqBRmB,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C;AACA,aAAOvC,QAAQ,CAAC,KAAKmB,SAAN,CAAR,GAA2B,KAAKA,SAAhC,GAA4C,KAAKX,UAAL,CAAgBW,SAAhB,IAA6B,CAAhF;AACD,KAxBO;AAyBRW,IAAAA,eAAe,EAAE,SAASA,eAAT,GAA2B;AAC1C;AACA,aAAO/B,SAAS,CAAC,KAAKsB,OAAN,CAAT,GAA0B,KAAKA,OAA/B,GAAyC,KAAKb,UAAL,CAAgBa,OAAhB,IAA2B,KAA3E;AACD,KA5BO;AA6BRU,IAAAA,gBAAgB,EAAE,SAASA,gBAAT,GAA4B;AAC5C;AACA,aAAOhC,SAAS,CAAC,KAAKwB,QAAN,CAAT,GAA2B,KAAKA,QAAhC,GAA2C,KAAKf,UAAL,CAAgBe,QAAhB,IAA4B,KAA9E;AACD,KAhCO;AAiCRkB,IAAAA,oBAAoB,EAAE,SAASA,oBAAT,GAAgC;AACpD;AACA,aAAO1C,SAAS,CAAC,KAAKyB,YAAN,CAAT,GAA+B,KAAKA,YAApC,GAAmD,KAAKhB,UAAL,CAAgBgB,YAAhB,IAAgC,KAA1F;AACD,KApCO;AAqCRkB,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C;AACA,aAAO3C,SAAS,CAAC,KAAK0B,SAAN,CAAT,GAA4B,KAAKA,SAAjC,GAA6C,KAAKjB,UAAL,CAAgBiB,SAAhB,IAA6B,KAAjF;AACD;AAxCO,GAzDD;AAmGTkB,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmB;AACzB,QAAIC,UAAU,GAAGD,CAAC,EAAlB;;AAEA,QAAI,KAAKE,iBAAL,CAAuB,SAAvB,CAAJ,EAAuC;AACrCD,MAAAA,UAAU,GAAG,KAAKE,aAAL,CAAmB,SAAnB,CAAb;AACD,KAFD,MAEO,IAAI,KAAKhC,KAAL,IAAc,KAAKE,SAAvB,EAAkC;AACvC4B,MAAAA,UAAU,GAAGD,CAAC,CAAC,MAAD,EAAS;AACrBI,QAAAA,QAAQ,EAAElD,UAAU,CAAC,KAAKmB,SAAN,EAAiB,KAAKF,KAAtB;AADC,OAAT,CAAd;AAGD,KAJM,MAIA,IAAI,KAAK0B,oBAAT,EAA+B;AACpCI,MAAAA,UAAU,GAAG,KAAKV,gBAAL,CAAsBc,OAAtB,CAA8B,KAAKV,iBAAnC,CAAb;AACD,KAFM,MAEA,IAAI,KAAKG,iBAAT,EAA4B;AACjCG,MAAAA,UAAU,GAAG,KAAKjC,KAAL,CAAWqC,OAAX,CAAmB,KAAKV,iBAAxB,CAAb;AACD;;AAED,WAAOK,CAAC,CAAC,KAAD,EAAQ;AACdM,MAAAA,WAAW,EAAE,cADC;AAEdC,MAAAA,KAAK,EAAE,KAAKxB,kBAFE;AAGdyB,MAAAA,KAAK,EAAE,KAAKpB,iBAHE;AAIdqB,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAE,aADD;AAEL,yBAAiB,GAFZ;AAGL,yBAAiB,KAAKpB,WAAL,CAAiBqB,QAAjB,EAHZ;AAIL,yBAAiB,KAAK3C,KAAL,CAAWqC,OAAX,CAAmB,KAAKV,iBAAxB;AAJZ;AAJO,KAAR,EAUL,CAACM,UAAD,CAVK,CAAR;AAWD;AA7HQ,CAAX,CAFO;AAiIP,eAAe1C,YAAf","sourcesContent":["import Vue from '../../utils/vue';\nimport { getComponentConfig } from '../../utils/config';\nimport { htmlOrText } from '../../utils/html';\nimport { isBoolean, isNumber } from '../../utils/inspect';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nvar NAME = 'BProgressBar'; // @vue/component\n\nexport var BProgressBar =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  mixins: [normalizeSlotMixin],\n  inject: {\n    bvProgress: {\n      default: function _default()\n      /* istanbul ignore next */\n      {\n        return {};\n      }\n    }\n  },\n  props: {\n    value: {\n      type: Number,\n      default: 0\n    },\n    label: {\n      type: String,\n      default: null\n    },\n    labelHtml: {\n      type: String\n    },\n    // $parent (this.bvProgress) prop values may take precedence over the following props\n    // Which is why they are defaulted to null\n    max: {\n      type: Number,\n      default: null\n    },\n    precision: {\n      type: Number,\n      default: null\n    },\n    variant: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'variant');\n      }\n    },\n    striped: {\n      type: Boolean,\n      default: null\n    },\n    animated: {\n      type: Boolean,\n      default: null\n    },\n    showProgress: {\n      type: Boolean,\n      default: null\n    },\n    showValue: {\n      type: Boolean,\n      default: null\n    }\n  },\n  computed: {\n    progressBarClasses: function progressBarClasses() {\n      return [this.computedVariant ? \"bg-\".concat(this.computedVariant) : '', this.computedStriped || this.computedAnimated ? 'progress-bar-striped' : '', this.computedAnimated ? 'progress-bar-animated' : ''];\n    },\n    progressBarStyles: function progressBarStyles() {\n      return {\n        width: 100 * (this.value / this.computedMax) + '%'\n      };\n    },\n    computedProgress: function computedProgress() {\n      var p = Math.pow(10, this.computedPrecision);\n      return Math.round(100 * p * this.value / this.computedMax) / p;\n    },\n    computedMax: function computedMax() {\n      // Prefer our max over parent setting\n      return isNumber(this.max) ? this.max : this.bvProgress.max || 100;\n    },\n    computedVariant: function computedVariant() {\n      // Prefer our variant over parent setting\n      return this.variant || this.bvProgress.variant;\n    },\n    computedPrecision: function computedPrecision() {\n      // Prefer our precision over parent setting\n      return isNumber(this.precision) ? this.precision : this.bvProgress.precision || 0;\n    },\n    computedStriped: function computedStriped() {\n      // Prefer our striped over parent setting\n      return isBoolean(this.striped) ? this.striped : this.bvProgress.striped || false;\n    },\n    computedAnimated: function computedAnimated() {\n      // Prefer our animated over parent setting\n      return isBoolean(this.animated) ? this.animated : this.bvProgress.animated || false;\n    },\n    computedShowProgress: function computedShowProgress() {\n      // Prefer our showProgress over parent setting\n      return isBoolean(this.showProgress) ? this.showProgress : this.bvProgress.showProgress || false;\n    },\n    computedShowValue: function computedShowValue() {\n      // Prefer our showValue over parent setting\n      return isBoolean(this.showValue) ? this.showValue : this.bvProgress.showValue || false;\n    }\n  },\n  render: function render(h) {\n    var childNodes = h();\n\n    if (this.hasNormalizedSlot('default')) {\n      childNodes = this.normalizeSlot('default');\n    } else if (this.label || this.labelHtml) {\n      childNodes = h('span', {\n        domProps: htmlOrText(this.labelHtml, this.label)\n      });\n    } else if (this.computedShowProgress) {\n      childNodes = this.computedProgress.toFixed(this.computedPrecision);\n    } else if (this.computedShowValue) {\n      childNodes = this.value.toFixed(this.computedPrecision);\n    }\n\n    return h('div', {\n      staticClass: 'progress-bar',\n      class: this.progressBarClasses,\n      style: this.progressBarStyles,\n      attrs: {\n        role: 'progressbar',\n        'aria-valuemin': '0',\n        'aria-valuemax': this.computedMax.toString(),\n        'aria-valuenow': this.value.toFixed(this.computedPrecision)\n      }\n    }, [childNodes]);\n  }\n});\nexport default BProgressBar;"]},"metadata":{},"sourceType":"module"}