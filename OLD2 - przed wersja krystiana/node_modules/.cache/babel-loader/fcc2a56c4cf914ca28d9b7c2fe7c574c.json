{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { getComponentConfig } from '../../utils/config';\nimport { isString } from '../../utils/inspect'; // --- Constants --\n\nvar NAME = 'BImg'; // Blank image with fill template\n\nvar BLANK_TEMPLATE = '<svg width=\"%{w}\" height=\"%{h}\" ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'viewBox=\"0 0 %{w} %{h}\" preserveAspectRatio=\"none\">' + '<rect width=\"100%\" height=\"100%\" style=\"fill:%{f};\"></rect>' + '</svg>';\nexport var props = {\n  src: {\n    type: String,\n    default: null\n  },\n  alt: {\n    type: String,\n    default: null\n  },\n  width: {\n    type: [Number, String],\n    default: null\n  },\n  height: {\n    type: [Number, String],\n    default: null\n  },\n  block: {\n    type: Boolean,\n    default: false\n  },\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  fluidGrow: {\n    // Gives fluid images class `w-100` to make them grow to fit container\n    type: Boolean,\n    default: false\n  },\n  rounded: {\n    // rounded can be:\n    //   false: no rounding of corners\n    //   true: slightly rounded corners\n    //   'top': top corners rounded\n    //   'right': right corners rounded\n    //   'bottom': bottom corners rounded\n    //   'left': left corners rounded\n    //   'circle': circle/oval\n    //   '0': force rounding off\n    type: [Boolean, String],\n    default: false\n  },\n  thumbnail: {\n    type: Boolean,\n    default: false\n  },\n  left: {\n    type: Boolean,\n    default: false\n  },\n  right: {\n    type: Boolean,\n    default: false\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  blank: {\n    type: Boolean,\n    default: false\n  },\n  blankColor: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'blankColor');\n    }\n  } // --- Helper methods ---\n\n};\n\nvar makeBlankImgSrc = function makeBlankImgSrc(width, height, color) {\n  var src = encodeURIComponent(BLANK_TEMPLATE.replace('%{w}', String(width)).replace('%{h}', String(height)).replace('%{f}', color));\n  return \"data:image/svg+xml;charset=UTF-8,\".concat(src);\n}; // @vue/component\n\n\nexport var BImg = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class;\n\n    var props = _ref.props,\n        data = _ref.data;\n    var src = props.src;\n    var width = parseInt(props.width, 10) ? parseInt(props.width, 10) : null;\n    var height = parseInt(props.height, 10) ? parseInt(props.height, 10) : null;\n    var align = null;\n    var block = props.block;\n\n    if (props.blank) {\n      if (!height && Boolean(width)) {\n        height = width;\n      } else if (!width && Boolean(height)) {\n        width = height;\n      }\n\n      if (!width && !height) {\n        width = 1;\n        height = 1;\n      } // Make a blank SVG image\n\n\n      src = makeBlankImgSrc(width, height, props.blankColor || 'transparent');\n    }\n\n    if (props.left) {\n      align = 'float-left';\n    } else if (props.right) {\n      align = 'float-right';\n    } else if (props.center) {\n      align = 'mx-auto';\n      block = true;\n    }\n\n    return h('img', mergeData(data, {\n      attrs: {\n        src: src,\n        alt: props.alt,\n        width: width ? String(width) : null,\n        height: height ? String(height) : null\n      },\n      class: (_class = {\n        'img-thumbnail': props.thumbnail,\n        'img-fluid': props.fluid || props.fluidGrow,\n        'w-100': props.fluidGrow,\n        rounded: props.rounded === '' || props.rounded === true\n      }, _defineProperty(_class, \"rounded-\".concat(props.rounded), isString(props.rounded) && props.rounded !== ''), _defineProperty(_class, align, Boolean(align)), _defineProperty(_class, 'd-block', block), _class)\n    }));\n  }\n});\nexport default BImg;","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/image/img.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Vue","mergeData","getComponentConfig","isString","NAME","BLANK_TEMPLATE","props","src","type","String","default","alt","width","Number","height","block","Boolean","fluid","fluidGrow","rounded","thumbnail","left","right","center","blank","blankColor","_default","makeBlankImgSrc","color","encodeURIComponent","replace","concat","BImg","extend","name","functional","render","h","_ref","_class","data","parseInt","align","attrs","class"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Vue from '../../utils/vue';\nimport { mergeData } from 'vue-functional-data-merge';\nimport { getComponentConfig } from '../../utils/config';\nimport { isString } from '../../utils/inspect'; // --- Constants --\n\nvar NAME = 'BImg'; // Blank image with fill template\n\nvar BLANK_TEMPLATE = '<svg width=\"%{w}\" height=\"%{h}\" ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'viewBox=\"0 0 %{w} %{h}\" preserveAspectRatio=\"none\">' + '<rect width=\"100%\" height=\"100%\" style=\"fill:%{f};\"></rect>' + '</svg>';\nexport var props = {\n  src: {\n    type: String,\n    default: null\n  },\n  alt: {\n    type: String,\n    default: null\n  },\n  width: {\n    type: [Number, String],\n    default: null\n  },\n  height: {\n    type: [Number, String],\n    default: null\n  },\n  block: {\n    type: Boolean,\n    default: false\n  },\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  fluidGrow: {\n    // Gives fluid images class `w-100` to make them grow to fit container\n    type: Boolean,\n    default: false\n  },\n  rounded: {\n    // rounded can be:\n    //   false: no rounding of corners\n    //   true: slightly rounded corners\n    //   'top': top corners rounded\n    //   'right': right corners rounded\n    //   'bottom': bottom corners rounded\n    //   'left': left corners rounded\n    //   'circle': circle/oval\n    //   '0': force rounding off\n    type: [Boolean, String],\n    default: false\n  },\n  thumbnail: {\n    type: Boolean,\n    default: false\n  },\n  left: {\n    type: Boolean,\n    default: false\n  },\n  right: {\n    type: Boolean,\n    default: false\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  blank: {\n    type: Boolean,\n    default: false\n  },\n  blankColor: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'blankColor');\n    }\n  } // --- Helper methods ---\n\n};\n\nvar makeBlankImgSrc = function makeBlankImgSrc(width, height, color) {\n  var src = encodeURIComponent(BLANK_TEMPLATE.replace('%{w}', String(width)).replace('%{h}', String(height)).replace('%{f}', color));\n  return \"data:image/svg+xml;charset=UTF-8,\".concat(src);\n}; // @vue/component\n\n\nexport var BImg =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class;\n\n    var props = _ref.props,\n        data = _ref.data;\n    var src = props.src;\n    var width = parseInt(props.width, 10) ? parseInt(props.width, 10) : null;\n    var height = parseInt(props.height, 10) ? parseInt(props.height, 10) : null;\n    var align = null;\n    var block = props.block;\n\n    if (props.blank) {\n      if (!height && Boolean(width)) {\n        height = width;\n      } else if (!width && Boolean(height)) {\n        width = height;\n      }\n\n      if (!width && !height) {\n        width = 1;\n        height = 1;\n      } // Make a blank SVG image\n\n\n      src = makeBlankImgSrc(width, height, props.blankColor || 'transparent');\n    }\n\n    if (props.left) {\n      align = 'float-left';\n    } else if (props.right) {\n      align = 'float-right';\n    } else if (props.center) {\n      align = 'mx-auto';\n      block = true;\n    }\n\n    return h('img', mergeData(data, {\n      attrs: {\n        src: src,\n        alt: props.alt,\n        width: width ? String(width) : null,\n        height: height ? String(height) : null\n      },\n      class: (_class = {\n        'img-thumbnail': props.thumbnail,\n        'img-fluid': props.fluid || props.fluidGrow,\n        'w-100': props.fluidGrow,\n        rounded: props.rounded === '' || props.rounded === true\n      }, _defineProperty(_class, \"rounded-\".concat(props.rounded), isString(props.rounded) && props.rounded !== ''), _defineProperty(_class, align, Boolean(align)), _defineProperty(_class, 'd-block', block), _class)\n    }));\n  }\n});\nexport default BImg;"]},"metadata":{},"sourceType":"module"}