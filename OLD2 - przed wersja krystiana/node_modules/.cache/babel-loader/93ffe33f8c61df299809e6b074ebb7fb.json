{"ast":null,"code":"import Vue from '../../utils/vue';\nimport looseEqual from '../../utils/loose-equal';\nimport toString from '../../utils/to-string';\nimport warn from '../../utils/warn';\nimport { getComponentConfig } from '../../utils/config';\nimport { requestAF } from '../../utils/dom';\nimport { isBrowser } from '../../utils/env';\nimport { isArray, isUndefined, isFunction, isObject } from '../../utils/inspect';\nimport { computeHref, parseQuery } from '../../utils/router';\nimport paginationMixin from '../../mixins/pagination';\nvar NAME = 'BPaginationNav'; // Sanitize the provided number of pages (converting to a number)\n\nexport var sanitizeNumberOfPages = function sanitizeNumberOfPages(value) {\n  var numberOfPages = parseInt(value, 10) || 1;\n  return numberOfPages < 1 ? 1 : numberOfPages;\n};\nvar props = {\n  size: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'size');\n    }\n  },\n  numberOfPages: {\n    type: [Number, String],\n    default: 1,\n    validator: function validator(value) {\n      var num = parseInt(value, 10);\n      /* istanbul ignore if */\n\n      if (isNaN(num) || num < 1) {\n        warn('b-pagination: prop \"number-of-pages\" must be a number greater than 0');\n        return false;\n      }\n\n      return true;\n    }\n  },\n  baseUrl: {\n    type: String,\n    default: '/'\n  },\n  useRouter: {\n    type: Boolean,\n    default: false\n  },\n  linkGen: {\n    type: Function,\n    default: null\n  },\n  pageGen: {\n    type: Function,\n    default: null\n  },\n  pages: {\n    // Optional array of page links\n    type: Array,\n    default: null\n  },\n  noPageDetect: {\n    // Disable auto page number detection if true\n    type: Boolean,\n    default: false\n  },\n  // router-link specific props\n  activeClass: {\n    type: String // default: undefined\n\n  },\n  exact: {\n    type: Boolean,\n    default: false\n  },\n  exactActiveClass: {\n    type: String // default: undefined\n\n  },\n  // nuxt-link specific prop(s)\n  noPrefetch: {\n    type: Boolean,\n    default: false\n  } // The render function is brought in via the pagination mixin\n  // @vue/component\n\n};\nexport var BPaginationNav = /*#__PURE__*/Vue.extend({\n  name: NAME,\n  mixins: [paginationMixin],\n  props: props,\n  computed: {\n    // Used by render function to trigger wrapping in '<nav>' element\n    isNav: function isNav() {\n      return true;\n    },\n    computedValue: function computedValue() {\n      // Returns the value prop as a number or `null` if undefined or < 1\n      var val = parseInt(this.value, 10);\n      return isNaN(val) || val < 1 ? null : val;\n    }\n  },\n  watch: {\n    numberOfPages: function numberOfPages(newVal, oldVal) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.setNumberOfPages();\n      });\n    },\n    pages: function pages(newVal, oldVal) {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.setNumberOfPages();\n      });\n    }\n  },\n  created: function created() {\n    this.setNumberOfPages();\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    if (this.$router) {\n      // We only add the watcher if vue router is detected\n      this.$watch('$route', function (to, from) {\n        _this3.$nextTick(function () {\n          requestAF(function () {\n            _this3.guessCurrentPage();\n          });\n        });\n      });\n    }\n  },\n  methods: {\n    setNumberOfPages: function setNumberOfPages() {\n      var _this4 = this;\n\n      if (isArray(this.pages) && this.pages.length > 0) {\n        this.localNumberOfPages = this.pages.length;\n      } else {\n        this.localNumberOfPages = sanitizeNumberOfPages(this.numberOfPages);\n      }\n\n      this.$nextTick(function () {\n        _this4.guessCurrentPage();\n      });\n    },\n    onClick: function onClick(pageNum, evt) {\n      var _this5 = this; // Dont do anything if clicking the current active page\n\n\n      if (pageNum === this.currentPage) {\n        return;\n      }\n\n      requestAF(function () {\n        // Update the v-model\n        // Done in in requestAF() to allow browser to complete the\n        // native browser click handling of a link\n        _this5.currentPage = pageNum;\n\n        _this5.$emit('change', pageNum);\n      });\n      this.$nextTick(function () {\n        // Done in a nextTick() to ensure rendering complete\n        try {\n          // Emulate native link click page reloading behaviour by blurring the\n          // paginator and returning focus to the document\n          var target = evt.currentTarget || evt.target;\n          target.blur();\n        } catch (e) {}\n      });\n    },\n    getPageInfo: function getPageInfo(pageNum) {\n      if (!isArray(this.pages) || this.pages.length === 0 || isUndefined(this.pages[pageNum - 1])) {\n        var link = \"\".concat(this.baseUrl).concat(pageNum);\n        return {\n          link: this.useRouter ? {\n            path: link\n          } : link,\n          text: toString(pageNum)\n        };\n      }\n\n      var info = this.pages[pageNum - 1];\n\n      if (isObject(info)) {\n        var _link = info.link;\n        return {\n          // Normalize link for router use\n          link: isObject(_link) ? _link : this.useRouter ? {\n            path: _link\n          } : _link,\n          // Make sure text has a value\n          text: toString(info.text || pageNum)\n        };\n      } else {\n        return {\n          link: toString(info),\n          text: toString(pageNum)\n        };\n      }\n    },\n    makePage: function makePage(pageNum) {\n      var info = this.getPageInfo(pageNum);\n\n      if (this.pageGen && isFunction(this.pageGen)) {\n        return this.pageGen(pageNum, info);\n      }\n\n      return info.text;\n    },\n    makeLink: function makeLink(pageNum) {\n      var info = this.getPageInfo(pageNum);\n\n      if (this.linkGen && isFunction(this.linkGen)) {\n        return this.linkGen(pageNum, info);\n      }\n\n      return info.link;\n    },\n    linkProps: function linkProps(pageNum) {\n      var link = this.makeLink(pageNum);\n      var props = {\n        target: this.target || null,\n        rel: this.rel || null,\n        disabled: this.disabled,\n        // The following props are only used if BLink detects router\n        exact: this.exact,\n        activeClass: this.activeClass,\n        exactActiveClass: this.exactActiveClass,\n        append: this.append,\n        replace: this.replace,\n        // nuxt-link specific prop\n        noPrefetch: this.noPrefetch\n      };\n\n      if (this.useRouter || isObject(link)) {\n        props.to = link;\n      } else {\n        props.href = link;\n      }\n\n      return props;\n    },\n    resolveLink: function resolveLink() {\n      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''; // Given a to (or href string), convert to normalized route-like structure\n      // Works only client side!!\n\n      var link;\n\n      try {\n        // Convert the `to` to a HREF via a temporary `a` tag\n        link = document.createElement('a');\n        link.href = computeHref({\n          to: to\n        }, 'a', '/', '/'); // We need to add the anchor to the document to make sure the\n        // `pathname` is correctly detected in any browser (i.e. IE)\n\n        document.body.appendChild(link); // Once href is assigned, the link will be normalized to the full URL bits\n\n        var _link2 = link,\n            pathname = _link2.pathname,\n            hash = _link2.hash,\n            search = _link2.search; // Remove link from document\n\n        document.body.removeChild(link); // Return the location in a route-like object\n\n        return {\n          path: pathname,\n          hash: hash,\n          query: parseQuery(search)\n        };\n      } catch (e) {\n        /* istanbul ignore next */\n        try {\n          link && link.parentNode && link.parentNode.removeChild(link);\n        } catch (e) {}\n        /* istanbul ignore next */\n\n\n        return {};\n      }\n    },\n    resolveRoute: function resolveRoute() {\n      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''; // Given a to (or href string), convert to normalized route location structure\n      // works only when router available!!\n\n      try {\n        var route = this.$router.resolve(to, this.$route).route;\n        return {\n          path: route.path,\n          hash: route.hash,\n          query: route.query\n        };\n      } catch (e) {\n        /* istanbul ignore next */\n        return {};\n      }\n    },\n    guessCurrentPage: function guessCurrentPage() {\n      var guess = this.computedValue;\n      var $router = this.$router;\n      var $route = this.$route; // This section only occurs if we are client side, or server-side with $router\n\n      /* istanbul ignore else */\n\n      if (!this.noPageDetect && !guess && (isBrowser || !isBrowser && $router)) {\n        // Current route (if router available)\n        var currRoute = $router && $route ? {\n          path: $route.path,\n          hash: $route.hash,\n          query: $route.query\n        } : {}; // Current page full HREF (if client side). Can't be done as a computed prop!\n\n        var loc = isBrowser ? window.location || document.location : null;\n        var currLink = loc ? {\n          path: loc.pathname,\n          hash: loc.hash,\n          query: parseQuery(loc.search)\n        } : {}; // Loop through the possible pages looking for a match until found\n\n        for (var page = 1; !guess && page <= this.localNumberOfPages; page++) {\n          var to = this.makeLink(page);\n\n          if ($router && (isObject(to) || this.useRouter)) {\n            // Resolve the page via the $router\n            guess = looseEqual(this.resolveRoute(to), currRoute) ? page : null;\n          } else if (isBrowser) {\n            // If no $router available (or !this.useRouter when `to` is a string)\n            // we compare using parsed URIs\n            guess = looseEqual(this.resolveLink(to), currLink) ? page : null;\n          } else {\n            // probably SSR, but no $router so we can't guess, so lets break out of\n            // the loop early\n\n            /* istanbul ignore next */\n            guess = -1;\n          }\n        }\n      } // We set currentPage to 0 to trigger an $emit('input', null)\n      // As the default for this.currentPage is -1 when no value is specified\n      // And valid page numbers are greater than 0\n\n\n      this.currentPage = guess > 0 ? guess : 0;\n    }\n  }\n});\nexport default BPaginationNav;","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/pagination-nav/pagination-nav.js"],"names":["Vue","looseEqual","toString","warn","getComponentConfig","requestAF","isBrowser","isArray","isUndefined","isFunction","isObject","computeHref","parseQuery","paginationMixin","NAME","sanitizeNumberOfPages","value","numberOfPages","parseInt","props","size","type","String","default","_default","Number","validator","num","isNaN","baseUrl","useRouter","Boolean","linkGen","Function","pageGen","pages","Array","noPageDetect","activeClass","exact","exactActiveClass","noPrefetch","BPaginationNav","extend","name","mixins","computed","isNav","computedValue","val","watch","newVal","oldVal","_this","$nextTick","setNumberOfPages","_this2","created","mounted","_this3","$router","$watch","to","from","guessCurrentPage","methods","_this4","length","localNumberOfPages","onClick","pageNum","evt","_this5","currentPage","$emit","target","currentTarget","blur","e","getPageInfo","link","concat","path","text","info","_link","makePage","makeLink","linkProps","rel","disabled","append","replace","href","resolveLink","arguments","undefined","document","createElement","body","appendChild","_link2","pathname","hash","search","removeChild","query","parentNode","resolveRoute","route","resolve","$route","guess","currRoute","loc","window","location","currLink","page"],"mappings":"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","sourcesContent":["import Vue from '../../utils/vue';\nimport looseEqual from '../../utils/loose-equal';\nimport toString from '../../utils/to-string';\nimport warn from '../../utils/warn';\nimport { getComponentConfig } from '../../utils/config';\nimport { requestAF } from '../../utils/dom';\nimport { isBrowser } from '../../utils/env';\nimport { isArray, isUndefined, isFunction, isObject } from '../../utils/inspect';\nimport { computeHref, parseQuery } from '../../utils/router';\nimport paginationMixin from '../../mixins/pagination';\nvar NAME = 'BPaginationNav'; // Sanitize the provided number of pages (converting to a number)\n\nexport var sanitizeNumberOfPages = function sanitizeNumberOfPages(value) {\n  var numberOfPages = parseInt(value, 10) || 1;\n  return numberOfPages < 1 ? 1 : numberOfPages;\n};\nvar props = {\n  size: {\n    type: String,\n    default: function _default() {\n      return getComponentConfig(NAME, 'size');\n    }\n  },\n  numberOfPages: {\n    type: [Number, String],\n    default: 1,\n    validator: function validator(value) {\n      var num = parseInt(value, 10);\n      /* istanbul ignore if */\n\n      if (isNaN(num) || num < 1) {\n        warn('b-pagination: prop \"number-of-pages\" must be a number greater than 0');\n        return false;\n      }\n\n      return true;\n    }\n  },\n  baseUrl: {\n    type: String,\n    default: '/'\n  },\n  useRouter: {\n    type: Boolean,\n    default: false\n  },\n  linkGen: {\n    type: Function,\n    default: null\n  },\n  pageGen: {\n    type: Function,\n    default: null\n  },\n  pages: {\n    // Optional array of page links\n    type: Array,\n    default: null\n  },\n  noPageDetect: {\n    // Disable auto page number detection if true\n    type: Boolean,\n    default: false\n  },\n  // router-link specific props\n  activeClass: {\n    type: String // default: undefined\n\n  },\n  exact: {\n    type: Boolean,\n    default: false\n  },\n  exactActiveClass: {\n    type: String // default: undefined\n\n  },\n  // nuxt-link specific prop(s)\n  noPrefetch: {\n    type: Boolean,\n    default: false\n  } // The render function is brought in via the pagination mixin\n  // @vue/component\n\n};\nexport var BPaginationNav =\n/*#__PURE__*/\nVue.extend({\n  name: NAME,\n  mixins: [paginationMixin],\n  props: props,\n  computed: {\n    // Used by render function to trigger wrapping in '<nav>' element\n    isNav: function isNav() {\n      return true;\n    },\n    computedValue: function computedValue() {\n      // Returns the value prop as a number or `null` if undefined or < 1\n      var val = parseInt(this.value, 10);\n      return isNaN(val) || val < 1 ? null : val;\n    }\n  },\n  watch: {\n    numberOfPages: function numberOfPages(newVal, oldVal) {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.setNumberOfPages();\n      });\n    },\n    pages: function pages(newVal, oldVal) {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        _this2.setNumberOfPages();\n      });\n    }\n  },\n  created: function created() {\n    this.setNumberOfPages();\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    if (this.$router) {\n      // We only add the watcher if vue router is detected\n      this.$watch('$route', function (to, from) {\n        _this3.$nextTick(function () {\n          requestAF(function () {\n            _this3.guessCurrentPage();\n          });\n        });\n      });\n    }\n  },\n  methods: {\n    setNumberOfPages: function setNumberOfPages() {\n      var _this4 = this;\n\n      if (isArray(this.pages) && this.pages.length > 0) {\n        this.localNumberOfPages = this.pages.length;\n      } else {\n        this.localNumberOfPages = sanitizeNumberOfPages(this.numberOfPages);\n      }\n\n      this.$nextTick(function () {\n        _this4.guessCurrentPage();\n      });\n    },\n    onClick: function onClick(pageNum, evt) {\n      var _this5 = this;\n\n      // Dont do anything if clicking the current active page\n      if (pageNum === this.currentPage) {\n        return;\n      }\n\n      requestAF(function () {\n        // Update the v-model\n        // Done in in requestAF() to allow browser to complete the\n        // native browser click handling of a link\n        _this5.currentPage = pageNum;\n\n        _this5.$emit('change', pageNum);\n      });\n      this.$nextTick(function () {\n        // Done in a nextTick() to ensure rendering complete\n        try {\n          // Emulate native link click page reloading behaviour by blurring the\n          // paginator and returning focus to the document\n          var target = evt.currentTarget || evt.target;\n          target.blur();\n        } catch (e) {}\n      });\n    },\n    getPageInfo: function getPageInfo(pageNum) {\n      if (!isArray(this.pages) || this.pages.length === 0 || isUndefined(this.pages[pageNum - 1])) {\n        var link = \"\".concat(this.baseUrl).concat(pageNum);\n        return {\n          link: this.useRouter ? {\n            path: link\n          } : link,\n          text: toString(pageNum)\n        };\n      }\n\n      var info = this.pages[pageNum - 1];\n\n      if (isObject(info)) {\n        var _link = info.link;\n        return {\n          // Normalize link for router use\n          link: isObject(_link) ? _link : this.useRouter ? {\n            path: _link\n          } : _link,\n          // Make sure text has a value\n          text: toString(info.text || pageNum)\n        };\n      } else {\n        return {\n          link: toString(info),\n          text: toString(pageNum)\n        };\n      }\n    },\n    makePage: function makePage(pageNum) {\n      var info = this.getPageInfo(pageNum);\n\n      if (this.pageGen && isFunction(this.pageGen)) {\n        return this.pageGen(pageNum, info);\n      }\n\n      return info.text;\n    },\n    makeLink: function makeLink(pageNum) {\n      var info = this.getPageInfo(pageNum);\n\n      if (this.linkGen && isFunction(this.linkGen)) {\n        return this.linkGen(pageNum, info);\n      }\n\n      return info.link;\n    },\n    linkProps: function linkProps(pageNum) {\n      var link = this.makeLink(pageNum);\n      var props = {\n        target: this.target || null,\n        rel: this.rel || null,\n        disabled: this.disabled,\n        // The following props are only used if BLink detects router\n        exact: this.exact,\n        activeClass: this.activeClass,\n        exactActiveClass: this.exactActiveClass,\n        append: this.append,\n        replace: this.replace,\n        // nuxt-link specific prop\n        noPrefetch: this.noPrefetch\n      };\n\n      if (this.useRouter || isObject(link)) {\n        props.to = link;\n      } else {\n        props.href = link;\n      }\n\n      return props;\n    },\n    resolveLink: function resolveLink() {\n      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      // Given a to (or href string), convert to normalized route-like structure\n      // Works only client side!!\n      var link;\n\n      try {\n        // Convert the `to` to a HREF via a temporary `a` tag\n        link = document.createElement('a');\n        link.href = computeHref({\n          to: to\n        }, 'a', '/', '/'); // We need to add the anchor to the document to make sure the\n        // `pathname` is correctly detected in any browser (i.e. IE)\n\n        document.body.appendChild(link); // Once href is assigned, the link will be normalized to the full URL bits\n\n        var _link2 = link,\n            pathname = _link2.pathname,\n            hash = _link2.hash,\n            search = _link2.search; // Remove link from document\n\n        document.body.removeChild(link); // Return the location in a route-like object\n\n        return {\n          path: pathname,\n          hash: hash,\n          query: parseQuery(search)\n        };\n      } catch (e) {\n        /* istanbul ignore next */\n        try {\n          link && link.parentNode && link.parentNode.removeChild(link);\n        } catch (e) {}\n        /* istanbul ignore next */\n\n\n        return {};\n      }\n    },\n    resolveRoute: function resolveRoute() {\n      var to = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n      // Given a to (or href string), convert to normalized route location structure\n      // works only when router available!!\n      try {\n        var route = this.$router.resolve(to, this.$route).route;\n        return {\n          path: route.path,\n          hash: route.hash,\n          query: route.query\n        };\n      } catch (e) {\n        /* istanbul ignore next */\n        return {};\n      }\n    },\n    guessCurrentPage: function guessCurrentPage() {\n      var guess = this.computedValue;\n      var $router = this.$router;\n      var $route = this.$route; // This section only occurs if we are client side, or server-side with $router\n\n      /* istanbul ignore else */\n\n      if (!this.noPageDetect && !guess && (isBrowser || !isBrowser && $router)) {\n        // Current route (if router available)\n        var currRoute = $router && $route ? {\n          path: $route.path,\n          hash: $route.hash,\n          query: $route.query\n        } : {}; // Current page full HREF (if client side). Can't be done as a computed prop!\n\n        var loc = isBrowser ? window.location || document.location : null;\n        var currLink = loc ? {\n          path: loc.pathname,\n          hash: loc.hash,\n          query: parseQuery(loc.search)\n        } : {}; // Loop through the possible pages looking for a match until found\n\n        for (var page = 1; !guess && page <= this.localNumberOfPages; page++) {\n          var to = this.makeLink(page);\n\n          if ($router && (isObject(to) || this.useRouter)) {\n            // Resolve the page via the $router\n            guess = looseEqual(this.resolveRoute(to), currRoute) ? page : null;\n          } else if (isBrowser) {\n            // If no $router available (or !this.useRouter when `to` is a string)\n            // we compare using parsed URIs\n            guess = looseEqual(this.resolveLink(to), currLink) ? page : null;\n          } else {\n            // probably SSR, but no $router so we can't guess, so lets break out of\n            // the loop early\n\n            /* istanbul ignore next */\n            guess = -1;\n          }\n        }\n      } // We set currentPage to 0 to trigger an $emit('input', null)\n      // As the default for this.currentPage is -1 when no value is specified\n      // And valid page numbers are greater than 0\n\n\n      this.currentPage = guess > 0 ? guess : 0;\n    }\n  }\n});\nexport default BPaginationNav;"]},"metadata":{},"sourceType":"module"}