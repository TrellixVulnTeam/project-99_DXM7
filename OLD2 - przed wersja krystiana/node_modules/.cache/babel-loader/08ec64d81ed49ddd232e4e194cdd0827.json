{"ast":null,"code":"import Vue from '../../utils/vue';\nimport KeyCodes from '../../utils/key-codes';\nimport noop from '../../utils/noop';\nimport observeDom from '../../utils/observe-dom';\nimport { getComponentConfig } from '../../utils/config';\nimport { selectAll, reflow, addClass, removeClass, setAttr, eventOn, eventOff } from '../../utils/dom';\nimport { isBrowser, hasTouchSupport, hasPointerEventSupport } from '../../utils/env';\nimport { isUndefined } from '../../utils/inspect';\nimport idMixin from '../../mixins/id';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nvar NAME = 'BCarousel'; // Slide directional classes\n\nvar DIRECTION = {\n  next: {\n    dirClass: 'carousel-item-left',\n    overlayClass: 'carousel-item-next'\n  },\n  prev: {\n    dirClass: 'carousel-item-right',\n    overlayClass: 'carousel-item-prev'\n  } // Fallback Transition duration (with a little buffer) in ms\n\n};\nvar TRANS_DURATION = 600 + 50; // Time for mouse compat events to fire after touch\n\nvar TOUCH_EVENT_COMPAT_WAIT = 500; // Number of pixels to consider touch move a swipe\n\nvar SWIPE_THRESHOLD = 40; // PointerEvent pointer types\n\nvar PointerType = {\n  TOUCH: 'touch',\n  PEN: 'pen' // Transition Event names\n\n};\nvar TransitionEndEvents = {\n  WebkitTransition: 'webkitTransitionEnd',\n  MozTransition: 'transitionend',\n  OTransition: 'otransitionend oTransitionEnd',\n  transition: 'transitionend'\n};\nvar EventOptions = {\n  passive: true,\n  capture: false // Return the browser specific transitionEnd event name\n\n};\n\nvar getTransitionEndEvent = function getTransitionEndEvent(el) {\n  for (var name in TransitionEndEvents) {\n    if (!isUndefined(el.style[name])) {\n      return TransitionEndEvents[name];\n    }\n  } // Fallback\n\n  /* istanbul ignore next */\n\n\n  return null;\n}; // @vue/component\n\n\nexport var BCarousel = /*#__PURE__*/Vue.extend({\n  name: 'BCarousel',\n  mixins: [idMixin, normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvCarousel: this\n    };\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    labelPrev: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'labelPrev');\n      }\n    },\n    labelNext: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'labelNext');\n      }\n    },\n    labelGotoSlide: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'labelGotoSlide');\n      }\n    },\n    labelIndicators: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'labelIndicators');\n      }\n    },\n    interval: {\n      type: Number,\n      default: 5000\n    },\n    indicators: {\n      type: Boolean,\n      default: false\n    },\n    controls: {\n      type: Boolean,\n      default: false\n    },\n    noAnimation: {\n      // Disable slide/fade animation\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      // Enable cross-fade animation instead of slide animation\n      type: Boolean,\n      default: false\n    },\n    noTouch: {\n      // Sniffed by carousel-slide\n      type: Boolean,\n      default: false\n    },\n    noHoverPause: {\n      // Disable pause on hover\n      type: Boolean,\n      default: false\n    },\n    imgWidth: {\n      // Sniffed by carousel-slide\n      type: [Number, String] // default: undefined\n\n    },\n    imgHeight: {\n      // Sniffed by carousel-slide\n      type: [Number, String] // default: undefined\n\n    },\n    background: {\n      type: String // default: undefined\n\n    },\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      index: this.value || 0,\n      isSliding: false,\n      transitionEndEvent: null,\n      slides: [],\n      direction: null,\n      isPaused: !(parseInt(this.interval, 10) > 0),\n      // Touch event handling values\n      touchStartX: 0,\n      touchDeltaX: 0\n    };\n  },\n  watch: {\n    value: function value(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.setSlide(newVal);\n      }\n    },\n    interval: function interval(newVal, oldVal) {\n      if (newVal === oldVal) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (!newVal) {\n        // Pausing slide show\n        this.pause(false);\n      } else {\n        // Restarting or Changing interval\n        this.pause(true);\n        this.start(false);\n      }\n    },\n    isPaused: function isPaused(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.$emit(newVal ? 'paused' : 'unpaused');\n      }\n    },\n    index: function index(to, from) {\n      if (to === from || this.isSliding) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.doSlide(to, from);\n    }\n  },\n  created: function created() {\n    // Create private non-reactive props\n    this._intervalId = null;\n    this._animationTimeout = null;\n    this._touchTimeout = null; // Set initial paused state\n\n    this.isPaused = !(parseInt(this.interval, 10) > 0);\n  },\n  mounted: function mounted() {\n    // Cache current browser transitionend event name\n    this.transitionEndEvent = getTransitionEndEvent(this.$el) || null; // Get all slides\n\n    this.updateSlides(); // Observe child changes so we can update slide list\n\n    observeDom(this.$refs.inner, this.updateSlides.bind(this), {\n      subtree: false,\n      childList: true,\n      attributes: true,\n      attributeFilter: ['id']\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this._animationTimeout);\n    clearTimeout(this._touchTimeout);\n    clearInterval(this._intervalId);\n    this._intervalId = null;\n    this._animationTimeout = null;\n    this._touchTimeout = null;\n  },\n  methods: {\n    // Set slide\n    setSlide: function setSlide(slide) {\n      var _this = this;\n\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null; // Don't animate when page is not visible\n\n      /* istanbul ignore if: difficult to test */\n\n      if (isBrowser && document.visibilityState && document.hidden) {\n        return;\n      }\n\n      var len = this.slides.length; // Don't do anything if nothing to slide to\n\n      if (len === 0) {\n        return;\n      } // Don't change slide while transitioning, wait until transition is done\n\n\n      if (this.isSliding) {\n        // Schedule slide after sliding complete\n        this.$once('sliding-end', function () {\n          return _this.setSlide(slide, direction);\n        });\n        return;\n      }\n\n      this.direction = direction; // Make sure we have an integer (you never know!)\n\n      slide = Math.floor(slide); // Set new slide index. Wrap around if necessary\n\n      this.index = slide >= len ? 0 : slide >= 0 ? slide : len - 1;\n    },\n    // Previous slide\n    prev: function prev() {\n      this.setSlide(this.index - 1, 'prev');\n    },\n    // Next slide\n    next: function next() {\n      this.setSlide(this.index + 1, 'next');\n    },\n    // Pause auto rotation\n    pause: function pause(evt) {\n      if (!evt) {\n        this.isPaused = true;\n      }\n\n      if (this._intervalId) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      }\n    },\n    // Start auto rotate slides\n    start: function start(evt) {\n      if (!evt) {\n        this.isPaused = false;\n      }\n      /* istanbul ignore next: most likely will never happen, but just in case */\n\n\n      if (this._intervalId) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      } // Don't start if no interval, or less than 2 slides\n\n\n      if (this.interval && this.slides.length > 1) {\n        this._intervalId = setInterval(this.next, Math.max(1000, this.interval));\n      }\n    },\n    // Restart auto rotate slides when focus/hover leaves the carousel\n    restart: function restart(evt)\n    /* istanbul ignore next: difficult to test */\n    {\n      if (!this.$el.contains(document.activeElement)) {\n        this.start();\n      }\n    },\n    doSlide: function doSlide(to, from) {\n      var _this2 = this;\n\n      var isCycling = Boolean(this.interval); // Determine sliding direction\n\n      var direction = this.calcDirection(this.direction, from, to);\n      var overlayClass = direction.overlayClass;\n      var dirClass = direction.dirClass; // Determine current and next slides\n\n      var currentSlide = this.slides[from];\n      var nextSlide = this.slides[to]; // Don't do anything if there aren't any slides to slide to\n\n      if (!currentSlide || !nextSlide) {\n        /* istanbul ignore next */\n        return;\n      } // Start animating\n\n\n      this.isSliding = true;\n\n      if (isCycling) {\n        this.pause(false);\n      }\n\n      this.$emit('sliding-start', to); // Update v-model\n\n      this.$emit('input', this.index);\n\n      if (this.noAnimation) {\n        addClass(nextSlide, 'active');\n        removeClass(currentSlide, 'active');\n        this.isSliding = false; // Notify ourselves that we're done sliding (slid)\n\n        this.$nextTick(function () {\n          return _this2.$emit('sliding-end', to);\n        });\n      } else {\n        addClass(nextSlide, overlayClass); // Trigger a reflow of next slide\n\n        reflow(nextSlide);\n        addClass(currentSlide, dirClass);\n        addClass(nextSlide, dirClass); // Transition End handler\n\n        var called = false;\n        /* istanbul ignore next: difficult to test */\n\n        var onceTransEnd = function onceTransEnd(evt) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          /* istanbul ignore if: transition events cant be tested in JSDOM */\n\n          if (_this2.transitionEndEvent) {\n            var events = _this2.transitionEndEvent.split(/\\s+/);\n\n            events.forEach(function (evt) {\n              return eventOff(currentSlide, evt, onceTransEnd, EventOptions);\n            });\n          }\n\n          _this2._animationTimeout = null;\n          removeClass(nextSlide, dirClass);\n          removeClass(nextSlide, overlayClass);\n          addClass(nextSlide, 'active');\n          removeClass(currentSlide, 'active');\n          removeClass(currentSlide, dirClass);\n          removeClass(currentSlide, overlayClass);\n          setAttr(currentSlide, 'aria-current', 'false');\n          setAttr(nextSlide, 'aria-current', 'true');\n          setAttr(currentSlide, 'aria-hidden', 'true');\n          setAttr(nextSlide, 'aria-hidden', 'false');\n          _this2.isSliding = false;\n          _this2.direction = null; // Notify ourselves that we're done sliding (slid)\n\n          _this2.$nextTick(function () {\n            return _this2.$emit('sliding-end', to);\n          });\n        }; // Set up transitionend handler\n\n        /* istanbul ignore if: transition events cant be tested in JSDOM */\n\n\n        if (this.transitionEndEvent) {\n          var events = this.transitionEndEvent.split(/\\s+/);\n          events.forEach(function (event) {\n            return eventOn(currentSlide, event, onceTransEnd, EventOptions);\n          });\n        } // Fallback to setTimeout()\n\n\n        this._animationTimeout = setTimeout(onceTransEnd, TRANS_DURATION);\n      }\n\n      if (isCycling) {\n        this.start(false);\n      }\n    },\n    // Update slide list\n    updateSlides: function updateSlides() {\n      this.pause(true); // Get all slides as DOM elements\n\n      this.slides = selectAll('.carousel-item', this.$refs.inner);\n      var numSlides = this.slides.length; // Keep slide number in range\n\n      var index = Math.max(0, Math.min(Math.floor(this.index), numSlides - 1));\n      this.slides.forEach(function (slide, idx) {\n        var n = idx + 1;\n\n        if (idx === index) {\n          addClass(slide, 'active');\n          setAttr(slide, 'aria-current', 'true');\n        } else {\n          removeClass(slide, 'active');\n          setAttr(slide, 'aria-current', 'false');\n        }\n\n        setAttr(slide, 'aria-posinset', String(n));\n        setAttr(slide, 'aria-setsize', String(numSlides));\n      }); // Set slide as active\n\n      this.setSlide(index);\n      this.start(this.isPaused);\n    },\n    calcDirection: function calcDirection() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var curIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var nextIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      if (!direction) {\n        return nextIndex > curIndex ? DIRECTION.next : DIRECTION.prev;\n      }\n\n      return DIRECTION[direction];\n    },\n    handleClick: function handleClick(evt, fn) {\n      var keyCode = evt.keyCode;\n\n      if (evt.type === 'click' || keyCode === KeyCodes.SPACE || keyCode === KeyCodes.ENTER) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        fn();\n      }\n    },\n    handleSwipe: function handleSwipe()\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      var absDeltaX = Math.abs(this.touchDeltaX);\n\n      if (absDeltaX <= SWIPE_THRESHOLD) {\n        return;\n      }\n\n      var direction = absDeltaX / this.touchDeltaX; // Reset touch delta X\n      // https://github.com/twbs/bootstrap/pull/28558\n\n      this.touchDeltaX = 0;\n\n      if (direction > 0) {\n        // Swipe left\n        this.prev();\n      } else if (direction < 0) {\n        // Swipe right\n        this.next();\n      }\n    },\n    touchStart: function touchStart(evt)\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      if (hasPointerEventSupport && PointerType[evt.pointerType.toUpperCase()]) {\n        this.touchStartX = evt.clientX;\n      } else if (!hasPointerEventSupport) {\n        this.touchStartX = evt.touches[0].clientX;\n      }\n    },\n    touchMove: function touchMove(evt)\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      // Ensure swiping with one touch and not pinching\n      if (evt.touches && evt.touches.length > 1) {\n        this.touchDeltaX = 0;\n      } else {\n        this.touchDeltaX = evt.touches[0].clientX - this.touchStartX;\n      }\n    },\n    touchEnd: function touchEnd(evt)\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      if (hasPointerEventSupport && PointerType[evt.pointerType.toUpperCase()]) {\n        this.touchDeltaX = evt.clientX - this.touchStartX;\n      }\n\n      this.handleSwipe(); // If it's a touch-enabled device, mouseenter/leave are fired as\n      // part of the mouse compatibility events on first tap - the carousel\n      // would stop cycling until user tapped out of it;\n      // here, we listen for touchend, explicitly pause the carousel\n      // (as if it's the second time we tap on it, mouseenter compat event\n      // is NOT fired) and after a timeout (to allow for mouse compatibility\n      // events to fire) we explicitly restart cycling\n\n      this.pause(false);\n\n      if (this._touchTimeout) {\n        clearTimeout(this._touchTimeout);\n      }\n\n      this._touchTimeout = setTimeout(this.start, TOUCH_EVENT_COMPAT_WAIT + Math.max(1000, this.interval));\n    }\n  },\n  render: function render(h) {\n    var _this3 = this; // Wrapper for slides\n\n\n    var inner = h('div', {\n      ref: 'inner',\n      class: ['carousel-inner'],\n      attrs: {\n        id: this.safeId('__BV_inner_'),\n        role: 'list'\n      }\n    }, [this.normalizeSlot('default')]); // Prev and next controls\n\n    var controls = h();\n\n    if (this.controls) {\n      controls = [h('a', {\n        class: ['carousel-control-prev'],\n        attrs: {\n          href: '#',\n          role: 'button',\n          'aria-controls': this.safeId('__BV_inner_')\n        },\n        on: {\n          click: function click(evt) {\n            _this3.handleClick(evt, _this3.prev);\n          },\n          keydown: function keydown(evt) {\n            _this3.handleClick(evt, _this3.prev);\n          }\n        }\n      }, [h('span', {\n        class: ['carousel-control-prev-icon'],\n        attrs: {\n          'aria-hidden': 'true'\n        }\n      }), h('span', {\n        class: ['sr-only']\n      }, [this.labelPrev])]), h('a', {\n        class: ['carousel-control-next'],\n        attrs: {\n          href: '#',\n          role: 'button',\n          'aria-controls': this.safeId('__BV_inner_')\n        },\n        on: {\n          click: function click(evt) {\n            _this3.handleClick(evt, _this3.next);\n          },\n          keydown: function keydown(evt) {\n            _this3.handleClick(evt, _this3.next);\n          }\n        }\n      }, [h('span', {\n        class: ['carousel-control-next-icon'],\n        attrs: {\n          'aria-hidden': 'true'\n        }\n      }), h('span', {\n        class: ['sr-only']\n      }, [this.labelNext])])];\n    } // Indicators\n\n\n    var indicators = h('ol', {\n      class: ['carousel-indicators'],\n      directives: [{\n        name: 'show',\n        rawName: 'v-show',\n        value: this.indicators,\n        expression: 'indicators'\n      }],\n      attrs: {\n        id: this.safeId('__BV_indicators_'),\n        'aria-hidden': this.indicators ? 'false' : 'true',\n        'aria-label': this.labelIndicators,\n        'aria-owns': this.safeId('__BV_inner_')\n      }\n    }, this.slides.map(function (slide, n) {\n      return h('li', {\n        key: \"slide_\".concat(n),\n        class: {\n          active: n === _this3.index\n        },\n        attrs: {\n          role: 'button',\n          id: _this3.safeId(\"__BV_indicator_\".concat(n + 1, \"_\")),\n          tabindex: _this3.indicators ? '0' : '-1',\n          'aria-current': n === _this3.index ? 'true' : 'false',\n          'aria-label': \"\".concat(_this3.labelGotoSlide, \" \").concat(n + 1),\n          'aria-describedby': _this3.slides[n].id || null,\n          'aria-controls': _this3.safeId('__BV_inner_')\n        },\n        on: {\n          click: function click(evt) {\n            _this3.handleClick(evt, function () {\n              _this3.setSlide(n);\n            });\n          },\n          keydown: function keydown(evt) {\n            _this3.handleClick(evt, function () {\n              _this3.setSlide(n);\n            });\n          }\n        }\n      });\n    }));\n    var on = {\n      mouseenter: this.noHoverPause ? noop : this.pause,\n      mouseleave: this.noHoverPause ? noop : this.restart,\n      focusin: this.pause,\n      focusout: this.restart,\n      keydown: function keydown(evt) {\n        if (/input|textarea/i.test(evt.target.tagName)) {\n          /* istanbul ignore next */\n          return;\n        }\n\n        var keyCode = evt.keyCode;\n\n        if (keyCode === KeyCodes.LEFT || keyCode === KeyCodes.RIGHT) {\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          _this3[keyCode === KeyCodes.LEFT ? 'prev' : 'next']();\n        }\n      } // Touch support event handlers for environment\n\n    };\n\n    if (!this.noTouch && hasTouchSupport) {\n      // Attach appropriate listeners (prepend event name with '&' for passive mode)\n\n      /* istanbul ignore next: JSDOM doesn't support touch events */\n      if (hasPointerEventSupport) {\n        on['&pointerdown'] = this.touchStart;\n        on['&pointerup'] = this.touchEnd;\n      } else {\n        on['&touchstart'] = this.touchStart;\n        on['&touchmove'] = this.touchMove;\n        on['&touchend'] = this.touchEnd;\n      }\n    } // Return the carousel\n\n\n    return h('div', {\n      staticClass: 'carousel',\n      class: {\n        slide: !this.noAnimation,\n        'carousel-fade': !this.noAnimation && this.fade,\n        'pointer-event': !this.noTouch && hasTouchSupport && hasPointerEventSupport\n      },\n      style: {\n        background: this.background\n      },\n      attrs: {\n        role: 'region',\n        id: this.safeId(),\n        'aria-busy': this.isSliding ? 'true' : 'false'\n      },\n      on: on\n    }, [inner, controls, indicators]);\n  }\n});\nexport default BCarousel;","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/carousel/carousel.js"],"names":["Vue","KeyCodes","noop","observeDom","getComponentConfig","selectAll","reflow","addClass","removeClass","setAttr","eventOn","eventOff","isBrowser","hasTouchSupport","hasPointerEventSupport","isUndefined","idMixin","normalizeSlotMixin","NAME","DIRECTION","next","dirClass","overlayClass","prev","TRANS_DURATION","TOUCH_EVENT_COMPAT_WAIT","SWIPE_THRESHOLD","PointerType","TOUCH","PEN","TransitionEndEvents","WebkitTransition","MozTransition","OTransition","transition","EventOptions","passive","capture","getTransitionEndEvent","el","name","style","BCarousel","extend","mixins","provide","bvCarousel","model","prop","event","props","labelPrev","type","String","default","_default","labelNext","labelGotoSlide","labelIndicators","interval","Number","indicators","Boolean","controls","noAnimation","fade","noTouch","noHoverPause","imgWidth","imgHeight","background","value","data","index","isSliding","transitionEndEvent","slides","direction","isPaused","parseInt","touchStartX","touchDeltaX","watch","newVal","oldVal","setSlide","pause","start","$emit","to","from","doSlide","created","_intervalId","_animationTimeout","_touchTimeout","mounted","$el","updateSlides","$refs","inner","bind","subtree","childList","attributes","attributeFilter","beforeDestroy","clearTimeout","clearInterval","methods","slide","_this","arguments","length","undefined","document","visibilityState","hidden","len","$once","Math","floor","evt","setInterval","max","restart","contains","activeElement","_this2","isCycling","calcDirection","currentSlide","nextSlide","$nextTick","called","onceTransEnd","events","split","forEach","setTimeout","numSlides","min","idx","n","curIndex","nextIndex","handleClick","fn","keyCode","SPACE","ENTER","preventDefault","stopPropagation","handleSwipe","absDeltaX","abs","touchStart","pointerType","toUpperCase","clientX","touches","touchMove","touchEnd","render","h","_this3","ref","class","attrs","id","safeId","role","normalizeSlot","href","on","click","keydown","directives","rawName","expression","map","key","concat","active","tabindex","mouseenter","mouseleave","focusin","focusout","test","target","tagName","LEFT","RIGHT","staticClass"],"mappings":"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","sourcesContent":["import Vue from '../../utils/vue';\nimport KeyCodes from '../../utils/key-codes';\nimport noop from '../../utils/noop';\nimport observeDom from '../../utils/observe-dom';\nimport { getComponentConfig } from '../../utils/config';\nimport { selectAll, reflow, addClass, removeClass, setAttr, eventOn, eventOff } from '../../utils/dom';\nimport { isBrowser, hasTouchSupport, hasPointerEventSupport } from '../../utils/env';\nimport { isUndefined } from '../../utils/inspect';\nimport idMixin from '../../mixins/id';\nimport normalizeSlotMixin from '../../mixins/normalize-slot';\nvar NAME = 'BCarousel'; // Slide directional classes\n\nvar DIRECTION = {\n  next: {\n    dirClass: 'carousel-item-left',\n    overlayClass: 'carousel-item-next'\n  },\n  prev: {\n    dirClass: 'carousel-item-right',\n    overlayClass: 'carousel-item-prev'\n  } // Fallback Transition duration (with a little buffer) in ms\n\n};\nvar TRANS_DURATION = 600 + 50; // Time for mouse compat events to fire after touch\n\nvar TOUCH_EVENT_COMPAT_WAIT = 500; // Number of pixels to consider touch move a swipe\n\nvar SWIPE_THRESHOLD = 40; // PointerEvent pointer types\n\nvar PointerType = {\n  TOUCH: 'touch',\n  PEN: 'pen' // Transition Event names\n\n};\nvar TransitionEndEvents = {\n  WebkitTransition: 'webkitTransitionEnd',\n  MozTransition: 'transitionend',\n  OTransition: 'otransitionend oTransitionEnd',\n  transition: 'transitionend'\n};\nvar EventOptions = {\n  passive: true,\n  capture: false // Return the browser specific transitionEnd event name\n\n};\n\nvar getTransitionEndEvent = function getTransitionEndEvent(el) {\n  for (var name in TransitionEndEvents) {\n    if (!isUndefined(el.style[name])) {\n      return TransitionEndEvents[name];\n    }\n  } // Fallback\n\n  /* istanbul ignore next */\n\n\n  return null;\n}; // @vue/component\n\n\nexport var BCarousel =\n/*#__PURE__*/\nVue.extend({\n  name: 'BCarousel',\n  mixins: [idMixin, normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvCarousel: this\n    };\n  },\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    labelPrev: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'labelPrev');\n      }\n    },\n    labelNext: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'labelNext');\n      }\n    },\n    labelGotoSlide: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'labelGotoSlide');\n      }\n    },\n    labelIndicators: {\n      type: String,\n      default: function _default() {\n        return getComponentConfig(NAME, 'labelIndicators');\n      }\n    },\n    interval: {\n      type: Number,\n      default: 5000\n    },\n    indicators: {\n      type: Boolean,\n      default: false\n    },\n    controls: {\n      type: Boolean,\n      default: false\n    },\n    noAnimation: {\n      // Disable slide/fade animation\n      type: Boolean,\n      default: false\n    },\n    fade: {\n      // Enable cross-fade animation instead of slide animation\n      type: Boolean,\n      default: false\n    },\n    noTouch: {\n      // Sniffed by carousel-slide\n      type: Boolean,\n      default: false\n    },\n    noHoverPause: {\n      // Disable pause on hover\n      type: Boolean,\n      default: false\n    },\n    imgWidth: {\n      // Sniffed by carousel-slide\n      type: [Number, String] // default: undefined\n\n    },\n    imgHeight: {\n      // Sniffed by carousel-slide\n      type: [Number, String] // default: undefined\n\n    },\n    background: {\n      type: String // default: undefined\n\n    },\n    value: {\n      type: Number,\n      default: 0\n    }\n  },\n  data: function data() {\n    return {\n      index: this.value || 0,\n      isSliding: false,\n      transitionEndEvent: null,\n      slides: [],\n      direction: null,\n      isPaused: !(parseInt(this.interval, 10) > 0),\n      // Touch event handling values\n      touchStartX: 0,\n      touchDeltaX: 0\n    };\n  },\n  watch: {\n    value: function value(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.setSlide(newVal);\n      }\n    },\n    interval: function interval(newVal, oldVal) {\n      if (newVal === oldVal) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (!newVal) {\n        // Pausing slide show\n        this.pause(false);\n      } else {\n        // Restarting or Changing interval\n        this.pause(true);\n        this.start(false);\n      }\n    },\n    isPaused: function isPaused(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.$emit(newVal ? 'paused' : 'unpaused');\n      }\n    },\n    index: function index(to, from) {\n      if (to === from || this.isSliding) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.doSlide(to, from);\n    }\n  },\n  created: function created() {\n    // Create private non-reactive props\n    this._intervalId = null;\n    this._animationTimeout = null;\n    this._touchTimeout = null; // Set initial paused state\n\n    this.isPaused = !(parseInt(this.interval, 10) > 0);\n  },\n  mounted: function mounted() {\n    // Cache current browser transitionend event name\n    this.transitionEndEvent = getTransitionEndEvent(this.$el) || null; // Get all slides\n\n    this.updateSlides(); // Observe child changes so we can update slide list\n\n    observeDom(this.$refs.inner, this.updateSlides.bind(this), {\n      subtree: false,\n      childList: true,\n      attributes: true,\n      attributeFilter: ['id']\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    clearTimeout(this._animationTimeout);\n    clearTimeout(this._touchTimeout);\n    clearInterval(this._intervalId);\n    this._intervalId = null;\n    this._animationTimeout = null;\n    this._touchTimeout = null;\n  },\n  methods: {\n    // Set slide\n    setSlide: function setSlide(slide) {\n      var _this = this;\n\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      // Don't animate when page is not visible\n\n      /* istanbul ignore if: difficult to test */\n      if (isBrowser && document.visibilityState && document.hidden) {\n        return;\n      }\n\n      var len = this.slides.length; // Don't do anything if nothing to slide to\n\n      if (len === 0) {\n        return;\n      } // Don't change slide while transitioning, wait until transition is done\n\n\n      if (this.isSliding) {\n        // Schedule slide after sliding complete\n        this.$once('sliding-end', function () {\n          return _this.setSlide(slide, direction);\n        });\n        return;\n      }\n\n      this.direction = direction; // Make sure we have an integer (you never know!)\n\n      slide = Math.floor(slide); // Set new slide index. Wrap around if necessary\n\n      this.index = slide >= len ? 0 : slide >= 0 ? slide : len - 1;\n    },\n    // Previous slide\n    prev: function prev() {\n      this.setSlide(this.index - 1, 'prev');\n    },\n    // Next slide\n    next: function next() {\n      this.setSlide(this.index + 1, 'next');\n    },\n    // Pause auto rotation\n    pause: function pause(evt) {\n      if (!evt) {\n        this.isPaused = true;\n      }\n\n      if (this._intervalId) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      }\n    },\n    // Start auto rotate slides\n    start: function start(evt) {\n      if (!evt) {\n        this.isPaused = false;\n      }\n      /* istanbul ignore next: most likely will never happen, but just in case */\n\n\n      if (this._intervalId) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n      } // Don't start if no interval, or less than 2 slides\n\n\n      if (this.interval && this.slides.length > 1) {\n        this._intervalId = setInterval(this.next, Math.max(1000, this.interval));\n      }\n    },\n    // Restart auto rotate slides when focus/hover leaves the carousel\n    restart: function restart(evt)\n    /* istanbul ignore next: difficult to test */\n    {\n      if (!this.$el.contains(document.activeElement)) {\n        this.start();\n      }\n    },\n    doSlide: function doSlide(to, from) {\n      var _this2 = this;\n\n      var isCycling = Boolean(this.interval); // Determine sliding direction\n\n      var direction = this.calcDirection(this.direction, from, to);\n      var overlayClass = direction.overlayClass;\n      var dirClass = direction.dirClass; // Determine current and next slides\n\n      var currentSlide = this.slides[from];\n      var nextSlide = this.slides[to]; // Don't do anything if there aren't any slides to slide to\n\n      if (!currentSlide || !nextSlide) {\n        /* istanbul ignore next */\n        return;\n      } // Start animating\n\n\n      this.isSliding = true;\n\n      if (isCycling) {\n        this.pause(false);\n      }\n\n      this.$emit('sliding-start', to); // Update v-model\n\n      this.$emit('input', this.index);\n\n      if (this.noAnimation) {\n        addClass(nextSlide, 'active');\n        removeClass(currentSlide, 'active');\n        this.isSliding = false; // Notify ourselves that we're done sliding (slid)\n\n        this.$nextTick(function () {\n          return _this2.$emit('sliding-end', to);\n        });\n      } else {\n        addClass(nextSlide, overlayClass); // Trigger a reflow of next slide\n\n        reflow(nextSlide);\n        addClass(currentSlide, dirClass);\n        addClass(nextSlide, dirClass); // Transition End handler\n\n        var called = false;\n        /* istanbul ignore next: difficult to test */\n\n        var onceTransEnd = function onceTransEnd(evt) {\n          if (called) {\n            return;\n          }\n\n          called = true;\n          /* istanbul ignore if: transition events cant be tested in JSDOM */\n\n          if (_this2.transitionEndEvent) {\n            var events = _this2.transitionEndEvent.split(/\\s+/);\n\n            events.forEach(function (evt) {\n              return eventOff(currentSlide, evt, onceTransEnd, EventOptions);\n            });\n          }\n\n          _this2._animationTimeout = null;\n          removeClass(nextSlide, dirClass);\n          removeClass(nextSlide, overlayClass);\n          addClass(nextSlide, 'active');\n          removeClass(currentSlide, 'active');\n          removeClass(currentSlide, dirClass);\n          removeClass(currentSlide, overlayClass);\n          setAttr(currentSlide, 'aria-current', 'false');\n          setAttr(nextSlide, 'aria-current', 'true');\n          setAttr(currentSlide, 'aria-hidden', 'true');\n          setAttr(nextSlide, 'aria-hidden', 'false');\n          _this2.isSliding = false;\n          _this2.direction = null; // Notify ourselves that we're done sliding (slid)\n\n          _this2.$nextTick(function () {\n            return _this2.$emit('sliding-end', to);\n          });\n        }; // Set up transitionend handler\n\n        /* istanbul ignore if: transition events cant be tested in JSDOM */\n\n\n        if (this.transitionEndEvent) {\n          var events = this.transitionEndEvent.split(/\\s+/);\n          events.forEach(function (event) {\n            return eventOn(currentSlide, event, onceTransEnd, EventOptions);\n          });\n        } // Fallback to setTimeout()\n\n\n        this._animationTimeout = setTimeout(onceTransEnd, TRANS_DURATION);\n      }\n\n      if (isCycling) {\n        this.start(false);\n      }\n    },\n    // Update slide list\n    updateSlides: function updateSlides() {\n      this.pause(true); // Get all slides as DOM elements\n\n      this.slides = selectAll('.carousel-item', this.$refs.inner);\n      var numSlides = this.slides.length; // Keep slide number in range\n\n      var index = Math.max(0, Math.min(Math.floor(this.index), numSlides - 1));\n      this.slides.forEach(function (slide, idx) {\n        var n = idx + 1;\n\n        if (idx === index) {\n          addClass(slide, 'active');\n          setAttr(slide, 'aria-current', 'true');\n        } else {\n          removeClass(slide, 'active');\n          setAttr(slide, 'aria-current', 'false');\n        }\n\n        setAttr(slide, 'aria-posinset', String(n));\n        setAttr(slide, 'aria-setsize', String(numSlides));\n      }); // Set slide as active\n\n      this.setSlide(index);\n      this.start(this.isPaused);\n    },\n    calcDirection: function calcDirection() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var curIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var nextIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      if (!direction) {\n        return nextIndex > curIndex ? DIRECTION.next : DIRECTION.prev;\n      }\n\n      return DIRECTION[direction];\n    },\n    handleClick: function handleClick(evt, fn) {\n      var keyCode = evt.keyCode;\n\n      if (evt.type === 'click' || keyCode === KeyCodes.SPACE || keyCode === KeyCodes.ENTER) {\n        evt.preventDefault();\n        evt.stopPropagation();\n        fn();\n      }\n    },\n    handleSwipe: function handleSwipe()\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      var absDeltaX = Math.abs(this.touchDeltaX);\n\n      if (absDeltaX <= SWIPE_THRESHOLD) {\n        return;\n      }\n\n      var direction = absDeltaX / this.touchDeltaX; // Reset touch delta X\n      // https://github.com/twbs/bootstrap/pull/28558\n\n      this.touchDeltaX = 0;\n\n      if (direction > 0) {\n        // Swipe left\n        this.prev();\n      } else if (direction < 0) {\n        // Swipe right\n        this.next();\n      }\n    },\n    touchStart: function touchStart(evt)\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      if (hasPointerEventSupport && PointerType[evt.pointerType.toUpperCase()]) {\n        this.touchStartX = evt.clientX;\n      } else if (!hasPointerEventSupport) {\n        this.touchStartX = evt.touches[0].clientX;\n      }\n    },\n    touchMove: function touchMove(evt)\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      // Ensure swiping with one touch and not pinching\n      if (evt.touches && evt.touches.length > 1) {\n        this.touchDeltaX = 0;\n      } else {\n        this.touchDeltaX = evt.touches[0].clientX - this.touchStartX;\n      }\n    },\n    touchEnd: function touchEnd(evt)\n    /* istanbul ignore next: JSDOM doesn't support touch events */\n    {\n      if (hasPointerEventSupport && PointerType[evt.pointerType.toUpperCase()]) {\n        this.touchDeltaX = evt.clientX - this.touchStartX;\n      }\n\n      this.handleSwipe(); // If it's a touch-enabled device, mouseenter/leave are fired as\n      // part of the mouse compatibility events on first tap - the carousel\n      // would stop cycling until user tapped out of it;\n      // here, we listen for touchend, explicitly pause the carousel\n      // (as if it's the second time we tap on it, mouseenter compat event\n      // is NOT fired) and after a timeout (to allow for mouse compatibility\n      // events to fire) we explicitly restart cycling\n\n      this.pause(false);\n\n      if (this._touchTimeout) {\n        clearTimeout(this._touchTimeout);\n      }\n\n      this._touchTimeout = setTimeout(this.start, TOUCH_EVENT_COMPAT_WAIT + Math.max(1000, this.interval));\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    // Wrapper for slides\n    var inner = h('div', {\n      ref: 'inner',\n      class: ['carousel-inner'],\n      attrs: {\n        id: this.safeId('__BV_inner_'),\n        role: 'list'\n      }\n    }, [this.normalizeSlot('default')]); // Prev and next controls\n\n    var controls = h();\n\n    if (this.controls) {\n      controls = [h('a', {\n        class: ['carousel-control-prev'],\n        attrs: {\n          href: '#',\n          role: 'button',\n          'aria-controls': this.safeId('__BV_inner_')\n        },\n        on: {\n          click: function click(evt) {\n            _this3.handleClick(evt, _this3.prev);\n          },\n          keydown: function keydown(evt) {\n            _this3.handleClick(evt, _this3.prev);\n          }\n        }\n      }, [h('span', {\n        class: ['carousel-control-prev-icon'],\n        attrs: {\n          'aria-hidden': 'true'\n        }\n      }), h('span', {\n        class: ['sr-only']\n      }, [this.labelPrev])]), h('a', {\n        class: ['carousel-control-next'],\n        attrs: {\n          href: '#',\n          role: 'button',\n          'aria-controls': this.safeId('__BV_inner_')\n        },\n        on: {\n          click: function click(evt) {\n            _this3.handleClick(evt, _this3.next);\n          },\n          keydown: function keydown(evt) {\n            _this3.handleClick(evt, _this3.next);\n          }\n        }\n      }, [h('span', {\n        class: ['carousel-control-next-icon'],\n        attrs: {\n          'aria-hidden': 'true'\n        }\n      }), h('span', {\n        class: ['sr-only']\n      }, [this.labelNext])])];\n    } // Indicators\n\n\n    var indicators = h('ol', {\n      class: ['carousel-indicators'],\n      directives: [{\n        name: 'show',\n        rawName: 'v-show',\n        value: this.indicators,\n        expression: 'indicators'\n      }],\n      attrs: {\n        id: this.safeId('__BV_indicators_'),\n        'aria-hidden': this.indicators ? 'false' : 'true',\n        'aria-label': this.labelIndicators,\n        'aria-owns': this.safeId('__BV_inner_')\n      }\n    }, this.slides.map(function (slide, n) {\n      return h('li', {\n        key: \"slide_\".concat(n),\n        class: {\n          active: n === _this3.index\n        },\n        attrs: {\n          role: 'button',\n          id: _this3.safeId(\"__BV_indicator_\".concat(n + 1, \"_\")),\n          tabindex: _this3.indicators ? '0' : '-1',\n          'aria-current': n === _this3.index ? 'true' : 'false',\n          'aria-label': \"\".concat(_this3.labelGotoSlide, \" \").concat(n + 1),\n          'aria-describedby': _this3.slides[n].id || null,\n          'aria-controls': _this3.safeId('__BV_inner_')\n        },\n        on: {\n          click: function click(evt) {\n            _this3.handleClick(evt, function () {\n              _this3.setSlide(n);\n            });\n          },\n          keydown: function keydown(evt) {\n            _this3.handleClick(evt, function () {\n              _this3.setSlide(n);\n            });\n          }\n        }\n      });\n    }));\n    var on = {\n      mouseenter: this.noHoverPause ? noop : this.pause,\n      mouseleave: this.noHoverPause ? noop : this.restart,\n      focusin: this.pause,\n      focusout: this.restart,\n      keydown: function keydown(evt) {\n        if (/input|textarea/i.test(evt.target.tagName)) {\n          /* istanbul ignore next */\n          return;\n        }\n\n        var keyCode = evt.keyCode;\n\n        if (keyCode === KeyCodes.LEFT || keyCode === KeyCodes.RIGHT) {\n          evt.preventDefault();\n          evt.stopPropagation();\n\n          _this3[keyCode === KeyCodes.LEFT ? 'prev' : 'next']();\n        }\n      } // Touch support event handlers for environment\n\n    };\n\n    if (!this.noTouch && hasTouchSupport) {\n      // Attach appropriate listeners (prepend event name with '&' for passive mode)\n\n      /* istanbul ignore next: JSDOM doesn't support touch events */\n      if (hasPointerEventSupport) {\n        on['&pointerdown'] = this.touchStart;\n        on['&pointerup'] = this.touchEnd;\n      } else {\n        on['&touchstart'] = this.touchStart;\n        on['&touchmove'] = this.touchMove;\n        on['&touchend'] = this.touchEnd;\n      }\n    } // Return the carousel\n\n\n    return h('div', {\n      staticClass: 'carousel',\n      class: {\n        slide: !this.noAnimation,\n        'carousel-fade': !this.noAnimation && this.fade,\n        'pointer-event': !this.noTouch && hasTouchSupport && hasPointerEventSupport\n      },\n      style: {\n        background: this.background\n      },\n      attrs: {\n        role: 'region',\n        id: this.safeId(),\n        'aria-busy': this.isSliding ? 'true' : 'false'\n      },\n      on: on\n    }, [inner, controls, indicators]);\n  }\n});\nexport default BCarousel;"]},"metadata":{},"sourceType":"module"}