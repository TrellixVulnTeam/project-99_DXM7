{"ast":null,"code":"import \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n\n/**\n * Private ModalManager helper\n * Handles controlling modal stacking zIndexes and body adjustments/classes\n */\nimport Vue from '../../../utils/vue';\nimport { getAttr, hasAttr, removeAttr, setAttr, addClass, removeClass, getBCR, getCS, selectAll, requestAF } from '../../../utils/dom';\nimport { isBrowser } from '../../../utils/env';\nimport { isNull } from '../../../utils/inspect'; // --- Constants ---\n// Default modal backdrop z-index\n\nvar DEFAULT_ZINDEX = 1040; // Selectors for padding/margin adjustments\n\nvar Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler' // @vue/component\n\n};\nvar ModalManager = /*#__PURE__*/Vue.extend({\n  data: function data() {\n    return {\n      modals: [],\n      baseZIndex: null,\n      scrollbarWidth: null,\n      isBodyOverflowing: false\n    };\n  },\n  computed: {\n    modalCount: function modalCount() {\n      return this.modals.length;\n    },\n    modalsAreOpen: function modalsAreOpen() {\n      return this.modalCount > 0;\n    }\n  },\n  watch: {\n    modalCount: function modalCount(newCount, oldCount) {\n      if (isBrowser) {\n        this.getScrollbarWidth();\n\n        if (newCount > 0 && oldCount === 0) {\n          // Transitioning to modal(s) open\n          this.checkScrollbar();\n          this.setScrollbar();\n          addClass(document.body, 'modal-open');\n        } else if (newCount === 0 && oldCount > 0) {\n          // Transitioning to modal(s) closed\n          this.resetScrollbar();\n          removeClass(document.body, 'modal-open');\n        }\n\n        setAttr(document.body, 'data-modal-open-count', String(newCount));\n      }\n    },\n    modals: function modals(newVal, oldVal) {\n      var _this = this;\n\n      this.checkScrollbar();\n      requestAF(function () {\n        _this.updateModals(newVal || []);\n      });\n    }\n  },\n  methods: {\n    // Public methods\n    registerModal: function registerModal(modal) {\n      var _this2 = this; // Register the modal if not already registered\n\n\n      if (modal && this.modals.indexOf(modal) === -1) {\n        // Add modal to modals array\n        this.modals.push(modal);\n        modal.$once('hook:beforeDestroy', function () {\n          _this2.unregisterModal(modal);\n        });\n      }\n    },\n    unregisterModal: function unregisterModal(modal) {\n      var index = this.modals.indexOf(modal);\n\n      if (index > -1) {\n        // Remove modal from modals array\n        this.modals.splice(index, 1); // Reset the modal's data\n\n        if (!(modal._isBeingDestroyed || modal._isDestroyed)) {\n          this.resetModal(modal);\n        }\n      }\n    },\n    getBaseZIndex: function getBaseZIndex() {\n      if (isNull(this.baseZIndex) && isBrowser) {\n        // Create a temporary `div.modal-backdrop` to get computed z-index\n        var div = document.createElement('div');\n        div.className = 'modal-backdrop d-none';\n        div.style.display = 'none';\n        document.body.appendChild(div);\n        this.baseZIndex = parseInt(getCS(div).zIndex || DEFAULT_ZINDEX, 10);\n        document.body.removeChild(div);\n      }\n\n      return this.baseZIndex || DEFAULT_ZINDEX;\n    },\n    getScrollbarWidth: function getScrollbarWidth() {\n      if (isNull(this.scrollbarWidth) && isBrowser) {\n        // Create a temporary `div.measure-scrollbar` to get computed z-index\n        var div = document.createElement('div');\n        div.className = 'modal-scrollbar-measure';\n        document.body.appendChild(div);\n        this.scrollbarWidth = getBCR(div).width - div.clientWidth;\n        document.body.removeChild(div);\n      }\n\n      return this.scrollbarWidth || 0;\n    },\n    // Private methods\n    updateModals: function updateModals(modals) {\n      var _this3 = this;\n\n      var baseZIndex = this.getBaseZIndex();\n      var scrollbarWidth = this.getScrollbarWidth();\n      modals.forEach(function (modal, index) {\n        // We update data values on each modal\n        modal.zIndex = baseZIndex + index;\n        modal.scrollbarWidth = scrollbarWidth;\n        modal.isTop = index === _this3.modals.length - 1;\n        modal.isBodyOverflowing = _this3.isBodyOverflowing;\n      });\n    },\n    resetModal: function resetModal(modal) {\n      if (modal) {\n        modal.zIndex = this.getBaseZIndex();\n        modal.isTop = true;\n        modal.isBodyOverflowing = false;\n      }\n    },\n    checkScrollbar: function checkScrollbar() {\n      // Determine if the body element is overflowing\n      var _getBCR = getBCR(document.body),\n          left = _getBCR.left,\n          right = _getBCR.right;\n\n      this.isBodyOverflowing = left + right < window.innerWidth;\n    },\n    setScrollbar: function setScrollbar() {\n      var body = document.body; // Storage place to cache changes to margins and padding\n      // Note: This assumes the following element types are not added to the\n      // document after the modal has opened.\n\n      body._paddingChangedForModal = body._paddingChangedForModal || [];\n      body._marginChangedForModal = body._marginChangedForModal || [];\n\n      if (this.isBodyOverflowing) {\n        var scrollbarWidth = this.scrollbarWidth; // Adjust fixed content padding\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(Selector.FIXED_CONTENT).forEach(function (el) {\n          var actualPadding = el.style.paddingRight;\n          var calculatedPadding = getCS(el).paddingRight || 0;\n          setAttr(el, 'data-padding-right', actualPadding);\n          el.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n\n          body._paddingChangedForModal.push(el);\n        }); // Adjust sticky content margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(Selector.STICKY_CONTENT).forEach(function (el) {\n          var actualMargin = el.style.marginRight;\n          var calculatedMargin = getCS(el).marginRight || 0;\n          setAttr(el, 'data-margin-right', actualMargin);\n          el.style.marginRight = \"\".concat(parseFloat(calculatedMargin) - scrollbarWidth, \"px\");\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust <b-navbar-toggler> margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(Selector.NAVBAR_TOGGLER).forEach(function (el) {\n          var actualMargin = el.style.marginRight;\n          var calculatedMargin = getCS(el).marginRight || 0;\n          setAttr(el, 'data-margin-right', actualMargin);\n          el.style.marginRight = \"\".concat(parseFloat(calculatedMargin) + scrollbarWidth, \"px\");\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust body padding\n\n        var actualPadding = body.style.paddingRight;\n        var calculatedPadding = getCS(body).paddingRight;\n        setAttr(body, 'data-padding-right', actualPadding);\n        body.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n      }\n    },\n    resetScrollbar: function resetScrollbar() {\n      var body = document.body;\n\n      if (body._paddingChangedForModal) {\n        // Restore fixed content padding\n        body._paddingChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-padding-right')) {\n            el.style.paddingRight = getAttr(el, 'data-padding-right') || '';\n            removeAttr(el, 'data-padding-right');\n          }\n        });\n      }\n\n      if (body._marginChangedForModal) {\n        // Restore sticky content and navbar-toggler margin\n        body._marginChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-margin-right')) {\n            el.style.marginRight = getAttr(el, 'data-margin-right') || '';\n            removeAttr(el, 'data-margin-right');\n          }\n        });\n      }\n\n      body._paddingChangedForModal = null;\n      body._marginChangedForModal = null; // Restore body padding\n\n      if (hasAttr(body, 'data-padding-right')) {\n        body.style.paddingRight = getAttr(body, 'data-padding-right') || '';\n        removeAttr(body, 'data-padding-right');\n      }\n    }\n  }\n}); // Export our ModalManager\n\nexport default new ModalManager();","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/components/modal/helpers/modal-manager.js"],"names":["Vue","getAttr","hasAttr","removeAttr","setAttr","addClass","removeClass","getBCR","getCS","selectAll","requestAF","isBrowser","isNull","DEFAULT_ZINDEX","Selector","FIXED_CONTENT","STICKY_CONTENT","NAVBAR_TOGGLER","ModalManager","extend","data","modals","baseZIndex","scrollbarWidth","isBodyOverflowing","computed","modalCount","length","modalsAreOpen","watch","newCount","oldCount","getScrollbarWidth","checkScrollbar","setScrollbar","document","body","resetScrollbar","String","newVal","oldVal","_this","updateModals","methods","registerModal","modal","_this2","indexOf","push","$once","unregisterModal","index","splice","_isBeingDestroyed","_isDestroyed","resetModal","getBaseZIndex","div","createElement","className","style","display","appendChild","parseInt","zIndex","removeChild","width","clientWidth","_this3","forEach","isTop","_getBCR","left","right","window","innerWidth","_paddingChangedForModal","_marginChangedForModal","el","actualPadding","paddingRight","calculatedPadding","concat","parseFloat","actualMargin","marginRight","calculatedMargin"],"mappings":"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","sourcesContent":["/**\n * Private ModalManager helper\n * Handles controlling modal stacking zIndexes and body adjustments/classes\n */\nimport Vue from '../../../utils/vue';\nimport { getAttr, hasAttr, removeAttr, setAttr, addClass, removeClass, getBCR, getCS, selectAll, requestAF } from '../../../utils/dom';\nimport { isBrowser } from '../../../utils/env';\nimport { isNull } from '../../../utils/inspect'; // --- Constants ---\n// Default modal backdrop z-index\n\nvar DEFAULT_ZINDEX = 1040; // Selectors for padding/margin adjustments\n\nvar Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler' // @vue/component\n\n};\nvar ModalManager =\n/*#__PURE__*/\nVue.extend({\n  data: function data() {\n    return {\n      modals: [],\n      baseZIndex: null,\n      scrollbarWidth: null,\n      isBodyOverflowing: false\n    };\n  },\n  computed: {\n    modalCount: function modalCount() {\n      return this.modals.length;\n    },\n    modalsAreOpen: function modalsAreOpen() {\n      return this.modalCount > 0;\n    }\n  },\n  watch: {\n    modalCount: function modalCount(newCount, oldCount) {\n      if (isBrowser) {\n        this.getScrollbarWidth();\n\n        if (newCount > 0 && oldCount === 0) {\n          // Transitioning to modal(s) open\n          this.checkScrollbar();\n          this.setScrollbar();\n          addClass(document.body, 'modal-open');\n        } else if (newCount === 0 && oldCount > 0) {\n          // Transitioning to modal(s) closed\n          this.resetScrollbar();\n          removeClass(document.body, 'modal-open');\n        }\n\n        setAttr(document.body, 'data-modal-open-count', String(newCount));\n      }\n    },\n    modals: function modals(newVal, oldVal) {\n      var _this = this;\n\n      this.checkScrollbar();\n      requestAF(function () {\n        _this.updateModals(newVal || []);\n      });\n    }\n  },\n  methods: {\n    // Public methods\n    registerModal: function registerModal(modal) {\n      var _this2 = this;\n\n      // Register the modal if not already registered\n      if (modal && this.modals.indexOf(modal) === -1) {\n        // Add modal to modals array\n        this.modals.push(modal);\n        modal.$once('hook:beforeDestroy', function () {\n          _this2.unregisterModal(modal);\n        });\n      }\n    },\n    unregisterModal: function unregisterModal(modal) {\n      var index = this.modals.indexOf(modal);\n\n      if (index > -1) {\n        // Remove modal from modals array\n        this.modals.splice(index, 1); // Reset the modal's data\n\n        if (!(modal._isBeingDestroyed || modal._isDestroyed)) {\n          this.resetModal(modal);\n        }\n      }\n    },\n    getBaseZIndex: function getBaseZIndex() {\n      if (isNull(this.baseZIndex) && isBrowser) {\n        // Create a temporary `div.modal-backdrop` to get computed z-index\n        var div = document.createElement('div');\n        div.className = 'modal-backdrop d-none';\n        div.style.display = 'none';\n        document.body.appendChild(div);\n        this.baseZIndex = parseInt(getCS(div).zIndex || DEFAULT_ZINDEX, 10);\n        document.body.removeChild(div);\n      }\n\n      return this.baseZIndex || DEFAULT_ZINDEX;\n    },\n    getScrollbarWidth: function getScrollbarWidth() {\n      if (isNull(this.scrollbarWidth) && isBrowser) {\n        // Create a temporary `div.measure-scrollbar` to get computed z-index\n        var div = document.createElement('div');\n        div.className = 'modal-scrollbar-measure';\n        document.body.appendChild(div);\n        this.scrollbarWidth = getBCR(div).width - div.clientWidth;\n        document.body.removeChild(div);\n      }\n\n      return this.scrollbarWidth || 0;\n    },\n    // Private methods\n    updateModals: function updateModals(modals) {\n      var _this3 = this;\n\n      var baseZIndex = this.getBaseZIndex();\n      var scrollbarWidth = this.getScrollbarWidth();\n      modals.forEach(function (modal, index) {\n        // We update data values on each modal\n        modal.zIndex = baseZIndex + index;\n        modal.scrollbarWidth = scrollbarWidth;\n        modal.isTop = index === _this3.modals.length - 1;\n        modal.isBodyOverflowing = _this3.isBodyOverflowing;\n      });\n    },\n    resetModal: function resetModal(modal) {\n      if (modal) {\n        modal.zIndex = this.getBaseZIndex();\n        modal.isTop = true;\n        modal.isBodyOverflowing = false;\n      }\n    },\n    checkScrollbar: function checkScrollbar() {\n      // Determine if the body element is overflowing\n      var _getBCR = getBCR(document.body),\n          left = _getBCR.left,\n          right = _getBCR.right;\n\n      this.isBodyOverflowing = left + right < window.innerWidth;\n    },\n    setScrollbar: function setScrollbar() {\n      var body = document.body; // Storage place to cache changes to margins and padding\n      // Note: This assumes the following element types are not added to the\n      // document after the modal has opened.\n\n      body._paddingChangedForModal = body._paddingChangedForModal || [];\n      body._marginChangedForModal = body._marginChangedForModal || [];\n\n      if (this.isBodyOverflowing) {\n        var scrollbarWidth = this.scrollbarWidth; // Adjust fixed content padding\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(Selector.FIXED_CONTENT).forEach(function (el) {\n          var actualPadding = el.style.paddingRight;\n          var calculatedPadding = getCS(el).paddingRight || 0;\n          setAttr(el, 'data-padding-right', actualPadding);\n          el.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n\n          body._paddingChangedForModal.push(el);\n        }); // Adjust sticky content margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(Selector.STICKY_CONTENT).forEach(function (el) {\n          var actualMargin = el.style.marginRight;\n          var calculatedMargin = getCS(el).marginRight || 0;\n          setAttr(el, 'data-margin-right', actualMargin);\n          el.style.marginRight = \"\".concat(parseFloat(calculatedMargin) - scrollbarWidth, \"px\");\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust <b-navbar-toggler> margin\n\n        /* istanbul ignore next: difficult to test in JSDOM */\n\n        selectAll(Selector.NAVBAR_TOGGLER).forEach(function (el) {\n          var actualMargin = el.style.marginRight;\n          var calculatedMargin = getCS(el).marginRight || 0;\n          setAttr(el, 'data-margin-right', actualMargin);\n          el.style.marginRight = \"\".concat(parseFloat(calculatedMargin) + scrollbarWidth, \"px\");\n\n          body._marginChangedForModal.push(el);\n        }); // Adjust body padding\n\n        var actualPadding = body.style.paddingRight;\n        var calculatedPadding = getCS(body).paddingRight;\n        setAttr(body, 'data-padding-right', actualPadding);\n        body.style.paddingRight = \"\".concat(parseFloat(calculatedPadding) + scrollbarWidth, \"px\");\n      }\n    },\n    resetScrollbar: function resetScrollbar() {\n      var body = document.body;\n\n      if (body._paddingChangedForModal) {\n        // Restore fixed content padding\n        body._paddingChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-padding-right')) {\n            el.style.paddingRight = getAttr(el, 'data-padding-right') || '';\n            removeAttr(el, 'data-padding-right');\n          }\n        });\n      }\n\n      if (body._marginChangedForModal) {\n        // Restore sticky content and navbar-toggler margin\n        body._marginChangedForModal.forEach(function (el) {\n          /* istanbul ignore next: difficult to test in JSDOM */\n          if (hasAttr(el, 'data-margin-right')) {\n            el.style.marginRight = getAttr(el, 'data-margin-right') || '';\n            removeAttr(el, 'data-margin-right');\n          }\n        });\n      }\n\n      body._paddingChangedForModal = null;\n      body._marginChangedForModal = null; // Restore body padding\n\n      if (hasAttr(body, 'data-padding-right')) {\n        body.style.paddingRight = getAttr(body, 'data-padding-right') || '';\n        removeAttr(body, 'data-padding-right');\n      }\n    }\n  }\n}); // Export our ModalManager\n\nexport default new ModalManager();"]},"metadata":{},"sourceType":"module"}