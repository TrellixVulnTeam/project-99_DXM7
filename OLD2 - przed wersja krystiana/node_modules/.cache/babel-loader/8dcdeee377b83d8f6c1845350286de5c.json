{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/*\n * Tooltip/Popover component mixin\n * Common props\n */\n\n\nimport observeDom from '../utils/observe-dom';\nimport { isElement, getById } from '../utils/dom';\nimport { isArray, isFunction, isObject, isString } from '../utils/inspect';\nimport { HTMLElement } from '../utils/safe-types'; // --- Constants ---\n\nvar PLACEMENTS = {\n  top: 'top',\n  topleft: 'topleft',\n  topright: 'topright',\n  right: 'right',\n  righttop: 'righttop',\n  rightbottom: 'rightbottom',\n  bottom: 'bottom',\n  bottomleft: 'bottomleft',\n  bottomright: 'bottomright',\n  left: 'left',\n  lefttop: 'lefttop',\n  leftbottom: 'leftbottom',\n  auto: 'auto'\n};\nvar OBSERVER_CONFIG = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  attributes: true,\n  attributeFilter: ['class', 'style'] // @vue/component\n\n};\nexport default {\n  props: {\n    target: {\n      // String ID of element, or element/component reference\n      type: [String, Object, HTMLElement, Function] // default: undefined\n\n    },\n    offset: {\n      type: [Number, String],\n      default: 0\n    },\n    noFade: {\n      type: Boolean,\n      default: false\n    },\n    container: {\n      // String ID of container, if null body is used (default)\n      type: String,\n      default: null\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      // semaphore for preventing multiple show events\n      localShow: false\n    };\n  },\n  computed: {\n    baseConfig: function baseConfig() {\n      var cont = this.container;\n      var delay = isObject(this.delay) ? this.delay : parseInt(this.delay, 10) || 0;\n      return {\n        // Title prop\n        title: (this.title || '').trim() || '',\n        // Content prop (if popover)\n        content: (this.content || '').trim() || '',\n        // Tooltip/Popover placement\n        placement: PLACEMENTS[this.placement] || 'auto',\n        // Tooltip/popover fallback placement\n        fallbackPlacement: this.fallbackPlacement || 'flip',\n        // Container currently needs to be an ID with '#' prepended, if null then body is used\n        container: cont ? /^#/.test(cont) ? cont : \"#\".concat(cont) : false,\n        // boundariesElement passed to popper\n        boundary: this.boundary,\n        // boundariesElement padding passed to popper\n        boundaryPadding: this.boundaryPadding,\n        // Show/Hide delay\n        delay: delay || 0,\n        // Offset can be css distance. if no units, pixels are assumed\n        offset: this.offset || 0,\n        // Disable fade Animation?\n        animation: !this.noFade,\n        // Variant\n        variant: this.variant,\n        // Custom class\n        customClass: this.customClass,\n        // Open/Close Trigger(s)\n        trigger: isArray(this.triggers) ? this.triggers.join(' ') : this.triggers,\n        // Callbacks so we can trigger events on component\n        callbacks: {\n          show: this.onShow,\n          shown: this.onShown,\n          hide: this.onHide,\n          hidden: this.onHidden,\n          enabled: this.onEnabled,\n          disabled: this.onDisabled\n        }\n      };\n    }\n  },\n  watch: {\n    show: function show(_show, old) {\n      if (_show !== old) {\n        _show ? this.onOpen() : this.onClose();\n      }\n    },\n    disabled: function disabled(_disabled, old) {\n      if (_disabled !== old) {\n        _disabled ? this.onDisable() : this.onEnable();\n      }\n    },\n    localShow: function localShow(show, old) {\n      if (show !== this.show) {\n        this.$emit('update:show', show);\n      }\n    }\n  },\n  created: function created() {\n    // Create non-reactive property\n    this._toolpop = null;\n    this._obs_title = null;\n    this._obs_content = null;\n  },\n  mounted: function mounted() {\n    var _this = this; // We do this in a next tick to ensure DOM has rendered first\n\n\n    this.$nextTick(function () {\n      // Instantiate ToolTip/PopOver on target\n      // The createToolpop method must exist in main component\n      if (_this.createToolpop()) {\n        if (_this.disabled) {\n          // Initially disabled\n          _this.onDisable();\n        } // Listen to open signals from others\n\n\n        _this.$on('open', _this.onOpen); // Listen to close signals from others\n\n\n        _this.$on('close', _this.onClose); // Listen to disable signals from others\n\n\n        _this.$on('disable', _this.onDisable); // Listen to enable signals from others\n\n\n        _this.$on('enable', _this.onEnable); // Observe content Child changes so we can notify popper of possible size change\n\n\n        _this.setObservers(true); // Set initially open state\n\n\n        if (_this.show) {\n          _this.onOpen();\n        }\n      }\n    });\n  },\n  updated: function updated() {\n    // If content/props changes, etc\n    if (this._toolpop) {\n      this._toolpop.updateConfig(this.getConfig());\n    }\n  },\n  activated: function activated()\n  /* istanbul ignore next: can't easily test in JSDOM */\n  {\n    // Called when component is inside a <keep-alive> and component brought offline\n    this.setObservers(true);\n  },\n  deactivated: function deactivated()\n  /* istanbul ignore next: can't easily test in JSDOM */\n  {\n    // Called when component is inside a <keep-alive> and component taken offline\n    if (this._toolpop) {\n      this.setObservers(false);\n\n      this._toolpop.hide();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Shutdown our local event listeners\n    this.$off('open', this.onOpen);\n    this.$off('close', this.onClose);\n    this.$off('disable', this.onDisable);\n    this.$off('enable', this.onEnable);\n    this.setObservers(false); // bring our content back if needed\n\n    this.bringItBack();\n\n    if (this._toolpop) {\n      this._toolpop.destroy();\n\n      this._toolpop = null;\n    }\n  },\n  methods: {\n    getConfig: function getConfig() {\n      var cfg = _objectSpread({}, this.baseConfig);\n\n      if (this.$refs.title && this.$refs.title.innerHTML.trim()) {\n        // If slot has content, it overrides 'title' prop\n        // We use the DOM node as content to allow components!\n        cfg.title = this.$refs.title;\n        cfg.html = true;\n      }\n\n      if (this.$refs.content && this.$refs.content.innerHTML.trim()) {\n        // If slot has content, it overrides 'content' prop\n        // We use the DOM node as content to allow components!\n        cfg.content = this.$refs.content;\n        cfg.html = true;\n      }\n\n      return cfg;\n    },\n    onOpen: function onOpen() {\n      if (this._toolpop && !this.localShow) {\n        this.localShow = true;\n\n        this._toolpop.show();\n      }\n    },\n    onClose: function onClose(callback) {\n      // What is callback for ? it is not documented\n\n      /* istanbul ignore else */\n      if (this._toolpop && this.localShow) {\n        this._toolpop.hide(callback);\n      } else if (isFunction(callback)) {\n        // Is this even used?\n        callback();\n      }\n    },\n    onDisable: function onDisable() {\n      if (this._toolpop) {\n        this._toolpop.disable();\n      }\n    },\n    onEnable: function onEnable() {\n      if (this._toolpop) {\n        this._toolpop.enable();\n      }\n    },\n    updatePosition: function updatePosition() {\n      /* istanbul ignore next: can't test in JSDOM until mutation observer is implemented */\n      if (this._toolpop) {\n        // Instruct popper to reposition popover if necessary\n        this._toolpop.update();\n      }\n    },\n    getTarget: function getTarget() {\n      var target = this.target;\n\n      if (isFunction(target)) {\n        /* istanbul ignore next */\n        target = target();\n      }\n      /* istanbul ignore else */\n\n\n      if (isString(target)) {\n        // Assume ID of element\n        return getById(target);\n      } else if (isObject(target) && isElement(target.$el)) {\n        // Component reference\n\n        /* istanbul ignore next */\n        return target.$el;\n      } else if (isObject(target) && isElement(target)) {\n        // Element reference\n\n        /* istanbul ignore next */\n        return target;\n      }\n      /* istanbul ignore next */\n\n\n      return null;\n    },\n    // Callbacks called by Tooltip/Popover class instance\n    onShow: function onShow(evt) {\n      this.$emit('show', evt);\n      this.localShow = !(evt && evt.defaultPrevented);\n    },\n    onShown: function onShown(evt) {\n      this.setObservers(true);\n      this.$emit('shown', evt);\n      this.localShow = true;\n    },\n    onHide: function onHide(evt) {\n      this.$emit('hide', evt);\n      this.localShow = !!(evt && evt.defaultPrevented);\n    },\n    onHidden: function onHidden(evt) {\n      this.setObservers(false); // bring our content back if needed to keep Vue happy\n      // Tooltip class will move it back to tip when shown again\n\n      this.bringItBack();\n      this.$emit('hidden', evt);\n      this.localShow = false;\n    },\n    onEnabled: function onEnabled(evt) {\n      /* istanbul ignore next */\n      if (!evt || evt.type !== 'enabled') {\n        // Prevent possible endless loop if user mistakenly fires enabled instead of enable\n        return;\n      }\n\n      this.$emit('update:disabled', false);\n      this.$emit('disabled');\n    },\n    onDisabled: function onDisabled(evt) {\n      /* istanbul ignore next */\n      if (!evt || evt.type !== 'disabled') {\n        // Prevent possible endless loop if user mistakenly fires disabled instead of disable\n        return;\n      }\n\n      this.$emit('update:disabled', true);\n      this.$emit('enabled');\n    },\n    bringItBack: function bringItBack() {\n      // bring our content back if needed to keep Vue happy\n      if (this.$el && this.$refs.title) {\n        this.$el.appendChild(this.$refs.title);\n      }\n\n      if (this.$el && this.$refs.content) {\n        this.$el.appendChild(this.$refs.content);\n      }\n    },\n    setObservers: function setObservers(on) {\n      if (on) {\n        if (this.$refs.title) {\n          this._obs_title = observeDom(this.$refs.title, this.updatePosition.bind(this), OBSERVER_CONFIG);\n        }\n\n        if (this.$refs.content) {\n          this._obs_content = observeDom(this.$refs.content, this.updatePosition.bind(this), OBSERVER_CONFIG);\n        }\n      } else {\n        if (this._obs_title) {\n          this._obs_title.disconnect();\n\n          this._obs_title = null;\n        }\n\n        if (this._obs_content) {\n          this._obs_content.disconnect();\n\n          this._obs_content = null;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"sources":["D:/UEK/project-99/node_modules/bootstrap-vue/esm/mixins/toolpop.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","observeDom","isElement","getById","isArray","isFunction","isObject","isString","HTMLElement","PLACEMENTS","top","topleft","topright","right","righttop","rightbottom","bottom","bottomleft","bottomright","left","lefttop","leftbottom","auto","OBSERVER_CONFIG","subtree","childList","characterData","attributes","attributeFilter","props","type","String","Function","offset","Number","default","noFade","Boolean","container","show","disabled","data","localShow","computed","baseConfig","cont","delay","parseInt","title","trim","content","placement","fallbackPlacement","test","concat","boundary","boundaryPadding","animation","variant","customClass","trigger","triggers","join","callbacks","onShow","shown","onShown","hide","onHide","hidden","onHidden","enabled","onEnabled","onDisabled","watch","_show","old","onOpen","onClose","_disabled","onDisable","onEnable","$emit","created","_toolpop","_obs_title","_obs_content","mounted","_this","$nextTick","createToolpop","$on","setObservers","updated","updateConfig","getConfig","activated","deactivated","beforeDestroy","$off","bringItBack","destroy","methods","cfg","$refs","innerHTML","html","callback","disable","enable","updatePosition","update","getTarget","$el","evt","defaultPrevented","appendChild","on","bind","disconnect"],"mappings":"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","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n * Tooltip/Popover component mixin\n * Common props\n */\nimport observeDom from '../utils/observe-dom';\nimport { isElement, getById } from '../utils/dom';\nimport { isArray, isFunction, isObject, isString } from '../utils/inspect';\nimport { HTMLElement } from '../utils/safe-types'; // --- Constants ---\n\nvar PLACEMENTS = {\n  top: 'top',\n  topleft: 'topleft',\n  topright: 'topright',\n  right: 'right',\n  righttop: 'righttop',\n  rightbottom: 'rightbottom',\n  bottom: 'bottom',\n  bottomleft: 'bottomleft',\n  bottomright: 'bottomright',\n  left: 'left',\n  lefttop: 'lefttop',\n  leftbottom: 'leftbottom',\n  auto: 'auto'\n};\nvar OBSERVER_CONFIG = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  attributes: true,\n  attributeFilter: ['class', 'style'] // @vue/component\n\n};\nexport default {\n  props: {\n    target: {\n      // String ID of element, or element/component reference\n      type: [String, Object, HTMLElement, Function] // default: undefined\n\n    },\n    offset: {\n      type: [Number, String],\n      default: 0\n    },\n    noFade: {\n      type: Boolean,\n      default: false\n    },\n    container: {\n      // String ID of container, if null body is used (default)\n      type: String,\n      default: null\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      // semaphore for preventing multiple show events\n      localShow: false\n    };\n  },\n  computed: {\n    baseConfig: function baseConfig() {\n      var cont = this.container;\n      var delay = isObject(this.delay) ? this.delay : parseInt(this.delay, 10) || 0;\n      return {\n        // Title prop\n        title: (this.title || '').trim() || '',\n        // Content prop (if popover)\n        content: (this.content || '').trim() || '',\n        // Tooltip/Popover placement\n        placement: PLACEMENTS[this.placement] || 'auto',\n        // Tooltip/popover fallback placement\n        fallbackPlacement: this.fallbackPlacement || 'flip',\n        // Container currently needs to be an ID with '#' prepended, if null then body is used\n        container: cont ? /^#/.test(cont) ? cont : \"#\".concat(cont) : false,\n        // boundariesElement passed to popper\n        boundary: this.boundary,\n        // boundariesElement padding passed to popper\n        boundaryPadding: this.boundaryPadding,\n        // Show/Hide delay\n        delay: delay || 0,\n        // Offset can be css distance. if no units, pixels are assumed\n        offset: this.offset || 0,\n        // Disable fade Animation?\n        animation: !this.noFade,\n        // Variant\n        variant: this.variant,\n        // Custom class\n        customClass: this.customClass,\n        // Open/Close Trigger(s)\n        trigger: isArray(this.triggers) ? this.triggers.join(' ') : this.triggers,\n        // Callbacks so we can trigger events on component\n        callbacks: {\n          show: this.onShow,\n          shown: this.onShown,\n          hide: this.onHide,\n          hidden: this.onHidden,\n          enabled: this.onEnabled,\n          disabled: this.onDisabled\n        }\n      };\n    }\n  },\n  watch: {\n    show: function show(_show, old) {\n      if (_show !== old) {\n        _show ? this.onOpen() : this.onClose();\n      }\n    },\n    disabled: function disabled(_disabled, old) {\n      if (_disabled !== old) {\n        _disabled ? this.onDisable() : this.onEnable();\n      }\n    },\n    localShow: function localShow(show, old) {\n      if (show !== this.show) {\n        this.$emit('update:show', show);\n      }\n    }\n  },\n  created: function created() {\n    // Create non-reactive property\n    this._toolpop = null;\n    this._obs_title = null;\n    this._obs_content = null;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // We do this in a next tick to ensure DOM has rendered first\n    this.$nextTick(function () {\n      // Instantiate ToolTip/PopOver on target\n      // The createToolpop method must exist in main component\n      if (_this.createToolpop()) {\n        if (_this.disabled) {\n          // Initially disabled\n          _this.onDisable();\n        } // Listen to open signals from others\n\n\n        _this.$on('open', _this.onOpen); // Listen to close signals from others\n\n\n        _this.$on('close', _this.onClose); // Listen to disable signals from others\n\n\n        _this.$on('disable', _this.onDisable); // Listen to enable signals from others\n\n\n        _this.$on('enable', _this.onEnable); // Observe content Child changes so we can notify popper of possible size change\n\n\n        _this.setObservers(true); // Set initially open state\n\n\n        if (_this.show) {\n          _this.onOpen();\n        }\n      }\n    });\n  },\n  updated: function updated() {\n    // If content/props changes, etc\n    if (this._toolpop) {\n      this._toolpop.updateConfig(this.getConfig());\n    }\n  },\n  activated: function activated()\n  /* istanbul ignore next: can't easily test in JSDOM */\n  {\n    // Called when component is inside a <keep-alive> and component brought offline\n    this.setObservers(true);\n  },\n  deactivated: function deactivated()\n  /* istanbul ignore next: can't easily test in JSDOM */\n  {\n    // Called when component is inside a <keep-alive> and component taken offline\n    if (this._toolpop) {\n      this.setObservers(false);\n\n      this._toolpop.hide();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Shutdown our local event listeners\n    this.$off('open', this.onOpen);\n    this.$off('close', this.onClose);\n    this.$off('disable', this.onDisable);\n    this.$off('enable', this.onEnable);\n    this.setObservers(false); // bring our content back if needed\n\n    this.bringItBack();\n\n    if (this._toolpop) {\n      this._toolpop.destroy();\n\n      this._toolpop = null;\n    }\n  },\n  methods: {\n    getConfig: function getConfig() {\n      var cfg = _objectSpread({}, this.baseConfig);\n\n      if (this.$refs.title && this.$refs.title.innerHTML.trim()) {\n        // If slot has content, it overrides 'title' prop\n        // We use the DOM node as content to allow components!\n        cfg.title = this.$refs.title;\n        cfg.html = true;\n      }\n\n      if (this.$refs.content && this.$refs.content.innerHTML.trim()) {\n        // If slot has content, it overrides 'content' prop\n        // We use the DOM node as content to allow components!\n        cfg.content = this.$refs.content;\n        cfg.html = true;\n      }\n\n      return cfg;\n    },\n    onOpen: function onOpen() {\n      if (this._toolpop && !this.localShow) {\n        this.localShow = true;\n\n        this._toolpop.show();\n      }\n    },\n    onClose: function onClose(callback) {\n      // What is callback for ? it is not documented\n\n      /* istanbul ignore else */\n      if (this._toolpop && this.localShow) {\n        this._toolpop.hide(callback);\n      } else if (isFunction(callback)) {\n        // Is this even used?\n        callback();\n      }\n    },\n    onDisable: function onDisable() {\n      if (this._toolpop) {\n        this._toolpop.disable();\n      }\n    },\n    onEnable: function onEnable() {\n      if (this._toolpop) {\n        this._toolpop.enable();\n      }\n    },\n    updatePosition: function updatePosition() {\n      /* istanbul ignore next: can't test in JSDOM until mutation observer is implemented */\n      if (this._toolpop) {\n        // Instruct popper to reposition popover if necessary\n        this._toolpop.update();\n      }\n    },\n    getTarget: function getTarget() {\n      var target = this.target;\n\n      if (isFunction(target)) {\n        /* istanbul ignore next */\n        target = target();\n      }\n      /* istanbul ignore else */\n\n\n      if (isString(target)) {\n        // Assume ID of element\n        return getById(target);\n      } else if (isObject(target) && isElement(target.$el)) {\n        // Component reference\n\n        /* istanbul ignore next */\n        return target.$el;\n      } else if (isObject(target) && isElement(target)) {\n        // Element reference\n\n        /* istanbul ignore next */\n        return target;\n      }\n      /* istanbul ignore next */\n\n\n      return null;\n    },\n    // Callbacks called by Tooltip/Popover class instance\n    onShow: function onShow(evt) {\n      this.$emit('show', evt);\n      this.localShow = !(evt && evt.defaultPrevented);\n    },\n    onShown: function onShown(evt) {\n      this.setObservers(true);\n      this.$emit('shown', evt);\n      this.localShow = true;\n    },\n    onHide: function onHide(evt) {\n      this.$emit('hide', evt);\n      this.localShow = !!(evt && evt.defaultPrevented);\n    },\n    onHidden: function onHidden(evt) {\n      this.setObservers(false); // bring our content back if needed to keep Vue happy\n      // Tooltip class will move it back to tip when shown again\n\n      this.bringItBack();\n      this.$emit('hidden', evt);\n      this.localShow = false;\n    },\n    onEnabled: function onEnabled(evt) {\n      /* istanbul ignore next */\n      if (!evt || evt.type !== 'enabled') {\n        // Prevent possible endless loop if user mistakenly fires enabled instead of enable\n        return;\n      }\n\n      this.$emit('update:disabled', false);\n      this.$emit('disabled');\n    },\n    onDisabled: function onDisabled(evt) {\n      /* istanbul ignore next */\n      if (!evt || evt.type !== 'disabled') {\n        // Prevent possible endless loop if user mistakenly fires disabled instead of disable\n        return;\n      }\n\n      this.$emit('update:disabled', true);\n      this.$emit('enabled');\n    },\n    bringItBack: function bringItBack() {\n      // bring our content back if needed to keep Vue happy\n      if (this.$el && this.$refs.title) {\n        this.$el.appendChild(this.$refs.title);\n      }\n\n      if (this.$el && this.$refs.content) {\n        this.$el.appendChild(this.$refs.content);\n      }\n    },\n    setObservers: function setObservers(on) {\n      if (on) {\n        if (this.$refs.title) {\n          this._obs_title = observeDom(this.$refs.title, this.updatePosition.bind(this), OBSERVER_CONFIG);\n        }\n\n        if (this.$refs.content) {\n          this._obs_content = observeDom(this.$refs.content, this.updatePosition.bind(this), OBSERVER_CONFIG);\n        }\n      } else {\n        if (this._obs_title) {\n          this._obs_title.disconnect();\n\n          this._obs_title = null;\n        }\n\n        if (this._obs_content) {\n          this._obs_content.disconnect();\n\n          this._obs_content = null;\n        }\n      }\n    }\n  }\n};"]},"metadata":{},"sourceType":"module"}